openapi: 3.0.0
info:
  version: 2014-10-31
  x-release: v4
  title: Amazon Neptune
  description: <fullname>Amazon Neptune</fullname> <p>Amazon Neptune is a fast, reliable,
    fully-managed graph database service that makes it easy to build and run
    applications that work with highly connected datasets. The core of Amazon
    Neptune is a purpose-built, high-performance graph database engine optimized
    for storing billions of relationships and querying the graph with
    milliseconds latency. Amazon Neptune supports popular graph models Property
    Graph and W3C's RDF, and their respective query languages Apache TinkerPop
    Gremlin and SPARQL, allowing you to easily build queries that efficiently
    navigate highly connected datasets. Neptune powers graph use cases such as
    recommendation engines, fraud detection, knowledge graphs, drug discovery,
    and network security.</p> <p>This interface reference for Amazon Neptune
    contains documentation for a programming or command line interface you can
    use to manage Amazon Neptune. Note that Amazon Neptune is asynchronous,
    which means that some interfaces might require techniques such as polling or
    callback functions to determine when a command has been applied. In this
    reference, the parameter descriptions indicate whether a command is applied
    immediately, on the next instance reboot, or during the maintenance window.
    The reference structure is as follows, and we list following some related
    topics from the user guide.</p>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: neptune
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/neptune-2014-10-31.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/rds/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#Action=AddRoleToDBCluster:
    get:
      x-aws-operation-name: AddRoleToDBCluster
      operationId: GET AddRoleToDBCluster
      description: Associates an Identity and Access Management (IAM) role from an Neptune
        DB cluster.
      responses:
        "200":
          description: Success
        "480":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "481":
          description: DBClusterRoleAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterRoleAlreadyExistsFault"
        "482":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "483":
          description: DBClusterRoleQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterRoleQuotaExceededFault"
      parameters:
        - name: DBClusterIdentifier
          in: query
          required: true
          description: The name of the DB cluster to associate the IAM role with.
          schema:
            type: string
        - name: RoleArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the IAM role to associate with the
            Neptune DB cluster, for example
            <code>arn:aws:iam::123456789012:role/NeptuneAccessRole</code>.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AddRoleToDBCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: AddRoleToDBCluster
      operationId: POST AddRoleToDBCluster
      description: Associates an Identity and Access Management (IAM) role from an Neptune
        DB cluster.
      responses:
        "200":
          description: Success
        "480":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "481":
          description: DBClusterRoleAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterRoleAlreadyExistsFault"
        "482":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "483":
          description: DBClusterRoleQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterRoleQuotaExceededFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AddRoleToDBCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterIdentifier:
                  description: The name of the DB cluster to associate the IAM role with.
                  type: string
                RoleArn:
                  description: The Amazon Resource Name (ARN) of the IAM role to associate
                    with the Neptune DB cluster, for example
                    <code>arn:aws:iam::123456789012:role/NeptuneAccessRole</code>.
                  type: string
              required:
                - DBClusterIdentifier
                - RoleArn
  /#Action=AddSourceIdentifierToSubscription:
    get:
      x-aws-operation-name: AddSourceIdentifierToSubscription
      operationId: GET AddSourceIdentifierToSubscription
      description: Adds a source identifier to an existing event notification subscription.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AddSourceIdentifierToSubscriptionResult"
        "480":
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionNotFoundFault"
        "481":
          description: SourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SourceNotFoundFault"
      parameters:
        - name: SubscriptionName
          in: query
          required: true
          description: The name of the event notification subscription you want to add a
            source identifier to.
          schema:
            type: string
        - name: SourceIdentifier
          in: query
          required: true
          description: <p>The identifier of the event source to be added.</p>
            <p>Constraints:</p> <ul> <li> <p>If the source type is a DB
            instance, then a <code>DBInstanceIdentifier</code> must be
            supplied.</p> </li> <li> <p>If the source type is a DB security
            group, a <code>DBSecurityGroupName</code> must be supplied.</p>
            </li> <li> <p>If the source type is a DB parameter group, a
            <code>DBParameterGroupName</code> must be supplied.</p> </li> <li>
            <p>If the source type is a DB snapshot, a
            <code>DBSnapshotIdentifier</code> must be supplied.</p> </li> </ul>
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AddSourceIdentifierToSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: AddSourceIdentifierToSubscription
      operationId: POST AddSourceIdentifierToSubscription
      description: Adds a source identifier to an existing event notification subscription.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AddSourceIdentifierToSubscriptionResult"
        "480":
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionNotFoundFault"
        "481":
          description: SourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SourceNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AddSourceIdentifierToSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SubscriptionName:
                  description: The name of the event notification subscription you want to
                    add a source identifier to.
                  type: string
                SourceIdentifier:
                  description: <p>The identifier of the event source to be added.</p>
                    <p>Constraints:</p> <ul> <li> <p>If the source type is a DB
                    instance, then a <code>DBInstanceIdentifier</code> must be
                    supplied.</p> </li> <li> <p>If the source type is a DB
                    security group, a <code>DBSecurityGroupName</code> must be
                    supplied.</p> </li> <li> <p>If the source type is a DB
                    parameter group, a <code>DBParameterGroupName</code> must be
                    supplied.</p> </li> <li> <p>If the source type is a DB
                    snapshot, a <code>DBSnapshotIdentifier</code> must be
                    supplied.</p> </li> </ul>
                  type: string
              required:
                - SubscriptionName
                - SourceIdentifier
  /#Action=AddTagsToResource:
    get:
      x-aws-operation-name: AddTagsToResource
      operationId: GET AddTagsToResource
      description: Adds metadata tags to an Amazon Neptune resource. These tags can also be
        used with cost allocation reporting to track cost associated with Amazon
        Neptune resources, or used in a Condition statement in an IAM policy for
        Amazon Neptune.
      responses:
        "200":
          description: Success
        "480":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
        "481":
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSnapshotNotFoundFault"
        "482":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
      parameters:
        - name: ResourceName
          in: query
          required: true
          description: The Amazon Neptune resource that the tags are added to. This value
            is an Amazon Resource Name (ARN). For information about creating an
            ARN, see <a
            href="https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing">
            Constructing an Amazon Resource Name (ARN)</a>.
          schema:
            type: string
        - name: Tags
          in: query
          required: true
          description: The tags to be assigned to the Amazon Neptune resource.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AddTagsToResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: AddTagsToResource
      operationId: POST AddTagsToResource
      description: Adds metadata tags to an Amazon Neptune resource. These tags can also be
        used with cost allocation reporting to track cost associated with Amazon
        Neptune resources, or used in a Condition statement in an IAM policy for
        Amazon Neptune.
      responses:
        "200":
          description: Success
        "480":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
        "481":
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSnapshotNotFoundFault"
        "482":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AddTagsToResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ResourceName:
                  description: The Amazon Neptune resource that the tags are added to. This
                    value is an Amazon Resource Name (ARN). For information
                    about creating an ARN, see <a
                    href="https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing">
                    Constructing an Amazon Resource Name (ARN)</a>.
                  type: string
                Tags:
                  description: The tags to be assigned to the Amazon Neptune resource.
                  type: array
                  items:
                    type: string
              required:
                - ResourceName
                - Tags
  /#Action=ApplyPendingMaintenanceAction:
    get:
      x-aws-operation-name: ApplyPendingMaintenanceAction
      operationId: GET ApplyPendingMaintenanceAction
      description: Applies a pending maintenance action to a resource (for example, to a DB
        instance).
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ApplyPendingMaintenanceActionResult"
        "480":
          description: ResourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundFault"
      parameters:
        - name: ResourceIdentifier
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the resource that the pending
            maintenance action applies to. For information about creating an
            ARN, see <a
            href="https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing">
            Constructing an Amazon Resource Name (ARN)</a>.
          schema:
            type: string
        - name: ApplyAction
          in: query
          required: true
          description: "<p>The pending maintenance action to apply to this resource.</p>
            <p>Valid values: <code>system-update</code>, <code>db-upgrade</code>
            </p>"
          schema:
            type: string
        - name: OptInType
          in: query
          required: true
          description: <p>A value that specifies the type of opt-in request, or undoes an
            opt-in request. An opt-in request of type <code>immediate</code>
            can't be undone.</p> <p>Valid values:</p> <ul> <li> <p>
            <code>immediate</code> - Apply the maintenance action
            immediately.</p> </li> <li> <p> <code>next-maintenance</code> -
            Apply the maintenance action during the next maintenance window for
            the resource.</p> </li> <li> <p> <code>undo-opt-in</code> - Cancel
            any existing <code>next-maintenance</code> opt-in requests.</p>
            </li> </ul>
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ApplyPendingMaintenanceAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ApplyPendingMaintenanceAction
      operationId: POST ApplyPendingMaintenanceAction
      description: Applies a pending maintenance action to a resource (for example, to a DB
        instance).
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ApplyPendingMaintenanceActionResult"
        "480":
          description: ResourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ApplyPendingMaintenanceAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ResourceIdentifier:
                  description: The Amazon Resource Name (ARN) of the resource that the
                    pending maintenance action applies to. For information about
                    creating an ARN, see <a
                    href="https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing">
                    Constructing an Amazon Resource Name (ARN)</a>.
                  type: string
                ApplyAction:
                  description: "<p>The pending maintenance action to apply to this
                    resource.</p> <p>Valid values: <code>system-update</code>,
                    <code>db-upgrade</code> </p>"
                  type: string
                OptInType:
                  description: <p>A value that specifies the type of opt-in request, or
                    undoes an opt-in request. An opt-in request of type
                    <code>immediate</code> can't be undone.</p> <p>Valid
                    values:</p> <ul> <li> <p> <code>immediate</code> - Apply the
                    maintenance action immediately.</p> </li> <li> <p>
                    <code>next-maintenance</code> - Apply the maintenance action
                    during the next maintenance window for the resource.</p>
                    </li> <li> <p> <code>undo-opt-in</code> - Cancel any
                    existing <code>next-maintenance</code> opt-in requests.</p>
                    </li> </ul>
                  type: string
              required:
                - ResourceIdentifier
                - ApplyAction
                - OptInType
  /#Action=CopyDBClusterParameterGroup:
    get:
      x-aws-operation-name: CopyDBClusterParameterGroup
      operationId: GET CopyDBClusterParameterGroup
      description: Copies the specified DB cluster parameter group.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CopyDBClusterParameterGroupResult"
        "480":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
        "481":
          description: DBParameterGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupQuotaExceededFault"
        "482":
          description: DBParameterGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupAlreadyExistsFault"
      parameters:
        - name: SourceDBClusterParameterGroupIdentifier
          in: query
          required: true
          description: <p>The identifier or Amazon Resource Name (ARN) for the source DB
            cluster parameter group. For information about creating an ARN, see
            <a
            href="https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing">
            Constructing an Amazon Resource Name (ARN)</a>.</p>
            <p>Constraints:</p> <ul> <li> <p>Must specify a valid DB cluster
            parameter group.</p> </li> <li> <p>If the source DB cluster
            parameter group is in the same AWS Region as the copy, specify a
            valid DB parameter group identifier, for example
            <code>my-db-cluster-param-group</code>, or a valid ARN.</p> </li>
            <li> <p>If the source DB parameter group is in a different AWS
            Region than the copy, specify a valid DB cluster parameter group
            ARN, for example
            <code>arn:aws:rds:us-east-1:123456789012:cluster-pg:custom-cluster-group1</code>.</p>
            </li> </ul>
          schema:
            type: string
        - name: TargetDBClusterParameterGroupIdentifier
          in: query
          required: true
          description: "<p>The identifier for the copied DB cluster parameter group.</p>
            <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty, or blank</p>
            </li> <li> <p>Must contain from 1 to 255 letters, numbers, or
            hyphens</p> </li> <li> <p>First character must be a letter</p> </li>
            <li> <p>Cannot end with a hyphen or contain two consecutive
            hyphens</p> </li> </ul> <p>Example:
            <code>my-cluster-param-group1</code> </p>"
          schema:
            type: string
        - name: TargetDBClusterParameterGroupDescription
          in: query
          required: true
          description: A description for the copied DB cluster parameter group.
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: The tags to be assigned to the copied DB cluster parameter group.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CopyDBClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CopyDBClusterParameterGroup
      operationId: POST CopyDBClusterParameterGroup
      description: Copies the specified DB cluster parameter group.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CopyDBClusterParameterGroupResult"
        "480":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
        "481":
          description: DBParameterGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupQuotaExceededFault"
        "482":
          description: DBParameterGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupAlreadyExistsFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CopyDBClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SourceDBClusterParameterGroupIdentifier:
                  description: <p>The identifier or Amazon Resource Name (ARN) for the
                    source DB cluster parameter group. For information about
                    creating an ARN, see <a
                    href="https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing">
                    Constructing an Amazon Resource Name (ARN)</a>.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must specify a valid DB
                    cluster parameter group.</p> </li> <li> <p>If the source DB
                    cluster parameter group is in the same AWS Region as the
                    copy, specify a valid DB parameter group identifier, for
                    example <code>my-db-cluster-param-group</code>, or a valid
                    ARN.</p> </li> <li> <p>If the source DB parameter group is
                    in a different AWS Region than the copy, specify a valid DB
                    cluster parameter group ARN, for example
                    <code>arn:aws:rds:us-east-1:123456789012:cluster-pg:custom-cluster-group1</code>.</p>
                    </li> </ul>
                  type: string
                TargetDBClusterParameterGroupIdentifier:
                  description: "<p>The identifier for the copied DB cluster parameter
                    group.</p> <p>Constraints:</p> <ul> <li> <p>Cannot be null,
                    empty, or blank</p> </li> <li> <p>Must contain from 1 to 255
                    letters, numbers, or hyphens</p> </li> <li> <p>First
                    character must be a letter</p> </li> <li> <p>Cannot end with
                    a hyphen or contain two consecutive hyphens</p> </li> </ul>
                    <p>Example: <code>my-cluster-param-group1</code> </p>"
                  type: string
                TargetDBClusterParameterGroupDescription:
                  description: A description for the copied DB cluster parameter group.
                  type: string
                Tags:
                  description: The tags to be assigned to the copied DB cluster parameter
                    group.
                  type: array
                  items:
                    type: string
              required:
                - SourceDBClusterParameterGroupIdentifier
                - TargetDBClusterParameterGroupIdentifier
                - TargetDBClusterParameterGroupDescription
  /#Action=CopyDBClusterSnapshot:
    get:
      x-aws-operation-name: CopyDBClusterSnapshot
      operationId: GET CopyDBClusterSnapshot
      description: <p>Copies a snapshot of a DB cluster.</p> <p>To copy a DB cluster
        snapshot from a shared manual DB cluster snapshot,
        <code>SourceDBClusterSnapshotIdentifier</code> must be the Amazon
        Resource Name (ARN) of the shared DB cluster snapshot.</p> <p>You can't
        copy from one AWS Region to another.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CopyDBClusterSnapshotResult"
        "480":
          description: DBClusterSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotAlreadyExistsFault"
        "481":
          description: DBClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotNotFoundFault"
        "482":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "483":
          description: InvalidDBClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterSnapshotStateFault"
        "484":
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotQuotaExceededFault"
        "485":
          description: KMSKeyNotAccessibleFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSKeyNotAccessibleFault"
      parameters:
        - name: SourceDBClusterSnapshotIdentifier
          in: query
          required: true
          description: "<p>The identifier of the DB cluster snapshot to copy. This
            parameter is not case-sensitive.</p> <p>You can't copy from one AWS
            Region to another.</p> <p>Constraints:</p> <ul> <li> <p>Must specify
            a valid system snapshot in the \"available\" state.</p> </li> <li>
            <p>Specify a valid DB snapshot identifier.</p> </li> </ul>
            <p>Example: <code>my-cluster-snapshot1</code> </p>"
          schema:
            type: string
        - name: TargetDBClusterSnapshotIdentifier
          in: query
          required: true
          description: "<p>The identifier of the new DB cluster snapshot to create from the
            source DB cluster snapshot. This parameter is not
            case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must contain
            from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First
            character must be a letter.</p> </li> <li> <p>Cannot end with a
            hyphen or contain two consecutive hyphens.</p> </li> </ul>
            <p>Example: <code>my-cluster-snapshot2</code> </p>"
          schema:
            type: string
        - name: KmsKeyId
          in: query
          required: false
          description: <p>The AWS AWS KMS key ID for an encrypted DB cluster snapshot. The
            KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or
            the KMS key alias for the KMS encryption key.</p> <p>If you copy an
            unencrypted DB cluster snapshot and specify a value for the
            <code>KmsKeyId</code> parameter, Amazon Neptune encrypts the target
            DB cluster snapshot using the specified KMS encryption key.</p>
            <p>If you copy an encrypted DB cluster snapshot from your AWS
            account, you can specify a value for <code>KmsKeyId</code> to
            encrypt the copy with a new KMS encryption key. If you don't specify
            a value for <code>KmsKeyId</code>, then the copy of the DB cluster
            snapshot is encrypted with the same KMS key as the source DB cluster
            snapshot.</p> <p>If you copy an encrypted DB cluster snapshot that
            is shared from another AWS account, then you must specify a value
            for <code>KmsKeyId</code>.</p> <p> KMS encryption keys are specific
            to the AWS Region that they are created in, and you can't use
            encryption keys from one AWS Region in another AWS Region.</p>
          schema:
            type: string
        - name: PreSignedUrl
          in: query
          required: false
          description: Not currently supported.
          schema:
            type: string
        - name: CopyTags
          in: query
          required: false
          description: True to copy all tags from the source DB cluster snapshot to the
            target DB cluster snapshot, and otherwise false. The default is
            false.
          schema:
            type: boolean
        - name: Tags
          in: query
          required: false
          description: The tags to assign to the new DB cluster snapshot copy.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CopyDBClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CopyDBClusterSnapshot
      operationId: POST CopyDBClusterSnapshot
      description: <p>Copies a snapshot of a DB cluster.</p> <p>To copy a DB cluster
        snapshot from a shared manual DB cluster snapshot,
        <code>SourceDBClusterSnapshotIdentifier</code> must be the Amazon
        Resource Name (ARN) of the shared DB cluster snapshot.</p> <p>You can't
        copy from one AWS Region to another.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CopyDBClusterSnapshotResult"
        "480":
          description: DBClusterSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotAlreadyExistsFault"
        "481":
          description: DBClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotNotFoundFault"
        "482":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "483":
          description: InvalidDBClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterSnapshotStateFault"
        "484":
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotQuotaExceededFault"
        "485":
          description: KMSKeyNotAccessibleFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSKeyNotAccessibleFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CopyDBClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SourceDBClusterSnapshotIdentifier:
                  description: "<p>The identifier of the DB cluster snapshot to copy. This
                    parameter is not case-sensitive.</p> <p>You can't copy from
                    one AWS Region to another.</p> <p>Constraints:</p> <ul> <li>
                    <p>Must specify a valid system snapshot in the \"available\"
                    state.</p> </li> <li> <p>Specify a valid DB snapshot
                    identifier.</p> </li> </ul> <p>Example:
                    <code>my-cluster-snapshot1</code> </p>"
                  type: string
                TargetDBClusterSnapshotIdentifier:
                  description: "<p>The identifier of the new DB cluster snapshot to create
                    from the source DB cluster snapshot. This parameter is not
                    case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must
                    contain from 1 to 63 letters, numbers, or hyphens.</p> </li>
                    <li> <p>First character must be a letter.</p> </li> <li>
                    <p>Cannot end with a hyphen or contain two consecutive
                    hyphens.</p> </li> </ul> <p>Example:
                    <code>my-cluster-snapshot2</code> </p>"
                  type: string
                KmsKeyId:
                  description: <p>The AWS AWS KMS key ID for an encrypted DB cluster
                    snapshot. The KMS key ID is the Amazon Resource Name (ARN),
                    KMS key identifier, or the KMS key alias for the KMS
                    encryption key.</p> <p>If you copy an unencrypted DB cluster
                    snapshot and specify a value for the <code>KmsKeyId</code>
                    parameter, Amazon Neptune encrypts the target DB cluster
                    snapshot using the specified KMS encryption key.</p> <p>If
                    you copy an encrypted DB cluster snapshot from your AWS
                    account, you can specify a value for <code>KmsKeyId</code>
                    to encrypt the copy with a new KMS encryption key. If you
                    don't specify a value for <code>KmsKeyId</code>, then the
                    copy of the DB cluster snapshot is encrypted with the same
                    KMS key as the source DB cluster snapshot.</p> <p>If you
                    copy an encrypted DB cluster snapshot that is shared from
                    another AWS account, then you must specify a value for
                    <code>KmsKeyId</code>.</p> <p> KMS encryption keys are
                    specific to the AWS Region that they are created in, and you
                    can't use encryption keys from one AWS Region in another AWS
                    Region.</p>
                  type: string
                PreSignedUrl:
                  description: Not currently supported.
                  type: string
                CopyTags:
                  description: True to copy all tags from the source DB cluster snapshot to
                    the target DB cluster snapshot, and otherwise false. The
                    default is false.
                  type: boolean
                Tags:
                  description: The tags to assign to the new DB cluster snapshot copy.
                  type: array
                  items:
                    type: string
              required:
                - SourceDBClusterSnapshotIdentifier
                - TargetDBClusterSnapshotIdentifier
  /#Action=CopyDBParameterGroup:
    get:
      x-aws-operation-name: CopyDBParameterGroup
      operationId: GET CopyDBParameterGroup
      description: Copies the specified DB parameter group.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CopyDBParameterGroupResult"
        "480":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
        "481":
          description: DBParameterGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupAlreadyExistsFault"
        "482":
          description: DBParameterGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupQuotaExceededFault"
      parameters:
        - name: SourceDBParameterGroupIdentifier
          in: query
          required: true
          description: <p>The identifier or ARN for the source DB parameter group. For
            information about creating an ARN, see <a
            href="https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing">
            Constructing an Amazon Resource Name (ARN)</a>.</p>
            <p>Constraints:</p> <ul> <li> <p>Must specify a valid DB parameter
            group.</p> </li> <li> <p>Must specify a valid DB parameter group
            identifier, for example <code>my-db-param-group</code>, or a valid
            ARN.</p> </li> </ul>
          schema:
            type: string
        - name: TargetDBParameterGroupIdentifier
          in: query
          required: true
          description: "<p>The identifier for the copied DB parameter group.</p>
            <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty, or
            blank.</p> </li> <li> <p>Must contain from 1 to 255 letters,
            numbers, or hyphens.</p> </li> <li> <p>First character must be a
            letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two
            consecutive hyphens.</p> </li> </ul> <p>Example:
            <code>my-db-parameter-group</code> </p>"
          schema:
            type: string
        - name: TargetDBParameterGroupDescription
          in: query
          required: true
          description: A description for the copied DB parameter group.
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: The tags to be assigned to the copied DB parameter group.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CopyDBParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CopyDBParameterGroup
      operationId: POST CopyDBParameterGroup
      description: Copies the specified DB parameter group.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CopyDBParameterGroupResult"
        "480":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
        "481":
          description: DBParameterGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupAlreadyExistsFault"
        "482":
          description: DBParameterGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupQuotaExceededFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CopyDBParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SourceDBParameterGroupIdentifier:
                  description: <p>The identifier or ARN for the source DB parameter group.
                    For information about creating an ARN, see <a
                    href="https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing">
                    Constructing an Amazon Resource Name (ARN)</a>.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must specify a valid DB
                    parameter group.</p> </li> <li> <p>Must specify a valid DB
                    parameter group identifier, for example
                    <code>my-db-param-group</code>, or a valid ARN.</p> </li>
                    </ul>
                  type: string
                TargetDBParameterGroupIdentifier:
                  description: "<p>The identifier for the copied DB parameter group.</p>
                    <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty, or
                    blank.</p> </li> <li> <p>Must contain from 1 to 255 letters,
                    numbers, or hyphens.</p> </li> <li> <p>First character must
                    be a letter.</p> </li> <li> <p>Cannot end with a hyphen or
                    contain two consecutive hyphens.</p> </li> </ul> <p>Example:
                    <code>my-db-parameter-group</code> </p>"
                  type: string
                TargetDBParameterGroupDescription:
                  description: A description for the copied DB parameter group.
                  type: string
                Tags:
                  description: The tags to be assigned to the copied DB parameter group.
                  type: array
                  items:
                    type: string
              required:
                - SourceDBParameterGroupIdentifier
                - TargetDBParameterGroupIdentifier
                - TargetDBParameterGroupDescription
  /#Action=CreateDBCluster:
    get:
      x-aws-operation-name: CreateDBCluster
      operationId: GET CreateDBCluster
      description: <p>Creates a new Amazon Neptune DB cluster.</p> <p>You can use the
        <code>ReplicationSourceIdentifier</code> parameter to create the DB
        cluster as a Read Replica of another DB cluster or Amazon Neptune DB
        instance.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateDBClusterResult"
        "480":
          description: DBClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterAlreadyExistsFault"
        "481":
          description: InsufficientStorageClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientStorageClusterCapacityFault"
        "482":
          description: DBClusterQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterQuotaExceededFault"
        "483":
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageQuotaExceededFault"
        "484":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
        "485":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "486":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "487":
          description: InvalidDBSubnetGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSubnetGroupStateFault"
        "488":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
        "489":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
        "490":
          description: DBClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterParameterGroupNotFoundFault"
        "491":
          description: KMSKeyNotAccessibleFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSKeyNotAccessibleFault"
        "492":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "493":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
        "494":
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs"
      parameters:
        - name: AvailabilityZones
          in: query
          required: false
          description: A list of EC2 Availability Zones that instances in the DB cluster
            can be created in.
          schema:
            type: array
            items:
              type: string
        - name: BackupRetentionPeriod
          in: query
          required: false
          description: "<p>The number of days for which automated backups are retained. You
            must specify a minimum value of 1.</p> <p>Default: 1</p>
            <p>Constraints:</p> <ul> <li> <p>Must be a value from 1 to 35</p>
            </li> </ul>"
          schema:
            type: integer
        - name: CharacterSetName
          in: query
          required: false
          description: A value that indicates that the DB cluster should be associated with
            the specified CharacterSet.
          schema:
            type: string
        - name: DatabaseName
          in: query
          required: false
          description: The name for your database of up to 64 alpha-numeric characters. If
            you do not provide a name, Amazon Neptune will not create a database
            in the DB cluster you are creating.
          schema:
            type: string
        - name: DBClusterIdentifier
          in: query
          required: true
          description: "<p>The DB cluster identifier. This parameter is stored as a
            lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain
            from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First
            character must be a letter.</p> </li> <li> <p>Cannot end with a
            hyphen or contain two consecutive hyphens.</p> </li> </ul>
            <p>Example: <code>my-cluster1</code> </p>"
          schema:
            type: string
        - name: DBClusterParameterGroupName
          in: query
          required: false
          description: <p> The name of the DB cluster parameter group to associate with
            this DB cluster. If this argument is omitted, the default is
            used.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match
            the name of an existing DBClusterParameterGroup.</p> </li> </ul>
          schema:
            type: string
        - name: VpcSecurityGroupIds
          in: query
          required: false
          description: A list of EC2 VPC security groups to associate with this DB cluster.
          schema:
            type: array
            items:
              type: string
        - name: DBSubnetGroupName
          in: query
          required: false
          description: "<p>A DB subnet group to associate with this DB cluster.</p>
            <p>Constraints: Must match the name of an existing DBSubnetGroup.
            Must not be default.</p> <p>Example: <code>mySubnetgroup</code>
            </p>"
          schema:
            type: string
        - name: Engine
          in: query
          required: true
          description: "<p>The name of the database engine to be used for this DB
            cluster.</p> <p>Valid Values: <code>neptune</code> </p>"
          schema:
            type: string
        - name: EngineVersion
          in: query
          required: false
          description: "<p>The version number of the database engine to use.</p>
            <p>Example: <code>1.0.1</code> </p>"
          schema:
            type: string
        - name: Port
          in: query
          required: false
          description: "<p>The port number on which the instances in the DB cluster accept
            connections.</p> <p> Default: <code>8182</code> </p>"
          schema:
            type: integer
        - name: MasterUsername
          in: query
          required: false
          description: <p>The name of the master user for the DB cluster.</p>
            <p>Constraints:</p> <ul> <li> <p>Must be 1 to 16 letters or
            numbers.</p> </li> <li> <p>First character must be a letter.</p>
            </li> <li> <p>Cannot be a reserved word for the chosen database
            engine.</p> </li> </ul>
          schema:
            type: string
        - name: MasterUserPassword
          in: query
          required: false
          description: '<p>The password for the master database user. This password can
            contain any printable ASCII character except "/", """, or "@".</p>
            <p>Constraints: Must contain from 8 to 41 characters.</p>'
          schema:
            type: string
        - name: OptionGroupName
          in: query
          required: false
          description: <p>A value that indicates that the DB cluster should be associated
            with the specified option group.</p> <p>Permanent options can't be
            removed from an option group. The option group can't be removed from
            a DB cluster once it is associated with a DB cluster.</p>
          schema:
            type: string
        - name: PreferredBackupWindow
          in: query
          required: false
          description: <p>The daily time range during which automated backups are created
            if automated backups are enabled using the
            <code>BackupRetentionPeriod</code> parameter.</p> <p>The default is
            a 30-minute window selected at random from an 8-hour block of time
            for each AWS Region. To see the time blocks available, see <a
            href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html">
            Adjusting the Preferred Maintenance Window</a> in the <i>Amazon
            Neptune User Guide.</i> </p> <p>Constraints:</p> <ul> <li> <p>Must
            be in the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li>
            <p>Must be in Universal Coordinated Time (UTC).</p> </li> <li>
            <p>Must not conflict with the preferred maintenance window.</p>
            </li> <li> <p>Must be at least 30 minutes.</p> </li> </ul>
          schema:
            type: string
        - name: PreferredMaintenanceWindow
          in: query
          required: false
          description: '<p>The weekly time range during which system maintenance can occur,
            in Universal Coordinated Time (UTC).</p> <p>Format:
            <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>The default is a
            30-minute window selected at random from an 8-hour block of time for
            each AWS Region, occurring on a random day of the week. To see the
            time blocks available, see <a
            href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html">
            Adjusting the Preferred Maintenance Window</a> in the <i>Amazon
            Neptune User Guide.</i> </p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri,
            Sat, Sun.</p> <p>Constraints: Minimum 30-minute window.</p>'
          schema:
            type: string
        - name: ReplicationSourceIdentifier
          in: query
          required: false
          description: The Amazon Resource Name (ARN) of the source DB instance or DB
            cluster if this DB cluster is created as a Read Replica.
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: The tags to assign to the new DB cluster.
          schema:
            type: array
            items:
              type: string
        - name: StorageEncrypted
          in: query
          required: false
          description: Specifies whether the DB cluster is encrypted.
          schema:
            type: boolean
        - name: KmsKeyId
          in: query
          required: false
          description: <p>The AWS KMS key identifier for an encrypted DB cluster.</p>
            <p>The KMS key identifier is the Amazon Resource Name (ARN) for the
            KMS encryption key. If you are creating a DB cluster with the same
            AWS account that owns the KMS encryption key used to encrypt the new
            DB cluster, then you can use the KMS key alias instead of the ARN
            for the KMS encryption key.</p> <p>If an encryption key is not
            specified in <code>KmsKeyId</code>:</p> <ul> <li> <p>If
            <code>ReplicationSourceIdentifier</code> identifies an encrypted
            source, then Amazon Neptune will use the encryption key used to
            encrypt the source. Otherwise, Amazon Neptune will use your default
            encryption key.</p> </li> <li> <p>If the
            <code>StorageEncrypted</code> parameter is true and
            <code>ReplicationSourceIdentifier</code> is not specified, then
            Amazon Neptune will use your default encryption key.</p> </li> </ul>
            <p>AWS KMS creates the default encryption key for your AWS account.
            Your AWS account has a different default encryption key for each AWS
            Region.</p> <p>If you create a Read Replica of an encrypted DB
            cluster in another AWS Region, you must set <code>KmsKeyId</code> to
            a KMS key ID that is valid in the destination AWS Region. This key
            is used to encrypt the Read Replica in that AWS Region.</p>
          schema:
            type: string
        - name: PreSignedUrl
          in: query
          required: false
          description: This parameter is not currently supported.
          schema:
            type: string
        - name: EnableIAMDatabaseAuthentication
          in: query
          required: false
          description: "<p>True to enable mapping of AWS Identity and Access Management
            (IAM) accounts to database accounts, and otherwise false.</p>
            <p>Default: <code>false</code> </p>"
          schema:
            type: boolean
        - name: EnableCloudwatchLogsExports
          in: query
          required: false
          description: The list of log types that need to be enabled for exporting to
            CloudWatch Logs.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateDBCluster
      operationId: POST CreateDBCluster
      description: <p>Creates a new Amazon Neptune DB cluster.</p> <p>You can use the
        <code>ReplicationSourceIdentifier</code> parameter to create the DB
        cluster as a Read Replica of another DB cluster or Amazon Neptune DB
        instance.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateDBClusterResult"
        "480":
          description: DBClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterAlreadyExistsFault"
        "481":
          description: InsufficientStorageClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientStorageClusterCapacityFault"
        "482":
          description: DBClusterQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterQuotaExceededFault"
        "483":
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageQuotaExceededFault"
        "484":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
        "485":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "486":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "487":
          description: InvalidDBSubnetGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSubnetGroupStateFault"
        "488":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
        "489":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
        "490":
          description: DBClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterParameterGroupNotFoundFault"
        "491":
          description: KMSKeyNotAccessibleFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSKeyNotAccessibleFault"
        "492":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "493":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
        "494":
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                AvailabilityZones:
                  description: A list of EC2 Availability Zones that instances in the DB
                    cluster can be created in.
                  type: array
                  items:
                    type: string
                BackupRetentionPeriod:
                  description: "<p>The number of days for which automated backups are
                    retained. You must specify a minimum value of 1.</p>
                    <p>Default: 1</p> <p>Constraints:</p> <ul> <li> <p>Must be a
                    value from 1 to 35</p> </li> </ul>"
                  type: integer
                CharacterSetName:
                  description: A value that indicates that the DB cluster should be
                    associated with the specified CharacterSet.
                  type: string
                DatabaseName:
                  description: The name for your database of up to 64 alpha-numeric
                    characters. If you do not provide a name, Amazon Neptune
                    will not create a database in the DB cluster you are
                    creating.
                  type: string
                DBClusterIdentifier:
                  description: "<p>The DB cluster identifier. This parameter is stored as a
                    lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must
                    contain from 1 to 63 letters, numbers, or hyphens.</p> </li>
                    <li> <p>First character must be a letter.</p> </li> <li>
                    <p>Cannot end with a hyphen or contain two consecutive
                    hyphens.</p> </li> </ul> <p>Example:
                    <code>my-cluster1</code> </p>"
                  type: string
                DBClusterParameterGroupName:
                  description: <p> The name of the DB cluster parameter group to associate
                    with this DB cluster. If this argument is omitted, the
                    default is used.</p> <p>Constraints:</p> <ul> <li> <p>If
                    supplied, must match the name of an existing
                    DBClusterParameterGroup.</p> </li> </ul>
                  type: string
                VpcSecurityGroupIds:
                  description: A list of EC2 VPC security groups to associate with this DB
                    cluster.
                  type: array
                  items:
                    type: string
                DBSubnetGroupName:
                  description: "<p>A DB subnet group to associate with this DB cluster.</p>
                    <p>Constraints: Must match the name of an existing
                    DBSubnetGroup. Must not be default.</p> <p>Example:
                    <code>mySubnetgroup</code> </p>"
                  type: string
                Engine:
                  description: "<p>The name of the database engine to be used for this DB
                    cluster.</p> <p>Valid Values: <code>neptune</code> </p>"
                  type: string
                EngineVersion:
                  description: "<p>The version number of the database engine to use.</p>
                    <p>Example: <code>1.0.1</code> </p>"
                  type: string
                Port:
                  description: "<p>The port number on which the instances in the DB cluster
                    accept connections.</p> <p> Default: <code>8182</code> </p>"
                  type: integer
                MasterUsername:
                  description: <p>The name of the master user for the DB cluster.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must be 1 to 16 letters or
                    numbers.</p> </li> <li> <p>First character must be a
                    letter.</p> </li> <li> <p>Cannot be a reserved word for the
                    chosen database engine.</p> </li> </ul>
                  type: string
                MasterUserPassword:
                  description: '<p>The password for the master database user. This password
                    can contain any printable ASCII character except "/", """,
                    or "@".</p> <p>Constraints: Must contain from 8 to 41
                    characters.</p>'
                  type: string
                OptionGroupName:
                  description: <p>A value that indicates that the DB cluster should be
                    associated with the specified option group.</p> <p>Permanent
                    options can't be removed from an option group. The option
                    group can't be removed from a DB cluster once it is
                    associated with a DB cluster.</p>
                  type: string
                PreferredBackupWindow:
                  description: <p>The daily time range during which automated backups are
                    created if automated backups are enabled using the
                    <code>BackupRetentionPeriod</code> parameter.</p> <p>The
                    default is a 30-minute window selected at random from an
                    8-hour block of time for each AWS Region. To see the time
                    blocks available, see <a
                    href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html">
                    Adjusting the Preferred Maintenance Window</a> in the
                    <i>Amazon Neptune User Guide.</i> </p> <p>Constraints:</p>
                    <ul> <li> <p>Must be in the format
                    <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in
                    Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not
                    conflict with the preferred maintenance window.</p> </li>
                    <li> <p>Must be at least 30 minutes.</p> </li> </ul>
                  type: string
                PreferredMaintenanceWindow:
                  description: '<p>The weekly time range during which system maintenance
                    can occur, in Universal Coordinated Time (UTC).</p>
                    <p>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>The
                    default is a 30-minute window selected at random from an
                    8-hour block of time for each AWS Region, occurring on a
                    random day of the week. To see the time blocks available,
                    see <a
                    href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html">
                    Adjusting the Preferred Maintenance Window</a> in the
                    <i>Amazon Neptune User Guide.</i> </p> <p>Valid Days: Mon,
                    Tue, Wed, Thu, Fri, Sat, Sun.</p> <p>Constraints: Minimum
                    30-minute window.</p>'
                  type: string
                ReplicationSourceIdentifier:
                  description: The Amazon Resource Name (ARN) of the source DB instance or
                    DB cluster if this DB cluster is created as a Read Replica.
                  type: string
                Tags:
                  description: The tags to assign to the new DB cluster.
                  type: array
                  items:
                    type: string
                StorageEncrypted:
                  description: Specifies whether the DB cluster is encrypted.
                  type: boolean
                KmsKeyId:
                  description: <p>The AWS KMS key identifier for an encrypted DB
                    cluster.</p> <p>The KMS key identifier is the Amazon
                    Resource Name (ARN) for the KMS encryption key. If you are
                    creating a DB cluster with the same AWS account that owns
                    the KMS encryption key used to encrypt the new DB cluster,
                    then you can use the KMS key alias instead of the ARN for
                    the KMS encryption key.</p> <p>If an encryption key is not
                    specified in <code>KmsKeyId</code>:</p> <ul> <li> <p>If
                    <code>ReplicationSourceIdentifier</code> identifies an
                    encrypted source, then Amazon Neptune will use the
                    encryption key used to encrypt the source. Otherwise, Amazon
                    Neptune will use your default encryption key.</p> </li> <li>
                    <p>If the <code>StorageEncrypted</code> parameter is true
                    and <code>ReplicationSourceIdentifier</code> is not
                    specified, then Amazon Neptune will use your default
                    encryption key.</p> </li> </ul> <p>AWS KMS creates the
                    default encryption key for your AWS account. Your AWS
                    account has a different default encryption key for each AWS
                    Region.</p> <p>If you create a Read Replica of an encrypted
                    DB cluster in another AWS Region, you must set
                    <code>KmsKeyId</code> to a KMS key ID that is valid in the
                    destination AWS Region. This key is used to encrypt the Read
                    Replica in that AWS Region.</p>
                  type: string
                PreSignedUrl:
                  description: This parameter is not currently supported.
                  type: string
                EnableIAMDatabaseAuthentication:
                  description: "<p>True to enable mapping of AWS Identity and Access
                    Management (IAM) accounts to database accounts, and
                    otherwise false.</p> <p>Default: <code>false</code> </p>"
                  type: boolean
                EnableCloudwatchLogsExports:
                  description: The list of log types that need to be enabled for exporting
                    to CloudWatch Logs.
                  type: array
                  items:
                    type: string
              required:
                - DBClusterIdentifier
                - Engine
  /#Action=CreateDBClusterParameterGroup:
    get:
      x-aws-operation-name: CreateDBClusterParameterGroup
      operationId: GET CreateDBClusterParameterGroup
      description: <p>Creates a new DB cluster parameter group.</p> <p>Parameters in a DB
        cluster parameter group apply to all of the instances in a DB
        cluster.</p> <p> A DB cluster parameter group is initially created with
        the default parameters for the database engine used by instances in the
        DB cluster. To provide custom values for any of the parameters, you must
        modify the group after creating it using
        <a>ModifyDBClusterParameterGroup</a>. Once you've created a DB cluster
        parameter group, you need to associate it with your DB cluster using
        <a>ModifyDBCluster</a>. When you associate a new DB cluster parameter
        group with a running DB cluster, you need to reboot the DB instances in
        the DB cluster without failover for the new DB cluster parameter group
        and associated settings to take effect.</p> <important> <p>After you
        create a DB cluster parameter group, you should wait at least 5 minutes
        before creating your first DB cluster that uses that DB cluster
        parameter group as the default parameter group. This allows Amazon
        Neptune to fully complete the create action before the DB cluster
        parameter group is used as the default for a new DB cluster. This is
        especially important for parameters that are critical when creating the
        default database for a DB cluster, such as the character set for the
        default database defined by the <code>character_set_database</code>
        parameter. You can use the <i>Parameter Groups</i> option of the <a
        href="https://console.aws.amazon.com/rds/">Amazon Neptune console</a> or
        the <a>DescribeDBClusterParameters</a> command to verify that your DB
        cluster parameter group has been created or modified.</p> </important>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateDBClusterParameterGroupResult"
        "480":
          description: DBParameterGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupQuotaExceededFault"
        "481":
          description: DBParameterGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupAlreadyExistsFault"
      parameters:
        - name: DBClusterParameterGroupName
          in: query
          required: true
          description: <p>The name of the DB cluster parameter group.</p>
            <p>Constraints:</p> <ul> <li> <p>Must match the name of an existing
            DBClusterParameterGroup.</p> </li> </ul> <note> <p>This value is
            stored as a lowercase string.</p> </note>
          schema:
            type: string
        - name: DBParameterGroupFamily
          in: query
          required: true
          description: The DB cluster parameter group family name. A DB cluster parameter
            group can be associated with one and only one DB cluster parameter
            group family, and can be applied only to a DB cluster running a
            database engine and engine version compatible with that DB cluster
            parameter group family.
          schema:
            type: string
        - name: Description
          in: query
          required: true
          description: The description for the DB cluster parameter group.
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: The tags to be assigned to the new DB cluster parameter group.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateDBClusterParameterGroup
      operationId: POST CreateDBClusterParameterGroup
      description: <p>Creates a new DB cluster parameter group.</p> <p>Parameters in a DB
        cluster parameter group apply to all of the instances in a DB
        cluster.</p> <p> A DB cluster parameter group is initially created with
        the default parameters for the database engine used by instances in the
        DB cluster. To provide custom values for any of the parameters, you must
        modify the group after creating it using
        <a>ModifyDBClusterParameterGroup</a>. Once you've created a DB cluster
        parameter group, you need to associate it with your DB cluster using
        <a>ModifyDBCluster</a>. When you associate a new DB cluster parameter
        group with a running DB cluster, you need to reboot the DB instances in
        the DB cluster without failover for the new DB cluster parameter group
        and associated settings to take effect.</p> <important> <p>After you
        create a DB cluster parameter group, you should wait at least 5 minutes
        before creating your first DB cluster that uses that DB cluster
        parameter group as the default parameter group. This allows Amazon
        Neptune to fully complete the create action before the DB cluster
        parameter group is used as the default for a new DB cluster. This is
        especially important for parameters that are critical when creating the
        default database for a DB cluster, such as the character set for the
        default database defined by the <code>character_set_database</code>
        parameter. You can use the <i>Parameter Groups</i> option of the <a
        href="https://console.aws.amazon.com/rds/">Amazon Neptune console</a> or
        the <a>DescribeDBClusterParameters</a> command to verify that your DB
        cluster parameter group has been created or modified.</p> </important>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateDBClusterParameterGroupResult"
        "480":
          description: DBParameterGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupQuotaExceededFault"
        "481":
          description: DBParameterGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupAlreadyExistsFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterParameterGroupName:
                  description: <p>The name of the DB cluster parameter group.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must match the name of an
                    existing DBClusterParameterGroup.</p> </li> </ul> <note>
                    <p>This value is stored as a lowercase string.</p> </note>
                  type: string
                DBParameterGroupFamily:
                  description: The DB cluster parameter group family name. A DB cluster
                    parameter group can be associated with one and only one DB
                    cluster parameter group family, and can be applied only to a
                    DB cluster running a database engine and engine version
                    compatible with that DB cluster parameter group family.
                  type: string
                Description:
                  description: The description for the DB cluster parameter group.
                  type: string
                Tags:
                  description: The tags to be assigned to the new DB cluster parameter
                    group.
                  type: array
                  items:
                    type: string
              required:
                - DBClusterParameterGroupName
                - DBParameterGroupFamily
                - Description
  /#Action=CreateDBClusterSnapshot:
    get:
      x-aws-operation-name: CreateDBClusterSnapshot
      operationId: GET CreateDBClusterSnapshot
      description: Creates a snapshot of a DB cluster.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateDBClusterSnapshotResult"
        "480":
          description: DBClusterSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotAlreadyExistsFault"
        "481":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "482":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "483":
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotQuotaExceededFault"
        "484":
          description: InvalidDBClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterSnapshotStateFault"
      parameters:
        - name: DBClusterSnapshotIdentifier
          in: query
          required: true
          description: "<p>The identifier of the DB cluster snapshot. This parameter is
            stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li>
            <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li>
            <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot
            end with a hyphen or contain two consecutive hyphens.</p> </li>
            </ul> <p>Example: <code>my-cluster1-snapshot1</code> </p>"
          schema:
            type: string
        - name: DBClusterIdentifier
          in: query
          required: true
          description: "<p>The identifier of the DB cluster to create a snapshot for. This
            parameter is not case-sensitive.</p> <p>Constraints:</p> <ul> <li>
            <p>Must match the identifier of an existing DBCluster.</p> </li>
            </ul> <p>Example: <code>my-cluster1</code> </p>"
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: The tags to be assigned to the DB cluster snapshot.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateDBClusterSnapshot
      operationId: POST CreateDBClusterSnapshot
      description: Creates a snapshot of a DB cluster.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateDBClusterSnapshotResult"
        "480":
          description: DBClusterSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotAlreadyExistsFault"
        "481":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "482":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "483":
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotQuotaExceededFault"
        "484":
          description: InvalidDBClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterSnapshotStateFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterSnapshotIdentifier:
                  description: "<p>The identifier of the DB cluster snapshot. This
                    parameter is stored as a lowercase string.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63
                    letters, numbers, or hyphens.</p> </li> <li> <p>First
                    character must be a letter.</p> </li> <li> <p>Cannot end
                    with a hyphen or contain two consecutive hyphens.</p> </li>
                    </ul> <p>Example: <code>my-cluster1-snapshot1</code> </p>"
                  type: string
                DBClusterIdentifier:
                  description: "<p>The identifier of the DB cluster to create a snapshot
                    for. This parameter is not case-sensitive.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must match the identifier
                    of an existing DBCluster.</p> </li> </ul> <p>Example:
                    <code>my-cluster1</code> </p>"
                  type: string
                Tags:
                  description: The tags to be assigned to the DB cluster snapshot.
                  type: array
                  items:
                    type: string
              required:
                - DBClusterSnapshotIdentifier
                - DBClusterIdentifier
  /#Action=CreateDBInstance:
    get:
      x-aws-operation-name: CreateDBInstance
      operationId: GET CreateDBInstance
      description: Creates a new DB instance.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateDBInstanceResult"
        "480":
          description: DBInstanceAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceAlreadyExistsFault"
        "481":
          description: InsufficientDBInstanceCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientDBInstanceCapacityFault"
        "482":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
        "483":
          description: DBSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSecurityGroupNotFoundFault"
        "484":
          description: InstanceQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InstanceQuotaExceededFault"
        "485":
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageQuotaExceededFault"
        "486":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
        "487":
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs"
        "488":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "489":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
        "490":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "491":
          description: ProvisionedIopsNotAvailableInAZFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ProvisionedIopsNotAvailableInAZFault"
        "492":
          description: OptionGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OptionGroupNotFoundFault"
        "493":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "494":
          description: StorageTypeNotSupportedFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageTypeNotSupportedFault"
        "495":
          description: AuthorizationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationNotFoundFault"
        "496":
          description: KMSKeyNotAccessibleFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSKeyNotAccessibleFault"
        "497":
          description: DomainNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DomainNotFoundFault"
      parameters:
        - name: DBName
          in: query
          required: false
          description: Not supported.
          schema:
            type: string
        - name: DBInstanceIdentifier
          in: query
          required: true
          description: "<p>The DB instance identifier. This parameter is stored as a
            lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain
            from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>First
            character must be a letter.</p> </li> <li> <p>Cannot end with a
            hyphen or contain two consecutive hyphens.</p> </li> </ul>
            <p>Example: <code>mydbinstance</code> </p>"
          schema:
            type: string
        - name: AllocatedStorage
          in: query
          required: false
          description: "<p>The amount of storage (in gibibytes) to allocate for the DB
            instance.</p> <p>Type: Integer</p> <p>Not applicable. Neptune
            cluster volumes automatically grow as the amount of data in your
            database increases, though you are only charged for the space that
            you use in a Neptune cluster volume.</p>"
          schema:
            type: integer
        - name: DBInstanceClass
          in: query
          required: true
          description: The compute and memory capacity of the DB instance, for example,
            <code>db.m4.large</code>. Not all DB instance classes are available
            in all AWS Regions.
          schema:
            type: string
        - name: Engine
          in: query
          required: true
          description: "<p>The name of the database engine to be used for this
            instance.</p> <p>Valid Values: <code>neptune</code> </p>"
          schema:
            type: string
        - name: MasterUsername
          in: query
          required: false
          description: The name for the master user. Not used.
          schema:
            type: string
        - name: MasterUserPassword
          in: query
          required: false
          description: <p>The password for the master user. The password can include any
            printable ASCII character except "/", """, or "@".</p> <p> Not
            used.</p>
          schema:
            type: string
        - name: DBSecurityGroups
          in: query
          required: false
          description: "<p>A list of DB security groups to associate with this DB
            instance.</p> <p>Default: The default DB security group for the
            database engine.</p>"
          schema:
            type: array
            items:
              type: string
        - name: VpcSecurityGroupIds
          in: query
          required: false
          description: "<p>A list of EC2 VPC security groups to associate with this DB
            instance.</p> <p>Not applicable. The associated list of EC2 VPC
            security groups is managed by the DB cluster. For more information,
            see <a>CreateDBCluster</a>.</p> <p>Default: The default EC2 VPC
            security group for the DB subnet group's VPC.</p>"
          schema:
            type: array
            items:
              type: string
        - name: AvailabilityZone
          in: query
          required: false
          description: "<p> The EC2 Availability Zone that the DB instance is created
            in</p> <p>Default: A random, system-chosen Availability Zone in the
            endpoint's AWS Region.</p> <p> Example: <code>us-east-1d</code> </p>
            <p> Constraint: The AvailabilityZone parameter can't be specified if
            the MultiAZ parameter is set to <code>true</code>. The specified
            Availability Zone must be in the same AWS Region as the current
            endpoint.</p>"
          schema:
            type: string
        - name: DBSubnetGroupName
          in: query
          required: false
          description: <p>A DB subnet group to associate with this DB instance.</p> <p>If
            there is no DB subnet group, then it is a non-VPC DB instance.</p>
          schema:
            type: string
        - name: PreferredMaintenanceWindow
          in: query
          required: false
          description: "<p>The time range each week during which system maintenance can
            occur, in Universal Coordinated Time (UTC).</p> <p> Format:
            <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>The default is a
            30-minute window selected at random from an 8-hour block of time for
            each AWS Region, occurring on a random day of the week.</p> <p>Valid
            Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p> <p>Constraints: Minimum
            30-minute window.</p>"
          schema:
            type: string
        - name: DBParameterGroupName
          in: query
          required: false
          description: <p>The name of the DB parameter group to associate with this DB
            instance. If this argument is omitted, the default DBParameterGroup
            for the specified engine is used.</p> <p>Constraints:</p> <ul> <li>
            <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li>
            <p>First character must be a letter</p> </li> <li> <p>Cannot end
            with a hyphen or contain two consecutive hyphens</p> </li> </ul>
          schema:
            type: string
        - name: BackupRetentionPeriod
          in: query
          required: false
          description: "<p>The number of days for which automated backups are retained.</p>
            <p>Not applicable. The retention period for automated backups is
            managed by the DB cluster. For more information, see
            <a>CreateDBCluster</a>.</p> <p>Default: 1</p> <p>Constraints:</p>
            <ul> <li> <p>Must be a value from 0 to 35</p> </li> <li> <p>Cannot
            be set to 0 if the DB instance is a source to Read Replicas</p>
            </li> </ul>"
          schema:
            type: integer
        - name: PreferredBackupWindow
          in: query
          required: false
          description: <p> The daily time range during which automated backups are
            created.</p> <p>Not applicable. The daily time range for creating
            automated backups is managed by the DB cluster. For more
            information, see <a>CreateDBCluster</a>.</p>
          schema:
            type: string
        - name: Port
          in: query
          required: false
          description: "<p>The port number on which the database accepts connections.</p>
            <p>Not applicable. The port is managed by the DB cluster. For more
            information, see <a>CreateDBCluster</a>.</p> <p> Default:
            <code>8182</code> </p> <p>Type: Integer</p>"
          schema:
            type: integer
        - name: MultiAZ
          in: query
          required: false
          description: Specifies if the DB instance is a Multi-AZ deployment. You can't set
            the AvailabilityZone parameter if the MultiAZ parameter is set to
            true.
          schema:
            type: boolean
        - name: EngineVersion
          in: query
          required: false
          description: The version number of the database engine to use.
          schema:
            type: string
        - name: AutoMinorVersionUpgrade
          in: query
          required: false
          description: "<p>Indicates that minor engine upgrades are applied automatically
            to the DB instance during the maintenance window.</p> <p>Default:
            <code>true</code> </p>"
          schema:
            type: boolean
        - name: LicenseModel
          in: query
          required: false
          description: "<p>License model information for this DB instance.</p> <p> Valid
            values: <code>license-included</code> |
            <code>bring-your-own-license</code> |
            <code>general-public-license</code> </p>"
          schema:
            type: string
        - name: Iops
          in: query
          required: false
          description: The amount of Provisioned IOPS (input/output operations per second)
            to be initially allocated for the DB instance.
          schema:
            type: integer
        - name: OptionGroupName
          in: query
          required: false
          description: <p>Indicates that the DB instance should be associated with the
            specified option group.</p> <p>Permanent options, such as the TDE
            option for Oracle Advanced Security TDE, can't be removed from an
            option group, and that option group can't be removed from a DB
            instance once it is associated with a DB instance</p>
          schema:
            type: string
        - name: CharacterSetName
          in: query
          required: false
          description: <p>Indicates that the DB instance should be associated with the
            specified CharacterSet.</p> <p>Not applicable. The character set is
            managed by the DB cluster. For more information, see
            <a>CreateDBCluster</a>.</p>
          schema:
            type: string
        - name: PubliclyAccessible
          in: query
          required: false
          description: This flag should no longer be used.
          schema:
            type: boolean
        - name: Tags
          in: query
          required: false
          description: The tags to assign to the new instance.
          schema:
            type: array
            items:
              type: string
        - name: DBClusterIdentifier
          in: query
          required: false
          description: "<p>The identifier of the DB cluster that the instance will belong
            to.</p> <p>For information on creating a DB cluster, see
            <a>CreateDBCluster</a>.</p> <p>Type: String</p>"
          schema:
            type: string
        - name: StorageType
          in: query
          required: false
          description: <p>Specifies the storage type to be associated with the DB
            instance.</p> <p>Not applicable. Storage is managed by the DB
            Cluster.</p>
          schema:
            type: string
        - name: TdeCredentialArn
          in: query
          required: false
          description: The ARN from the key store with which to associate the instance for
            TDE encryption.
          schema:
            type: string
        - name: TdeCredentialPassword
          in: query
          required: false
          description: The password for the given ARN from the key store in order to access
            the device.
          schema:
            type: string
        - name: StorageEncrypted
          in: query
          required: false
          description: "<p>Specifies whether the DB instance is encrypted.</p> <p>Not
            applicable. The encryption for DB instances is managed by the DB
            cluster. For more information, see <a>CreateDBCluster</a>.</p>
            <p>Default: false</p>"
          schema:
            type: boolean
        - name: KmsKeyId
          in: query
          required: false
          description: <p>The AWS KMS key identifier for an encrypted DB instance.</p>
            <p>The KMS key identifier is the Amazon Resource Name (ARN) for the
            KMS encryption key. If you are creating a DB instance with the same
            AWS account that owns the KMS encryption key used to encrypt the new
            DB instance, then you can use the KMS key alias instead of the ARN
            for the KM encryption key.</p> <p>Not applicable. The KMS key
            identifier is managed by the DB cluster. For more information, see
            <a>CreateDBCluster</a>.</p> <p>If the <code>StorageEncrypted</code>
            parameter is true, and you do not specify a value for the
            <code>KmsKeyId</code> parameter, then Amazon Neptune will use your
            default encryption key. AWS KMS creates the default encryption key
            for your AWS account. Your AWS account has a different default
            encryption key for each AWS Region.</p>
          schema:
            type: string
        - name: Domain
          in: query
          required: false
          description: Specify the Active Directory Domain to create the instance in.
          schema:
            type: string
        - name: CopyTagsToSnapshot
          in: query
          required: false
          description: True to copy all tags from the DB instance to snapshots of the DB
            instance, and otherwise false. The default is false.
          schema:
            type: boolean
        - name: MonitoringInterval
          in: query
          required: false
          description: "<p>The interval, in seconds, between points when Enhanced
            Monitoring metrics are collected for the DB instance. To disable
            collecting Enhanced Monitoring metrics, specify 0. The default is
            0.</p> <p>If <code>MonitoringRoleArn</code> is specified, then you
            must also set <code>MonitoringInterval</code> to a value other than
            0.</p> <p>Valid Values: <code>0, 1, 5, 10, 15, 30, 60</code> </p>"
          schema:
            type: integer
        - name: MonitoringRoleArn
          in: query
          required: false
          description: <p>The ARN for the IAM role that permits Neptune to send enhanced
            monitoring metrics to Amazon CloudWatch Logs. For example,
            <code>arn:aws:iam:123456789012:role/emaccess</code>.</p> <p>If
            <code>MonitoringInterval</code> is set to a value other than 0, then
            you must supply a <code>MonitoringRoleArn</code> value.</p>
          schema:
            type: string
        - name: DomainIAMRoleName
          in: query
          required: false
          description: Specify the name of the IAM role to be used when making API calls to
            the Directory Service.
          schema:
            type: string
        - name: PromotionTier
          in: query
          required: false
          description: "<p>A value that specifies the order in which an Read Replica is
            promoted to the primary instance after a failure of the existing
            primary instance. </p> <p>Default: 1</p> <p>Valid Values: 0 -
            15</p>"
          schema:
            type: integer
        - name: Timezone
          in: query
          required: false
          description: The time zone of the DB instance.
          schema:
            type: string
        - name: EnableIAMDatabaseAuthentication
          in: query
          required: false
          description: "<p>True to enable AWS Identity and Access Management (IAM)
            authentication for Neptune.</p> <p>Default: <code>false</code> </p>"
          schema:
            type: boolean
        - name: EnablePerformanceInsights
          in: query
          required: false
          description: True to enable Performance Insights for the DB instance, and
            otherwise false.
          schema:
            type: boolean
        - name: PerformanceInsightsKMSKeyId
          in: query
          required: false
          description: The AWS KMS key identifier for encryption of Performance Insights
            data. The KMS key ID is the Amazon Resource Name (ARN), KMS key
            identifier, or the KMS key alias for the KMS encryption key.
          schema:
            type: string
        - name: EnableCloudwatchLogsExports
          in: query
          required: false
          description: The list of log types that need to be enabled for exporting to
            CloudWatch Logs.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBInstance
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateDBInstance
      operationId: POST CreateDBInstance
      description: Creates a new DB instance.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateDBInstanceResult"
        "480":
          description: DBInstanceAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceAlreadyExistsFault"
        "481":
          description: InsufficientDBInstanceCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientDBInstanceCapacityFault"
        "482":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
        "483":
          description: DBSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSecurityGroupNotFoundFault"
        "484":
          description: InstanceQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InstanceQuotaExceededFault"
        "485":
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageQuotaExceededFault"
        "486":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
        "487":
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs"
        "488":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "489":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
        "490":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "491":
          description: ProvisionedIopsNotAvailableInAZFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ProvisionedIopsNotAvailableInAZFault"
        "492":
          description: OptionGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OptionGroupNotFoundFault"
        "493":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "494":
          description: StorageTypeNotSupportedFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageTypeNotSupportedFault"
        "495":
          description: AuthorizationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationNotFoundFault"
        "496":
          description: KMSKeyNotAccessibleFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSKeyNotAccessibleFault"
        "497":
          description: DomainNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DomainNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBInstance
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBName:
                  description: Not supported.
                  type: string
                DBInstanceIdentifier:
                  description: "<p>The DB instance identifier. This parameter is stored as
                    a lowercase string.</p> <p>Constraints:</p> <ul> <li>
                    <p>Must contain from 1 to 63 letters, numbers, or
                    hyphens.</p> </li> <li> <p>First character must be a
                    letter.</p> </li> <li> <p>Cannot end with a hyphen or
                    contain two consecutive hyphens.</p> </li> </ul> <p>Example:
                    <code>mydbinstance</code> </p>"
                  type: string
                AllocatedStorage:
                  description: "<p>The amount of storage (in gibibytes) to allocate for the
                    DB instance.</p> <p>Type: Integer</p> <p>Not applicable.
                    Neptune cluster volumes automatically grow as the amount of
                    data in your database increases, though you are only charged
                    for the space that you use in a Neptune cluster volume.</p>"
                  type: integer
                DBInstanceClass:
                  description: The compute and memory capacity of the DB instance, for
                    example, <code>db.m4.large</code>. Not all DB instance
                    classes are available in all AWS Regions.
                  type: string
                Engine:
                  description: "<p>The name of the database engine to be used for this
                    instance.</p> <p>Valid Values: <code>neptune</code> </p>"
                  type: string
                MasterUsername:
                  description: The name for the master user. Not used.
                  type: string
                MasterUserPassword:
                  description: <p>The password for the master user. The password can
                    include any printable ASCII character except "/", """, or
                    "@".</p> <p> Not used.</p>
                  type: string
                DBSecurityGroups:
                  description: "<p>A list of DB security groups to associate with this DB
                    instance.</p> <p>Default: The default DB security group for
                    the database engine.</p>"
                  type: array
                  items:
                    type: string
                VpcSecurityGroupIds:
                  description: "<p>A list of EC2 VPC security groups to associate with this
                    DB instance.</p> <p>Not applicable. The associated list of
                    EC2 VPC security groups is managed by the DB cluster. For
                    more information, see <a>CreateDBCluster</a>.</p>
                    <p>Default: The default EC2 VPC security group for the DB
                    subnet group's VPC.</p>"
                  type: array
                  items:
                    type: string
                AvailabilityZone:
                  description: "<p> The EC2 Availability Zone that the DB instance is
                    created in</p> <p>Default: A random, system-chosen
                    Availability Zone in the endpoint's AWS Region.</p> <p>
                    Example: <code>us-east-1d</code> </p> <p> Constraint: The
                    AvailabilityZone parameter can't be specified if the MultiAZ
                    parameter is set to <code>true</code>. The specified
                    Availability Zone must be in the same AWS Region as the
                    current endpoint.</p>"
                  type: string
                DBSubnetGroupName:
                  description: <p>A DB subnet group to associate with this DB instance.</p>
                    <p>If there is no DB subnet group, then it is a non-VPC DB
                    instance.</p>
                  type: string
                PreferredMaintenanceWindow:
                  description: "<p>The time range each week during which system maintenance
                    can occur, in Universal Coordinated Time (UTC).</p> <p>
                    Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>The
                    default is a 30-minute window selected at random from an
                    8-hour block of time for each AWS Region, occurring on a
                    random day of the week.</p> <p>Valid Days: Mon, Tue, Wed,
                    Thu, Fri, Sat, Sun.</p> <p>Constraints: Minimum 30-minute
                    window.</p>"
                  type: string
                DBParameterGroupName:
                  description: <p>The name of the DB parameter group to associate with this
                    DB instance. If this argument is omitted, the default
                    DBParameterGroup for the specified engine is used.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters,
                    numbers, or hyphens.</p> </li> <li> <p>First character must
                    be a letter</p> </li> <li> <p>Cannot end with a hyphen or
                    contain two consecutive hyphens</p> </li> </ul>
                  type: string
                BackupRetentionPeriod:
                  description: "<p>The number of days for which automated backups are
                    retained.</p> <p>Not applicable. The retention period for
                    automated backups is managed by the DB cluster. For more
                    information, see <a>CreateDBCluster</a>.</p> <p>Default:
                    1</p> <p>Constraints:</p> <ul> <li> <p>Must be a value from
                    0 to 35</p> </li> <li> <p>Cannot be set to 0 if the DB
                    instance is a source to Read Replicas</p> </li> </ul>"
                  type: integer
                PreferredBackupWindow:
                  description: <p> The daily time range during which automated backups are
                    created.</p> <p>Not applicable. The daily time range for
                    creating automated backups is managed by the DB cluster. For
                    more information, see <a>CreateDBCluster</a>.</p>
                  type: string
                Port:
                  description: "<p>The port number on which the database accepts
                    connections.</p> <p>Not applicable. The port is managed by
                    the DB cluster. For more information, see
                    <a>CreateDBCluster</a>.</p> <p> Default: <code>8182</code>
                    </p> <p>Type: Integer</p>"
                  type: integer
                MultiAZ:
                  description: Specifies if the DB instance is a Multi-AZ deployment. You
                    can't set the AvailabilityZone parameter if the MultiAZ
                    parameter is set to true.
                  type: boolean
                EngineVersion:
                  description: The version number of the database engine to use.
                  type: string
                AutoMinorVersionUpgrade:
                  description: "<p>Indicates that minor engine upgrades are applied
                    automatically to the DB instance during the maintenance
                    window.</p> <p>Default: <code>true</code> </p>"
                  type: boolean
                LicenseModel:
                  description: "<p>License model information for this DB instance.</p> <p>
                    Valid values: <code>license-included</code> |
                    <code>bring-your-own-license</code> |
                    <code>general-public-license</code> </p>"
                  type: string
                Iops:
                  description: The amount of Provisioned IOPS (input/output operations per
                    second) to be initially allocated for the DB instance.
                  type: integer
                OptionGroupName:
                  description: <p>Indicates that the DB instance should be associated with
                    the specified option group.</p> <p>Permanent options, such
                    as the TDE option for Oracle Advanced Security TDE, can't be
                    removed from an option group, and that option group can't be
                    removed from a DB instance once it is associated with a DB
                    instance</p>
                  type: string
                CharacterSetName:
                  description: <p>Indicates that the DB instance should be associated with
                    the specified CharacterSet.</p> <p>Not applicable. The
                    character set is managed by the DB cluster. For more
                    information, see <a>CreateDBCluster</a>.</p>
                  type: string
                PubliclyAccessible:
                  description: This flag should no longer be used.
                  type: boolean
                Tags:
                  description: The tags to assign to the new instance.
                  type: array
                  items:
                    type: string
                DBClusterIdentifier:
                  description: "<p>The identifier of the DB cluster that the instance will
                    belong to.</p> <p>For information on creating a DB cluster,
                    see <a>CreateDBCluster</a>.</p> <p>Type: String</p>"
                  type: string
                StorageType:
                  description: <p>Specifies the storage type to be associated with the DB
                    instance.</p> <p>Not applicable. Storage is managed by the
                    DB Cluster.</p>
                  type: string
                TdeCredentialArn:
                  description: The ARN from the key store with which to associate the
                    instance for TDE encryption.
                  type: string
                TdeCredentialPassword:
                  description: The password for the given ARN from the key store in order
                    to access the device.
                  type: string
                StorageEncrypted:
                  description: "<p>Specifies whether the DB instance is encrypted.</p>
                    <p>Not applicable. The encryption for DB instances is
                    managed by the DB cluster. For more information, see
                    <a>CreateDBCluster</a>.</p> <p>Default: false</p>"
                  type: boolean
                KmsKeyId:
                  description: <p>The AWS KMS key identifier for an encrypted DB
                    instance.</p> <p>The KMS key identifier is the Amazon
                    Resource Name (ARN) for the KMS encryption key. If you are
                    creating a DB instance with the same AWS account that owns
                    the KMS encryption key used to encrypt the new DB instance,
                    then you can use the KMS key alias instead of the ARN for
                    the KM encryption key.</p> <p>Not applicable. The KMS key
                    identifier is managed by the DB cluster. For more
                    information, see <a>CreateDBCluster</a>.</p> <p>If the
                    <code>StorageEncrypted</code> parameter is true, and you do
                    not specify a value for the <code>KmsKeyId</code> parameter,
                    then Amazon Neptune will use your default encryption key.
                    AWS KMS creates the default encryption key for your AWS
                    account. Your AWS account has a different default encryption
                    key for each AWS Region.</p>
                  type: string
                Domain:
                  description: Specify the Active Directory Domain to create the instance
                    in.
                  type: string
                CopyTagsToSnapshot:
                  description: True to copy all tags from the DB instance to snapshots of
                    the DB instance, and otherwise false. The default is false.
                  type: boolean
                MonitoringInterval:
                  description: "<p>The interval, in seconds, between points when Enhanced
                    Monitoring metrics are collected for the DB instance. To
                    disable collecting Enhanced Monitoring metrics, specify 0.
                    The default is 0.</p> <p>If <code>MonitoringRoleArn</code>
                    is specified, then you must also set
                    <code>MonitoringInterval</code> to a value other than 0.</p>
                    <p>Valid Values: <code>0, 1, 5, 10, 15, 30, 60</code> </p>"
                  type: integer
                MonitoringRoleArn:
                  description: <p>The ARN for the IAM role that permits Neptune to send
                    enhanced monitoring metrics to Amazon CloudWatch Logs. For
                    example,
                    <code>arn:aws:iam:123456789012:role/emaccess</code>.</p>
                    <p>If <code>MonitoringInterval</code> is set to a value
                    other than 0, then you must supply a
                    <code>MonitoringRoleArn</code> value.</p>
                  type: string
                DomainIAMRoleName:
                  description: Specify the name of the IAM role to be used when making API
                    calls to the Directory Service.
                  type: string
                PromotionTier:
                  description: "<p>A value that specifies the order in which an Read
                    Replica is promoted to the primary instance after a failure
                    of the existing primary instance. </p> <p>Default: 1</p>
                    <p>Valid Values: 0 - 15</p>"
                  type: integer
                Timezone:
                  description: The time zone of the DB instance.
                  type: string
                EnableIAMDatabaseAuthentication:
                  description: "<p>True to enable AWS Identity and Access Management (IAM)
                    authentication for Neptune.</p> <p>Default:
                    <code>false</code> </p>"
                  type: boolean
                EnablePerformanceInsights:
                  description: True to enable Performance Insights for the DB instance, and
                    otherwise false.
                  type: boolean
                PerformanceInsightsKMSKeyId:
                  description: The AWS KMS key identifier for encryption of Performance
                    Insights data. The KMS key ID is the Amazon Resource Name
                    (ARN), KMS key identifier, or the KMS key alias for the KMS
                    encryption key.
                  type: string
                EnableCloudwatchLogsExports:
                  description: The list of log types that need to be enabled for exporting
                    to CloudWatch Logs.
                  type: array
                  items:
                    type: string
              required:
                - DBInstanceIdentifier
                - DBInstanceClass
                - Engine
  /#Action=CreateDBParameterGroup:
    get:
      x-aws-operation-name: CreateDBParameterGroup
      operationId: GET CreateDBParameterGroup
      description: <p>Creates a new DB parameter group.</p> <p>A DB parameter group is
        initially created with the default parameters for the database engine
        used by the DB instance. To provide custom values for any of the
        parameters, you must modify the group after creating it using
        <i>ModifyDBParameterGroup</i>. Once you've created a DB parameter group,
        you need to associate it with your DB instance using
        <i>ModifyDBInstance</i>. When you associate a new DB parameter group
        with a running DB instance, you need to reboot the DB instance without
        failover for the new DB parameter group and associated settings to take
        effect.</p> <important> <p>After you create a DB parameter group, you
        should wait at least 5 minutes before creating your first DB instance
        that uses that DB parameter group as the default parameter group. This
        allows Amazon Neptune to fully complete the create action before the
        parameter group is used as the default for a new DB instance. This is
        especially important for parameters that are critical when creating the
        default database for a DB instance, such as the character set for the
        default database defined by the <code>character_set_database</code>
        parameter. You can use the <i>Parameter Groups</i> option of the Amazon
        Neptune console or the <i>DescribeDBParameters</i> command to verify
        that your DB parameter group has been created or modified.</p>
        </important>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateDBParameterGroupResult"
        "480":
          description: DBParameterGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupQuotaExceededFault"
        "481":
          description: DBParameterGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupAlreadyExistsFault"
      parameters:
        - name: DBParameterGroupName
          in: query
          required: true
          description: <p>The name of the DB parameter group.</p> <p>Constraints:</p> <ul>
            <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li>
            <li> <p>First character must be a letter</p> </li> <li> <p>Cannot
            end with a hyphen or contain two consecutive hyphens</p> </li> </ul>
            <note> <p>This value is stored as a lowercase string.</p> </note>
          schema:
            type: string
        - name: DBParameterGroupFamily
          in: query
          required: true
          description: The DB parameter group family name. A DB parameter group can be
            associated with one and only one DB parameter group family, and can
            be applied only to a DB instance running a database engine and
            engine version compatible with that DB parameter group family.
          schema:
            type: string
        - name: Description
          in: query
          required: true
          description: The description for the DB parameter group.
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: The tags to be assigned to the new DB parameter group.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateDBParameterGroup
      operationId: POST CreateDBParameterGroup
      description: <p>Creates a new DB parameter group.</p> <p>A DB parameter group is
        initially created with the default parameters for the database engine
        used by the DB instance. To provide custom values for any of the
        parameters, you must modify the group after creating it using
        <i>ModifyDBParameterGroup</i>. Once you've created a DB parameter group,
        you need to associate it with your DB instance using
        <i>ModifyDBInstance</i>. When you associate a new DB parameter group
        with a running DB instance, you need to reboot the DB instance without
        failover for the new DB parameter group and associated settings to take
        effect.</p> <important> <p>After you create a DB parameter group, you
        should wait at least 5 minutes before creating your first DB instance
        that uses that DB parameter group as the default parameter group. This
        allows Amazon Neptune to fully complete the create action before the
        parameter group is used as the default for a new DB instance. This is
        especially important for parameters that are critical when creating the
        default database for a DB instance, such as the character set for the
        default database defined by the <code>character_set_database</code>
        parameter. You can use the <i>Parameter Groups</i> option of the Amazon
        Neptune console or the <i>DescribeDBParameters</i> command to verify
        that your DB parameter group has been created or modified.</p>
        </important>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateDBParameterGroupResult"
        "480":
          description: DBParameterGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupQuotaExceededFault"
        "481":
          description: DBParameterGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupAlreadyExistsFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBParameterGroupName:
                  description: <p>The name of the DB parameter group.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters,
                    numbers, or hyphens.</p> </li> <li> <p>First character must
                    be a letter</p> </li> <li> <p>Cannot end with a hyphen or
                    contain two consecutive hyphens</p> </li> </ul> <note>
                    <p>This value is stored as a lowercase string.</p> </note>
                  type: string
                DBParameterGroupFamily:
                  description: The DB parameter group family name. A DB parameter group can
                    be associated with one and only one DB parameter group
                    family, and can be applied only to a DB instance running a
                    database engine and engine version compatible with that DB
                    parameter group family.
                  type: string
                Description:
                  description: The description for the DB parameter group.
                  type: string
                Tags:
                  description: The tags to be assigned to the new DB parameter group.
                  type: array
                  items:
                    type: string
              required:
                - DBParameterGroupName
                - DBParameterGroupFamily
                - Description
  /#Action=CreateDBSubnetGroup:
    get:
      x-aws-operation-name: CreateDBSubnetGroup
      operationId: GET CreateDBSubnetGroup
      description: Creates a new DB subnet group. DB subnet groups must contain at least
        one subnet in at least two AZs in the AWS Region.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateDBSubnetGroupResult"
        "480":
          description: DBSubnetGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupAlreadyExistsFault"
        "481":
          description: DBSubnetGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupQuotaExceededFault"
        "482":
          description: DBSubnetQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetQuotaExceededFault"
        "483":
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs"
        "484":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
      parameters:
        - name: DBSubnetGroupName
          in: query
          required: true
          description: "<p>The name for the DB subnet group. This value is stored as a
            lowercase string.</p> <p>Constraints: Must contain no more than 255
            letters, numbers, periods, underscores, spaces, or hyphens. Must not
            be default.</p> <p>Example: <code>mySubnetgroup</code> </p>"
          schema:
            type: string
        - name: DBSubnetGroupDescription
          in: query
          required: true
          description: The description for the DB subnet group.
          schema:
            type: string
        - name: SubnetIds
          in: query
          required: true
          description: The EC2 Subnet IDs for the DB subnet group.
          schema:
            type: array
            items:
              type: string
        - name: Tags
          in: query
          required: false
          description: The tags to be assigned to the new DB subnet group.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateDBSubnetGroup
      operationId: POST CreateDBSubnetGroup
      description: Creates a new DB subnet group. DB subnet groups must contain at least
        one subnet in at least two AZs in the AWS Region.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateDBSubnetGroupResult"
        "480":
          description: DBSubnetGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupAlreadyExistsFault"
        "481":
          description: DBSubnetGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupQuotaExceededFault"
        "482":
          description: DBSubnetQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetQuotaExceededFault"
        "483":
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs"
        "484":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateDBSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBSubnetGroupName:
                  description: "<p>The name for the DB subnet group. This value is stored
                    as a lowercase string.</p> <p>Constraints: Must contain no
                    more than 255 letters, numbers, periods, underscores,
                    spaces, or hyphens. Must not be default.</p> <p>Example:
                    <code>mySubnetgroup</code> </p>"
                  type: string
                DBSubnetGroupDescription:
                  description: The description for the DB subnet group.
                  type: string
                SubnetIds:
                  description: The EC2 Subnet IDs for the DB subnet group.
                  type: array
                  items:
                    type: string
                Tags:
                  description: The tags to be assigned to the new DB subnet group.
                  type: array
                  items:
                    type: string
              required:
                - DBSubnetGroupName
                - DBSubnetGroupDescription
                - SubnetIds
  /#Action=CreateEventSubscription:
    get:
      x-aws-operation-name: CreateEventSubscription
      operationId: GET CreateEventSubscription
      description: <p>Creates an event notification subscription. This action requires a
        topic ARN (Amazon Resource Name) created by either the Neptune console,
        the SNS console, or the SNS API. To obtain an ARN with SNS, you must
        create a topic in Amazon SNS and subscribe to the topic. The ARN is
        displayed in the SNS console.</p> <p>You can specify the type of source
        (SourceType) you want to be notified of, provide a list of Neptune
        sources (SourceIds) that triggers the events, and provide a list of
        event categories (EventCategories) for events you want to be notified
        of. For example, you can specify SourceType = db-instance, SourceIds =
        mydbinstance1, mydbinstance2 and EventCategories = Availability,
        Backup.</p> <p>If you specify both the SourceType and SourceIds, such as
        SourceType = db-instance and SourceIdentifier = myDBInstance1, you are
        notified of all the db-instance events for the specified source. If you
        specify a SourceType but do not specify a SourceIdentifier, you receive
        notice of the events for that source type for all your Neptune sources.
        If you do not specify either the SourceType nor the SourceIdentifier,
        you are notified of events generated from all Neptune sources belonging
        to your customer account.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateEventSubscriptionResult"
        "480":
          description: EventSubscriptionQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EventSubscriptionQuotaExceededFault"
        "481":
          description: SubscriptionAlreadyExistFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionAlreadyExistFault"
        "482":
          description: SNSInvalidTopicFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SNSInvalidTopicFault"
        "483":
          description: SNSNoAuthorizationFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SNSNoAuthorizationFault"
        "484":
          description: SNSTopicArnNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SNSTopicArnNotFoundFault"
        "485":
          description: SubscriptionCategoryNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionCategoryNotFoundFault"
        "486":
          description: SourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SourceNotFoundFault"
      parameters:
        - name: SubscriptionName
          in: query
          required: true
          description: "<p>The name of the subscription.</p> <p>Constraints: The name must
            be less than 255 characters.</p>"
          schema:
            type: string
        - name: SnsTopicArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the SNS topic created for event
            notification. The ARN is created by Amazon SNS when you create a
            topic and subscribe to it.
          schema:
            type: string
        - name: SourceType
          in: query
          required: false
          description: "<p>The type of source that is generating the events. For example,
            if you want to be notified of events generated by a DB instance, you
            would set this parameter to db-instance. if this value is not
            specified, all events are returned.</p> <p>Valid values:
            <code>db-instance</code> | <code>db-cluster</code> |
            <code>db-parameter-group</code> | <code>db-security-group</code> |
            <code>db-snapshot</code> | <code>db-cluster-snapshot</code> </p>"
          schema:
            type: string
        - name: EventCategories
          in: query
          required: false
          description: " A list of event categories for a SourceType that you want to
            subscribe to. You can see a list of the categories for a given
            SourceType by using the <b>DescribeEventCategories</b> action."
          schema:
            type: array
            items:
              type: string
        - name: SourceIds
          in: query
          required: false
          description: <p>The list of identifiers of the event sources for which events are
            returned. If not specified, then all sources are included in the
            response. An identifier must begin with a letter and must contain
            only ASCII letters, digits, and hyphens; it can't end with a hyphen
            or contain two consecutive hyphens.</p> <p>Constraints:</p> <ul>
            <li> <p>If SourceIds are supplied, SourceType must also be
            provided.</p> </li> <li> <p>If the source type is a DB instance,
            then a <code>DBInstanceIdentifier</code> must be supplied.</p> </li>
            <li> <p>If the source type is a DB security group, a
            <code>DBSecurityGroupName</code> must be supplied.</p> </li> <li>
            <p>If the source type is a DB parameter group, a
            <code>DBParameterGroupName</code> must be supplied.</p> </li> <li>
            <p>If the source type is a DB snapshot, a
            <code>DBSnapshotIdentifier</code> must be supplied.</p> </li> </ul>
          schema:
            type: array
            items:
              type: string
        - name: Enabled
          in: query
          required: false
          description: " A Boolean value; set to <b>true</b> to activate the subscription,
            set to <b>false</b> to create the subscription but not active it."
          schema:
            type: boolean
        - name: Tags
          in: query
          required: false
          description: The tags to be applied to the new event subscription.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateEventSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateEventSubscription
      operationId: POST CreateEventSubscription
      description: <p>Creates an event notification subscription. This action requires a
        topic ARN (Amazon Resource Name) created by either the Neptune console,
        the SNS console, or the SNS API. To obtain an ARN with SNS, you must
        create a topic in Amazon SNS and subscribe to the topic. The ARN is
        displayed in the SNS console.</p> <p>You can specify the type of source
        (SourceType) you want to be notified of, provide a list of Neptune
        sources (SourceIds) that triggers the events, and provide a list of
        event categories (EventCategories) for events you want to be notified
        of. For example, you can specify SourceType = db-instance, SourceIds =
        mydbinstance1, mydbinstance2 and EventCategories = Availability,
        Backup.</p> <p>If you specify both the SourceType and SourceIds, such as
        SourceType = db-instance and SourceIdentifier = myDBInstance1, you are
        notified of all the db-instance events for the specified source. If you
        specify a SourceType but do not specify a SourceIdentifier, you receive
        notice of the events for that source type for all your Neptune sources.
        If you do not specify either the SourceType nor the SourceIdentifier,
        you are notified of events generated from all Neptune sources belonging
        to your customer account.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateEventSubscriptionResult"
        "480":
          description: EventSubscriptionQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EventSubscriptionQuotaExceededFault"
        "481":
          description: SubscriptionAlreadyExistFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionAlreadyExistFault"
        "482":
          description: SNSInvalidTopicFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SNSInvalidTopicFault"
        "483":
          description: SNSNoAuthorizationFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SNSNoAuthorizationFault"
        "484":
          description: SNSTopicArnNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SNSTopicArnNotFoundFault"
        "485":
          description: SubscriptionCategoryNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionCategoryNotFoundFault"
        "486":
          description: SourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SourceNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateEventSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SubscriptionName:
                  description: "<p>The name of the subscription.</p> <p>Constraints: The
                    name must be less than 255 characters.</p>"
                  type: string
                SnsTopicArn:
                  description: The Amazon Resource Name (ARN) of the SNS topic created for
                    event notification. The ARN is created by Amazon SNS when
                    you create a topic and subscribe to it.
                  type: string
                SourceType:
                  description: "<p>The type of source that is generating the events. For
                    example, if you want to be notified of events generated by a
                    DB instance, you would set this parameter to db-instance. if
                    this value is not specified, all events are returned.</p>
                    <p>Valid values: <code>db-instance</code> |
                    <code>db-cluster</code> | <code>db-parameter-group</code> |
                    <code>db-security-group</code> | <code>db-snapshot</code> |
                    <code>db-cluster-snapshot</code> </p>"
                  type: string
                EventCategories:
                  description: " A list of event categories for a SourceType that you want
                    to subscribe to. You can see a list of the categories for a
                    given SourceType by using the <b>DescribeEventCategories</b>
                    action."
                  type: array
                  items:
                    type: string
                SourceIds:
                  description: <p>The list of identifiers of the event sources for which
                    events are returned. If not specified, then all sources are
                    included in the response. An identifier must begin with a
                    letter and must contain only ASCII letters, digits, and
                    hyphens; it can't end with a hyphen or contain two
                    consecutive hyphens.</p> <p>Constraints:</p> <ul> <li> <p>If
                    SourceIds are supplied, SourceType must also be
                    provided.</p> </li> <li> <p>If the source type is a DB
                    instance, then a <code>DBInstanceIdentifier</code> must be
                    supplied.</p> </li> <li> <p>If the source type is a DB
                    security group, a <code>DBSecurityGroupName</code> must be
                    supplied.</p> </li> <li> <p>If the source type is a DB
                    parameter group, a <code>DBParameterGroupName</code> must be
                    supplied.</p> </li> <li> <p>If the source type is a DB
                    snapshot, a <code>DBSnapshotIdentifier</code> must be
                    supplied.</p> </li> </ul>
                  type: array
                  items:
                    type: string
                Enabled:
                  description: " A Boolean value; set to <b>true</b> to activate the
                    subscription, set to <b>false</b> to create the subscription
                    but not active it."
                  type: boolean
                Tags:
                  description: The tags to be applied to the new event subscription.
                  type: array
                  items:
                    type: string
              required:
                - SubscriptionName
                - SnsTopicArn
  /#Action=DeleteDBCluster:
    get:
      x-aws-operation-name: DeleteDBCluster
      operationId: GET DeleteDBCluster
      description: The DeleteDBCluster action deletes a previously provisioned DB cluster.
        When you delete a DB cluster, all automated backups for that DB cluster
        are deleted and can't be recovered. Manual DB cluster snapshots of the
        specified DB cluster are not deleted.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteDBClusterResult"
        "480":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "481":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "482":
          description: DBClusterSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotAlreadyExistsFault"
        "483":
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotQuotaExceededFault"
        "484":
          description: InvalidDBClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterSnapshotStateFault"
      parameters:
        - name: DBClusterIdentifier
          in: query
          required: true
          description: <p>The DB cluster identifier for the DB cluster to be deleted. This
            parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li>
            <p>Must match an existing DBClusterIdentifier.</p> </li> </ul>
          schema:
            type: string
        - name: SkipFinalSnapshot
          in: query
          required: false
          description: "<p> Determines whether a final DB cluster snapshot is created
            before the DB cluster is deleted. If <code>true</code> is specified,
            no DB cluster snapshot is created. If <code>false</code> is
            specified, a DB cluster snapshot is created before the DB cluster is
            deleted.</p> <note> <p>You must specify a
            <code>FinalDBSnapshotIdentifier</code> parameter if
            <code>SkipFinalSnapshot</code> is <code>false</code>.</p> </note>
            <p>Default: <code>false</code> </p>"
          schema:
            type: boolean
        - name: FinalDBSnapshotIdentifier
          in: query
          required: false
          description: <p> The DB cluster snapshot identifier of the new DB cluster
            snapshot created when <code>SkipFinalSnapshot</code> is set to
            <code>false</code>.</p> <note> <p> Specifying this parameter and
            also setting the <code>SkipFinalShapshot</code> parameter to true
            results in an error.</p> </note> <p>Constraints:</p> <ul> <li>
            <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li>
            <p>First character must be a letter</p> </li> <li> <p>Cannot end
            with a hyphen or contain two consecutive hyphens</p> </li> </ul>
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteDBCluster
      operationId: POST DeleteDBCluster
      description: The DeleteDBCluster action deletes a previously provisioned DB cluster.
        When you delete a DB cluster, all automated backups for that DB cluster
        are deleted and can't be recovered. Manual DB cluster snapshots of the
        specified DB cluster are not deleted.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteDBClusterResult"
        "480":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "481":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "482":
          description: DBClusterSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotAlreadyExistsFault"
        "483":
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotQuotaExceededFault"
        "484":
          description: InvalidDBClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterSnapshotStateFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterIdentifier:
                  description: <p>The DB cluster identifier for the DB cluster to be
                    deleted. This parameter isn't case-sensitive.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must match an existing
                    DBClusterIdentifier.</p> </li> </ul>
                  type: string
                SkipFinalSnapshot:
                  description: "<p> Determines whether a final DB cluster snapshot is
                    created before the DB cluster is deleted. If
                    <code>true</code> is specified, no DB cluster snapshot is
                    created. If <code>false</code> is specified, a DB cluster
                    snapshot is created before the DB cluster is deleted.</p>
                    <note> <p>You must specify a
                    <code>FinalDBSnapshotIdentifier</code> parameter if
                    <code>SkipFinalSnapshot</code> is <code>false</code>.</p>
                    </note> <p>Default: <code>false</code> </p>"
                  type: boolean
                FinalDBSnapshotIdentifier:
                  description: <p> The DB cluster snapshot identifier of the new DB cluster
                    snapshot created when <code>SkipFinalSnapshot</code> is set
                    to <code>false</code>.</p> <note> <p> Specifying this
                    parameter and also setting the
                    <code>SkipFinalShapshot</code> parameter to true results in
                    an error.</p> </note> <p>Constraints:</p> <ul> <li> <p>Must
                    be 1 to 255 letters, numbers, or hyphens.</p> </li> <li>
                    <p>First character must be a letter</p> </li> <li> <p>Cannot
                    end with a hyphen or contain two consecutive hyphens</p>
                    </li> </ul>
                  type: string
              required:
                - DBClusterIdentifier
  /#Action=DeleteDBClusterParameterGroup:
    get:
      x-aws-operation-name: DeleteDBClusterParameterGroup
      operationId: GET DeleteDBClusterParameterGroup
      description: Deletes a specified DB cluster parameter group. The DB cluster parameter
        group to be deleted can't be associated with any DB clusters.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidDBParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBParameterGroupStateFault"
        "481":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
      parameters:
        - name: DBClusterParameterGroupName
          in: query
          required: true
          description: <p>The name of the DB cluster parameter group.</p>
            <p>Constraints:</p> <ul> <li> <p>Must be the name of an existing DB
            cluster parameter group.</p> </li> <li> <p>You can't delete a
            default DB cluster parameter group.</p> </li> <li> <p>Cannot be
            associated with any DB clusters.</p> </li> </ul>
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteDBClusterParameterGroup
      operationId: POST DeleteDBClusterParameterGroup
      description: Deletes a specified DB cluster parameter group. The DB cluster parameter
        group to be deleted can't be associated with any DB clusters.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidDBParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBParameterGroupStateFault"
        "481":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterParameterGroupName:
                  description: <p>The name of the DB cluster parameter group.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must be the name of an
                    existing DB cluster parameter group.</p> </li> <li> <p>You
                    can't delete a default DB cluster parameter group.</p> </li>
                    <li> <p>Cannot be associated with any DB clusters.</p> </li>
                    </ul>
                  type: string
              required:
                - DBClusterParameterGroupName
  /#Action=DeleteDBClusterSnapshot:
    get:
      x-aws-operation-name: DeleteDBClusterSnapshot
      operationId: GET DeleteDBClusterSnapshot
      description: <p>Deletes a DB cluster snapshot. If the snapshot is being copied, the
        copy operation is terminated.</p> <note> <p>The DB cluster snapshot must
        be in the <code>available</code> state to be deleted.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteDBClusterSnapshotResult"
        "480":
          description: InvalidDBClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterSnapshotStateFault"
        "481":
          description: DBClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotNotFoundFault"
      parameters:
        - name: DBClusterSnapshotIdentifier
          in: query
          required: true
          description: "<p>The identifier of the DB cluster snapshot to delete.</p>
            <p>Constraints: Must be the name of an existing DB cluster snapshot
            in the <code>available</code> state.</p>"
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteDBClusterSnapshot
      operationId: POST DeleteDBClusterSnapshot
      description: <p>Deletes a DB cluster snapshot. If the snapshot is being copied, the
        copy operation is terminated.</p> <note> <p>The DB cluster snapshot must
        be in the <code>available</code> state to be deleted.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteDBClusterSnapshotResult"
        "480":
          description: InvalidDBClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterSnapshotStateFault"
        "481":
          description: DBClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterSnapshotIdentifier:
                  description: "<p>The identifier of the DB cluster snapshot to delete.</p>
                    <p>Constraints: Must be the name of an existing DB cluster
                    snapshot in the <code>available</code> state.</p>"
                  type: string
              required:
                - DBClusterSnapshotIdentifier
  /#Action=DeleteDBInstance:
    get:
      x-aws-operation-name: DeleteDBInstance
      operationId: GET DeleteDBInstance
      description: <p>The DeleteDBInstance action deletes a previously provisioned DB
        instance. When you delete a DB instance, all automated backups for that
        instance are deleted and can't be recovered. Manual DB snapshots of the
        DB instance to be deleted by <code>DeleteDBInstance</code> are not
        deleted.</p> <p> If you request a final DB snapshot the status of the
        Amazon Neptune DB instance is <code>deleting</code> until the DB
        snapshot is created. The API action <code>DescribeDBInstance</code> is
        used to monitor the status of this operation. The action can't be
        canceled or reverted once submitted.</p> <p>Note that when a DB instance
        is in a failure state and has a status of <code>failed</code>,
        <code>incompatible-restore</code>, or <code>incompatible-network</code>,
        you can only delete it when the <code>SkipFinalSnapshot</code> parameter
        is set to <code>true</code>.</p> <p>You can't delete a DB instance if it
        is the only instance in the DB cluster.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteDBInstanceResult"
        "480":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
        "481":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
        "482":
          description: DBSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSnapshotAlreadyExistsFault"
        "483":
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotQuotaExceededFault"
        "484":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: true
          description: <p>The DB instance identifier for the DB instance to be deleted.
            This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul>
            <li> <p>Must match the name of an existing DB instance.</p> </li>
            </ul>
          schema:
            type: string
        - name: SkipFinalSnapshot
          in: query
          required: false
          description: "<p> Determines whether a final DB snapshot is created before the DB
            instance is deleted. If <code>true</code> is specified, no
            DBSnapshot is created. If <code>false</code> is specified, a DB
            snapshot is created before the DB instance is deleted.</p> <p>Note
            that when a DB instance is in a failure state and has a status of
            'failed', 'incompatible-restore', or 'incompatible-network', it can
            only be deleted when the SkipFinalSnapshot parameter is set to
            \"true\".</p> <p>Specify <code>true</code> when deleting a Read
            Replica.</p> <note> <p>The FinalDBSnapshotIdentifier parameter must
            be specified if SkipFinalSnapshot is <code>false</code>.</p> </note>
            <p>Default: <code>false</code> </p>"
          schema:
            type: boolean
        - name: FinalDBSnapshotIdentifier
          in: query
          required: false
          description: <p> The DBSnapshotIdentifier of the new DBSnapshot created when
            SkipFinalSnapshot is set to <code>false</code>.</p> <note>
            <p>Specifying this parameter and also setting the SkipFinalShapshot
            parameter to true results in an error.</p> </note>
            <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters or
            numbers.</p> </li> <li> <p>First character must be a letter</p>
            </li> <li> <p>Cannot end with a hyphen or contain two consecutive
            hyphens</p> </li> <li> <p>Cannot be specified when deleting a Read
            Replica.</p> </li> </ul>
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBInstance
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteDBInstance
      operationId: POST DeleteDBInstance
      description: <p>The DeleteDBInstance action deletes a previously provisioned DB
        instance. When you delete a DB instance, all automated backups for that
        instance are deleted and can't be recovered. Manual DB snapshots of the
        DB instance to be deleted by <code>DeleteDBInstance</code> are not
        deleted.</p> <p> If you request a final DB snapshot the status of the
        Amazon Neptune DB instance is <code>deleting</code> until the DB
        snapshot is created. The API action <code>DescribeDBInstance</code> is
        used to monitor the status of this operation. The action can't be
        canceled or reverted once submitted.</p> <p>Note that when a DB instance
        is in a failure state and has a status of <code>failed</code>,
        <code>incompatible-restore</code>, or <code>incompatible-network</code>,
        you can only delete it when the <code>SkipFinalSnapshot</code> parameter
        is set to <code>true</code>.</p> <p>You can't delete a DB instance if it
        is the only instance in the DB cluster.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteDBInstanceResult"
        "480":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
        "481":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
        "482":
          description: DBSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSnapshotAlreadyExistsFault"
        "483":
          description: SnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotQuotaExceededFault"
        "484":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBInstance
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBInstanceIdentifier:
                  description: <p>The DB instance identifier for the DB instance to be
                    deleted. This parameter isn't case-sensitive.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must match the name of an
                    existing DB instance.</p> </li> </ul>
                  type: string
                SkipFinalSnapshot:
                  description: "<p> Determines whether a final DB snapshot is created
                    before the DB instance is deleted. If <code>true</code> is
                    specified, no DBSnapshot is created. If <code>false</code>
                    is specified, a DB snapshot is created before the DB
                    instance is deleted.</p> <p>Note that when a DB instance is
                    in a failure state and has a status of 'failed',
                    'incompatible-restore', or 'incompatible-network', it can
                    only be deleted when the SkipFinalSnapshot parameter is set
                    to \"true\".</p> <p>Specify <code>true</code> when deleting
                    a Read Replica.</p> <note> <p>The FinalDBSnapshotIdentifier
                    parameter must be specified if SkipFinalSnapshot is
                    <code>false</code>.</p> </note> <p>Default:
                    <code>false</code> </p>"
                  type: boolean
                FinalDBSnapshotIdentifier:
                  description: <p> The DBSnapshotIdentifier of the new DBSnapshot created
                    when SkipFinalSnapshot is set to <code>false</code>.</p>
                    <note> <p>Specifying this parameter and also setting the
                    SkipFinalShapshot parameter to true results in an error.</p>
                    </note> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255
                    letters or numbers.</p> </li> <li> <p>First character must
                    be a letter</p> </li> <li> <p>Cannot end with a hyphen or
                    contain two consecutive hyphens</p> </li> <li> <p>Cannot be
                    specified when deleting a Read Replica.</p> </li> </ul>
                  type: string
              required:
                - DBInstanceIdentifier
  /#Action=DeleteDBParameterGroup:
    get:
      x-aws-operation-name: DeleteDBParameterGroup
      operationId: GET DeleteDBParameterGroup
      description: Deletes a specified DBParameterGroup. The DBParameterGroup to be deleted
        can't be associated with any DB instances.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidDBParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBParameterGroupStateFault"
        "481":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
      parameters:
        - name: DBParameterGroupName
          in: query
          required: true
          description: <p>The name of the DB parameter group.</p> <p>Constraints:</p> <ul>
            <li> <p>Must be the name of an existing DB parameter group</p> </li>
            <li> <p>You can't delete a default DB parameter group</p> </li> <li>
            <p>Cannot be associated with any DB instances</p> </li> </ul>
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteDBParameterGroup
      operationId: POST DeleteDBParameterGroup
      description: Deletes a specified DBParameterGroup. The DBParameterGroup to be deleted
        can't be associated with any DB instances.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidDBParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBParameterGroupStateFault"
        "481":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBParameterGroupName:
                  description: <p>The name of the DB parameter group.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must be the name of an
                    existing DB parameter group</p> </li> <li> <p>You can't
                    delete a default DB parameter group</p> </li> <li> <p>Cannot
                    be associated with any DB instances</p> </li> </ul>
                  type: string
              required:
                - DBParameterGroupName
  /#Action=DeleteDBSubnetGroup:
    get:
      x-aws-operation-name: DeleteDBSubnetGroup
      operationId: GET DeleteDBSubnetGroup
      description: <p>Deletes a DB subnet group.</p> <note> <p>The specified database
        subnet group must not be associated with any DB instances.</p> </note>
      responses:
        "200":
          description: Success
        "480":
          description: InvalidDBSubnetGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSubnetGroupStateFault"
        "481":
          description: InvalidDBSubnetStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSubnetStateFault"
        "482":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
      parameters:
        - name: DBSubnetGroupName
          in: query
          required: true
          description: "<p>The name of the database subnet group to delete.</p> <note>
            <p>You can't delete the default subnet group.</p> </note>
            <p>Constraints:</p> <p>Constraints: Must match the name of an
            existing DBSubnetGroup. Must not be default.</p> <p>Example:
            <code>mySubnetgroup</code> </p>"
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteDBSubnetGroup
      operationId: POST DeleteDBSubnetGroup
      description: <p>Deletes a DB subnet group.</p> <note> <p>The specified database
        subnet group must not be associated with any DB instances.</p> </note>
      responses:
        "200":
          description: Success
        "480":
          description: InvalidDBSubnetGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSubnetGroupStateFault"
        "481":
          description: InvalidDBSubnetStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSubnetStateFault"
        "482":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteDBSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBSubnetGroupName:
                  description: "<p>The name of the database subnet group to delete.</p>
                    <note> <p>You can't delete the default subnet group.</p>
                    </note> <p>Constraints:</p> <p>Constraints: Must match the
                    name of an existing DBSubnetGroup. Must not be default.</p>
                    <p>Example: <code>mySubnetgroup</code> </p>"
                  type: string
              required:
                - DBSubnetGroupName
  /#Action=DeleteEventSubscription:
    get:
      x-aws-operation-name: DeleteEventSubscription
      operationId: GET DeleteEventSubscription
      description: Deletes an event notification subscription.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteEventSubscriptionResult"
        "480":
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionNotFoundFault"
        "481":
          description: InvalidEventSubscriptionStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidEventSubscriptionStateFault"
      parameters:
        - name: SubscriptionName
          in: query
          required: true
          description: The name of the event notification subscription you want to delete.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteEventSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteEventSubscription
      operationId: POST DeleteEventSubscription
      description: Deletes an event notification subscription.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteEventSubscriptionResult"
        "480":
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionNotFoundFault"
        "481":
          description: InvalidEventSubscriptionStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidEventSubscriptionStateFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteEventSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SubscriptionName:
                  description: The name of the event notification subscription you want to
                    delete.
                  type: string
              required:
                - SubscriptionName
  /#Action=DescribeDBClusterParameterGroups:
    get:
      x-aws-operation-name: DescribeDBClusterParameterGroups
      operationId: GET DescribeDBClusterParameterGroups
      description: " Returns a list of <code>DBClusterParameterGroup</code> descriptions.
        If a <code>DBClusterParameterGroupName</code> parameter is specified,
        the list will contain only the description of the specified DB cluster
        parameter group."
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterParameterGroupsMessage"
        "480":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
      parameters:
        - name: DBClusterParameterGroupName
          in: query
          required: false
          description: <p>The name of a specific DB cluster parameter group to return
            details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must
            match the name of an existing DBClusterParameterGroup.</p> </li>
            </ul>
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: This parameter is not currently supported.
          schema:
            type: array
            items:
              type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p> The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a pagination token called a marker is included in the response so
            that the remaining results can be retrieved.</p> <p>Default: 100</p>
            <p>Constraints: Minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: " An optional pagination token provided by a previous
            <code>DescribeDBClusterParameterGroups</code> request. If this
            parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>."
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBClusterParameterGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeDBClusterParameterGroups
      operationId: POST DescribeDBClusterParameterGroups
      description: " Returns a list of <code>DBClusterParameterGroup</code> descriptions.
        If a <code>DBClusterParameterGroupName</code> parameter is specified,
        the list will contain only the description of the specified DB cluster
        parameter group."
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterParameterGroupsMessage"
        "480":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBClusterParameterGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterParameterGroupName:
                  description: <p>The name of a specific DB cluster parameter group to
                    return details for.</p> <p>Constraints:</p> <ul> <li> <p>If
                    supplied, must match the name of an existing
                    DBClusterParameterGroup.</p> </li> </ul>
                  type: string
                Filters:
                  description: This parameter is not currently supported.
                  type: array
                  items:
                    type: string
                MaxRecords:
                  description: "<p> The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a pagination token called a
                    marker is included in the response so that the remaining
                    results can be retrieved.</p> <p>Default: 100</p>
                    <p>Constraints: Minimum 20, maximum 100.</p>"
                  type: integer
                Marker:
                  description: " An optional pagination token provided by a previous
                    <code>DescribeDBClusterParameterGroups</code> request. If
                    this parameter is specified, the response includes only
                    records beyond the marker, up to the value specified by
                    <code>MaxRecords</code>."
                  type: string
  /#Action=DescribeDBClusterParameters:
    get:
      x-aws-operation-name: DescribeDBClusterParameters
      operationId: GET DescribeDBClusterParameters
      description: Returns the detailed parameter list for a particular DB cluster
        parameter group.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterParameterGroupDetails"
        "480":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
      parameters:
        - name: DBClusterParameterGroupName
          in: query
          required: true
          description: <p>The name of a specific DB cluster parameter group to return
            parameter details for.</p> <p>Constraints:</p> <ul> <li> <p>If
            supplied, must match the name of an existing
            DBClusterParameterGroup.</p> </li> </ul>
          schema:
            type: string
        - name: Source
          in: query
          required: false
          description: " A value that indicates to return only parameters for a specific
            source. Parameter sources can be <code>engine</code>,
            <code>service</code>, or <code>customer</code>."
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: This parameter is not currently supported.
          schema:
            type: array
            items:
              type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p> The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a pagination token called a marker is included in the response so
            that the remaining results can be retrieved.</p> <p>Default: 100</p>
            <p>Constraints: Minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: " An optional pagination token provided by a previous
            <code>DescribeDBClusterParameters</code> request. If this parameter
            is specified, the response includes only records beyond the marker,
            up to the value specified by <code>MaxRecords</code>. "
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBClusterParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeDBClusterParameters
      operationId: POST DescribeDBClusterParameters
      description: Returns the detailed parameter list for a particular DB cluster
        parameter group.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterParameterGroupDetails"
        "480":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBClusterParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterParameterGroupName:
                  description: <p>The name of a specific DB cluster parameter group to
                    return parameter details for.</p> <p>Constraints:</p> <ul>
                    <li> <p>If supplied, must match the name of an existing
                    DBClusterParameterGroup.</p> </li> </ul>
                  type: string
                Source:
                  description: " A value that indicates to return only parameters for a
                    specific source. Parameter sources can be
                    <code>engine</code>, <code>service</code>, or
                    <code>customer</code>."
                  type: string
                Filters:
                  description: This parameter is not currently supported.
                  type: array
                  items:
                    type: string
                MaxRecords:
                  description: "<p> The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a pagination token called a
                    marker is included in the response so that the remaining
                    results can be retrieved.</p> <p>Default: 100</p>
                    <p>Constraints: Minimum 20, maximum 100.</p>"
                  type: integer
                Marker:
                  description: " An optional pagination token provided by a previous
                    <code>DescribeDBClusterParameters</code> request. If this
                    parameter is specified, the response includes only records
                    beyond the marker, up to the value specified by
                    <code>MaxRecords</code>. "
                  type: string
              required:
                - DBClusterParameterGroupName
  /#Action=DescribeDBClusterSnapshotAttributes:
    get:
      x-aws-operation-name: DescribeDBClusterSnapshotAttributes
      operationId: GET DescribeDBClusterSnapshotAttributes
      description: <p>Returns a list of DB cluster snapshot attribute names and values for
        a manual DB cluster snapshot.</p> <p>When sharing snapshots with other
        AWS accounts, <code>DescribeDBClusterSnapshotAttributes</code> returns
        the <code>restore</code> attribute and a list of IDs for the AWS
        accounts that are authorized to copy or restore the manual DB cluster
        snapshot. If <code>all</code> is included in the list of values for the
        <code>restore</code> attribute, then the manual DB cluster snapshot is
        public and can be copied or restored by all AWS accounts.</p> <p>To add
        or remove access for an AWS account to copy or restore a manual DB
        cluster snapshot, or to make the manual DB cluster snapshot public or
        private, use the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeDBClusterSnapshotAttributesResu\
                  lt"
        "480":
          description: DBClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotNotFoundFault"
      parameters:
        - name: DBClusterSnapshotIdentifier
          in: query
          required: true
          description: The identifier for the DB cluster snapshot to describe the
            attributes for.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBClusterSnapshotAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeDBClusterSnapshotAttributes
      operationId: POST DescribeDBClusterSnapshotAttributes
      description: <p>Returns a list of DB cluster snapshot attribute names and values for
        a manual DB cluster snapshot.</p> <p>When sharing snapshots with other
        AWS accounts, <code>DescribeDBClusterSnapshotAttributes</code> returns
        the <code>restore</code> attribute and a list of IDs for the AWS
        accounts that are authorized to copy or restore the manual DB cluster
        snapshot. If <code>all</code> is included in the list of values for the
        <code>restore</code> attribute, then the manual DB cluster snapshot is
        public and can be copied or restored by all AWS accounts.</p> <p>To add
        or remove access for an AWS account to copy or restore a manual DB
        cluster snapshot, or to make the manual DB cluster snapshot public or
        private, use the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeDBClusterSnapshotAttributesResu\
                  lt"
        "480":
          description: DBClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBClusterSnapshotAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterSnapshotIdentifier:
                  description: The identifier for the DB cluster snapshot to describe the
                    attributes for.
                  type: string
              required:
                - DBClusterSnapshotIdentifier
  /#Action=DescribeDBClusterSnapshots:
    get:
      x-aws-operation-name: DescribeDBClusterSnapshots
      operationId: GET DescribeDBClusterSnapshots
      description: Returns information about DB cluster snapshots. This API action supports
        pagination.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotMessage"
        "480":
          description: DBClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotNotFoundFault"
      parameters:
        - name: DBClusterIdentifier
          in: query
          required: false
          description: <p>The ID of the DB cluster to retrieve the list of DB cluster
            snapshots for. This parameter can't be used in conjunction with the
            <code>DBClusterSnapshotIdentifier</code> parameter. This parameter
            is not case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>If
            supplied, must match the identifier of an existing DBCluster.</p>
            </li> </ul>
          schema:
            type: string
        - name: DBClusterSnapshotIdentifier
          in: query
          required: false
          description: <p>A specific DB cluster snapshot identifier to describe. This
            parameter can't be used in conjunction with the
            <code>DBClusterIdentifier</code> parameter. This value is stored as
            a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>If
            supplied, must match the identifier of an existing
            DBClusterSnapshot.</p> </li> <li> <p>If this identifier is for an
            automated snapshot, the <code>SnapshotType</code> parameter must
            also be specified.</p> </li> </ul>
          schema:
            type: string
        - name: SnapshotType
          in: query
          required: false
          description: <p>The type of DB cluster snapshots to be returned. You can specify
            one of the following values:</p> <ul> <li> <p>
            <code>automated</code> - Return all DB cluster snapshots that have
            been automatically taken by Amazon Neptune for my AWS account.</p>
            </li> <li> <p> <code>manual</code> - Return all DB cluster snapshots
            that have been taken by my AWS account.</p> </li> <li> <p>
            <code>shared</code> - Return all manual DB cluster snapshots that
            have been shared to my AWS account.</p> </li> <li> <p>
            <code>public</code> - Return all DB cluster snapshots that have been
            marked as public.</p> </li> </ul> <p>If you don't specify a
            <code>SnapshotType</code> value, then both automated and manual DB
            cluster snapshots are returned. You can include shared DB cluster
            snapshots with these results by setting the
            <code>IncludeShared</code> parameter to <code>true</code>. You can
            include public DB cluster snapshots with these results by setting
            the <code>IncludePublic</code> parameter to <code>true</code>.</p>
            <p>The <code>IncludeShared</code> and <code>IncludePublic</code>
            parameters don't apply for <code>SnapshotType</code> values of
            <code>manual</code> or <code>automated</code>. The
            <code>IncludePublic</code> parameter doesn't apply when
            <code>SnapshotType</code> is set to <code>shared</code>. The
            <code>IncludeShared</code> parameter doesn't apply when
            <code>SnapshotType</code> is set to <code>public</code>.</p>
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: This parameter is not currently supported.
          schema:
            type: array
            items:
              type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a pagination token called a marker is included in the response so
            that the remaining results can be retrieved.</p> <p>Default: 100</p>
            <p>Constraints: Minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: "An optional pagination token provided by a previous
            <code>DescribeDBClusterSnapshots</code> request. If this parameter
            is specified, the response includes only records beyond the marker,
            up to the value specified by <code>MaxRecords</code>. "
          schema:
            type: string
        - name: IncludeShared
          in: query
          required: false
          description: <p>True to include shared manual DB cluster snapshots from other AWS
            accounts that this AWS account has been given permission to copy or
            restore, and otherwise false. The default is <code>false</code>.</p>
            <p>You can give an AWS account permission to restore a manual DB
            cluster snapshot from another AWS account by the
            <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>
          schema:
            type: boolean
        - name: IncludePublic
          in: query
          required: false
          description: <p>True to include manual DB cluster snapshots that are public and
            can be copied or restored by any AWS account, and otherwise false.
            The default is <code>false</code>. The default is false.</p> <p>You
            can share a manual DB cluster snapshot as public by using the
            <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBClusterSnapshots
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeDBClusterSnapshots
      operationId: POST DescribeDBClusterSnapshots
      description: Returns information about DB cluster snapshots. This API action supports
        pagination.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotMessage"
        "480":
          description: DBClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBClusterSnapshots
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterIdentifier:
                  description: <p>The ID of the DB cluster to retrieve the list of DB
                    cluster snapshots for. This parameter can't be used in
                    conjunction with the
                    <code>DBClusterSnapshotIdentifier</code> parameter. This
                    parameter is not case-sensitive.</p> <p>Constraints:</p>
                    <ul> <li> <p>If supplied, must match the identifier of an
                    existing DBCluster.</p> </li> </ul>
                  type: string
                DBClusterSnapshotIdentifier:
                  description: <p>A specific DB cluster snapshot identifier to describe.
                    This parameter can't be used in conjunction with the
                    <code>DBClusterIdentifier</code> parameter. This value is
                    stored as a lowercase string.</p> <p>Constraints:</p> <ul>
                    <li> <p>If supplied, must match the identifier of an
                    existing DBClusterSnapshot.</p> </li> <li> <p>If this
                    identifier is for an automated snapshot, the
                    <code>SnapshotType</code> parameter must also be
                    specified.</p> </li> </ul>
                  type: string
                SnapshotType:
                  description: <p>The type of DB cluster snapshots to be returned. You can
                    specify one of the following values:</p> <ul> <li> <p>
                    <code>automated</code> - Return all DB cluster snapshots
                    that have been automatically taken by Amazon Neptune for my
                    AWS account.</p> </li> <li> <p> <code>manual</code> - Return
                    all DB cluster snapshots that have been taken by my AWS
                    account.</p> </li> <li> <p> <code>shared</code> - Return all
                    manual DB cluster snapshots that have been shared to my AWS
                    account.</p> </li> <li> <p> <code>public</code> - Return all
                    DB cluster snapshots that have been marked as public.</p>
                    </li> </ul> <p>If you don't specify a
                    <code>SnapshotType</code> value, then both automated and
                    manual DB cluster snapshots are returned. You can include
                    shared DB cluster snapshots with these results by setting
                    the <code>IncludeShared</code> parameter to
                    <code>true</code>. You can include public DB cluster
                    snapshots with these results by setting the
                    <code>IncludePublic</code> parameter to
                    <code>true</code>.</p> <p>The <code>IncludeShared</code> and
                    <code>IncludePublic</code> parameters don't apply for
                    <code>SnapshotType</code> values of <code>manual</code> or
                    <code>automated</code>. The <code>IncludePublic</code>
                    parameter doesn't apply when <code>SnapshotType</code> is
                    set to <code>shared</code>. The <code>IncludeShared</code>
                    parameter doesn't apply when <code>SnapshotType</code> is
                    set to <code>public</code>.</p>
                  type: string
                Filters:
                  description: This parameter is not currently supported.
                  type: array
                  items:
                    type: string
                MaxRecords:
                  description: "<p>The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a pagination token called a
                    marker is included in the response so that the remaining
                    results can be retrieved.</p> <p>Default: 100</p>
                    <p>Constraints: Minimum 20, maximum 100.</p>"
                  type: integer
                Marker:
                  description: "An optional pagination token provided by a previous
                    <code>DescribeDBClusterSnapshots</code> request. If this
                    parameter is specified, the response includes only records
                    beyond the marker, up to the value specified by
                    <code>MaxRecords</code>. "
                  type: string
                IncludeShared:
                  description: <p>True to include shared manual DB cluster snapshots from
                    other AWS accounts that this AWS account has been given
                    permission to copy or restore, and otherwise false. The
                    default is <code>false</code>.</p> <p>You can give an AWS
                    account permission to restore a manual DB cluster snapshot
                    from another AWS account by the
                    <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>
                  type: boolean
                IncludePublic:
                  description: <p>True to include manual DB cluster snapshots that are
                    public and can be copied or restored by any AWS account, and
                    otherwise false. The default is <code>false</code>. The
                    default is false.</p> <p>You can share a manual DB cluster
                    snapshot as public by using the
                    <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>
                  type: boolean
  /#Action=DescribeDBClusters:
    get:
      x-aws-operation-name: DescribeDBClusters
      operationId: GET DescribeDBClusters
      description: Returns information about provisioned DB clusters. This API supports
        pagination.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterMessage"
        "480":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
      parameters:
        - name: DBClusterIdentifier
          in: query
          required: false
          description: <p>The user-supplied DB cluster identifier. If this parameter is
            specified, information from only the specific DB cluster is
            returned. This parameter isn't case-sensitive.</p>
            <p>Constraints:</p> <ul> <li> <p>If supplied, must match an existing
            DBClusterIdentifier.</p> </li> </ul>
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: <p>A filter that specifies one or more DB clusters to describe.</p>
            <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code> -
            Accepts DB cluster identifiers and DB cluster Amazon Resource Names
            (ARNs). The results list will only include information about the DB
            clusters identified by these ARNs.</p> </li> </ul>
          schema:
            type: array
            items:
              type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a pagination token called a marker is included in the response so
            that the remaining results can be retrieved.</p> <p>Default: 100</p>
            <p>Constraints: Minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: An optional pagination token provided by a previous
            <a>DescribeDBClusters</a> request. If this parameter is specified,
            the response includes only records beyond the marker, up to the
            value specified by <code>MaxRecords</code>.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBClusters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeDBClusters
      operationId: POST DescribeDBClusters
      description: Returns information about provisioned DB clusters. This API supports
        pagination.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterMessage"
        "480":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBClusters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterIdentifier:
                  description: <p>The user-supplied DB cluster identifier. If this
                    parameter is specified, information from only the specific
                    DB cluster is returned. This parameter isn't
                    case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>If
                    supplied, must match an existing DBClusterIdentifier.</p>
                    </li> </ul>
                  type: string
                Filters:
                  description: <p>A filter that specifies one or more DB clusters to
                    describe.</p> <p>Supported filters:</p> <ul> <li> <p>
                    <code>db-cluster-id</code> - Accepts DB cluster identifiers
                    and DB cluster Amazon Resource Names (ARNs). The results
                    list will only include information about the DB clusters
                    identified by these ARNs.</p> </li> </ul>
                  type: array
                  items:
                    type: string
                MaxRecords:
                  description: "<p>The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a pagination token called a
                    marker is included in the response so that the remaining
                    results can be retrieved.</p> <p>Default: 100</p>
                    <p>Constraints: Minimum 20, maximum 100.</p>"
                  type: integer
                Marker:
                  description: An optional pagination token provided by a previous
                    <a>DescribeDBClusters</a> request. If this parameter is
                    specified, the response includes only records beyond the
                    marker, up to the value specified by
                    <code>MaxRecords</code>.
                  type: string
  /#Action=DescribeDBEngineVersions:
    get:
      x-aws-operation-name: DescribeDBEngineVersions
      operationId: GET DescribeDBEngineVersions
      description: Returns a list of the available DB engines.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBEngineVersionMessage"
      parameters:
        - name: Engine
          in: query
          required: false
          description: The database engine to return.
          schema:
            type: string
        - name: EngineVersion
          in: query
          required: false
          description: "<p>The database engine version to return.</p> <p>Example:
            <code>5.1.49</code> </p>"
          schema:
            type: string
        - name: DBParameterGroupFamily
          in: query
          required: false
          description: <p>The name of a specific DB parameter group family to return
            details for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must
            match an existing DBParameterGroupFamily.</p> </li> </ul>
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: Not currently supported.
          schema:
            type: array
            items:
              type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p> The maximum number of records to include in the response. If
            more than the <code>MaxRecords</code> value is available, a
            pagination token called a marker is included in the response so that
            the following results can be retrieved.</p> <p>Default: 100</p>
            <p>Constraints: Minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: " An optional pagination token provided by a previous request. If
            this parameter is specified, the response includes only records
            beyond the marker, up to the value specified by
            <code>MaxRecords</code>."
          schema:
            type: string
        - name: DefaultOnly
          in: query
          required: false
          description: Indicates that only the default version of the specified engine or
            engine and major version combination is returned.
          schema:
            type: boolean
        - name: ListSupportedCharacterSets
          in: query
          required: false
          description: If this parameter is specified and the requested engine supports the
            <code>CharacterSetName</code> parameter for
            <code>CreateDBInstance</code>, the response includes a list of
            supported character sets for each engine version.
          schema:
            type: boolean
        - name: ListSupportedTimezones
          in: query
          required: false
          description: If this parameter is specified and the requested engine supports the
            <code>TimeZone</code> parameter for <code>CreateDBInstance</code>,
            the response includes a list of supported time zones for each engine
            version.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBEngineVersions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeDBEngineVersions
      operationId: POST DescribeDBEngineVersions
      description: Returns a list of the available DB engines.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBEngineVersionMessage"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBEngineVersions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Engine:
                  description: The database engine to return.
                  type: string
                EngineVersion:
                  description: "<p>The database engine version to return.</p> <p>Example:
                    <code>5.1.49</code> </p>"
                  type: string
                DBParameterGroupFamily:
                  description: <p>The name of a specific DB parameter group family to
                    return details for.</p> <p>Constraints:</p> <ul> <li> <p>If
                    supplied, must match an existing DBParameterGroupFamily.</p>
                    </li> </ul>
                  type: string
                Filters:
                  description: Not currently supported.
                  type: array
                  items:
                    type: string
                MaxRecords:
                  description: "<p> The maximum number of records to include in the
                    response. If more than the <code>MaxRecords</code> value is
                    available, a pagination token called a marker is included in
                    the response so that the following results can be
                    retrieved.</p> <p>Default: 100</p> <p>Constraints: Minimum
                    20, maximum 100.</p>"
                  type: integer
                Marker:
                  description: " An optional pagination token provided by a previous
                    request. If this parameter is specified, the response
                    includes only records beyond the marker, up to the value
                    specified by <code>MaxRecords</code>."
                  type: string
                DefaultOnly:
                  description: Indicates that only the default version of the specified
                    engine or engine and major version combination is returned.
                  type: boolean
                ListSupportedCharacterSets:
                  description: If this parameter is specified and the requested engine
                    supports the <code>CharacterSetName</code> parameter for
                    <code>CreateDBInstance</code>, the response includes a list
                    of supported character sets for each engine version.
                  type: boolean
                ListSupportedTimezones:
                  description: If this parameter is specified and the requested engine
                    supports the <code>TimeZone</code> parameter for
                    <code>CreateDBInstance</code>, the response includes a list
                    of supported time zones for each engine version.
                  type: boolean
  /#Action=DescribeDBInstances:
    get:
      x-aws-operation-name: DescribeDBInstances
      operationId: GET DescribeDBInstances
      description: Returns information about provisioned instances. This API supports
        pagination.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceMessage"
        "480":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: false
          description: <p>The user-supplied instance identifier. If this parameter is
            specified, information from only the specific DB instance is
            returned. This parameter isn't case-sensitive.</p>
            <p>Constraints:</p> <ul> <li> <p>If supplied, must match the
            identifier of an existing DBInstance.</p> </li> </ul>
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: <p>A filter that specifies one or more DB instances to describe.</p>
            <p>Supported filters:</p> <ul> <li> <p> <code>db-cluster-id</code> -
            Accepts DB cluster identifiers and DB cluster Amazon Resource Names
            (ARNs). The results list will only include information about the DB
            instances associated with the DB clusters identified by these
            ARNs.</p> </li> <li> <p> <code>db-instance-id</code> - Accepts DB
            instance identifiers and DB instance Amazon Resource Names (ARNs).
            The results list will only include information about the DB
            instances identified by these ARNs.</p> </li> </ul>
          schema:
            type: array
            items:
              type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p> The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a pagination token called a marker is included in the response so
            that the remaining results can be retrieved.</p> <p>Default: 100</p>
            <p>Constraints: Minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: " An optional pagination token provided by a previous
            <code>DescribeDBInstances</code> request. If this parameter is
            specified, the response includes only records beyond the marker, up
            to the value specified by <code>MaxRecords</code>."
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBInstances
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeDBInstances
      operationId: POST DescribeDBInstances
      description: Returns information about provisioned instances. This API supports
        pagination.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceMessage"
        "480":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBInstances
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBInstanceIdentifier:
                  description: <p>The user-supplied instance identifier. If this parameter
                    is specified, information from only the specific DB instance
                    is returned. This parameter isn't case-sensitive.</p>
                    <p>Constraints:</p> <ul> <li> <p>If supplied, must match the
                    identifier of an existing DBInstance.</p> </li> </ul>
                  type: string
                Filters:
                  description: <p>A filter that specifies one or more DB instances to
                    describe.</p> <p>Supported filters:</p> <ul> <li> <p>
                    <code>db-cluster-id</code> - Accepts DB cluster identifiers
                    and DB cluster Amazon Resource Names (ARNs). The results
                    list will only include information about the DB instances
                    associated with the DB clusters identified by these
                    ARNs.</p> </li> <li> <p> <code>db-instance-id</code> -
                    Accepts DB instance identifiers and DB instance Amazon
                    Resource Names (ARNs). The results list will only include
                    information about the DB instances identified by these
                    ARNs.</p> </li> </ul>
                  type: array
                  items:
                    type: string
                MaxRecords:
                  description: "<p> The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a pagination token called a
                    marker is included in the response so that the remaining
                    results can be retrieved.</p> <p>Default: 100</p>
                    <p>Constraints: Minimum 20, maximum 100.</p>"
                  type: integer
                Marker:
                  description: " An optional pagination token provided by a previous
                    <code>DescribeDBInstances</code> request. If this parameter
                    is specified, the response includes only records beyond the
                    marker, up to the value specified by
                    <code>MaxRecords</code>."
                  type: string
  /#Action=DescribeDBParameterGroups:
    get:
      x-aws-operation-name: DescribeDBParameterGroups
      operationId: GET DescribeDBParameterGroups
      description: Returns a list of <code>DBParameterGroup</code> descriptions. If a
        <code>DBParameterGroupName</code> is specified, the list will contain
        only the description of the specified DB parameter group.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupsMessage"
        "480":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
      parameters:
        - name: DBParameterGroupName
          in: query
          required: false
          description: <p>The name of a specific DB parameter group to return details
            for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match
            the name of an existing DBClusterParameterGroup.</p> </li> </ul>
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: This parameter is not currently supported.
          schema:
            type: array
            items:
              type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a pagination token called a marker is included in the response so
            that the remaining results can be retrieved.</p> <p>Default: 100</p>
            <p>Constraints: Minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: An optional pagination token provided by a previous
            <code>DescribeDBParameterGroups</code> request. If this parameter is
            specified, the response includes only records beyond the marker, up
            to the value specified by <code>MaxRecords</code>.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBParameterGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeDBParameterGroups
      operationId: POST DescribeDBParameterGroups
      description: Returns a list of <code>DBParameterGroup</code> descriptions. If a
        <code>DBParameterGroupName</code> is specified, the list will contain
        only the description of the specified DB parameter group.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupsMessage"
        "480":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBParameterGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBParameterGroupName:
                  description: <p>The name of a specific DB parameter group to return
                    details for.</p> <p>Constraints:</p> <ul> <li> <p>If
                    supplied, must match the name of an existing
                    DBClusterParameterGroup.</p> </li> </ul>
                  type: string
                Filters:
                  description: This parameter is not currently supported.
                  type: array
                  items:
                    type: string
                MaxRecords:
                  description: "<p>The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a pagination token called a
                    marker is included in the response so that the remaining
                    results can be retrieved.</p> <p>Default: 100</p>
                    <p>Constraints: Minimum 20, maximum 100.</p>"
                  type: integer
                Marker:
                  description: An optional pagination token provided by a previous
                    <code>DescribeDBParameterGroups</code> request. If this
                    parameter is specified, the response includes only records
                    beyond the marker, up to the value specified by
                    <code>MaxRecords</code>.
                  type: string
  /#Action=DescribeDBParameters:
    get:
      x-aws-operation-name: DescribeDBParameters
      operationId: GET DescribeDBParameters
      description: Returns the detailed parameter list for a particular DB parameter group.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupDetails"
        "480":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
      parameters:
        - name: DBParameterGroupName
          in: query
          required: true
          description: <p>The name of a specific DB parameter group to return details
            for.</p> <p>Constraints:</p> <ul> <li> <p>If supplied, must match
            the name of an existing DBParameterGroup.</p> </li> </ul>
          schema:
            type: string
        - name: Source
          in: query
          required: false
          description: "<p>The parameter types to return.</p> <p>Default: All parameter
            types returned</p> <p>Valid Values: <code>user | system |
            engine-default</code> </p>"
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: This parameter is not currently supported.
          schema:
            type: array
            items:
              type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a pagination token called a marker is included in the response so
            that the remaining results can be retrieved.</p> <p>Default: 100</p>
            <p>Constraints: Minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: An optional pagination token provided by a previous
            <code>DescribeDBParameters</code> request. If this parameter is
            specified, the response includes only records beyond the marker, up
            to the value specified by <code>MaxRecords</code>.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeDBParameters
      operationId: POST DescribeDBParameters
      description: Returns the detailed parameter list for a particular DB parameter group.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupDetails"
        "480":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBParameterGroupName:
                  description: <p>The name of a specific DB parameter group to return
                    details for.</p> <p>Constraints:</p> <ul> <li> <p>If
                    supplied, must match the name of an existing
                    DBParameterGroup.</p> </li> </ul>
                  type: string
                Source:
                  description: "<p>The parameter types to return.</p> <p>Default: All
                    parameter types returned</p> <p>Valid Values: <code>user |
                    system | engine-default</code> </p>"
                  type: string
                Filters:
                  description: This parameter is not currently supported.
                  type: array
                  items:
                    type: string
                MaxRecords:
                  description: "<p>The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a pagination token called a
                    marker is included in the response so that the remaining
                    results can be retrieved.</p> <p>Default: 100</p>
                    <p>Constraints: Minimum 20, maximum 100.</p>"
                  type: integer
                Marker:
                  description: An optional pagination token provided by a previous
                    <code>DescribeDBParameters</code> request. If this parameter
                    is specified, the response includes only records beyond the
                    marker, up to the value specified by
                    <code>MaxRecords</code>.
                  type: string
              required:
                - DBParameterGroupName
  /#Action=DescribeDBSubnetGroups:
    get:
      x-aws-operation-name: DescribeDBSubnetGroups
      operationId: GET DescribeDBSubnetGroups
      description: <p>Returns a list of DBSubnetGroup descriptions. If a DBSubnetGroupName
        is specified, the list will contain only the descriptions of the
        specified DBSubnetGroup.</p> <p>For an overview of CIDR ranges, go to
        the <a
        href="http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Wikipedia
        Tutorial</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupMessage"
        "480":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
      parameters:
        - name: DBSubnetGroupName
          in: query
          required: false
          description: The name of the DB subnet group to return details for.
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: This parameter is not currently supported.
          schema:
            type: array
            items:
              type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p> The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a pagination token called a marker is included in the response so
            that the remaining results can be retrieved.</p> <p>Default: 100</p>
            <p>Constraints: Minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: " An optional pagination token provided by a previous
            DescribeDBSubnetGroups request. If this parameter is specified, the
            response includes only records beyond the marker, up to the value
            specified by <code>MaxRecords</code>."
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBSubnetGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeDBSubnetGroups
      operationId: POST DescribeDBSubnetGroups
      description: <p>Returns a list of DBSubnetGroup descriptions. If a DBSubnetGroupName
        is specified, the list will contain only the descriptions of the
        specified DBSubnetGroup.</p> <p>For an overview of CIDR ranges, go to
        the <a
        href="http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Wikipedia
        Tutorial</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupMessage"
        "480":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDBSubnetGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBSubnetGroupName:
                  description: The name of the DB subnet group to return details for.
                  type: string
                Filters:
                  description: This parameter is not currently supported.
                  type: array
                  items:
                    type: string
                MaxRecords:
                  description: "<p> The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a pagination token called a
                    marker is included in the response so that the remaining
                    results can be retrieved.</p> <p>Default: 100</p>
                    <p>Constraints: Minimum 20, maximum 100.</p>"
                  type: integer
                Marker:
                  description: " An optional pagination token provided by a previous
                    DescribeDBSubnetGroups request. If this parameter is
                    specified, the response includes only records beyond the
                    marker, up to the value specified by
                    <code>MaxRecords</code>."
                  type: string
  /#Action=DescribeEngineDefaultClusterParameters:
    get:
      x-aws-operation-name: DescribeEngineDefaultClusterParameters
      operationId: GET DescribeEngineDefaultClusterParameters
      description: Returns the default engine and system parameter information for the
        cluster database engine.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeEngineDefaultClusterParametersR\
                  esult"
      parameters:
        - name: DBParameterGroupFamily
          in: query
          required: true
          description: The name of the DB cluster parameter group family to return engine
            parameter information for.
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: This parameter is not currently supported.
          schema:
            type: array
            items:
              type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p> The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a pagination token called a marker is included in the response so
            that the remaining results can be retrieved.</p> <p>Default: 100</p>
            <p>Constraints: Minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: " An optional pagination token provided by a previous
            <code>DescribeEngineDefaultClusterParameters</code> request. If this
            parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>."
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEngineDefaultClusterParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeEngineDefaultClusterParameters
      operationId: POST DescribeEngineDefaultClusterParameters
      description: Returns the default engine and system parameter information for the
        cluster database engine.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeEngineDefaultClusterParametersR\
                  esult"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEngineDefaultClusterParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBParameterGroupFamily:
                  description: The name of the DB cluster parameter group family to return
                    engine parameter information for.
                  type: string
                Filters:
                  description: This parameter is not currently supported.
                  type: array
                  items:
                    type: string
                MaxRecords:
                  description: "<p> The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a pagination token called a
                    marker is included in the response so that the remaining
                    results can be retrieved.</p> <p>Default: 100</p>
                    <p>Constraints: Minimum 20, maximum 100.</p>"
                  type: integer
                Marker:
                  description: " An optional pagination token provided by a previous
                    <code>DescribeEngineDefaultClusterParameters</code> request.
                    If this parameter is specified, the response includes only
                    records beyond the marker, up to the value specified by
                    <code>MaxRecords</code>."
                  type: string
              required:
                - DBParameterGroupFamily
  /#Action=DescribeEngineDefaultParameters:
    get:
      x-aws-operation-name: DescribeEngineDefaultParameters
      operationId: GET DescribeEngineDefaultParameters
      description: Returns the default engine and system parameter information for the
        specified database engine.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeEngineDefaultParametersResult"
      parameters:
        - name: DBParameterGroupFamily
          in: query
          required: true
          description: The name of the DB parameter group family.
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: Not currently supported.
          schema:
            type: array
            items:
              type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p> The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a pagination token called a marker is included in the response so
            that the remaining results can be retrieved.</p> <p>Default: 100</p>
            <p>Constraints: Minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: " An optional pagination token provided by a previous
            <code>DescribeEngineDefaultParameters</code> request. If this
            parameter is specified, the response includes only records beyond
            the marker, up to the value specified by <code>MaxRecords</code>."
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEngineDefaultParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeEngineDefaultParameters
      operationId: POST DescribeEngineDefaultParameters
      description: Returns the default engine and system parameter information for the
        specified database engine.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeEngineDefaultParametersResult"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEngineDefaultParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBParameterGroupFamily:
                  description: The name of the DB parameter group family.
                  type: string
                Filters:
                  description: Not currently supported.
                  type: array
                  items:
                    type: string
                MaxRecords:
                  description: "<p> The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a pagination token called a
                    marker is included in the response so that the remaining
                    results can be retrieved.</p> <p>Default: 100</p>
                    <p>Constraints: Minimum 20, maximum 100.</p>"
                  type: integer
                Marker:
                  description: " An optional pagination token provided by a previous
                    <code>DescribeEngineDefaultParameters</code> request. If
                    this parameter is specified, the response includes only
                    records beyond the marker, up to the value specified by
                    <code>MaxRecords</code>."
                  type: string
              required:
                - DBParameterGroupFamily
  /#Action=DescribeEventCategories:
    get:
      x-aws-operation-name: DescribeEventCategories
      operationId: GET DescribeEventCategories
      description: Displays a list of categories for all event source types, or, if
        specified, for a specified source type.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EventCategoriesMessage"
      parameters:
        - name: SourceType
          in: query
          required: false
          description: "<p>The type of source that is generating the events.</p> <p>Valid
            values: db-instance | db-parameter-group | db-security-group |
            db-snapshot</p>"
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: This parameter is not currently supported.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEventCategories
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeEventCategories
      operationId: POST DescribeEventCategories
      description: Displays a list of categories for all event source types, or, if
        specified, for a specified source type.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EventCategoriesMessage"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEventCategories
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SourceType:
                  description: "<p>The type of source that is generating the events.</p>
                    <p>Valid values: db-instance | db-parameter-group |
                    db-security-group | db-snapshot</p>"
                  type: string
                Filters:
                  description: This parameter is not currently supported.
                  type: array
                  items:
                    type: string
  /#Action=DescribeEventSubscriptions:
    get:
      x-aws-operation-name: DescribeEventSubscriptions
      operationId: GET DescribeEventSubscriptions
      description: <p>Lists all the subscription descriptions for a customer account. The
        description for a subscription includes SubscriptionName, SNSTopicARN,
        CustomerID, SourceType, SourceID, CreationTime, and Status.</p> <p>If
        you specify a SubscriptionName, lists the description for that
        subscription.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EventSubscriptionsMessage"
        "480":
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionNotFoundFault"
      parameters:
        - name: SubscriptionName
          in: query
          required: false
          description: The name of the event notification subscription you want to describe.
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: This parameter is not currently supported.
          schema:
            type: array
            items:
              type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p> The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a pagination token called a marker is included in the response so
            that the remaining results can be retrieved.</p> <p>Default: 100</p>
            <p>Constraints: Minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: " An optional pagination token provided by a previous
            DescribeOrderableDBInstanceOptions request. If this parameter is
            specified, the response includes only records beyond the marker, up
            to the value specified by <code>MaxRecords</code> ."
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEventSubscriptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeEventSubscriptions
      operationId: POST DescribeEventSubscriptions
      description: <p>Lists all the subscription descriptions for a customer account. The
        description for a subscription includes SubscriptionName, SNSTopicARN,
        CustomerID, SourceType, SourceID, CreationTime, and Status.</p> <p>If
        you specify a SubscriptionName, lists the description for that
        subscription.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EventSubscriptionsMessage"
        "480":
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEventSubscriptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SubscriptionName:
                  description: The name of the event notification subscription you want to
                    describe.
                  type: string
                Filters:
                  description: This parameter is not currently supported.
                  type: array
                  items:
                    type: string
                MaxRecords:
                  description: "<p> The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a pagination token called a
                    marker is included in the response so that the remaining
                    results can be retrieved.</p> <p>Default: 100</p>
                    <p>Constraints: Minimum 20, maximum 100.</p>"
                  type: integer
                Marker:
                  description: " An optional pagination token provided by a previous
                    DescribeOrderableDBInstanceOptions request. If this
                    parameter is specified, the response includes only records
                    beyond the marker, up to the value specified by
                    <code>MaxRecords</code> ."
                  type: string
  /#Action=DescribeEvents:
    get:
      x-aws-operation-name: DescribeEvents
      operationId: GET DescribeEvents
      description: Returns events related to DB instances, DB security groups, DB
        snapshots, and DB parameter groups for the past 14 days. Events specific
        to a particular DB instance, DB security group, database snapshot, or DB
        parameter group can be obtained by providing the name as a parameter. By
        default, the past hour of events are returned.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EventsMessage"
      parameters:
        - name: SourceIdentifier
          in: query
          required: false
          description: <p>The identifier of the event source for which events are returned.
            If not specified, then all sources are included in the response.</p>
            <p>Constraints:</p> <ul> <li> <p>If SourceIdentifier is supplied,
            SourceType must also be provided.</p> </li> <li> <p>If the source
            type is <code>DBInstance</code>, then a
            <code>DBInstanceIdentifier</code> must be supplied.</p> </li> <li>
            <p>If the source type is <code>DBSecurityGroup</code>, a
            <code>DBSecurityGroupName</code> must be supplied.</p> </li> <li>
            <p>If the source type is <code>DBParameterGroup</code>, a
            <code>DBParameterGroupName</code> must be supplied.</p> </li> <li>
            <p>If the source type is <code>DBSnapshot</code>, a
            <code>DBSnapshotIdentifier</code> must be supplied.</p> </li> <li>
            <p>Cannot end with a hyphen or contain two consecutive hyphens.</p>
            </li> </ul>
          schema:
            type: string
        - name: SourceType
          in: query
          required: false
          description: The event source to retrieve events for. If no value is specified,
            all events are returned.
          schema:
            type: string
            enum:
              - db-instance
              - db-parameter-group
              - db-security-group
              - db-snapshot
              - db-cluster
              - db-cluster-snapshot
        - name: StartTime
          in: query
          required: false
          description: '<p> The beginning of the time interval to retrieve events for,
            specified in ISO 8601 format. For more information about ISO 8601,
            go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601
            Wikipedia page.</a> </p> <p>Example: 2009-07-08T18:00Z</p>'
          schema:
            type: string
            format: date-time
        - name: EndTime
          in: query
          required: false
          description: '<p> The end of the time interval for which to retrieve events,
            specified in ISO 8601 format. For more information about ISO 8601,
            go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601
            Wikipedia page.</a> </p> <p>Example: 2009-07-08T18:00Z</p>'
          schema:
            type: string
            format: date-time
        - name: Duration
          in: query
          required: false
          description: "<p>The number of minutes to retrieve events for.</p> <p>Default:
            60</p>"
          schema:
            type: integer
        - name: EventCategories
          in: query
          required: false
          description: A list of event categories that trigger notifications for a event
            notification subscription.
          schema:
            type: array
            items:
              type: string
        - name: Filters
          in: query
          required: false
          description: This parameter is not currently supported.
          schema:
            type: array
            items:
              type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p> The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a pagination token called a marker is included in the response so
            that the remaining results can be retrieved.</p> <p>Default: 100</p>
            <p>Constraints: Minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: " An optional pagination token provided by a previous DescribeEvents
            request. If this parameter is specified, the response includes only
            records beyond the marker, up to the value specified by
            <code>MaxRecords</code>."
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEvents
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeEvents
      operationId: POST DescribeEvents
      description: Returns events related to DB instances, DB security groups, DB
        snapshots, and DB parameter groups for the past 14 days. Events specific
        to a particular DB instance, DB security group, database snapshot, or DB
        parameter group can be obtained by providing the name as a parameter. By
        default, the past hour of events are returned.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EventsMessage"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEvents
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SourceIdentifier:
                  description: <p>The identifier of the event source for which events are
                    returned. If not specified, then all sources are included in
                    the response.</p> <p>Constraints:</p> <ul> <li> <p>If
                    SourceIdentifier is supplied, SourceType must also be
                    provided.</p> </li> <li> <p>If the source type is
                    <code>DBInstance</code>, then a
                    <code>DBInstanceIdentifier</code> must be supplied.</p>
                    </li> <li> <p>If the source type is
                    <code>DBSecurityGroup</code>, a
                    <code>DBSecurityGroupName</code> must be supplied.</p> </li>
                    <li> <p>If the source type is <code>DBParameterGroup</code>,
                    a <code>DBParameterGroupName</code> must be supplied.</p>
                    </li> <li> <p>If the source type is <code>DBSnapshot</code>,
                    a <code>DBSnapshotIdentifier</code> must be supplied.</p>
                    </li> <li> <p>Cannot end with a hyphen or contain two
                    consecutive hyphens.</p> </li> </ul>
                  type: string
                SourceType:
                  description: The event source to retrieve events for. If no value is
                    specified, all events are returned.
                  type: string
                  enum:
                    - db-instance
                    - db-parameter-group
                    - db-security-group
                    - db-snapshot
                    - db-cluster
                    - db-cluster-snapshot
                StartTime:
                  description: '<p> The beginning of the time interval to retrieve events
                    for, specified in ISO 8601 format. For more information
                    about ISO 8601, go to the <a
                    href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601
                    Wikipedia page.</a> </p> <p>Example: 2009-07-08T18:00Z</p>'
                  type: string
                  format: date-time
                EndTime:
                  description: '<p> The end of the time interval for which to retrieve
                    events, specified in ISO 8601 format. For more information
                    about ISO 8601, go to the <a
                    href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601
                    Wikipedia page.</a> </p> <p>Example: 2009-07-08T18:00Z</p>'
                  type: string
                  format: date-time
                Duration:
                  description: "<p>The number of minutes to retrieve events for.</p>
                    <p>Default: 60</p>"
                  type: integer
                EventCategories:
                  description: A list of event categories that trigger notifications for a
                    event notification subscription.
                  type: array
                  items:
                    type: string
                Filters:
                  description: This parameter is not currently supported.
                  type: array
                  items:
                    type: string
                MaxRecords:
                  description: "<p> The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a pagination token called a
                    marker is included in the response so that the remaining
                    results can be retrieved.</p> <p>Default: 100</p>
                    <p>Constraints: Minimum 20, maximum 100.</p>"
                  type: integer
                Marker:
                  description: " An optional pagination token provided by a previous
                    DescribeEvents request. If this parameter is specified, the
                    response includes only records beyond the marker, up to the
                    value specified by <code>MaxRecords</code>."
                  type: string
  /#Action=DescribeOrderableDBInstanceOptions:
    get:
      x-aws-operation-name: DescribeOrderableDBInstanceOptions
      operationId: GET DescribeOrderableDBInstanceOptions
      description: Returns a list of orderable DB instance options for the specified engine.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OrderableDBInstanceOptionsMessage"
      parameters:
        - name: Engine
          in: query
          required: true
          description: The name of the engine to retrieve DB instance options for.
          schema:
            type: string
        - name: EngineVersion
          in: query
          required: false
          description: The engine version filter value. Specify this parameter to show only
            the available offerings matching the specified engine version.
          schema:
            type: string
        - name: DBInstanceClass
          in: query
          required: false
          description: The DB instance class filter value. Specify this parameter to show
            only the available offerings matching the specified DB instance
            class.
          schema:
            type: string
        - name: LicenseModel
          in: query
          required: false
          description: The license model filter value. Specify this parameter to show only
            the available offerings matching the specified license model.
          schema:
            type: string
        - name: Vpc
          in: query
          required: false
          description: The VPC filter value. Specify this parameter to show only the
            available VPC or non-VPC offerings.
          schema:
            type: boolean
        - name: Filters
          in: query
          required: false
          description: This parameter is not currently supported.
          schema:
            type: array
            items:
              type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p> The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a pagination token called a marker is included in the response so
            that the remaining results can be retrieved.</p> <p>Default: 100</p>
            <p>Constraints: Minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: " An optional pagination token provided by a previous
            DescribeOrderableDBInstanceOptions request. If this parameter is
            specified, the response includes only records beyond the marker, up
            to the value specified by <code>MaxRecords</code> ."
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeOrderableDBInstanceOptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeOrderableDBInstanceOptions
      operationId: POST DescribeOrderableDBInstanceOptions
      description: Returns a list of orderable DB instance options for the specified engine.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OrderableDBInstanceOptionsMessage"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeOrderableDBInstanceOptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Engine:
                  description: The name of the engine to retrieve DB instance options for.
                  type: string
                EngineVersion:
                  description: The engine version filter value. Specify this parameter to
                    show only the available offerings matching the specified
                    engine version.
                  type: string
                DBInstanceClass:
                  description: The DB instance class filter value. Specify this parameter
                    to show only the available offerings matching the specified
                    DB instance class.
                  type: string
                LicenseModel:
                  description: The license model filter value. Specify this parameter to
                    show only the available offerings matching the specified
                    license model.
                  type: string
                Vpc:
                  description: The VPC filter value. Specify this parameter to show only
                    the available VPC or non-VPC offerings.
                  type: boolean
                Filters:
                  description: This parameter is not currently supported.
                  type: array
                  items:
                    type: string
                MaxRecords:
                  description: "<p> The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a pagination token called a
                    marker is included in the response so that the remaining
                    results can be retrieved.</p> <p>Default: 100</p>
                    <p>Constraints: Minimum 20, maximum 100.</p>"
                  type: integer
                Marker:
                  description: " An optional pagination token provided by a previous
                    DescribeOrderableDBInstanceOptions request. If this
                    parameter is specified, the response includes only records
                    beyond the marker, up to the value specified by
                    <code>MaxRecords</code> ."
                  type: string
              required:
                - Engine
  /#Action=DescribePendingMaintenanceActions:
    get:
      x-aws-operation-name: DescribePendingMaintenanceActions
      operationId: GET DescribePendingMaintenanceActions
      description: Returns a list of resources (for example, DB instances) that have at
        least one pending maintenance action.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PendingMaintenanceActionsMessage"
        "480":
          description: ResourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundFault"
      parameters:
        - name: ResourceIdentifier
          in: query
          required: false
          description: The ARN of a resource to return pending maintenance actions for.
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: <p>A filter that specifies one or more resources to return pending
            maintenance actions for.</p> <p>Supported filters:</p> <ul> <li> <p>
            <code>db-cluster-id</code> - Accepts DB cluster identifiers and DB
            cluster Amazon Resource Names (ARNs). The results list will only
            include pending maintenance actions for the DB clusters identified
            by these ARNs.</p> </li> <li> <p> <code>db-instance-id</code> -
            Accepts DB instance identifiers and DB instance ARNs. The results
            list will only include pending maintenance actions for the DB
            instances identified by these ARNs.</p> </li> </ul>
          schema:
            type: array
            items:
              type: string
        - name: Marker
          in: query
          required: false
          description: " An optional pagination token provided by a previous
            <code>DescribePendingMaintenanceActions</code> request. If this
            parameter is specified, the response includes only records beyond
            the marker, up to a number of records specified by
            <code>MaxRecords</code>."
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p> The maximum number of records to include in the response. If
            more records exist than the specified <code>MaxRecords</code> value,
            a pagination token called a marker is included in the response so
            that the remaining results can be retrieved.</p> <p>Default: 100</p>
            <p>Constraints: Minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribePendingMaintenanceActions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribePendingMaintenanceActions
      operationId: POST DescribePendingMaintenanceActions
      description: Returns a list of resources (for example, DB instances) that have at
        least one pending maintenance action.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PendingMaintenanceActionsMessage"
        "480":
          description: ResourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribePendingMaintenanceActions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ResourceIdentifier:
                  description: The ARN of a resource to return pending maintenance actions
                    for.
                  type: string
                Filters:
                  description: <p>A filter that specifies one or more resources to return
                    pending maintenance actions for.</p> <p>Supported
                    filters:</p> <ul> <li> <p> <code>db-cluster-id</code> -
                    Accepts DB cluster identifiers and DB cluster Amazon
                    Resource Names (ARNs). The results list will only include
                    pending maintenance actions for the DB clusters identified
                    by these ARNs.</p> </li> <li> <p>
                    <code>db-instance-id</code> - Accepts DB instance
                    identifiers and DB instance ARNs. The results list will only
                    include pending maintenance actions for the DB instances
                    identified by these ARNs.</p> </li> </ul>
                  type: array
                  items:
                    type: string
                Marker:
                  description: " An optional pagination token provided by a previous
                    <code>DescribePendingMaintenanceActions</code> request. If
                    this parameter is specified, the response includes only
                    records beyond the marker, up to a number of records
                    specified by <code>MaxRecords</code>."
                  type: string
                MaxRecords:
                  description: "<p> The maximum number of records to include in the
                    response. If more records exist than the specified
                    <code>MaxRecords</code> value, a pagination token called a
                    marker is included in the response so that the remaining
                    results can be retrieved.</p> <p>Default: 100</p>
                    <p>Constraints: Minimum 20, maximum 100.</p>"
                  type: integer
  /#Action=DescribeValidDBInstanceModifications:
    get:
      x-aws-operation-name: DescribeValidDBInstanceModifications
      operationId: GET DescribeValidDBInstanceModifications
      description: You can call <a>DescribeValidDBInstanceModifications</a> to learn what
        modifications you can make to your DB instance. You can use this
        information when you call <a>ModifyDBInstance</a>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeValidDBInstanceModificationsRes\
                  ult"
        "480":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
        "481":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: true
          description: The customer identifier or the ARN of your DB instance.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeValidDBInstanceModifications
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeValidDBInstanceModifications
      operationId: POST DescribeValidDBInstanceModifications
      description: You can call <a>DescribeValidDBInstanceModifications</a> to learn what
        modifications you can make to your DB instance. You can use this
        information when you call <a>ModifyDBInstance</a>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeValidDBInstanceModificationsRes\
                  ult"
        "480":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
        "481":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeValidDBInstanceModifications
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBInstanceIdentifier:
                  description: The customer identifier or the ARN of your DB instance.
                  type: string
              required:
                - DBInstanceIdentifier
  /#Action=FailoverDBCluster:
    get:
      x-aws-operation-name: FailoverDBCluster
      operationId: GET FailoverDBCluster
      description: <p>Forces a failover for a DB cluster.</p> <p>A failover for a DB
        cluster promotes one of the Read Replicas (read-only instances) in the
        DB cluster to be the primary instance (the cluster writer).</p>
        <p>Amazon Neptune will automatically fail over to a Read Replica, if one
        exists, when the primary instance fails. You can force a failover when
        you want to simulate a failure of a primary instance for testing.
        Because each instance in a DB cluster has its own endpoint address, you
        will need to clean up and re-establish any existing connections that use
        those endpoint addresses when the failover is complete.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/FailoverDBClusterResult"
        "480":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "481":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "482":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
      parameters:
        - name: DBClusterIdentifier
          in: query
          required: false
          description: <p>A DB cluster identifier to force a failover for. This parameter
            is not case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must
            match the identifier of an existing DBCluster.</p> </li> </ul>
          schema:
            type: string
        - name: TargetDBInstanceIdentifier
          in: query
          required: false
          description: <p>The name of the instance to promote to the primary instance.</p>
            <p>You must specify the instance identifier for an Read Replica in
            the DB cluster. For example, <code>mydbcluster-replica1</code>.</p>
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - FailoverDBCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: FailoverDBCluster
      operationId: POST FailoverDBCluster
      description: <p>Forces a failover for a DB cluster.</p> <p>A failover for a DB
        cluster promotes one of the Read Replicas (read-only instances) in the
        DB cluster to be the primary instance (the cluster writer).</p>
        <p>Amazon Neptune will automatically fail over to a Read Replica, if one
        exists, when the primary instance fails. You can force a failover when
        you want to simulate a failure of a primary instance for testing.
        Because each instance in a DB cluster has its own endpoint address, you
        will need to clean up and re-establish any existing connections that use
        those endpoint addresses when the failover is complete.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/FailoverDBClusterResult"
        "480":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "481":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "482":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - FailoverDBCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterIdentifier:
                  description: <p>A DB cluster identifier to force a failover for. This
                    parameter is not case-sensitive.</p> <p>Constraints:</p>
                    <ul> <li> <p>Must match the identifier of an existing
                    DBCluster.</p> </li> </ul>
                  type: string
                TargetDBInstanceIdentifier:
                  description: <p>The name of the instance to promote to the primary
                    instance.</p> <p>You must specify the instance identifier
                    for an Read Replica in the DB cluster. For example,
                    <code>mydbcluster-replica1</code>.</p>
                  type: string
  /#Action=ListTagsForResource:
    get:
      x-aws-operation-name: ListTagsForResource
      operationId: GET ListTagsForResource
      description: Lists all tags on an Amazon Neptune resource.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagListMessage"
        "480":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
        "481":
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSnapshotNotFoundFault"
        "482":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
      parameters:
        - name: ResourceName
          in: query
          required: true
          description: The Amazon Neptune resource with tags to be listed. This value is an
            Amazon Resource Name (ARN). For information about creating an ARN,
            see <a
            href="https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing">
            Constructing an Amazon Resource Name (ARN)</a>.
          schema:
            type: string
        - name: Filters
          in: query
          required: false
          description: This parameter is not currently supported.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListTagsForResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ListTagsForResource
      operationId: POST ListTagsForResource
      description: Lists all tags on an Amazon Neptune resource.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagListMessage"
        "480":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
        "481":
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSnapshotNotFoundFault"
        "482":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListTagsForResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ResourceName:
                  description: The Amazon Neptune resource with tags to be listed. This
                    value is an Amazon Resource Name (ARN). For information
                    about creating an ARN, see <a
                    href="https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing">
                    Constructing an Amazon Resource Name (ARN)</a>.
                  type: string
                Filters:
                  description: This parameter is not currently supported.
                  type: array
                  items:
                    type: string
              required:
                - ResourceName
  /#Action=ModifyDBCluster:
    get:
      x-aws-operation-name: ModifyDBCluster
      operationId: GET ModifyDBCluster
      description: Modify a setting for a DB cluster. You can change one or more database
        configuration parameters by specifying these parameters and the new
        values in the request.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyDBClusterResult"
        "480":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "481":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "482":
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageQuotaExceededFault"
        "483":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
        "484":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "485":
          description: InvalidDBSubnetGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSubnetGroupStateFault"
        "486":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
        "487":
          description: DBClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterParameterGroupNotFoundFault"
        "488":
          description: InvalidDBSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSecurityGroupStateFault"
        "489":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
        "490":
          description: DBClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterAlreadyExistsFault"
      parameters:
        - name: DBClusterIdentifier
          in: query
          required: true
          description: <p>The DB cluster identifier for the cluster being modified. This
            parameter is not case-sensitive.</p> <p>Constraints:</p> <ul> <li>
            <p>Must match the identifier of an existing DBCluster.</p> </li>
            </ul>
          schema:
            type: string
        - name: NewDBClusterIdentifier
          in: query
          required: false
          description: "<p>The new DB cluster identifier for the DB cluster when renaming a
            DB cluster. This value is stored as a lowercase string.</p>
            <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters,
            numbers, or hyphens</p> </li> <li> <p>The first character must be a
            letter</p> </li> <li> <p>Cannot end with a hyphen or contain two
            consecutive hyphens</p> </li> </ul> <p>Example:
            <code>my-cluster2</code> </p>"
          schema:
            type: string
        - name: ApplyImmediately
          in: query
          required: false
          description: "<p>A value that specifies whether the modifications in this request
            and any pending modifications are asynchronously applied as soon as
            possible, regardless of the <code>PreferredMaintenanceWindow</code>
            setting for the DB cluster. If this parameter is set to
            <code>false</code>, changes to the DB cluster are applied during the
            next maintenance window.</p> <p>The <code>ApplyImmediately</code>
            parameter only affects the <code>NewDBClusterIdentifier</code> and
            <code>MasterUserPassword</code> values. If you set the
            <code>ApplyImmediately</code> parameter value to false, then changes
            to the <code>NewDBClusterIdentifier</code> and
            <code>MasterUserPassword</code> values are applied during the next
            maintenance window. All other changes are applied immediately,
            regardless of the value of the <code>ApplyImmediately</code>
            parameter.</p> <p>Default: <code>false</code> </p>"
          schema:
            type: boolean
        - name: BackupRetentionPeriod
          in: query
          required: false
          description: "<p>The number of days for which automated backups are retained. You
            must specify a minimum value of 1.</p> <p>Default: 1</p>
            <p>Constraints:</p> <ul> <li> <p>Must be a value from 1 to 35</p>
            </li> </ul>"
          schema:
            type: integer
        - name: DBClusterParameterGroupName
          in: query
          required: false
          description: The name of the DB cluster parameter group to use for the DB cluster.
          schema:
            type: string
        - name: VpcSecurityGroupIds
          in: query
          required: false
          description: A list of VPC security groups that the DB cluster will belong to.
          schema:
            type: array
            items:
              type: string
        - name: Port
          in: query
          required: false
          description: "<p>The port number on which the DB cluster accepts connections.</p>
            <p>Constraints: Value must be <code>1150-65535</code> </p>
            <p>Default: The same port as the original DB cluster.</p>"
          schema:
            type: integer
        - name: MasterUserPassword
          in: query
          required: false
          description: '<p>The new password for the master database user. This password can
            contain any printable ASCII character except "/", """, or "@".</p>
            <p>Constraints: Must contain from 8 to 41 characters.</p>'
          schema:
            type: string
        - name: OptionGroupName
          in: query
          required: false
          description: <p>A value that indicates that the DB cluster should be associated
            with the specified option group. Changing this parameter doesn't
            result in an outage except in the following case, and the change is
            applied during the next maintenance window unless the
            <code>ApplyImmediately</code> parameter is set to <code>true</code>
            for this request. If the parameter change results in an option group
            that enables OEM, this change can cause a brief (sub-second) period
            during which new connections are rejected but existing connections
            are not interrupted.</p> <p>Permanent options can't be removed from
            an option group. The option group can't be removed from a DB cluster
            once it is associated with a DB cluster.</p>
          schema:
            type: string
        - name: PreferredBackupWindow
          in: query
          required: false
          description: <p>The daily time range during which automated backups are created
            if automated backups are enabled, using the
            <code>BackupRetentionPeriod</code> parameter.</p> <p>The default is
            a 30-minute window selected at random from an 8-hour block of time
            for each AWS Region.</p> <p>Constraints:</p> <ul> <li> <p>Must be in
            the format <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be
            in Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not
            conflict with the preferred maintenance window.</p> </li> <li>
            <p>Must be at least 30 minutes.</p> </li> </ul>
          schema:
            type: string
        - name: PreferredMaintenanceWindow
          in: query
          required: false
          description: "<p>The weekly time range during which system maintenance can occur,
            in Universal Coordinated Time (UTC).</p> <p>Format:
            <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>The default is a
            30-minute window selected at random from an 8-hour block of time for
            each AWS Region, occurring on a random day of the week.</p> <p>Valid
            Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p> <p>Constraints: Minimum
            30-minute window.</p>"
          schema:
            type: string
        - name: EnableIAMDatabaseAuthentication
          in: query
          required: false
          description: "<p>True to enable mapping of AWS Identity and Access Management
            (IAM) accounts to database accounts, and otherwise false.</p>
            <p>Default: <code>false</code> </p>"
          schema:
            type: boolean
        - name: CloudwatchLogsExportConfiguration.EnableLogTypes
          in: query
          description: >-
            <p>The configuration setting for the log types to be enabled for
            export to CloudWatch Logs for a specific DB instance or DB
            cluster.</p> <p>The <code>EnableLogTypes</code> and
            <code>DisableLogTypes</code> arrays determine which logs will be
            exported (or not exported) to CloudWatch Logs.</p>

            The list of log types to enable.
          schema:
            type: array
            items:
              type: string
        - name: CloudwatchLogsExportConfiguration.DisableLogTypes
          in: query
          description: >-
            <p>The configuration setting for the log types to be enabled for
            export to CloudWatch Logs for a specific DB instance or DB
            cluster.</p> <p>The <code>EnableLogTypes</code> and
            <code>DisableLogTypes</code> arrays determine which logs will be
            exported (or not exported) to CloudWatch Logs.</p>

            The list of log types to disable.
          schema:
            type: array
            items:
              type: string
        - name: EngineVersion
          in: query
          required: false
          description: <p>The version number of the database engine to which you want to
            upgrade. Changing this parameter results in an outage. The change is
            applied during the next maintenance window unless the
            ApplyImmediately parameter is set to true.</p> <p>For a list of
            valid engine versions, see <a>CreateDBInstance</a>, or call
            <a>DescribeDBEngineVersions</a>.</p>
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyDBCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyDBCluster
      operationId: POST ModifyDBCluster
      description: Modify a setting for a DB cluster. You can change one or more database
        configuration parameters by specifying these parameters and the new
        values in the request.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyDBClusterResult"
        "480":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "481":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "482":
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageQuotaExceededFault"
        "483":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
        "484":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "485":
          description: InvalidDBSubnetGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSubnetGroupStateFault"
        "486":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
        "487":
          description: DBClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterParameterGroupNotFoundFault"
        "488":
          description: InvalidDBSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSecurityGroupStateFault"
        "489":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
        "490":
          description: DBClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterAlreadyExistsFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyDBCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterIdentifier:
                  description: <p>The DB cluster identifier for the cluster being modified.
                    This parameter is not case-sensitive.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must match the identifier
                    of an existing DBCluster.</p> </li> </ul>
                  type: string
                NewDBClusterIdentifier:
                  description: "<p>The new DB cluster identifier for the DB cluster when
                    renaming a DB cluster. This value is stored as a lowercase
                    string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain
                    from 1 to 63 letters, numbers, or hyphens</p> </li> <li>
                    <p>The first character must be a letter</p> </li> <li>
                    <p>Cannot end with a hyphen or contain two consecutive
                    hyphens</p> </li> </ul> <p>Example: <code>my-cluster2</code>
                    </p>"
                  type: string
                ApplyImmediately:
                  description: "<p>A value that specifies whether the modifications in this
                    request and any pending modifications are asynchronously
                    applied as soon as possible, regardless of the
                    <code>PreferredMaintenanceWindow</code> setting for the DB
                    cluster. If this parameter is set to <code>false</code>,
                    changes to the DB cluster are applied during the next
                    maintenance window.</p> <p>The <code>ApplyImmediately</code>
                    parameter only affects the
                    <code>NewDBClusterIdentifier</code> and
                    <code>MasterUserPassword</code> values. If you set the
                    <code>ApplyImmediately</code> parameter value to false, then
                    changes to the <code>NewDBClusterIdentifier</code> and
                    <code>MasterUserPassword</code> values are applied during
                    the next maintenance window. All other changes are applied
                    immediately, regardless of the value of the
                    <code>ApplyImmediately</code> parameter.</p> <p>Default:
                    <code>false</code> </p>"
                  type: boolean
                BackupRetentionPeriod:
                  description: "<p>The number of days for which automated backups are
                    retained. You must specify a minimum value of 1.</p>
                    <p>Default: 1</p> <p>Constraints:</p> <ul> <li> <p>Must be a
                    value from 1 to 35</p> </li> </ul>"
                  type: integer
                DBClusterParameterGroupName:
                  description: The name of the DB cluster parameter group to use for the DB
                    cluster.
                  type: string
                VpcSecurityGroupIds:
                  description: A list of VPC security groups that the DB cluster will
                    belong to.
                  type: array
                  items:
                    type: string
                Port:
                  description: "<p>The port number on which the DB cluster accepts
                    connections.</p> <p>Constraints: Value must be
                    <code>1150-65535</code> </p> <p>Default: The same port as
                    the original DB cluster.</p>"
                  type: integer
                MasterUserPassword:
                  description: '<p>The new password for the master database user. This
                    password can contain any printable ASCII character except
                    "/", """, or "@".</p> <p>Constraints: Must contain from 8 to
                    41 characters.</p>'
                  type: string
                OptionGroupName:
                  description: <p>A value that indicates that the DB cluster should be
                    associated with the specified option group. Changing this
                    parameter doesn't result in an outage except in the
                    following case, and the change is applied during the next
                    maintenance window unless the <code>ApplyImmediately</code>
                    parameter is set to <code>true</code> for this request. If
                    the parameter change results in an option group that enables
                    OEM, this change can cause a brief (sub-second) period
                    during which new connections are rejected but existing
                    connections are not interrupted.</p> <p>Permanent options
                    can't be removed from an option group. The option group
                    can't be removed from a DB cluster once it is associated
                    with a DB cluster.</p>
                  type: string
                PreferredBackupWindow:
                  description: <p>The daily time range during which automated backups are
                    created if automated backups are enabled, using the
                    <code>BackupRetentionPeriod</code> parameter.</p> <p>The
                    default is a 30-minute window selected at random from an
                    8-hour block of time for each AWS Region.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must be in the format
                    <code>hh24:mi-hh24:mi</code>.</p> </li> <li> <p>Must be in
                    Universal Coordinated Time (UTC).</p> </li> <li> <p>Must not
                    conflict with the preferred maintenance window.</p> </li>
                    <li> <p>Must be at least 30 minutes.</p> </li> </ul>
                  type: string
                PreferredMaintenanceWindow:
                  description: "<p>The weekly time range during which system maintenance
                    can occur, in Universal Coordinated Time (UTC).</p>
                    <p>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>The
                    default is a 30-minute window selected at random from an
                    8-hour block of time for each AWS Region, occurring on a
                    random day of the week.</p> <p>Valid Days: Mon, Tue, Wed,
                    Thu, Fri, Sat, Sun.</p> <p>Constraints: Minimum 30-minute
                    window.</p>"
                  type: string
                EnableIAMDatabaseAuthentication:
                  description: "<p>True to enable mapping of AWS Identity and Access
                    Management (IAM) accounts to database accounts, and
                    otherwise false.</p> <p>Default: <code>false</code> </p>"
                  type: boolean
                CloudwatchLogsExportConfiguration.EnableLogTypes:
                  description: >-
                    <p>The configuration setting for the log types to be enabled
                    for export to CloudWatch Logs for a specific DB instance or
                    DB cluster.</p> <p>The <code>EnableLogTypes</code> and
                    <code>DisableLogTypes</code> arrays determine which logs
                    will be exported (or not exported) to CloudWatch Logs.</p>

                    The list of log types to enable.
                  type: array
                  items:
                    type: string
                CloudwatchLogsExportConfiguration.DisableLogTypes:
                  description: >-
                    <p>The configuration setting for the log types to be enabled
                    for export to CloudWatch Logs for a specific DB instance or
                    DB cluster.</p> <p>The <code>EnableLogTypes</code> and
                    <code>DisableLogTypes</code> arrays determine which logs
                    will be exported (or not exported) to CloudWatch Logs.</p>

                    The list of log types to disable.
                  type: array
                  items:
                    type: string
                EngineVersion:
                  description: <p>The version number of the database engine to which you
                    want to upgrade. Changing this parameter results in an
                    outage. The change is applied during the next maintenance
                    window unless the ApplyImmediately parameter is set to
                    true.</p> <p>For a list of valid engine versions, see
                    <a>CreateDBInstance</a>, or call
                    <a>DescribeDBEngineVersions</a>.</p>
                  type: string
              required:
                - DBClusterIdentifier
  /#Action=ModifyDBClusterParameterGroup:
    get:
      x-aws-operation-name: ModifyDBClusterParameterGroup
      operationId: GET ModifyDBClusterParameterGroup
      description: "<p> Modifies the parameters of a DB cluster parameter group. To modify
        more than one parameter, submit a list of the following:
        <code>ParameterName</code>, <code>ParameterValue</code>, and
        <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in
        a single request.</p> <note> <p>Changes to dynamic parameters are
        applied immediately. Changes to static parameters require a reboot
        without failover to the DB cluster associated with the parameter group
        before the change can take effect.</p> </note> <important> <p>After you
        create a DB cluster parameter group, you should wait at least 5 minutes
        before creating your first DB cluster that uses that DB cluster
        parameter group as the default parameter group. This allows Amazon
        Neptune to fully complete the create action before the parameter group
        is used as the default for a new DB cluster. This is especially
        important for parameters that are critical when creating the default
        database for a DB cluster, such as the character set for the default
        database defined by the <code>character_set_database</code> parameter.
        You can use the <i>Parameter Groups</i> option of the Amazon Neptune
        console or the <a>DescribeDBClusterParameters</a> command to verify that
        your DB cluster parameter group has been created or modified.</p>
        </important>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterParameterGroupNameMessage"
        "480":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
        "481":
          description: InvalidDBParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBParameterGroupStateFault"
      parameters:
        - name: DBClusterParameterGroupName
          in: query
          required: true
          description: The name of the DB cluster parameter group to modify.
          schema:
            type: string
        - name: Parameters
          in: query
          required: true
          description: A list of parameters in the DB cluster parameter group to modify.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyDBClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyDBClusterParameterGroup
      operationId: POST ModifyDBClusterParameterGroup
      description: "<p> Modifies the parameters of a DB cluster parameter group. To modify
        more than one parameter, submit a list of the following:
        <code>ParameterName</code>, <code>ParameterValue</code>, and
        <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in
        a single request.</p> <note> <p>Changes to dynamic parameters are
        applied immediately. Changes to static parameters require a reboot
        without failover to the DB cluster associated with the parameter group
        before the change can take effect.</p> </note> <important> <p>After you
        create a DB cluster parameter group, you should wait at least 5 minutes
        before creating your first DB cluster that uses that DB cluster
        parameter group as the default parameter group. This allows Amazon
        Neptune to fully complete the create action before the parameter group
        is used as the default for a new DB cluster. This is especially
        important for parameters that are critical when creating the default
        database for a DB cluster, such as the character set for the default
        database defined by the <code>character_set_database</code> parameter.
        You can use the <i>Parameter Groups</i> option of the Amazon Neptune
        console or the <a>DescribeDBClusterParameters</a> command to verify that
        your DB cluster parameter group has been created or modified.</p>
        </important>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterParameterGroupNameMessage"
        "480":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
        "481":
          description: InvalidDBParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBParameterGroupStateFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyDBClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterParameterGroupName:
                  description: The name of the DB cluster parameter group to modify.
                  type: string
                Parameters:
                  description: A list of parameters in the DB cluster parameter group to
                    modify.
                  type: array
                  items:
                    type: string
              required:
                - DBClusterParameterGroupName
                - Parameters
  /#Action=ModifyDBClusterSnapshotAttribute:
    get:
      x-aws-operation-name: ModifyDBClusterSnapshotAttribute
      operationId: GET ModifyDBClusterSnapshotAttribute
      description: <p>Adds an attribute and values to, or removes an attribute and values
        from, a manual DB cluster snapshot.</p> <p>To share a manual DB cluster
        snapshot with other AWS accounts, specify <code>restore</code> as the
        <code>AttributeName</code> and use the <code>ValuesToAdd</code>
        parameter to add a list of IDs of the AWS accounts that are authorized
        to restore the manual DB cluster snapshot. Use the value
        <code>all</code> to make the manual DB cluster snapshot public, which
        means that it can be copied or restored by all AWS accounts. Do not add
        the <code>all</code> value for any manual DB cluster snapshots that
        contain private information that you don't want available to all AWS
        accounts. If a manual DB cluster snapshot is encrypted, it can be
        shared, but only by specifying a list of authorized AWS account IDs for
        the <code>ValuesToAdd</code> parameter. You can't use <code>all</code>
        as a value for that parameter in this case.</p> <p>To view which AWS
        accounts have access to copy or restore a manual DB cluster snapshot, or
        whether a manual DB cluster snapshot public or private, use the
        <a>DescribeDBClusterSnapshotAttributes</a> API action.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyDBClusterSnapshotAttributeResult"
        "480":
          description: DBClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotNotFoundFault"
        "481":
          description: InvalidDBClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterSnapshotStateFault"
        "482":
          description: SharedSnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SharedSnapshotQuotaExceededFault"
      parameters:
        - name: DBClusterSnapshotIdentifier
          in: query
          required: true
          description: The identifier for the DB cluster snapshot to modify the attributes
            for.
          schema:
            type: string
        - name: AttributeName
          in: query
          required: true
          description: <p>The name of the DB cluster snapshot attribute to modify.</p>
            <p>To manage authorization for other AWS accounts to copy or restore
            a manual DB cluster snapshot, set this value to
            <code>restore</code>.</p>
          schema:
            type: string
        - name: ValuesToAdd
          in: query
          required: false
          description: <p>A list of DB cluster snapshot attributes to add to the attribute
            specified by <code>AttributeName</code>.</p> <p>To authorize other
            AWS accounts to copy or restore a manual DB cluster snapshot, set
            this list to include one or more AWS account IDs, or
            <code>all</code> to make the manual DB cluster snapshot restorable
            by any AWS account. Do not add the <code>all</code> value for any
            manual DB cluster snapshots that contain private information that
            you don't want available to all AWS accounts.</p>
          schema:
            type: array
            items:
              type: string
        - name: ValuesToRemove
          in: query
          required: false
          description: <p>A list of DB cluster snapshot attributes to remove from the
            attribute specified by <code>AttributeName</code>.</p> <p>To remove
            authorization for other AWS accounts to copy or restore a manual DB
            cluster snapshot, set this list to include one or more AWS account
            identifiers, or <code>all</code> to remove authorization for any AWS
            account to copy or restore the DB cluster snapshot. If you specify
            <code>all</code>, an AWS account whose account ID is explicitly
            added to the <code>restore</code> attribute can still copy or
            restore a manual DB cluster snapshot.</p>
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyDBClusterSnapshotAttribute
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyDBClusterSnapshotAttribute
      operationId: POST ModifyDBClusterSnapshotAttribute
      description: <p>Adds an attribute and values to, or removes an attribute and values
        from, a manual DB cluster snapshot.</p> <p>To share a manual DB cluster
        snapshot with other AWS accounts, specify <code>restore</code> as the
        <code>AttributeName</code> and use the <code>ValuesToAdd</code>
        parameter to add a list of IDs of the AWS accounts that are authorized
        to restore the manual DB cluster snapshot. Use the value
        <code>all</code> to make the manual DB cluster snapshot public, which
        means that it can be copied or restored by all AWS accounts. Do not add
        the <code>all</code> value for any manual DB cluster snapshots that
        contain private information that you don't want available to all AWS
        accounts. If a manual DB cluster snapshot is encrypted, it can be
        shared, but only by specifying a list of authorized AWS account IDs for
        the <code>ValuesToAdd</code> parameter. You can't use <code>all</code>
        as a value for that parameter in this case.</p> <p>To view which AWS
        accounts have access to copy or restore a manual DB cluster snapshot, or
        whether a manual DB cluster snapshot public or private, use the
        <a>DescribeDBClusterSnapshotAttributes</a> API action.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyDBClusterSnapshotAttributeResult"
        "480":
          description: DBClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotNotFoundFault"
        "481":
          description: InvalidDBClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterSnapshotStateFault"
        "482":
          description: SharedSnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SharedSnapshotQuotaExceededFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyDBClusterSnapshotAttribute
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterSnapshotIdentifier:
                  description: The identifier for the DB cluster snapshot to modify the
                    attributes for.
                  type: string
                AttributeName:
                  description: <p>The name of the DB cluster snapshot attribute to
                    modify.</p> <p>To manage authorization for other AWS
                    accounts to copy or restore a manual DB cluster snapshot,
                    set this value to <code>restore</code>.</p>
                  type: string
                ValuesToAdd:
                  description: <p>A list of DB cluster snapshot attributes to add to the
                    attribute specified by <code>AttributeName</code>.</p> <p>To
                    authorize other AWS accounts to copy or restore a manual DB
                    cluster snapshot, set this list to include one or more AWS
                    account IDs, or <code>all</code> to make the manual DB
                    cluster snapshot restorable by any AWS account. Do not add
                    the <code>all</code> value for any manual DB cluster
                    snapshots that contain private information that you don't
                    want available to all AWS accounts.</p>
                  type: array
                  items:
                    type: string
                ValuesToRemove:
                  description: <p>A list of DB cluster snapshot attributes to remove from
                    the attribute specified by <code>AttributeName</code>.</p>
                    <p>To remove authorization for other AWS accounts to copy or
                    restore a manual DB cluster snapshot, set this list to
                    include one or more AWS account identifiers, or
                    <code>all</code> to remove authorization for any AWS account
                    to copy or restore the DB cluster snapshot. If you specify
                    <code>all</code>, an AWS account whose account ID is
                    explicitly added to the <code>restore</code> attribute can
                    still copy or restore a manual DB cluster snapshot.</p>
                  type: array
                  items:
                    type: string
              required:
                - DBClusterSnapshotIdentifier
                - AttributeName
  /#Action=ModifyDBInstance:
    get:
      x-aws-operation-name: ModifyDBInstance
      operationId: GET ModifyDBInstance
      description: Modifies settings for a DB instance. You can change one or more database
        configuration parameters by specifying these parameters and the new
        values in the request. To learn what modifications you can make to your
        DB instance, call <a>DescribeValidDBInstanceModifications</a> before you
        call <a>ModifyDBInstance</a>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyDBInstanceResult"
        "480":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
        "481":
          description: InvalidDBSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSecurityGroupStateFault"
        "482":
          description: DBInstanceAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceAlreadyExistsFault"
        "483":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
        "484":
          description: DBSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSecurityGroupNotFoundFault"
        "485":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
        "486":
          description: InsufficientDBInstanceCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientDBInstanceCapacityFault"
        "487":
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageQuotaExceededFault"
        "488":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "489":
          description: ProvisionedIopsNotAvailableInAZFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ProvisionedIopsNotAvailableInAZFault"
        "490":
          description: OptionGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OptionGroupNotFoundFault"
        "491":
          description: DBUpgradeDependencyFailureFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBUpgradeDependencyFailureFault"
        "492":
          description: StorageTypeNotSupportedFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageTypeNotSupportedFault"
        "493":
          description: AuthorizationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationNotFoundFault"
        "494":
          description: CertificateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CertificateNotFoundFault"
        "495":
          description: DomainNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DomainNotFoundFault"
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: true
          description: <p>The DB instance identifier. This value is stored as a lowercase
            string.</p> <p>Constraints:</p> <ul> <li> <p>Must match the
            identifier of an existing DBInstance.</p> </li> </ul>
          schema:
            type: string
        - name: AllocatedStorage
          in: query
          required: false
          description: <p>The new amount of storage (in gibibytes) to allocate for the DB
            instance.</p> <p>Not applicable. Storage is managed by the DB
            Cluster.</p>
          schema:
            type: integer
        - name: DBInstanceClass
          in: query
          required: false
          description: "<p>The new compute and memory capacity of the DB instance, for
            example, <code>db.m4.large</code>. Not all DB instance classes are
            available in all AWS Regions.</p> <p>If you modify the DB instance
            class, an outage occurs during the change. The change is applied
            during the next maintenance window, unless
            <code>ApplyImmediately</code> is specified as <code>true</code> for
            this request.</p> <p>Default: Uses existing setting</p>"
          schema:
            type: string
        - name: DBSubnetGroupName
          in: query
          required: false
          description: "<p>The new DB subnet group for the DB instance. You can use this
            parameter to move your DB instance to a different VPC.</p>
            <p>Changing the subnet group causes an outage during the change. The
            change is applied during the next maintenance window, unless you
            specify <code>true</code> for the <code>ApplyImmediately</code>
            parameter.</p> <p>Constraints: If supplied, must match the name of
            an existing DBSubnetGroup.</p> <p>Example:
            <code>mySubnetGroup</code> </p>"
          schema:
            type: string
        - name: DBSecurityGroups
          in: query
          required: false
          description: <p>A list of DB security groups to authorize on this DB instance.
            Changing this setting doesn't result in an outage and the change is
            asynchronously applied as soon as possible.</p> <p>Constraints:</p>
            <ul> <li> <p>If supplied, must match existing DBSecurityGroups.</p>
            </li> </ul>
          schema:
            type: array
            items:
              type: string
        - name: VpcSecurityGroupIds
          in: query
          required: false
          description: <p>A list of EC2 VPC security groups to authorize on this DB
            instance. This change is asynchronously applied as soon as
            possible.</p> <p>Not applicable. The associated list of EC2 VPC
            security groups is managed by the DB cluster. For more information,
            see <a>ModifyDBCluster</a>.</p> <p>Constraints:</p> <ul> <li> <p>If
            supplied, must match existing VpcSecurityGroupIds.</p> </li> </ul>
          schema:
            type: array
            items:
              type: string
        - name: ApplyImmediately
          in: query
          required: false
          description: "<p>Specifies whether the modifications in this request and any
            pending modifications are asynchronously applied as soon as
            possible, regardless of the <code>PreferredMaintenanceWindow</code>
            setting for the DB instance.</p> <p> If this parameter is set to
            <code>false</code>, changes to the DB instance are applied during
            the next maintenance window. Some parameter changes can cause an
            outage and are applied on the next call to <a>RebootDBInstance</a>,
            or the next failure reboot.</p> <p>Default: <code>false</code> </p>"
          schema:
            type: boolean
        - name: MasterUserPassword
          in: query
          required: false
          description: Not applicable.
          schema:
            type: string
        - name: DBParameterGroupName
          in: query
          required: false
          description: "<p>The name of the DB parameter group to apply to the DB instance.
            Changing this setting doesn't result in an outage. The parameter
            group name itself is changed immediately, but the actual parameter
            changes are not applied until you reboot the instance without
            failover. The db instance will NOT be rebooted automatically and the
            parameter changes will NOT be applied during the next maintenance
            window.</p> <p>Default: Uses existing setting</p> <p>Constraints:
            The DB parameter group must be in the same DB parameter group family
            as this DB instance.</p>"
          schema:
            type: string
        - name: BackupRetentionPeriod
          in: query
          required: false
          description: "<p>Not applicable. The retention period for automated backups is
            managed by the DB cluster. For more information, see
            <a>ModifyDBCluster</a>.</p> <p>Default: Uses existing setting</p>"
          schema:
            type: integer
        - name: PreferredBackupWindow
          in: query
          required: false
          description: <p> The daily time range during which automated backups are created
            if automated backups are enabled.</p> <p>Not applicable. The daily
            time range for creating automated backups is managed by the DB
            cluster. For more information, see <a>ModifyDBCluster</a>.</p>
            <p>Constraints:</p> <ul> <li> <p>Must be in the format
            hh24:mi-hh24:mi</p> </li> <li> <p>Must be in Universal Time
            Coordinated (UTC)</p> </li> <li> <p>Must not conflict with the
            preferred maintenance window</p> </li> <li> <p>Must be at least 30
            minutes</p> </li> </ul>
          schema:
            type: string
        - name: PreferredMaintenanceWindow
          in: query
          required: false
          description: "<p>The weekly time range (in UTC) during which system maintenance
            can occur, which might result in an outage. Changing this parameter
            doesn't result in an outage, except in the following situation, and
            the change is asynchronously applied as soon as possible. If there
            are pending actions that cause a reboot, and the maintenance window
            is changed to include the current time, then changing this parameter
            will cause a reboot of the DB instance. If moving this window to the
            current time, there must be at least 30 minutes between the current
            time and end of the window to ensure pending changes are
            applied.</p> <p>Default: Uses existing setting</p> <p>Format:
            ddd:hh24:mi-ddd:hh24:mi</p> <p>Valid Days: Mon | Tue | Wed | Thu |
            Fri | Sat | Sun</p> <p>Constraints: Must be at least 30 minutes</p>"
          schema:
            type: string
        - name: MultiAZ
          in: query
          required: false
          description: Specifies if the DB instance is a Multi-AZ deployment. Changing this
            parameter doesn't result in an outage and the change is applied
            during the next maintenance window unless the
            <code>ApplyImmediately</code> parameter is set to <code>true</code>
            for this request.
          schema:
            type: boolean
        - name: EngineVersion
          in: query
          required: false
          description: <p> The version number of the database engine to upgrade to.
            Changing this parameter results in an outage and the change is
            applied during the next maintenance window unless the
            <code>ApplyImmediately</code> parameter is set to <code>true</code>
            for this request.</p> <p>For major version upgrades, if a nondefault
            DB parameter group is currently in use, a new DB parameter group in
            the DB parameter group family for the new engine version must be
            specified. The new DB parameter group can be the default for that DB
            parameter group family.</p>
          schema:
            type: string
        - name: AllowMajorVersionUpgrade
          in: query
          required: false
          description: "<p>Indicates that major version upgrades are allowed. Changing this
            parameter doesn't result in an outage and the change is
            asynchronously applied as soon as possible.</p> <p>Constraints: This
            parameter must be set to true when specifying a value for the
            EngineVersion parameter that is a different major version than the
            DB instance's current version.</p>"
          schema:
            type: boolean
        - name: AutoMinorVersionUpgrade
          in: query
          required: false
          description: " Indicates that minor version upgrades are applied automatically to
            the DB instance during the maintenance window. Changing this
            parameter doesn't result in an outage except in the following case
            and the change is asynchronously applied as soon as possible. An
            outage will result if this parameter is set to <code>true</code>
            during the maintenance window, and a newer minor version is
            available, and Neptune has enabled auto patching for that engine
            version."
          schema:
            type: boolean
        - name: LicenseModel
          in: query
          required: false
          description: Not supported.
          schema:
            type: string
        - name: Iops
          in: query
          required: false
          description: "<p>The new Provisioned IOPS (I/O operations per second) value for
            the instance.</p> <p>Changing this setting doesn't result in an
            outage and the change is applied during the next maintenance window
            unless the <code>ApplyImmediately</code> parameter is set to
            <code>true</code> for this request.</p> <p>Default: Uses existing
            setting</p>"
          schema:
            type: integer
        - name: OptionGroupName
          in: query
          required: false
          description: <p> Indicates that the DB instance should be associated with the
            specified option group. Changing this parameter doesn't result in an
            outage except in the following case and the change is applied during
            the next maintenance window unless the <code>ApplyImmediately</code>
            parameter is set to <code>true</code> for this request. If the
            parameter change results in an option group that enables OEM, this
            change can cause a brief (sub-second) period during which new
            connections are rejected but existing connections are not
            interrupted.</p> <p>Permanent options, such as the TDE option for
            Oracle Advanced Security TDE, can't be removed from an option group,
            and that option group can't be removed from a DB instance once it is
            associated with a DB instance</p>
          schema:
            type: string
        - name: NewDBInstanceIdentifier
          in: query
          required: false
          description: "<p> The new DB instance identifier for the DB instance when
            renaming a DB instance. When you change the DB instance identifier,
            an instance reboot will occur immediately if you set <code>Apply
            Immediately</code> to true, or will occur during the next
            maintenance window if <code>Apply Immediately</code> to false. This
            value is stored as a lowercase string.</p> <p>Constraints:</p> <ul>
            <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p>
            </li> <li> <p>The first character must be a letter.</p> </li> <li>
            <p>Cannot end with a hyphen or contain two consecutive hyphens.</p>
            </li> </ul> <p>Example: <code>mydbinstance</code> </p>"
          schema:
            type: string
        - name: StorageType
          in: query
          required: false
          description: Not supported.
          schema:
            type: string
        - name: TdeCredentialArn
          in: query
          required: false
          description: The ARN from the key store with which to associate the instance for
            TDE encryption.
          schema:
            type: string
        - name: TdeCredentialPassword
          in: query
          required: false
          description: The password for the given ARN from the key store in order to access
            the device.
          schema:
            type: string
        - name: CACertificateIdentifier
          in: query
          required: false
          description: Indicates the certificate that needs to be associated with the
            instance.
          schema:
            type: string
        - name: Domain
          in: query
          required: false
          description: Not supported.
          schema:
            type: string
        - name: CopyTagsToSnapshot
          in: query
          required: false
          description: True to copy all tags from the DB instance to snapshots of the DB
            instance, and otherwise false. The default is false.
          schema:
            type: boolean
        - name: MonitoringInterval
          in: query
          required: false
          description: "<p>The interval, in seconds, between points when Enhanced
            Monitoring metrics are collected for the DB instance. To disable
            collecting Enhanced Monitoring metrics, specify 0. The default is
            0.</p> <p>If <code>MonitoringRoleArn</code> is specified, then you
            must also set <code>MonitoringInterval</code> to a value other than
            0.</p> <p>Valid Values: <code>0, 1, 5, 10, 15, 30, 60</code> </p>"
          schema:
            type: integer
        - name: DBPortNumber
          in: query
          required: false
          description: "<p>The port number on which the database accepts connections.</p>
            <p>The value of the <code>DBPortNumber</code> parameter must not
            match any of the port values specified for options in the option
            group for the DB instance.</p> <p>Your database will restart when
            you change the <code>DBPortNumber</code> value regardless of the
            value of the <code>ApplyImmediately</code> parameter.</p> <p>
            Default: <code>8182</code> </p>"
          schema:
            type: integer
        - name: PubliclyAccessible
          in: query
          required: false
          description: This flag should no longer be used.
          schema:
            type: boolean
        - name: MonitoringRoleArn
          in: query
          required: false
          description: <p>The ARN for the IAM role that permits Neptune to send enhanced
            monitoring metrics to Amazon CloudWatch Logs. For example,
            <code>arn:aws:iam:123456789012:role/emaccess</code>.</p> <p>If
            <code>MonitoringInterval</code> is set to a value other than 0, then
            you must supply a <code>MonitoringRoleArn</code> value.</p>
          schema:
            type: string
        - name: DomainIAMRoleName
          in: query
          required: false
          description: Not supported
          schema:
            type: string
        - name: PromotionTier
          in: query
          required: false
          description: "<p>A value that specifies the order in which a Read Replica is
            promoted to the primary instance after a failure of the existing
            primary instance.</p> <p>Default: 1</p> <p>Valid Values: 0 - 15</p>"
          schema:
            type: integer
        - name: EnableIAMDatabaseAuthentication
          in: query
          required: false
          description: "<p>True to enable mapping of AWS Identity and Access Management
            (IAM) accounts to database accounts, and otherwise false.</p> <p>You
            can enable IAM database authentication for the following database
            engines</p> <p>Not applicable. Mapping AWS IAM accounts to database
            accounts is managed by the DB cluster. For more information, see
            <a>ModifyDBCluster</a>.</p> <p>Default: <code>false</code> </p>"
          schema:
            type: boolean
        - name: EnablePerformanceInsights
          in: query
          required: false
          description: Not supported.
          schema:
            type: boolean
        - name: PerformanceInsightsKMSKeyId
          in: query
          required: false
          description: Not supported.
          schema:
            type: string
        - name: CloudwatchLogsExportConfiguration.EnableLogTypes
          in: query
          description: >-
            <p>The configuration setting for the log types to be enabled for
            export to CloudWatch Logs for a specific DB instance or DB
            cluster.</p> <p>The <code>EnableLogTypes</code> and
            <code>DisableLogTypes</code> arrays determine which logs will be
            exported (or not exported) to CloudWatch Logs.</p>

            The list of log types to enable.
          schema:
            type: array
            items:
              type: string
        - name: CloudwatchLogsExportConfiguration.DisableLogTypes
          in: query
          description: >-
            <p>The configuration setting for the log types to be enabled for
            export to CloudWatch Logs for a specific DB instance or DB
            cluster.</p> <p>The <code>EnableLogTypes</code> and
            <code>DisableLogTypes</code> arrays determine which logs will be
            exported (or not exported) to CloudWatch Logs.</p>

            The list of log types to disable.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyDBInstance
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyDBInstance
      operationId: POST ModifyDBInstance
      description: Modifies settings for a DB instance. You can change one or more database
        configuration parameters by specifying these parameters and the new
        values in the request. To learn what modifications you can make to your
        DB instance, call <a>DescribeValidDBInstanceModifications</a> before you
        call <a>ModifyDBInstance</a>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyDBInstanceResult"
        "480":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
        "481":
          description: InvalidDBSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSecurityGroupStateFault"
        "482":
          description: DBInstanceAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceAlreadyExistsFault"
        "483":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
        "484":
          description: DBSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSecurityGroupNotFoundFault"
        "485":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
        "486":
          description: InsufficientDBInstanceCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientDBInstanceCapacityFault"
        "487":
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageQuotaExceededFault"
        "488":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "489":
          description: ProvisionedIopsNotAvailableInAZFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ProvisionedIopsNotAvailableInAZFault"
        "490":
          description: OptionGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OptionGroupNotFoundFault"
        "491":
          description: DBUpgradeDependencyFailureFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBUpgradeDependencyFailureFault"
        "492":
          description: StorageTypeNotSupportedFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageTypeNotSupportedFault"
        "493":
          description: AuthorizationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationNotFoundFault"
        "494":
          description: CertificateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CertificateNotFoundFault"
        "495":
          description: DomainNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DomainNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyDBInstance
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBInstanceIdentifier:
                  description: <p>The DB instance identifier. This value is stored as a
                    lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must
                    match the identifier of an existing DBInstance.</p> </li>
                    </ul>
                  type: string
                AllocatedStorage:
                  description: <p>The new amount of storage (in gibibytes) to allocate for
                    the DB instance.</p> <p>Not applicable. Storage is managed
                    by the DB Cluster.</p>
                  type: integer
                DBInstanceClass:
                  description: "<p>The new compute and memory capacity of the DB instance,
                    for example, <code>db.m4.large</code>. Not all DB instance
                    classes are available in all AWS Regions.</p> <p>If you
                    modify the DB instance class, an outage occurs during the
                    change. The change is applied during the next maintenance
                    window, unless <code>ApplyImmediately</code> is specified as
                    <code>true</code> for this request.</p> <p>Default: Uses
                    existing setting</p>"
                  type: string
                DBSubnetGroupName:
                  description: "<p>The new DB subnet group for the DB instance. You can use
                    this parameter to move your DB instance to a different
                    VPC.</p> <p>Changing the subnet group causes an outage
                    during the change. The change is applied during the next
                    maintenance window, unless you specify <code>true</code> for
                    the <code>ApplyImmediately</code> parameter.</p>
                    <p>Constraints: If supplied, must match the name of an
                    existing DBSubnetGroup.</p> <p>Example:
                    <code>mySubnetGroup</code> </p>"
                  type: string
                DBSecurityGroups:
                  description: <p>A list of DB security groups to authorize on this DB
                    instance. Changing this setting doesn't result in an outage
                    and the change is asynchronously applied as soon as
                    possible.</p> <p>Constraints:</p> <ul> <li> <p>If supplied,
                    must match existing DBSecurityGroups.</p> </li> </ul>
                  type: array
                  items:
                    type: string
                VpcSecurityGroupIds:
                  description: <p>A list of EC2 VPC security groups to authorize on this DB
                    instance. This change is asynchronously applied as soon as
                    possible.</p> <p>Not applicable. The associated list of EC2
                    VPC security groups is managed by the DB cluster. For more
                    information, see <a>ModifyDBCluster</a>.</p>
                    <p>Constraints:</p> <ul> <li> <p>If supplied, must match
                    existing VpcSecurityGroupIds.</p> </li> </ul>
                  type: array
                  items:
                    type: string
                ApplyImmediately:
                  description: "<p>Specifies whether the modifications in this request and
                    any pending modifications are asynchronously applied as soon
                    as possible, regardless of the
                    <code>PreferredMaintenanceWindow</code> setting for the DB
                    instance.</p> <p> If this parameter is set to
                    <code>false</code>, changes to the DB instance are applied
                    during the next maintenance window. Some parameter changes
                    can cause an outage and are applied on the next call to
                    <a>RebootDBInstance</a>, or the next failure reboot.</p>
                    <p>Default: <code>false</code> </p>"
                  type: boolean
                MasterUserPassword:
                  description: Not applicable.
                  type: string
                DBParameterGroupName:
                  description: "<p>The name of the DB parameter group to apply to the DB
                    instance. Changing this setting doesn't result in an outage.
                    The parameter group name itself is changed immediately, but
                    the actual parameter changes are not applied until you
                    reboot the instance without failover. The db instance will
                    NOT be rebooted automatically and the parameter changes will
                    NOT be applied during the next maintenance window.</p>
                    <p>Default: Uses existing setting</p> <p>Constraints: The DB
                    parameter group must be in the same DB parameter group
                    family as this DB instance.</p>"
                  type: string
                BackupRetentionPeriod:
                  description: "<p>Not applicable. The retention period for automated
                    backups is managed by the DB cluster. For more information,
                    see <a>ModifyDBCluster</a>.</p> <p>Default: Uses existing
                    setting</p>"
                  type: integer
                PreferredBackupWindow:
                  description: <p> The daily time range during which automated backups are
                    created if automated backups are enabled.</p> <p>Not
                    applicable. The daily time range for creating automated
                    backups is managed by the DB cluster. For more information,
                    see <a>ModifyDBCluster</a>.</p> <p>Constraints:</p> <ul>
                    <li> <p>Must be in the format hh24:mi-hh24:mi</p> </li> <li>
                    <p>Must be in Universal Time Coordinated (UTC)</p> </li>
                    <li> <p>Must not conflict with the preferred maintenance
                    window</p> </li> <li> <p>Must be at least 30 minutes</p>
                    </li> </ul>
                  type: string
                PreferredMaintenanceWindow:
                  description: "<p>The weekly time range (in UTC) during which system
                    maintenance can occur, which might result in an outage.
                    Changing this parameter doesn't result in an outage, except
                    in the following situation, and the change is asynchronously
                    applied as soon as possible. If there are pending actions
                    that cause a reboot, and the maintenance window is changed
                    to include the current time, then changing this parameter
                    will cause a reboot of the DB instance. If moving this
                    window to the current time, there must be at least 30
                    minutes between the current time and end of the window to
                    ensure pending changes are applied.</p> <p>Default: Uses
                    existing setting</p> <p>Format: ddd:hh24:mi-ddd:hh24:mi</p>
                    <p>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</p>
                    <p>Constraints: Must be at least 30 minutes</p>"
                  type: string
                MultiAZ:
                  description: Specifies if the DB instance is a Multi-AZ deployment.
                    Changing this parameter doesn't result in an outage and the
                    change is applied during the next maintenance window unless
                    the <code>ApplyImmediately</code> parameter is set to
                    <code>true</code> for this request.
                  type: boolean
                EngineVersion:
                  description: <p> The version number of the database engine to upgrade to.
                    Changing this parameter results in an outage and the change
                    is applied during the next maintenance window unless the
                    <code>ApplyImmediately</code> parameter is set to
                    <code>true</code> for this request.</p> <p>For major version
                    upgrades, if a nondefault DB parameter group is currently in
                    use, a new DB parameter group in the DB parameter group
                    family for the new engine version must be specified. The new
                    DB parameter group can be the default for that DB parameter
                    group family.</p>
                  type: string
                AllowMajorVersionUpgrade:
                  description: "<p>Indicates that major version upgrades are allowed.
                    Changing this parameter doesn't result in an outage and the
                    change is asynchronously applied as soon as possible.</p>
                    <p>Constraints: This parameter must be set to true when
                    specifying a value for the EngineVersion parameter that is a
                    different major version than the DB instance's current
                    version.</p>"
                  type: boolean
                AutoMinorVersionUpgrade:
                  description: " Indicates that minor version upgrades are applied
                    automatically to the DB instance during the maintenance
                    window. Changing this parameter doesn't result in an outage
                    except in the following case and the change is
                    asynchronously applied as soon as possible. An outage will
                    result if this parameter is set to <code>true</code> during
                    the maintenance window, and a newer minor version is
                    available, and Neptune has enabled auto patching for that
                    engine version."
                  type: boolean
                LicenseModel:
                  description: Not supported.
                  type: string
                Iops:
                  description: "<p>The new Provisioned IOPS (I/O operations per second)
                    value for the instance.</p> <p>Changing this setting doesn't
                    result in an outage and the change is applied during the
                    next maintenance window unless the
                    <code>ApplyImmediately</code> parameter is set to
                    <code>true</code> for this request.</p> <p>Default: Uses
                    existing setting</p>"
                  type: integer
                OptionGroupName:
                  description: <p> Indicates that the DB instance should be associated with
                    the specified option group. Changing this parameter doesn't
                    result in an outage except in the following case and the
                    change is applied during the next maintenance window unless
                    the <code>ApplyImmediately</code> parameter is set to
                    <code>true</code> for this request. If the parameter change
                    results in an option group that enables OEM, this change can
                    cause a brief (sub-second) period during which new
                    connections are rejected but existing connections are not
                    interrupted.</p> <p>Permanent options, such as the TDE
                    option for Oracle Advanced Security TDE, can't be removed
                    from an option group, and that option group can't be removed
                    from a DB instance once it is associated with a DB
                    instance</p>
                  type: string
                NewDBInstanceIdentifier:
                  description: "<p> The new DB instance identifier for the DB instance when
                    renaming a DB instance. When you change the DB instance
                    identifier, an instance reboot will occur immediately if you
                    set <code>Apply Immediately</code> to true, or will occur
                    during the next maintenance window if <code>Apply
                    Immediately</code> to false. This value is stored as a
                    lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must
                    contain from 1 to 63 letters, numbers, or hyphens.</p> </li>
                    <li> <p>The first character must be a letter.</p> </li> <li>
                    <p>Cannot end with a hyphen or contain two consecutive
                    hyphens.</p> </li> </ul> <p>Example:
                    <code>mydbinstance</code> </p>"
                  type: string
                StorageType:
                  description: Not supported.
                  type: string
                TdeCredentialArn:
                  description: The ARN from the key store with which to associate the
                    instance for TDE encryption.
                  type: string
                TdeCredentialPassword:
                  description: The password for the given ARN from the key store in order
                    to access the device.
                  type: string
                CACertificateIdentifier:
                  description: Indicates the certificate that needs to be associated with
                    the instance.
                  type: string
                Domain:
                  description: Not supported.
                  type: string
                CopyTagsToSnapshot:
                  description: True to copy all tags from the DB instance to snapshots of
                    the DB instance, and otherwise false. The default is false.
                  type: boolean
                MonitoringInterval:
                  description: "<p>The interval, in seconds, between points when Enhanced
                    Monitoring metrics are collected for the DB instance. To
                    disable collecting Enhanced Monitoring metrics, specify 0.
                    The default is 0.</p> <p>If <code>MonitoringRoleArn</code>
                    is specified, then you must also set
                    <code>MonitoringInterval</code> to a value other than 0.</p>
                    <p>Valid Values: <code>0, 1, 5, 10, 15, 30, 60</code> </p>"
                  type: integer
                DBPortNumber:
                  description: "<p>The port number on which the database accepts
                    connections.</p> <p>The value of the
                    <code>DBPortNumber</code> parameter must not match any of
                    the port values specified for options in the option group
                    for the DB instance.</p> <p>Your database will restart when
                    you change the <code>DBPortNumber</code> value regardless of
                    the value of the <code>ApplyImmediately</code>
                    parameter.</p> <p> Default: <code>8182</code> </p>"
                  type: integer
                PubliclyAccessible:
                  description: This flag should no longer be used.
                  type: boolean
                MonitoringRoleArn:
                  description: <p>The ARN for the IAM role that permits Neptune to send
                    enhanced monitoring metrics to Amazon CloudWatch Logs. For
                    example,
                    <code>arn:aws:iam:123456789012:role/emaccess</code>.</p>
                    <p>If <code>MonitoringInterval</code> is set to a value
                    other than 0, then you must supply a
                    <code>MonitoringRoleArn</code> value.</p>
                  type: string
                DomainIAMRoleName:
                  description: Not supported
                  type: string
                PromotionTier:
                  description: "<p>A value that specifies the order in which a Read Replica
                    is promoted to the primary instance after a failure of the
                    existing primary instance.</p> <p>Default: 1</p> <p>Valid
                    Values: 0 - 15</p>"
                  type: integer
                EnableIAMDatabaseAuthentication:
                  description: "<p>True to enable mapping of AWS Identity and Access
                    Management (IAM) accounts to database accounts, and
                    otherwise false.</p> <p>You can enable IAM database
                    authentication for the following database engines</p> <p>Not
                    applicable. Mapping AWS IAM accounts to database accounts is
                    managed by the DB cluster. For more information, see
                    <a>ModifyDBCluster</a>.</p> <p>Default: <code>false</code>
                    </p>"
                  type: boolean
                EnablePerformanceInsights:
                  description: Not supported.
                  type: boolean
                PerformanceInsightsKMSKeyId:
                  description: Not supported.
                  type: string
                CloudwatchLogsExportConfiguration.EnableLogTypes:
                  description: >-
                    <p>The configuration setting for the log types to be enabled
                    for export to CloudWatch Logs for a specific DB instance or
                    DB cluster.</p> <p>The <code>EnableLogTypes</code> and
                    <code>DisableLogTypes</code> arrays determine which logs
                    will be exported (or not exported) to CloudWatch Logs.</p>

                    The list of log types to enable.
                  type: array
                  items:
                    type: string
                CloudwatchLogsExportConfiguration.DisableLogTypes:
                  description: >-
                    <p>The configuration setting for the log types to be enabled
                    for export to CloudWatch Logs for a specific DB instance or
                    DB cluster.</p> <p>The <code>EnableLogTypes</code> and
                    <code>DisableLogTypes</code> arrays determine which logs
                    will be exported (or not exported) to CloudWatch Logs.</p>

                    The list of log types to disable.
                  type: array
                  items:
                    type: string
              required:
                - DBInstanceIdentifier
  /#Action=ModifyDBParameterGroup:
    get:
      x-aws-operation-name: ModifyDBParameterGroup
      operationId: GET ModifyDBParameterGroup
      description: "<p>Modifies the parameters of a DB parameter group. To modify more than
        one parameter, submit a list of the following:
        <code>ParameterName</code>, <code>ParameterValue</code>, and
        <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in
        a single request.</p> <note> <p>Changes to dynamic parameters are
        applied immediately. Changes to static parameters require a reboot
        without failover to the DB instance associated with the parameter group
        before the change can take effect.</p> </note> <important> <p>After you
        modify a DB parameter group, you should wait at least 5 minutes before
        creating your first DB instance that uses that DB parameter group as the
        default parameter group. This allows Amazon Neptune to fully complete
        the modify action before the parameter group is used as the default for
        a new DB instance. This is especially important for parameters that are
        critical when creating the default database for a DB instance, such as
        the character set for the default database defined by the
        <code>character_set_database</code> parameter. You can use the
        <i>Parameter Groups</i> option of the Amazon Neptune console or the
        <i>DescribeDBParameters</i> command to verify that your DB parameter
        group has been created or modified.</p> </important>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNameMessage"
        "480":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
        "481":
          description: InvalidDBParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBParameterGroupStateFault"
      parameters:
        - name: DBParameterGroupName
          in: query
          required: true
          description: <p>The name of the DB parameter group.</p> <p>Constraints:</p> <ul>
            <li> <p>If supplied, must match the name of an existing
            DBParameterGroup.</p> </li> </ul>
          schema:
            type: string
        - name: Parameters
          in: query
          required: true
          description: "<p>An array of parameter names, values, and the apply method for
            the parameter update. At least one parameter name, value, and apply
            method must be supplied; subsequent arguments are optional. A
            maximum of 20 parameters can be modified in a single request.</p>
            <p>Valid Values (for the application method): <code>immediate |
            pending-reboot</code> </p> <note> <p>You can use the immediate value
            with dynamic parameters only. You can use the pending-reboot value
            for both dynamic and static parameters, and changes are applied when
            you reboot the DB instance without failover.</p> </note>"
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyDBParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyDBParameterGroup
      operationId: POST ModifyDBParameterGroup
      description: "<p>Modifies the parameters of a DB parameter group. To modify more than
        one parameter, submit a list of the following:
        <code>ParameterName</code>, <code>ParameterValue</code>, and
        <code>ApplyMethod</code>. A maximum of 20 parameters can be modified in
        a single request.</p> <note> <p>Changes to dynamic parameters are
        applied immediately. Changes to static parameters require a reboot
        without failover to the DB instance associated with the parameter group
        before the change can take effect.</p> </note> <important> <p>After you
        modify a DB parameter group, you should wait at least 5 minutes before
        creating your first DB instance that uses that DB parameter group as the
        default parameter group. This allows Amazon Neptune to fully complete
        the modify action before the parameter group is used as the default for
        a new DB instance. This is especially important for parameters that are
        critical when creating the default database for a DB instance, such as
        the character set for the default database defined by the
        <code>character_set_database</code> parameter. You can use the
        <i>Parameter Groups</i> option of the Amazon Neptune console or the
        <i>DescribeDBParameters</i> command to verify that your DB parameter
        group has been created or modified.</p> </important>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNameMessage"
        "480":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
        "481":
          description: InvalidDBParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBParameterGroupStateFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyDBParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBParameterGroupName:
                  description: <p>The name of the DB parameter group.</p>
                    <p>Constraints:</p> <ul> <li> <p>If supplied, must match the
                    name of an existing DBParameterGroup.</p> </li> </ul>
                  type: string
                Parameters:
                  description: "<p>An array of parameter names, values, and the apply
                    method for the parameter update. At least one parameter
                    name, value, and apply method must be supplied; subsequent
                    arguments are optional. A maximum of 20 parameters can be
                    modified in a single request.</p> <p>Valid Values (for the
                    application method): <code>immediate | pending-reboot</code>
                    </p> <note> <p>You can use the immediate value with dynamic
                    parameters only. You can use the pending-reboot value for
                    both dynamic and static parameters, and changes are applied
                    when you reboot the DB instance without failover.</p>
                    </note>"
                  type: array
                  items:
                    type: string
              required:
                - DBParameterGroupName
                - Parameters
  /#Action=ModifyDBSubnetGroup:
    get:
      x-aws-operation-name: ModifyDBSubnetGroup
      operationId: GET ModifyDBSubnetGroup
      description: Modifies an existing DB subnet group. DB subnet groups must contain at
        least one subnet in at least two AZs in the AWS Region.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyDBSubnetGroupResult"
        "480":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
        "481":
          description: DBSubnetQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetQuotaExceededFault"
        "482":
          description: SubnetAlreadyInUse
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubnetAlreadyInUse"
        "483":
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs"
        "484":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
      parameters:
        - name: DBSubnetGroupName
          in: query
          required: true
          description: "<p>The name for the DB subnet group. This value is stored as a
            lowercase string. You can't modify the default subnet group.</p>
            <p>Constraints: Must match the name of an existing DBSubnetGroup.
            Must not be default.</p> <p>Example: <code>mySubnetgroup</code>
            </p>"
          schema:
            type: string
        - name: DBSubnetGroupDescription
          in: query
          required: false
          description: The description for the DB subnet group.
          schema:
            type: string
        - name: SubnetIds
          in: query
          required: true
          description: The EC2 subnet IDs for the DB subnet group.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyDBSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyDBSubnetGroup
      operationId: POST ModifyDBSubnetGroup
      description: Modifies an existing DB subnet group. DB subnet groups must contain at
        least one subnet in at least two AZs in the AWS Region.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyDBSubnetGroupResult"
        "480":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
        "481":
          description: DBSubnetQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetQuotaExceededFault"
        "482":
          description: SubnetAlreadyInUse
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubnetAlreadyInUse"
        "483":
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupDoesNotCoverEnoughAZs"
        "484":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyDBSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBSubnetGroupName:
                  description: "<p>The name for the DB subnet group. This value is stored
                    as a lowercase string. You can't modify the default subnet
                    group.</p> <p>Constraints: Must match the name of an
                    existing DBSubnetGroup. Must not be default.</p> <p>Example:
                    <code>mySubnetgroup</code> </p>"
                  type: string
                DBSubnetGroupDescription:
                  description: The description for the DB subnet group.
                  type: string
                SubnetIds:
                  description: The EC2 subnet IDs for the DB subnet group.
                  type: array
                  items:
                    type: string
              required:
                - DBSubnetGroupName
                - SubnetIds
  /#Action=ModifyEventSubscription:
    get:
      x-aws-operation-name: ModifyEventSubscription
      operationId: GET ModifyEventSubscription
      description: <p>Modifies an existing event notification subscription. Note that you
        can't modify the source identifiers using this call; to change source
        identifiers for a subscription, use the
        <a>AddSourceIdentifierToSubscription</a> and
        <a>RemoveSourceIdentifierFromSubscription</a> calls.</p> <p>You can see
        a list of the event categories for a given SourceType by using the
        <b>DescribeEventCategories</b> action.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyEventSubscriptionResult"
        "480":
          description: EventSubscriptionQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EventSubscriptionQuotaExceededFault"
        "481":
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionNotFoundFault"
        "482":
          description: SNSInvalidTopicFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SNSInvalidTopicFault"
        "483":
          description: SNSNoAuthorizationFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SNSNoAuthorizationFault"
        "484":
          description: SNSTopicArnNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SNSTopicArnNotFoundFault"
        "485":
          description: SubscriptionCategoryNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionCategoryNotFoundFault"
      parameters:
        - name: SubscriptionName
          in: query
          required: true
          description: The name of the event notification subscription.
          schema:
            type: string
        - name: SnsTopicArn
          in: query
          required: false
          description: The Amazon Resource Name (ARN) of the SNS topic created for event
            notification. The ARN is created by Amazon SNS when you create a
            topic and subscribe to it.
          schema:
            type: string
        - name: SourceType
          in: query
          required: false
          description: "<p>The type of source that is generating the events. For example,
            if you want to be notified of events generated by a DB instance, you
            would set this parameter to db-instance. if this value is not
            specified, all events are returned.</p> <p>Valid values: db-instance
            | db-parameter-group | db-security-group | db-snapshot</p>"
          schema:
            type: string
        - name: EventCategories
          in: query
          required: false
          description: " A list of event categories for a SourceType that you want to
            subscribe to. You can see a list of the categories for a given
            SourceType by using the <b>DescribeEventCategories</b> action."
          schema:
            type: array
            items:
              type: string
        - name: Enabled
          in: query
          required: false
          description: " A Boolean value; set to <b>true</b> to activate the subscription."
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyEventSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyEventSubscription
      operationId: POST ModifyEventSubscription
      description: <p>Modifies an existing event notification subscription. Note that you
        can't modify the source identifiers using this call; to change source
        identifiers for a subscription, use the
        <a>AddSourceIdentifierToSubscription</a> and
        <a>RemoveSourceIdentifierFromSubscription</a> calls.</p> <p>You can see
        a list of the event categories for a given SourceType by using the
        <b>DescribeEventCategories</b> action.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyEventSubscriptionResult"
        "480":
          description: EventSubscriptionQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EventSubscriptionQuotaExceededFault"
        "481":
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionNotFoundFault"
        "482":
          description: SNSInvalidTopicFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SNSInvalidTopicFault"
        "483":
          description: SNSNoAuthorizationFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SNSNoAuthorizationFault"
        "484":
          description: SNSTopicArnNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SNSTopicArnNotFoundFault"
        "485":
          description: SubscriptionCategoryNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionCategoryNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyEventSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SubscriptionName:
                  description: The name of the event notification subscription.
                  type: string
                SnsTopicArn:
                  description: The Amazon Resource Name (ARN) of the SNS topic created for
                    event notification. The ARN is created by Amazon SNS when
                    you create a topic and subscribe to it.
                  type: string
                SourceType:
                  description: "<p>The type of source that is generating the events. For
                    example, if you want to be notified of events generated by a
                    DB instance, you would set this parameter to db-instance. if
                    this value is not specified, all events are returned.</p>
                    <p>Valid values: db-instance | db-parameter-group |
                    db-security-group | db-snapshot</p>"
                  type: string
                EventCategories:
                  description: " A list of event categories for a SourceType that you want
                    to subscribe to. You can see a list of the categories for a
                    given SourceType by using the <b>DescribeEventCategories</b>
                    action."
                  type: array
                  items:
                    type: string
                Enabled:
                  description: " A Boolean value; set to <b>true</b> to activate the
                    subscription."
                  type: boolean
              required:
                - SubscriptionName
  /#Action=PromoteReadReplicaDBCluster:
    get:
      x-aws-operation-name: PromoteReadReplicaDBCluster
      operationId: GET PromoteReadReplicaDBCluster
      description: Not supported.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PromoteReadReplicaDBClusterResult"
        "480":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "481":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
      parameters:
        - name: DBClusterIdentifier
          in: query
          required: true
          description: Not supported.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - PromoteReadReplicaDBCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: PromoteReadReplicaDBCluster
      operationId: POST PromoteReadReplicaDBCluster
      description: Not supported.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PromoteReadReplicaDBClusterResult"
        "480":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "481":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - PromoteReadReplicaDBCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterIdentifier:
                  description: Not supported.
                  type: string
              required:
                - DBClusterIdentifier
  /#Action=RebootDBInstance:
    get:
      x-aws-operation-name: RebootDBInstance
      operationId: GET RebootDBInstance
      description: <p>You might need to reboot your DB instance, usually for maintenance
        reasons. For example, if you make certain modifications, or if you
        change the DB parameter group associated with the DB instance, you must
        reboot the instance for the changes to take effect.</p> <p>Rebooting a
        DB instance restarts the database engine service. Rebooting a DB
        instance results in a momentary outage, during which the DB instance
        status is set to rebooting.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RebootDBInstanceResult"
        "480":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
        "481":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: true
          description: <p>The DB instance identifier. This parameter is stored as a
            lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must match
            the identifier of an existing DBInstance.</p> </li> </ul>
          schema:
            type: string
        - name: ForceFailover
          in: query
          required: false
          description: "<p> When <code>true</code>, the reboot is conducted through a
            MultiAZ failover.</p> <p>Constraint: You can't specify
            <code>true</code> if the instance is not configured for
            MultiAZ.</p>"
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RebootDBInstance
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RebootDBInstance
      operationId: POST RebootDBInstance
      description: <p>You might need to reboot your DB instance, usually for maintenance
        reasons. For example, if you make certain modifications, or if you
        change the DB parameter group associated with the DB instance, you must
        reboot the instance for the changes to take effect.</p> <p>Rebooting a
        DB instance restarts the database engine service. Rebooting a DB
        instance results in a momentary outage, during which the DB instance
        status is set to rebooting.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RebootDBInstanceResult"
        "480":
          description: InvalidDBInstanceStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBInstanceStateFault"
        "481":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RebootDBInstance
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBInstanceIdentifier:
                  description: <p>The DB instance identifier. This parameter is stored as a
                    lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must
                    match the identifier of an existing DBInstance.</p> </li>
                    </ul>
                  type: string
                ForceFailover:
                  description: "<p> When <code>true</code>, the reboot is conducted through
                    a MultiAZ failover.</p> <p>Constraint: You can't specify
                    <code>true</code> if the instance is not configured for
                    MultiAZ.</p>"
                  type: boolean
              required:
                - DBInstanceIdentifier
  /#Action=RemoveRoleFromDBCluster:
    get:
      x-aws-operation-name: RemoveRoleFromDBCluster
      operationId: GET RemoveRoleFromDBCluster
      description: Disassociates an Identity and Access Management (IAM) role from a DB
        cluster.
      responses:
        "200":
          description: Success
        "480":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "481":
          description: DBClusterRoleNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterRoleNotFoundFault"
        "482":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
      parameters:
        - name: DBClusterIdentifier
          in: query
          required: true
          description: The name of the DB cluster to disassociate the IAM role from.
          schema:
            type: string
        - name: RoleArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the IAM role to disassociate from
            the DB cluster, for example
            <code>arn:aws:iam::123456789012:role/NeptuneAccessRole</code>.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RemoveRoleFromDBCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RemoveRoleFromDBCluster
      operationId: POST RemoveRoleFromDBCluster
      description: Disassociates an Identity and Access Management (IAM) role from a DB
        cluster.
      responses:
        "200":
          description: Success
        "480":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "481":
          description: DBClusterRoleNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterRoleNotFoundFault"
        "482":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RemoveRoleFromDBCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterIdentifier:
                  description: The name of the DB cluster to disassociate the IAM role from.
                  type: string
                RoleArn:
                  description: The Amazon Resource Name (ARN) of the IAM role to
                    disassociate from the DB cluster, for example
                    <code>arn:aws:iam::123456789012:role/NeptuneAccessRole</code>.
                  type: string
              required:
                - DBClusterIdentifier
                - RoleArn
  /#Action=RemoveSourceIdentifierFromSubscription:
    get:
      x-aws-operation-name: RemoveSourceIdentifierFromSubscription
      operationId: GET RemoveSourceIdentifierFromSubscription
      description: Removes a source identifier from an existing event notification
        subscription.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RemoveSourceIdentifierFromSubscriptionR\
                  esult"
        "480":
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionNotFoundFault"
        "481":
          description: SourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SourceNotFoundFault"
      parameters:
        - name: SubscriptionName
          in: query
          required: true
          description: The name of the event notification subscription you want to remove a
            source identifier from.
          schema:
            type: string
        - name: SourceIdentifier
          in: query
          required: true
          description: " The source identifier to be removed from the subscription, such as
            the <b>DB instance identifier</b> for a DB instance or the name of a
            security group."
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RemoveSourceIdentifierFromSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RemoveSourceIdentifierFromSubscription
      operationId: POST RemoveSourceIdentifierFromSubscription
      description: Removes a source identifier from an existing event notification
        subscription.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RemoveSourceIdentifierFromSubscriptionR\
                  esult"
        "480":
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionNotFoundFault"
        "481":
          description: SourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SourceNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RemoveSourceIdentifierFromSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SubscriptionName:
                  description: The name of the event notification subscription you want to
                    remove a source identifier from.
                  type: string
                SourceIdentifier:
                  description: " The source identifier to be removed from the subscription,
                    such as the <b>DB instance identifier</b> for a DB instance
                    or the name of a security group."
                  type: string
              required:
                - SubscriptionName
                - SourceIdentifier
  /#Action=RemoveTagsFromResource:
    get:
      x-aws-operation-name: RemoveTagsFromResource
      operationId: GET RemoveTagsFromResource
      description: Removes metadata tags from an Amazon Neptune resource.
      responses:
        "200":
          description: Success
        "480":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
        "481":
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSnapshotNotFoundFault"
        "482":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
      parameters:
        - name: ResourceName
          in: query
          required: true
          description: The Amazon Neptune resource that the tags are removed from. This
            value is an Amazon Resource Name (ARN). For information about
            creating an ARN, see <a
            href="https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing">
            Constructing an Amazon Resource Name (ARN)</a>.
          schema:
            type: string
        - name: TagKeys
          in: query
          required: true
          description: The tag key (name) of the tag to be removed.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RemoveTagsFromResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RemoveTagsFromResource
      operationId: POST RemoveTagsFromResource
      description: Removes metadata tags from an Amazon Neptune resource.
      responses:
        "200":
          description: Success
        "480":
          description: DBInstanceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBInstanceNotFoundFault"
        "481":
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSnapshotNotFoundFault"
        "482":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RemoveTagsFromResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ResourceName:
                  description: The Amazon Neptune resource that the tags are removed from.
                    This value is an Amazon Resource Name (ARN). For information
                    about creating an ARN, see <a
                    href="https://docs.aws.amazon.com/neptune/latest/UserGuide/tagging.ARN.html#tagging.ARN.Constructing">
                    Constructing an Amazon Resource Name (ARN)</a>.
                  type: string
                TagKeys:
                  description: The tag key (name) of the tag to be removed.
                  type: array
                  items:
                    type: string
              required:
                - ResourceName
                - TagKeys
  /#Action=ResetDBClusterParameterGroup:
    get:
      x-aws-operation-name: ResetDBClusterParameterGroup
      operationId: GET ResetDBClusterParameterGroup
      description: "<p> Modifies the parameters of a DB cluster parameter group to the
        default value. To reset specific parameters submit a list of the
        following: <code>ParameterName</code> and <code>ApplyMethod</code>. To
        reset the entire DB cluster parameter group, specify the
        <code>DBClusterParameterGroupName</code> and
        <code>ResetAllParameters</code> parameters.</p> <p> When resetting the
        entire group, dynamic parameters are updated immediately and static
        parameters are set to <code>pending-reboot</code> to take effect on the
        next DB instance restart or <a>RebootDBInstance</a> request. You must
        call <a>RebootDBInstance</a> for every DB instance in your DB cluster
        that you want the updated static parameter to apply to.</p>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterParameterGroupNameMessage"
        "480":
          description: InvalidDBParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBParameterGroupStateFault"
        "481":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
      parameters:
        - name: DBClusterParameterGroupName
          in: query
          required: true
          description: The name of the DB cluster parameter group to reset.
          schema:
            type: string
        - name: ResetAllParameters
          in: query
          required: false
          description: A value that is set to <code>true</code> to reset all parameters in
            the DB cluster parameter group to their default values, and
            <code>false</code> otherwise. You can't use this parameter if there
            is a list of parameter names specified for the
            <code>Parameters</code> parameter.
          schema:
            type: boolean
        - name: Parameters
          in: query
          required: false
          description: A list of parameter names in the DB cluster parameter group to reset
            to the default values. You can't use this parameter if the
            <code>ResetAllParameters</code> parameter is set to
            <code>true</code>.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ResetDBClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ResetDBClusterParameterGroup
      operationId: POST ResetDBClusterParameterGroup
      description: "<p> Modifies the parameters of a DB cluster parameter group to the
        default value. To reset specific parameters submit a list of the
        following: <code>ParameterName</code> and <code>ApplyMethod</code>. To
        reset the entire DB cluster parameter group, specify the
        <code>DBClusterParameterGroupName</code> and
        <code>ResetAllParameters</code> parameters.</p> <p> When resetting the
        entire group, dynamic parameters are updated immediately and static
        parameters are set to <code>pending-reboot</code> to take effect on the
        next DB instance restart or <a>RebootDBInstance</a> request. You must
        call <a>RebootDBInstance</a> for every DB instance in your DB cluster
        that you want the updated static parameter to apply to.</p>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterParameterGroupNameMessage"
        "480":
          description: InvalidDBParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBParameterGroupStateFault"
        "481":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ResetDBClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterParameterGroupName:
                  description: The name of the DB cluster parameter group to reset.
                  type: string
                ResetAllParameters:
                  description: A value that is set to <code>true</code> to reset all
                    parameters in the DB cluster parameter group to their
                    default values, and <code>false</code> otherwise. You can't
                    use this parameter if there is a list of parameter names
                    specified for the <code>Parameters</code> parameter.
                  type: boolean
                Parameters:
                  description: A list of parameter names in the DB cluster parameter group
                    to reset to the default values. You can't use this parameter
                    if the <code>ResetAllParameters</code> parameter is set to
                    <code>true</code>.
                  type: array
                  items:
                    type: string
              required:
                - DBClusterParameterGroupName
  /#Action=ResetDBParameterGroup:
    get:
      x-aws-operation-name: ResetDBParameterGroup
      operationId: GET ResetDBParameterGroup
      description: "Modifies the parameters of a DB parameter group to the engine/system
        default value. To reset specific parameters, provide a list of the
        following: <code>ParameterName</code> and <code>ApplyMethod</code>. To
        reset the entire DB parameter group, specify the
        <code>DBParameterGroup</code> name and <code>ResetAllParameters</code>
        parameters. When resetting the entire group, dynamic parameters are
        updated immediately and static parameters are set to
        <code>pending-reboot</code> to take effect on the next DB instance
        restart or <code>RebootDBInstance</code> request."
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNameMessage"
        "480":
          description: InvalidDBParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBParameterGroupStateFault"
        "481":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
      parameters:
        - name: DBParameterGroupName
          in: query
          required: true
          description: <p>The name of the DB parameter group.</p> <p>Constraints:</p> <ul>
            <li> <p>Must match the name of an existing DBParameterGroup.</p>
            </li> </ul>
          schema:
            type: string
        - name: ResetAllParameters
          in: query
          required: false
          description: "<p>Specifies whether (<code>true</code>) or not
            (<code>false</code>) to reset all parameters in the DB parameter
            group to default values.</p> <p>Default: <code>true</code> </p>"
          schema:
            type: boolean
        - name: Parameters
          in: query
          required: false
          description: "<p>To reset the entire DB parameter group, specify the
            <code>DBParameterGroup</code> name and
            <code>ResetAllParameters</code> parameters. To reset specific
            parameters, provide a list of the following:
            <code>ParameterName</code> and <code>ApplyMethod</code>. A maximum
            of 20 parameters can be modified in a single request.</p> <p>Valid
            Values (for Apply method): <code>pending-reboot</code> </p>"
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ResetDBParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ResetDBParameterGroup
      operationId: POST ResetDBParameterGroup
      description: "Modifies the parameters of a DB parameter group to the engine/system
        default value. To reset specific parameters, provide a list of the
        following: <code>ParameterName</code> and <code>ApplyMethod</code>. To
        reset the entire DB parameter group, specify the
        <code>DBParameterGroup</code> name and <code>ResetAllParameters</code>
        parameters. When resetting the entire group, dynamic parameters are
        updated immediately and static parameters are set to
        <code>pending-reboot</code> to take effect on the next DB instance
        restart or <code>RebootDBInstance</code> request."
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNameMessage"
        "480":
          description: InvalidDBParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBParameterGroupStateFault"
        "481":
          description: DBParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBParameterGroupNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ResetDBParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBParameterGroupName:
                  description: <p>The name of the DB parameter group.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must match the name of an
                    existing DBParameterGroup.</p> </li> </ul>
                  type: string
                ResetAllParameters:
                  description: "<p>Specifies whether (<code>true</code>) or not
                    (<code>false</code>) to reset all parameters in the DB
                    parameter group to default values.</p> <p>Default:
                    <code>true</code> </p>"
                  type: boolean
                Parameters:
                  description: "<p>To reset the entire DB parameter group, specify the
                    <code>DBParameterGroup</code> name and
                    <code>ResetAllParameters</code> parameters. To reset
                    specific parameters, provide a list of the following:
                    <code>ParameterName</code> and <code>ApplyMethod</code>. A
                    maximum of 20 parameters can be modified in a single
                    request.</p> <p>Valid Values (for Apply method):
                    <code>pending-reboot</code> </p>"
                  type: array
                  items:
                    type: string
              required:
                - DBParameterGroupName
  /#Action=RestoreDBClusterFromSnapshot:
    get:
      x-aws-operation-name: RestoreDBClusterFromSnapshot
      operationId: GET RestoreDBClusterFromSnapshot
      description: <p>Creates a new DB cluster from a DB snapshot or DB cluster
        snapshot.</p> <p>If a DB snapshot is specified, the target DB cluster is
        created from the source DB snapshot with a default configuration and
        default security group.</p> <p>If a DB cluster snapshot is specified,
        the target DB cluster is created from the source DB cluster restore
        point with the same configuration as the original source DB cluster,
        except that the new DB cluster is created with the default security
        group.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RestoreDBClusterFromSnapshotResult"
        "480":
          description: DBClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterAlreadyExistsFault"
        "481":
          description: DBClusterQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterQuotaExceededFault"
        "482":
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageQuotaExceededFault"
        "483":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
        "484":
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSnapshotNotFoundFault"
        "485":
          description: DBClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotNotFoundFault"
        "486":
          description: InsufficientDBClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientDBClusterCapacityFault"
        "487":
          description: InsufficientStorageClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientStorageClusterCapacityFault"
        "488":
          description: InvalidDBSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSnapshotStateFault"
        "489":
          description: InvalidDBClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterSnapshotStateFault"
        "490":
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageQuotaExceededFault"
        "491":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "492":
          description: InvalidRestoreFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRestoreFault"
        "493":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
        "494":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
        "495":
          description: OptionGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OptionGroupNotFoundFault"
        "496":
          description: KMSKeyNotAccessibleFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSKeyNotAccessibleFault"
        "497":
          description: DBClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterParameterGroupNotFoundFault"
      parameters:
        - name: AvailabilityZones
          in: query
          required: false
          description: Provides the list of EC2 Availability Zones that instances in the
            restored DB cluster can be created in.
          schema:
            type: array
            items:
              type: string
        - name: DBClusterIdentifier
          in: query
          required: true
          description: "<p>The name of the DB cluster to create from the DB snapshot or DB
            cluster snapshot. This parameter isn't case-sensitive.</p>
            <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters,
            numbers, or hyphens</p> </li> <li> <p>First character must be a
            letter</p> </li> <li> <p>Cannot end with a hyphen or contain two
            consecutive hyphens</p> </li> </ul> <p>Example:
            <code>my-snapshot-id</code> </p>"
          schema:
            type: string
        - name: SnapshotIdentifier
          in: query
          required: true
          description: <p>The identifier for the DB snapshot or DB cluster snapshot to
            restore from.</p> <p>You can use either the name or the Amazon
            Resource Name (ARN) to specify a DB cluster snapshot. However, you
            can use only the ARN to specify a DB snapshot.</p>
            <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an
            existing Snapshot.</p> </li> </ul>
          schema:
            type: string
        - name: Engine
          in: query
          required: true
          description: "<p>The database engine to use for the new DB cluster.</p>
            <p>Default: The same as source</p> <p>Constraint: Must be compatible
            with the engine of the source</p>"
          schema:
            type: string
        - name: EngineVersion
          in: query
          required: false
          description: The version of the database engine to use for the new DB cluster.
          schema:
            type: string
        - name: Port
          in: query
          required: false
          description: "<p>The port number on which the new DB cluster accepts
            connections.</p> <p>Constraints: Value must be
            <code>1150-65535</code> </p> <p>Default: The same port as the
            original DB cluster.</p>"
          schema:
            type: integer
        - name: DBSubnetGroupName
          in: query
          required: false
          description: "<p>The name of the DB subnet group to use for the new DB
            cluster.</p> <p>Constraints: If supplied, must match the name of an
            existing DBSubnetGroup.</p> <p>Example: <code>mySubnetgroup</code>
            </p>"
          schema:
            type: string
        - name: DatabaseName
          in: query
          required: false
          description: Not supported.
          schema:
            type: string
        - name: OptionGroupName
          in: query
          required: false
          description: The name of the option group to use for the restored DB cluster.
          schema:
            type: string
        - name: VpcSecurityGroupIds
          in: query
          required: false
          description: A list of VPC security groups that the new DB cluster will belong to.
          schema:
            type: array
            items:
              type: string
        - name: Tags
          in: query
          required: false
          description: The tags to be assigned to the restored DB cluster.
          schema:
            type: array
            items:
              type: string
        - name: KmsKeyId
          in: query
          required: false
          description: <p>The AWS KMS key identifier to use when restoring an encrypted DB
            cluster from a DB snapshot or DB cluster snapshot.</p> <p>The KMS
            key identifier is the Amazon Resource Name (ARN) for the KMS
            encryption key. If you are restoring a DB cluster with the same AWS
            account that owns the KMS encryption key used to encrypt the new DB
            cluster, then you can use the KMS key alias instead of the ARN for
            the KMS encryption key.</p> <p>If you do not specify a value for the
            <code>KmsKeyId</code> parameter, then the following will occur:</p>
            <ul> <li> <p>If the DB snapshot or DB cluster snapshot in
            <code>SnapshotIdentifier</code> is encrypted, then the restored DB
            cluster is encrypted using the KMS key that was used to encrypt the
            DB snapshot or DB cluster snapshot.</p> </li> <li> <p>If the DB
            snapshot or DB cluster snapshot in <code>SnapshotIdentifier</code>
            is not encrypted, then the restored DB cluster is not encrypted.</p>
            </li> </ul>
          schema:
            type: string
        - name: EnableIAMDatabaseAuthentication
          in: query
          required: false
          description: "<p>True to enable mapping of AWS Identity and Access Management
            (IAM) accounts to database accounts, and otherwise false.</p>
            <p>Default: <code>false</code> </p>"
          schema:
            type: boolean
        - name: EnableCloudwatchLogsExports
          in: query
          required: false
          description: The list of logs that the restored DB cluster is to export to Amazon
            CloudWatch Logs.
          schema:
            type: array
            items:
              type: string
        - name: DBClusterParameterGroupName
          in: query
          required: false
          description: <p>The name of the DB cluster parameter group to associate with the
            new DB cluster.</p> <p>Constraints:</p> <ul> <li> <p>If supplied,
            must match the name of an existing DBClusterParameterGroup.</p>
            </li> </ul>
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RestoreDBClusterFromSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RestoreDBClusterFromSnapshot
      operationId: POST RestoreDBClusterFromSnapshot
      description: <p>Creates a new DB cluster from a DB snapshot or DB cluster
        snapshot.</p> <p>If a DB snapshot is specified, the target DB cluster is
        created from the source DB snapshot with a default configuration and
        default security group.</p> <p>If a DB cluster snapshot is specified,
        the target DB cluster is created from the source DB cluster restore
        point with the same configuration as the original source DB cluster,
        except that the new DB cluster is created with the default security
        group.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RestoreDBClusterFromSnapshotResult"
        "480":
          description: DBClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterAlreadyExistsFault"
        "481":
          description: DBClusterQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterQuotaExceededFault"
        "482":
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageQuotaExceededFault"
        "483":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
        "484":
          description: DBSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSnapshotNotFoundFault"
        "485":
          description: DBClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotNotFoundFault"
        "486":
          description: InsufficientDBClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientDBClusterCapacityFault"
        "487":
          description: InsufficientStorageClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientStorageClusterCapacityFault"
        "488":
          description: InvalidDBSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSnapshotStateFault"
        "489":
          description: InvalidDBClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterSnapshotStateFault"
        "490":
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageQuotaExceededFault"
        "491":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "492":
          description: InvalidRestoreFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRestoreFault"
        "493":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
        "494":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
        "495":
          description: OptionGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OptionGroupNotFoundFault"
        "496":
          description: KMSKeyNotAccessibleFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSKeyNotAccessibleFault"
        "497":
          description: DBClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterParameterGroupNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RestoreDBClusterFromSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                AvailabilityZones:
                  description: Provides the list of EC2 Availability Zones that instances
                    in the restored DB cluster can be created in.
                  type: array
                  items:
                    type: string
                DBClusterIdentifier:
                  description: "<p>The name of the DB cluster to create from the DB
                    snapshot or DB cluster snapshot. This parameter isn't
                    case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must
                    contain from 1 to 63 letters, numbers, or hyphens</p> </li>
                    <li> <p>First character must be a letter</p> </li> <li>
                    <p>Cannot end with a hyphen or contain two consecutive
                    hyphens</p> </li> </ul> <p>Example:
                    <code>my-snapshot-id</code> </p>"
                  type: string
                SnapshotIdentifier:
                  description: <p>The identifier for the DB snapshot or DB cluster snapshot
                    to restore from.</p> <p>You can use either the name or the
                    Amazon Resource Name (ARN) to specify a DB cluster snapshot.
                    However, you can use only the ARN to specify a DB
                    snapshot.</p> <p>Constraints:</p> <ul> <li> <p>Must match
                    the identifier of an existing Snapshot.</p> </li> </ul>
                  type: string
                Engine:
                  description: "<p>The database engine to use for the new DB cluster.</p>
                    <p>Default: The same as source</p> <p>Constraint: Must be
                    compatible with the engine of the source</p>"
                  type: string
                EngineVersion:
                  description: The version of the database engine to use for the new DB
                    cluster.
                  type: string
                Port:
                  description: "<p>The port number on which the new DB cluster accepts
                    connections.</p> <p>Constraints: Value must be
                    <code>1150-65535</code> </p> <p>Default: The same port as
                    the original DB cluster.</p>"
                  type: integer
                DBSubnetGroupName:
                  description: "<p>The name of the DB subnet group to use for the new DB
                    cluster.</p> <p>Constraints: If supplied, must match the
                    name of an existing DBSubnetGroup.</p> <p>Example:
                    <code>mySubnetgroup</code> </p>"
                  type: string
                DatabaseName:
                  description: Not supported.
                  type: string
                OptionGroupName:
                  description: The name of the option group to use for the restored DB
                    cluster.
                  type: string
                VpcSecurityGroupIds:
                  description: A list of VPC security groups that the new DB cluster will
                    belong to.
                  type: array
                  items:
                    type: string
                Tags:
                  description: The tags to be assigned to the restored DB cluster.
                  type: array
                  items:
                    type: string
                KmsKeyId:
                  description: <p>The AWS KMS key identifier to use when restoring an
                    encrypted DB cluster from a DB snapshot or DB cluster
                    snapshot.</p> <p>The KMS key identifier is the Amazon
                    Resource Name (ARN) for the KMS encryption key. If you are
                    restoring a DB cluster with the same AWS account that owns
                    the KMS encryption key used to encrypt the new DB cluster,
                    then you can use the KMS key alias instead of the ARN for
                    the KMS encryption key.</p> <p>If you do not specify a value
                    for the <code>KmsKeyId</code> parameter, then the following
                    will occur:</p> <ul> <li> <p>If the DB snapshot or DB
                    cluster snapshot in <code>SnapshotIdentifier</code> is
                    encrypted, then the restored DB cluster is encrypted using
                    the KMS key that was used to encrypt the DB snapshot or DB
                    cluster snapshot.</p> </li> <li> <p>If the DB snapshot or DB
                    cluster snapshot in <code>SnapshotIdentifier</code> is not
                    encrypted, then the restored DB cluster is not
                    encrypted.</p> </li> </ul>
                  type: string
                EnableIAMDatabaseAuthentication:
                  description: "<p>True to enable mapping of AWS Identity and Access
                    Management (IAM) accounts to database accounts, and
                    otherwise false.</p> <p>Default: <code>false</code> </p>"
                  type: boolean
                EnableCloudwatchLogsExports:
                  description: The list of logs that the restored DB cluster is to export
                    to Amazon CloudWatch Logs.
                  type: array
                  items:
                    type: string
                DBClusterParameterGroupName:
                  description: <p>The name of the DB cluster parameter group to associate
                    with the new DB cluster.</p> <p>Constraints:</p> <ul> <li>
                    <p>If supplied, must match the name of an existing
                    DBClusterParameterGroup.</p> </li> </ul>
                  type: string
              required:
                - DBClusterIdentifier
                - SnapshotIdentifier
                - Engine
  /#Action=RestoreDBClusterToPointInTime:
    get:
      x-aws-operation-name: RestoreDBClusterToPointInTime
      operationId: GET RestoreDBClusterToPointInTime
      description: <p>Restores a DB cluster to an arbitrary point in time. Users can
        restore to any point in time before <code>LatestRestorableTime</code>
        for up to <code>BackupRetentionPeriod</code> days. The target DB cluster
        is created from the source DB cluster with the same configuration as the
        original DB cluster, except that the new DB cluster is created with the
        default DB security group.</p> <note> <p>This action only restores the
        DB cluster, not the DB instances for that DB cluster. You must invoke
        the <a>CreateDBInstance</a> action to create DB instances for the
        restored DB cluster, specifying the identifier of the restored DB
        cluster in <code>DBClusterIdentifier</code>. You can create DB instances
        only after the <code>RestoreDBClusterToPointInTime</code> action has
        completed and the DB cluster is available.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RestoreDBClusterToPointInTimeResult"
        "480":
          description: DBClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterAlreadyExistsFault"
        "481":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "482":
          description: DBClusterQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterQuotaExceededFault"
        "483":
          description: DBClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotNotFoundFault"
        "484":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
        "485":
          description: InsufficientDBClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientDBClusterCapacityFault"
        "486":
          description: InsufficientStorageClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientStorageClusterCapacityFault"
        "487":
          description: InvalidDBClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterSnapshotStateFault"
        "488":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "489":
          description: InvalidDBSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSnapshotStateFault"
        "490":
          description: InvalidRestoreFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRestoreFault"
        "491":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
        "492":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "493":
          description: KMSKeyNotAccessibleFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSKeyNotAccessibleFault"
        "494":
          description: OptionGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OptionGroupNotFoundFault"
        "495":
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageQuotaExceededFault"
        "496":
          description: DBClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterParameterGroupNotFoundFault"
      parameters:
        - name: DBClusterIdentifier
          in: query
          required: true
          description: <p>The name of the new DB cluster to be created.</p>
            <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 letters,
            numbers, or hyphens</p> </li> <li> <p>First character must be a
            letter</p> </li> <li> <p>Cannot end with a hyphen or contain two
            consecutive hyphens</p> </li> </ul>
          schema:
            type: string
        - name: RestoreType
          in: query
          required: false
          description: <p>The type of restore to be performed. You can specify one of the
            following values:</p> <ul> <li> <p> <code>full-copy</code> - The new
            DB cluster is restored as a full copy of the source DB cluster.</p>
            </li> <li> <p> <code>copy-on-write</code> - The new DB cluster is
            restored as a clone of the source DB cluster.</p> </li> </ul> <p>If
            you don't specify a <code>RestoreType</code> value, then the new DB
            cluster is restored as a full copy of the source DB cluster.</p>
          schema:
            type: string
        - name: SourceDBClusterIdentifier
          in: query
          required: true
          description: <p>The identifier of the source DB cluster from which to
            restore.</p> <p>Constraints:</p> <ul> <li> <p>Must match the
            identifier of an existing DBCluster.</p> </li> </ul>
          schema:
            type: string
        - name: RestoreToTime
          in: query
          required: false
          description: "<p>The date and time to restore the DB cluster to.</p> <p>Valid
            Values: Value must be a time in Universal Coordinated Time (UTC)
            format</p> <p>Constraints:</p> <ul> <li> <p>Must be before the
            latest restorable time for the DB instance</p> </li> <li> <p>Must be
            specified if <code>UseLatestRestorableTime</code> parameter is not
            provided</p> </li> <li> <p>Cannot be specified if
            <code>UseLatestRestorableTime</code> parameter is true</p> </li>
            <li> <p>Cannot be specified if <code>RestoreType</code> parameter is
            <code>copy-on-write</code> </p> </li> </ul> <p>Example:
            <code>2015-03-07T23:45:00Z</code> </p>"
          schema:
            type: string
            format: date-time
        - name: UseLatestRestorableTime
          in: query
          required: false
          description: "<p>A value that is set to <code>true</code> to restore the DB
            cluster to the latest restorable backup time, and <code>false</code>
            otherwise.</p> <p>Default: <code>false</code> </p> <p>Constraints:
            Cannot be specified if <code>RestoreToTime</code> parameter is
            provided.</p>"
          schema:
            type: boolean
        - name: Port
          in: query
          required: false
          description: "<p>The port number on which the new DB cluster accepts
            connections.</p> <p>Constraints: Value must be
            <code>1150-65535</code> </p> <p>Default: The same port as the
            original DB cluster.</p>"
          schema:
            type: integer
        - name: DBSubnetGroupName
          in: query
          required: false
          description: "<p>The DB subnet group name to use for the new DB cluster.</p>
            <p>Constraints: If supplied, must match the name of an existing
            DBSubnetGroup.</p> <p>Example: <code>mySubnetgroup</code> </p>"
          schema:
            type: string
        - name: OptionGroupName
          in: query
          required: false
          description: The name of the option group for the new DB cluster.
          schema:
            type: string
        - name: VpcSecurityGroupIds
          in: query
          required: false
          description: A list of VPC security groups that the new DB cluster belongs to.
          schema:
            type: array
            items:
              type: string
        - name: Tags
          in: query
          required: false
          description: The tags to be applied to the restored DB cluster.
          schema:
            type: array
            items:
              type: string
        - name: KmsKeyId
          in: query
          required: false
          description: <p>The AWS KMS key identifier to use when restoring an encrypted DB
            cluster from an encrypted DB cluster.</p> <p>The KMS key identifier
            is the Amazon Resource Name (ARN) for the KMS encryption key. If you
            are restoring a DB cluster with the same AWS account that owns the
            KMS encryption key used to encrypt the new DB cluster, then you can
            use the KMS key alias instead of the ARN for the KMS encryption
            key.</p> <p>You can restore to a new DB cluster and encrypt the new
            DB cluster with a KMS key that is different than the KMS key used to
            encrypt the source DB cluster. The new DB cluster is encrypted with
            the KMS key identified by the <code>KmsKeyId</code> parameter.</p>
            <p>If you do not specify a value for the <code>KmsKeyId</code>
            parameter, then the following will occur:</p> <ul> <li> <p>If the DB
            cluster is encrypted, then the restored DB cluster is encrypted
            using the KMS key that was used to encrypt the source DB
            cluster.</p> </li> <li> <p>If the DB cluster is not encrypted, then
            the restored DB cluster is not encrypted.</p> </li> </ul> <p>If
            <code>DBClusterIdentifier</code> refers to a DB cluster that is not
            encrypted, then the restore request is rejected.</p>
          schema:
            type: string
        - name: EnableIAMDatabaseAuthentication
          in: query
          required: false
          description: "<p>True to enable mapping of AWS Identity and Access Management
            (IAM) accounts to database accounts, and otherwise false.</p>
            <p>Default: <code>false</code> </p>"
          schema:
            type: boolean
        - name: EnableCloudwatchLogsExports
          in: query
          required: false
          description: The list of logs that the restored DB cluster is to export to
            CloudWatch Logs.
          schema:
            type: array
            items:
              type: string
        - name: DBClusterParameterGroupName
          in: query
          required: false
          description: <p>The name of the DB cluster parameter group to associate with the
            new DB cluster.</p> <p>Constraints:</p> <ul> <li> <p>If supplied,
            must match the name of an existing DBClusterParameterGroup.</p>
            </li> </ul>
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RestoreDBClusterToPointInTime
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RestoreDBClusterToPointInTime
      operationId: POST RestoreDBClusterToPointInTime
      description: <p>Restores a DB cluster to an arbitrary point in time. Users can
        restore to any point in time before <code>LatestRestorableTime</code>
        for up to <code>BackupRetentionPeriod</code> days. The target DB cluster
        is created from the source DB cluster with the same configuration as the
        original DB cluster, except that the new DB cluster is created with the
        default DB security group.</p> <note> <p>This action only restores the
        DB cluster, not the DB instances for that DB cluster. You must invoke
        the <a>CreateDBInstance</a> action to create DB instances for the
        restored DB cluster, specifying the identifier of the restored DB
        cluster in <code>DBClusterIdentifier</code>. You can create DB instances
        only after the <code>RestoreDBClusterToPointInTime</code> action has
        completed and the DB cluster is available.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RestoreDBClusterToPointInTimeResult"
        "480":
          description: DBClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterAlreadyExistsFault"
        "481":
          description: DBClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterNotFoundFault"
        "482":
          description: DBClusterQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterQuotaExceededFault"
        "483":
          description: DBClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterSnapshotNotFoundFault"
        "484":
          description: DBSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBSubnetGroupNotFoundFault"
        "485":
          description: InsufficientDBClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientDBClusterCapacityFault"
        "486":
          description: InsufficientStorageClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientStorageClusterCapacityFault"
        "487":
          description: InvalidDBClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterSnapshotStateFault"
        "488":
          description: InvalidDBClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBClusterStateFault"
        "489":
          description: InvalidDBSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDBSnapshotStateFault"
        "490":
          description: InvalidRestoreFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRestoreFault"
        "491":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
        "492":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "493":
          description: KMSKeyNotAccessibleFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/KMSKeyNotAccessibleFault"
        "494":
          description: OptionGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OptionGroupNotFoundFault"
        "495":
          description: StorageQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/StorageQuotaExceededFault"
        "496":
          description: DBClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DBClusterParameterGroupNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RestoreDBClusterToPointInTime
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2014-10-31
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBClusterIdentifier:
                  description: <p>The name of the new DB cluster to be created.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63
                    letters, numbers, or hyphens</p> </li> <li> <p>First
                    character must be a letter</p> </li> <li> <p>Cannot end with
                    a hyphen or contain two consecutive hyphens</p> </li> </ul>
                  type: string
                RestoreType:
                  description: <p>The type of restore to be performed. You can specify one
                    of the following values:</p> <ul> <li> <p>
                    <code>full-copy</code> - The new DB cluster is restored as a
                    full copy of the source DB cluster.</p> </li> <li> <p>
                    <code>copy-on-write</code> - The new DB cluster is restored
                    as a clone of the source DB cluster.</p> </li> </ul> <p>If
                    you don't specify a <code>RestoreType</code> value, then the
                    new DB cluster is restored as a full copy of the source DB
                    cluster.</p>
                  type: string
                SourceDBClusterIdentifier:
                  description: <p>The identifier of the source DB cluster from which to
                    restore.</p> <p>Constraints:</p> <ul> <li> <p>Must match the
                    identifier of an existing DBCluster.</p> </li> </ul>
                  type: string
                RestoreToTime:
                  description: "<p>The date and time to restore the DB cluster to.</p>
                    <p>Valid Values: Value must be a time in Universal
                    Coordinated Time (UTC) format</p> <p>Constraints:</p> <ul>
                    <li> <p>Must be before the latest restorable time for the DB
                    instance</p> </li> <li> <p>Must be specified if
                    <code>UseLatestRestorableTime</code> parameter is not
                    provided</p> </li> <li> <p>Cannot be specified if
                    <code>UseLatestRestorableTime</code> parameter is true</p>
                    </li> <li> <p>Cannot be specified if
                    <code>RestoreType</code> parameter is
                    <code>copy-on-write</code> </p> </li> </ul> <p>Example:
                    <code>2015-03-07T23:45:00Z</code> </p>"
                  type: string
                  format: date-time
                UseLatestRestorableTime:
                  description: "<p>A value that is set to <code>true</code> to restore the
                    DB cluster to the latest restorable backup time, and
                    <code>false</code> otherwise.</p> <p>Default:
                    <code>false</code> </p> <p>Constraints: Cannot be specified
                    if <code>RestoreToTime</code> parameter is provided.</p>"
                  type: boolean
                Port:
                  description: "<p>The port number on which the new DB cluster accepts
                    connections.</p> <p>Constraints: Value must be
                    <code>1150-65535</code> </p> <p>Default: The same port as
                    the original DB cluster.</p>"
                  type: integer
                DBSubnetGroupName:
                  description: "<p>The DB subnet group name to use for the new DB
                    cluster.</p> <p>Constraints: If supplied, must match the
                    name of an existing DBSubnetGroup.</p> <p>Example:
                    <code>mySubnetgroup</code> </p>"
                  type: string
                OptionGroupName:
                  description: The name of the option group for the new DB cluster.
                  type: string
                VpcSecurityGroupIds:
                  description: A list of VPC security groups that the new DB cluster
                    belongs to.
                  type: array
                  items:
                    type: string
                Tags:
                  description: The tags to be applied to the restored DB cluster.
                  type: array
                  items:
                    type: string
                KmsKeyId:
                  description: <p>The AWS KMS key identifier to use when restoring an
                    encrypted DB cluster from an encrypted DB cluster.</p>
                    <p>The KMS key identifier is the Amazon Resource Name (ARN)
                    for the KMS encryption key. If you are restoring a DB
                    cluster with the same AWS account that owns the KMS
                    encryption key used to encrypt the new DB cluster, then you
                    can use the KMS key alias instead of the ARN for the KMS
                    encryption key.</p> <p>You can restore to a new DB cluster
                    and encrypt the new DB cluster with a KMS key that is
                    different than the KMS key used to encrypt the source DB
                    cluster. The new DB cluster is encrypted with the KMS key
                    identified by the <code>KmsKeyId</code> parameter.</p> <p>If
                    you do not specify a value for the <code>KmsKeyId</code>
                    parameter, then the following will occur:</p> <ul> <li>
                    <p>If the DB cluster is encrypted, then the restored DB
                    cluster is encrypted using the KMS key that was used to
                    encrypt the source DB cluster.</p> </li> <li> <p>If the DB
                    cluster is not encrypted, then the restored DB cluster is
                    not encrypted.</p> </li> </ul> <p>If
                    <code>DBClusterIdentifier</code> refers to a DB cluster that
                    is not encrypted, then the restore request is rejected.</p>
                  type: string
                EnableIAMDatabaseAuthentication:
                  description: "<p>True to enable mapping of AWS Identity and Access
                    Management (IAM) accounts to database accounts, and
                    otherwise false.</p> <p>Default: <code>false</code> </p>"
                  type: boolean
                EnableCloudwatchLogsExports:
                  description: The list of logs that the restored DB cluster is to export
                    to CloudWatch Logs.
                  type: array
                  items:
                    type: string
                DBClusterParameterGroupName:
                  description: <p>The name of the DB cluster parameter group to associate
                    with the new DB cluster.</p> <p>Constraints:</p> <ul> <li>
                    <p>If supplied, must match the name of an existing
                    DBClusterParameterGroup.</p> </li> </ul>
                  type: string
              required:
                - DBClusterIdentifier
                - SourceDBClusterIdentifier
servers:
  - url: http://rds.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Neptune multi-region endpoint
  - url: https://rds.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Neptune multi-region endpoint
  - url: http://rds.amazonaws.com
    variables: {}
    description: The general Amazon Neptune multi-region endpoint
  - url: https://rds.amazonaws.com
    variables: {}
    description: The general Amazon Neptune multi-region endpoint
  - url: http://rds.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Neptune endpoint for China (Beijing) and China (Ningxia)
  - url: https://rds.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Neptune endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    DBClusterNotFoundFault: {}
    DBClusterRoleAlreadyExistsFault: {}
    InvalidDBClusterStateFault: {}
    DBClusterRoleQuotaExceededFault: {}
    AddSourceIdentifierToSubscriptionResult:
      type: object
      properties:
        EventSubscription:
          $ref: "#/components/schemas/EventSubscription"
    SubscriptionNotFoundFault: {}
    SourceNotFoundFault: {}
    Tag:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/String"
        Value:
          $ref: "#/components/schemas/String"
      description: Metadata assigned to an Amazon Neptune resource consisting of a
        key-value pair.
    DBInstanceNotFoundFault: {}
    DBSnapshotNotFoundFault: {}
    ApplyPendingMaintenanceActionResult:
      type: object
      properties:
        ResourcePendingMaintenanceActions:
          $ref: "#/components/schemas/ResourcePendingMaintenanceActions"
    ResourceNotFoundFault: {}
    CopyDBClusterParameterGroupResult:
      type: object
      properties:
        DBClusterParameterGroup:
          $ref: "#/components/schemas/DBClusterParameterGroup"
    DBParameterGroupNotFoundFault: {}
    DBParameterGroupQuotaExceededFault: {}
    DBParameterGroupAlreadyExistsFault: {}
    CopyDBClusterSnapshotResult:
      type: object
      properties:
        DBClusterSnapshot:
          $ref: "#/components/schemas/DBClusterSnapshot"
    DBClusterSnapshotAlreadyExistsFault: {}
    DBClusterSnapshotNotFoundFault: {}
    InvalidDBClusterSnapshotStateFault: {}
    SnapshotQuotaExceededFault: {}
    KMSKeyNotAccessibleFault: {}
    CopyDBParameterGroupResult:
      type: object
      properties:
        DBParameterGroup:
          $ref: "#/components/schemas/DBParameterGroup"
    CreateDBClusterResult:
      type: object
      properties:
        DBCluster:
          $ref: "#/components/schemas/DBCluster"
    String:
      type: string
    DBClusterAlreadyExistsFault: {}
    InsufficientStorageClusterCapacityFault: {}
    DBClusterQuotaExceededFault: {}
    StorageQuotaExceededFault: {}
    DBSubnetGroupNotFoundFault: {}
    InvalidVPCNetworkStateFault: {}
    InvalidDBSubnetGroupStateFault: {}
    InvalidSubnet: {}
    InvalidDBInstanceStateFault: {}
    DBClusterParameterGroupNotFoundFault: {}
    DBSubnetGroupDoesNotCoverEnoughAZs: {}
    CreateDBClusterParameterGroupResult:
      type: object
      properties:
        DBClusterParameterGroup:
          $ref: "#/components/schemas/DBClusterParameterGroup"
    CreateDBClusterSnapshotResult:
      type: object
      properties:
        DBClusterSnapshot:
          $ref: "#/components/schemas/DBClusterSnapshot"
    CreateDBInstanceResult:
      type: object
      properties:
        DBInstance:
          $ref: "#/components/schemas/DBInstance"
    DBInstanceAlreadyExistsFault: {}
    InsufficientDBInstanceCapacityFault: {}
    DBSecurityGroupNotFoundFault: {}
    InstanceQuotaExceededFault: {}
    ProvisionedIopsNotAvailableInAZFault: {}
    OptionGroupNotFoundFault: {}
    StorageTypeNotSupportedFault: {}
    AuthorizationNotFoundFault: {}
    DomainNotFoundFault: {}
    CreateDBParameterGroupResult:
      type: object
      properties:
        DBParameterGroup:
          $ref: "#/components/schemas/DBParameterGroup"
    CreateDBSubnetGroupResult:
      type: object
      properties:
        DBSubnetGroup:
          $ref: "#/components/schemas/DBSubnetGroup"
    DBSubnetGroupAlreadyExistsFault: {}
    DBSubnetGroupQuotaExceededFault: {}
    DBSubnetQuotaExceededFault: {}
    CreateEventSubscriptionResult:
      type: object
      properties:
        EventSubscription:
          $ref: "#/components/schemas/EventSubscription"
    EventSubscriptionQuotaExceededFault: {}
    SubscriptionAlreadyExistFault: {}
    SNSInvalidTopicFault: {}
    SNSNoAuthorizationFault: {}
    SNSTopicArnNotFoundFault: {}
    SubscriptionCategoryNotFoundFault: {}
    DeleteDBClusterResult:
      type: object
      properties:
        DBCluster:
          $ref: "#/components/schemas/DBCluster"
    InvalidDBParameterGroupStateFault: {}
    DeleteDBClusterSnapshotResult:
      type: object
      properties:
        DBClusterSnapshot:
          $ref: "#/components/schemas/DBClusterSnapshot"
    DeleteDBInstanceResult:
      type: object
      properties:
        DBInstance:
          $ref: "#/components/schemas/DBInstance"
    DBSnapshotAlreadyExistsFault: {}
    InvalidDBSubnetStateFault: {}
    DeleteEventSubscriptionResult:
      type: object
      properties:
        EventSubscription:
          $ref: "#/components/schemas/EventSubscription"
    InvalidEventSubscriptionStateFault: {}
    DBClusterParameterGroupsMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        DBClusterParameterGroups:
          $ref: "#/components/schemas/DBClusterParameterGroupList"
    Filter:
      type: object
      required:
        - Name
        - Values
      properties:
        Name:
          $ref: "#/components/schemas/String"
        Values:
          $ref: "#/components/schemas/FilterValueList"
      description: This type is not currently supported.
    DBClusterParameterGroupDetails:
      type: object
      properties:
        Parameters:
          $ref: "#/components/schemas/ParametersList"
        Marker:
          $ref: "#/components/schemas/String"
    DescribeDBClusterSnapshotAttributesResult:
      type: object
      properties:
        DBClusterSnapshotAttributesResult:
          $ref: "#/components/schemas/DBClusterSnapshotAttributesResult"
    DBClusterSnapshotMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        DBClusterSnapshots:
          $ref: "#/components/schemas/DBClusterSnapshotList"
    DBClusterMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        DBClusters:
          $ref: "#/components/schemas/DBClusterList"
    DBEngineVersionMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        DBEngineVersions:
          $ref: "#/components/schemas/DBEngineVersionList"
    DBInstanceMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        DBInstances:
          $ref: "#/components/schemas/DBInstanceList"
    DBParameterGroupsMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        DBParameterGroups:
          $ref: "#/components/schemas/DBParameterGroupList"
    DBParameterGroupDetails:
      type: object
      properties:
        Parameters:
          $ref: "#/components/schemas/ParametersList"
        Marker:
          $ref: "#/components/schemas/String"
    DBSubnetGroupMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        DBSubnetGroups:
          $ref: "#/components/schemas/DBSubnetGroups"
    DescribeEngineDefaultClusterParametersResult:
      type: object
      properties:
        EngineDefaults:
          $ref: "#/components/schemas/EngineDefaults"
    DescribeEngineDefaultParametersResult:
      type: object
      properties:
        EngineDefaults:
          $ref: "#/components/schemas/EngineDefaults"
    EventCategoriesMessage:
      type: object
      properties:
        EventCategoriesMapList:
          $ref: "#/components/schemas/EventCategoriesMapList"
    EventSubscriptionsMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        EventSubscriptionsList:
          $ref: "#/components/schemas/EventSubscriptionsList"
    EventsMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        Events:
          $ref: "#/components/schemas/EventList"
    OrderableDBInstanceOptionsMessage:
      type: object
      properties:
        OrderableDBInstanceOptions:
          $ref: "#/components/schemas/OrderableDBInstanceOptionsList"
        Marker:
          $ref: "#/components/schemas/String"
    PendingMaintenanceActionsMessage:
      type: object
      properties:
        PendingMaintenanceActions:
          $ref: "#/components/schemas/PendingMaintenanceActions"
        Marker:
          $ref: "#/components/schemas/String"
    DescribeValidDBInstanceModificationsResult:
      type: object
      properties:
        ValidDBInstanceModificationsMessage:
          $ref: "#/components/schemas/ValidDBInstanceModificationsMessage"
    FailoverDBClusterResult:
      type: object
      properties:
        DBCluster:
          $ref: "#/components/schemas/DBCluster"
    TagListMessage:
      type: object
      properties:
        TagList:
          $ref: "#/components/schemas/TagList"
    ModifyDBClusterResult:
      type: object
      properties:
        DBCluster:
          $ref: "#/components/schemas/DBCluster"
    LogTypeList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    InvalidDBSecurityGroupStateFault: {}
    DBClusterParameterGroupNameMessage:
      type: object
      properties:
        DBClusterParameterGroupName:
          $ref: "#/components/schemas/String"
    Parameter:
      type: object
      properties:
        ParameterName:
          $ref: "#/components/schemas/String"
        ParameterValue:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        Source:
          $ref: "#/components/schemas/String"
        ApplyType:
          $ref: "#/components/schemas/String"
        DataType:
          $ref: "#/components/schemas/String"
        AllowedValues:
          $ref: "#/components/schemas/String"
        IsModifiable:
          $ref: "#/components/schemas/Boolean"
        MinimumEngineVersion:
          $ref: "#/components/schemas/String"
        ApplyMethod:
          $ref: "#/components/schemas/ApplyMethod"
      description: Specifies a parameter.
    ModifyDBClusterSnapshotAttributeResult:
      type: object
      properties:
        DBClusterSnapshotAttributesResult:
          $ref: "#/components/schemas/DBClusterSnapshotAttributesResult"
    SharedSnapshotQuotaExceededFault: {}
    ModifyDBInstanceResult:
      type: object
      properties:
        DBInstance:
          $ref: "#/components/schemas/DBInstance"
    DBUpgradeDependencyFailureFault: {}
    CertificateNotFoundFault: {}
    DBParameterGroupNameMessage:
      type: object
      properties:
        DBParameterGroupName:
          $ref: "#/components/schemas/String"
    ModifyDBSubnetGroupResult:
      type: object
      properties:
        DBSubnetGroup:
          $ref: "#/components/schemas/DBSubnetGroup"
    SubnetAlreadyInUse: {}
    ModifyEventSubscriptionResult:
      type: object
      properties:
        EventSubscription:
          $ref: "#/components/schemas/EventSubscription"
    PromoteReadReplicaDBClusterResult:
      type: object
      properties:
        DBCluster:
          $ref: "#/components/schemas/DBCluster"
    RebootDBInstanceResult:
      type: object
      properties:
        DBInstance:
          $ref: "#/components/schemas/DBInstance"
    DBClusterRoleNotFoundFault: {}
    RemoveSourceIdentifierFromSubscriptionResult:
      type: object
      properties:
        EventSubscription:
          $ref: "#/components/schemas/EventSubscription"
    RestoreDBClusterFromSnapshotResult:
      type: object
      properties:
        DBCluster:
          $ref: "#/components/schemas/DBCluster"
    InsufficientDBClusterCapacityFault: {}
    InvalidDBSnapshotStateFault: {}
    InvalidRestoreFault: {}
    RestoreDBClusterToPointInTimeResult:
      type: object
      properties:
        DBCluster:
          $ref: "#/components/schemas/DBCluster"
    AddRoleToDBClusterMessage:
      type: object
      required:
        - DBClusterIdentifier
        - RoleArn
      properties:
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
        RoleArn:
          $ref: "#/components/schemas/String"
    AddSourceIdentifierToSubscriptionMessage:
      type: object
      required:
        - SubscriptionName
        - SourceIdentifier
      properties:
        SubscriptionName:
          $ref: "#/components/schemas/String"
        SourceIdentifier:
          $ref: "#/components/schemas/String"
    EventSubscription:
      type: object
      properties:
        CustomerAwsId:
          $ref: "#/components/schemas/String"
        CustSubscriptionId:
          $ref: "#/components/schemas/String"
        SnsTopicArn:
          $ref: "#/components/schemas/String"
        Status:
          $ref: "#/components/schemas/String"
        SubscriptionCreationTime:
          $ref: "#/components/schemas/String"
        SourceType:
          $ref: "#/components/schemas/String"
        SourceIdsList:
          $ref: "#/components/schemas/SourceIdsList"
        EventCategoriesList:
          $ref: "#/components/schemas/EventCategoriesList"
        Enabled:
          $ref: "#/components/schemas/Boolean"
        EventSubscriptionArn:
          $ref: "#/components/schemas/String"
      description: Contains the results of a successful invocation of the
        <a>DescribeEventSubscriptions</a> action.
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
    AddTagsToResourceMessage:
      type: object
      required:
        - ResourceName
        - Tags
      properties:
        ResourceName:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
    ApplyMethod:
      type: string
      enum:
        - immediate
        - pending-reboot
    ApplyPendingMaintenanceActionMessage:
      type: object
      required:
        - ResourceIdentifier
        - ApplyAction
        - OptInType
      properties:
        ResourceIdentifier:
          $ref: "#/components/schemas/String"
        ApplyAction:
          $ref: "#/components/schemas/String"
        OptInType:
          $ref: "#/components/schemas/String"
    ResourcePendingMaintenanceActions:
      type: object
      properties:
        ResourceIdentifier:
          $ref: "#/components/schemas/String"
        PendingMaintenanceActionDetails:
          $ref: "#/components/schemas/PendingMaintenanceActionDetails"
      description: Describes the pending maintenance actions for a resource.
    AttributeValueList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    AvailabilityZone:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/String"
      description: Specifies an Availability Zone.
    AvailabilityZoneList:
      type: array
      items:
        $ref: "#/components/schemas/AvailabilityZone"
    AvailabilityZones:
      type: array
      items:
        $ref: "#/components/schemas/String"
    Boolean:
      type: boolean
    BooleanOptional:
      type: boolean
    CharacterSet:
      type: object
      properties:
        CharacterSetName:
          $ref: "#/components/schemas/String"
        CharacterSetDescription:
          $ref: "#/components/schemas/String"
      description: Specifies a character set.
    CloudwatchLogsExportConfiguration:
      type: object
      properties:
        EnableLogTypes:
          $ref: "#/components/schemas/LogTypeList"
        DisableLogTypes:
          $ref: "#/components/schemas/LogTypeList"
      description: <p>The configuration setting for the log types to be enabled for export
        to CloudWatch Logs for a specific DB instance or DB cluster.</p> <p>The
        <code>EnableLogTypes</code> and <code>DisableLogTypes</code> arrays
        determine which logs will be exported (or not exported) to CloudWatch
        Logs.</p>
    CopyDBClusterParameterGroupMessage:
      type: object
      required:
        - SourceDBClusterParameterGroupIdentifier
        - TargetDBClusterParameterGroupIdentifier
        - TargetDBClusterParameterGroupDescription
      properties:
        SourceDBClusterParameterGroupIdentifier:
          $ref: "#/components/schemas/String"
        TargetDBClusterParameterGroupIdentifier:
          $ref: "#/components/schemas/String"
        TargetDBClusterParameterGroupDescription:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
    DBClusterParameterGroup:
      type: object
      properties:
        DBClusterParameterGroupName:
          $ref: "#/components/schemas/String"
        DBParameterGroupFamily:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        DBClusterParameterGroupArn:
          $ref: "#/components/schemas/String"
      description: <p>Contains the details of an Amazon Neptune DB cluster parameter
        group.</p> <p>This data type is used as a response element in the
        <a>DescribeDBClusterParameterGroups</a> action.</p>
    CopyDBClusterSnapshotMessage:
      type: object
      required:
        - SourceDBClusterSnapshotIdentifier
        - TargetDBClusterSnapshotIdentifier
      properties:
        SourceDBClusterSnapshotIdentifier:
          $ref: "#/components/schemas/String"
        TargetDBClusterSnapshotIdentifier:
          $ref: "#/components/schemas/String"
        KmsKeyId:
          $ref: "#/components/schemas/String"
        PreSignedUrl:
          $ref: "#/components/schemas/String"
        CopyTags:
          $ref: "#/components/schemas/BooleanOptional"
        Tags:
          $ref: "#/components/schemas/TagList"
    DBClusterSnapshot:
      type: object
      properties:
        AvailabilityZones:
          $ref: "#/components/schemas/AvailabilityZones"
        DBClusterSnapshotIdentifier:
          $ref: "#/components/schemas/String"
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
        SnapshotCreateTime:
          $ref: "#/components/schemas/TStamp"
        Engine:
          $ref: "#/components/schemas/String"
        AllocatedStorage:
          $ref: "#/components/schemas/Integer"
        Status:
          $ref: "#/components/schemas/String"
        Port:
          $ref: "#/components/schemas/Integer"
        VpcId:
          $ref: "#/components/schemas/String"
        ClusterCreateTime:
          $ref: "#/components/schemas/TStamp"
        MasterUsername:
          $ref: "#/components/schemas/String"
        EngineVersion:
          $ref: "#/components/schemas/String"
        LicenseModel:
          $ref: "#/components/schemas/String"
        SnapshotType:
          $ref: "#/components/schemas/String"
        PercentProgress:
          $ref: "#/components/schemas/Integer"
        StorageEncrypted:
          $ref: "#/components/schemas/Boolean"
        KmsKeyId:
          $ref: "#/components/schemas/String"
        DBClusterSnapshotArn:
          $ref: "#/components/schemas/String"
        SourceDBClusterSnapshotArn:
          $ref: "#/components/schemas/String"
        IAMDatabaseAuthenticationEnabled:
          $ref: "#/components/schemas/Boolean"
      description: <p>Contains the details for an Amazon Neptune DB cluster snapshot</p>
        <p>This data type is used as a response element in the
        <a>DescribeDBClusterSnapshots</a> action.</p>
    CopyDBParameterGroupMessage:
      type: object
      required:
        - SourceDBParameterGroupIdentifier
        - TargetDBParameterGroupIdentifier
        - TargetDBParameterGroupDescription
      properties:
        SourceDBParameterGroupIdentifier:
          $ref: "#/components/schemas/String"
        TargetDBParameterGroupIdentifier:
          $ref: "#/components/schemas/String"
        TargetDBParameterGroupDescription:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
    DBParameterGroup:
      type: object
      properties:
        DBParameterGroupName:
          $ref: "#/components/schemas/String"
        DBParameterGroupFamily:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        DBParameterGroupArn:
          $ref: "#/components/schemas/String"
      description: <p>Contains the details of an Amazon Neptune DB parameter group.</p>
        <p>This data type is used as a response element in the
        <a>DescribeDBParameterGroups</a> action.</p>
    IntegerOptional:
      type: integer
    VpcSecurityGroupIdList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    CreateDBClusterMessage:
      type: object
      required:
        - DBClusterIdentifier
        - Engine
      properties:
        AvailabilityZones:
          $ref: "#/components/schemas/AvailabilityZones"
        BackupRetentionPeriod:
          $ref: "#/components/schemas/IntegerOptional"
        CharacterSetName:
          $ref: "#/components/schemas/String"
        DatabaseName:
          $ref: "#/components/schemas/String"
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
        DBClusterParameterGroupName:
          $ref: "#/components/schemas/String"
        VpcSecurityGroupIds:
          $ref: "#/components/schemas/VpcSecurityGroupIdList"
        DBSubnetGroupName:
          $ref: "#/components/schemas/String"
        Engine:
          $ref: "#/components/schemas/String"
        EngineVersion:
          $ref: "#/components/schemas/String"
        Port:
          $ref: "#/components/schemas/IntegerOptional"
        MasterUsername:
          $ref: "#/components/schemas/String"
        MasterUserPassword:
          $ref: "#/components/schemas/String"
        OptionGroupName:
          $ref: "#/components/schemas/String"
        PreferredBackupWindow:
          $ref: "#/components/schemas/String"
        PreferredMaintenanceWindow:
          $ref: "#/components/schemas/String"
        ReplicationSourceIdentifier:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
        StorageEncrypted:
          $ref: "#/components/schemas/BooleanOptional"
        KmsKeyId:
          $ref: "#/components/schemas/String"
        PreSignedUrl:
          $ref: "#/components/schemas/String"
        EnableIAMDatabaseAuthentication:
          $ref: "#/components/schemas/BooleanOptional"
        EnableCloudwatchLogsExports:
          $ref: "#/components/schemas/LogTypeList"
    CreateDBClusterParameterGroupMessage:
      type: object
      required:
        - DBClusterParameterGroupName
        - DBParameterGroupFamily
        - Description
      properties:
        DBClusterParameterGroupName:
          $ref: "#/components/schemas/String"
        DBParameterGroupFamily:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
    DBCluster:
      type: object
      properties:
        AllocatedStorage:
          $ref: "#/components/schemas/IntegerOptional"
        AvailabilityZones:
          $ref: "#/components/schemas/AvailabilityZones"
        BackupRetentionPeriod:
          $ref: "#/components/schemas/IntegerOptional"
        CharacterSetName:
          $ref: "#/components/schemas/String"
        DatabaseName:
          $ref: "#/components/schemas/String"
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
        DBClusterParameterGroup:
          $ref: "#/components/schemas/String"
        DBSubnetGroup:
          $ref: "#/components/schemas/String"
        Status:
          $ref: "#/components/schemas/String"
        PercentProgress:
          $ref: "#/components/schemas/String"
        EarliestRestorableTime:
          $ref: "#/components/schemas/TStamp"
        Endpoint:
          $ref: "#/components/schemas/String"
        ReaderEndpoint:
          $ref: "#/components/schemas/String"
        MultiAZ:
          $ref: "#/components/schemas/Boolean"
        Engine:
          $ref: "#/components/schemas/String"
        EngineVersion:
          $ref: "#/components/schemas/String"
        LatestRestorableTime:
          $ref: "#/components/schemas/TStamp"
        Port:
          $ref: "#/components/schemas/IntegerOptional"
        MasterUsername:
          $ref: "#/components/schemas/String"
        DBClusterOptionGroupMemberships:
          $ref: "#/components/schemas/DBClusterOptionGroupMemberships"
        PreferredBackupWindow:
          $ref: "#/components/schemas/String"
        PreferredMaintenanceWindow:
          $ref: "#/components/schemas/String"
        ReplicationSourceIdentifier:
          $ref: "#/components/schemas/String"
        ReadReplicaIdentifiers:
          $ref: "#/components/schemas/ReadReplicaIdentifierList"
        DBClusterMembers:
          $ref: "#/components/schemas/DBClusterMemberList"
        VpcSecurityGroups:
          $ref: "#/components/schemas/VpcSecurityGroupMembershipList"
        HostedZoneId:
          $ref: "#/components/schemas/String"
        StorageEncrypted:
          $ref: "#/components/schemas/Boolean"
        KmsKeyId:
          $ref: "#/components/schemas/String"
        DbClusterResourceId:
          $ref: "#/components/schemas/String"
        DBClusterArn:
          $ref: "#/components/schemas/String"
        AssociatedRoles:
          $ref: "#/components/schemas/DBClusterRoles"
        IAMDatabaseAuthenticationEnabled:
          $ref: "#/components/schemas/Boolean"
        CloneGroupId:
          $ref: "#/components/schemas/String"
        ClusterCreateTime:
          $ref: "#/components/schemas/TStamp"
        EnabledCloudwatchLogsExports:
          $ref: "#/components/schemas/LogTypeList"
      description: <p>Contains the details of an Amazon Neptune DB cluster.</p> <p>This
        data type is used as a response element in the <a>DescribeDBClusters</a>
        action.</p>
    CreateDBClusterSnapshotMessage:
      type: object
      required:
        - DBClusterSnapshotIdentifier
        - DBClusterIdentifier
      properties:
        DBClusterSnapshotIdentifier:
          $ref: "#/components/schemas/String"
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
    DBSecurityGroupNameList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    CreateDBInstanceMessage:
      type: object
      required:
        - DBInstanceIdentifier
        - DBInstanceClass
        - Engine
      properties:
        DBName:
          $ref: "#/components/schemas/String"
        DBInstanceIdentifier:
          $ref: "#/components/schemas/String"
        AllocatedStorage:
          $ref: "#/components/schemas/IntegerOptional"
        DBInstanceClass:
          $ref: "#/components/schemas/String"
        Engine:
          $ref: "#/components/schemas/String"
        MasterUsername:
          $ref: "#/components/schemas/String"
        MasterUserPassword:
          $ref: "#/components/schemas/String"
        DBSecurityGroups:
          $ref: "#/components/schemas/DBSecurityGroupNameList"
        VpcSecurityGroupIds:
          $ref: "#/components/schemas/VpcSecurityGroupIdList"
        AvailabilityZone:
          $ref: "#/components/schemas/String"
        DBSubnetGroupName:
          $ref: "#/components/schemas/String"
        PreferredMaintenanceWindow:
          $ref: "#/components/schemas/String"
        DBParameterGroupName:
          $ref: "#/components/schemas/String"
        BackupRetentionPeriod:
          $ref: "#/components/schemas/IntegerOptional"
        PreferredBackupWindow:
          $ref: "#/components/schemas/String"
        Port:
          $ref: "#/components/schemas/IntegerOptional"
        MultiAZ:
          $ref: "#/components/schemas/BooleanOptional"
        EngineVersion:
          $ref: "#/components/schemas/String"
        AutoMinorVersionUpgrade:
          $ref: "#/components/schemas/BooleanOptional"
        LicenseModel:
          $ref: "#/components/schemas/String"
        Iops:
          $ref: "#/components/schemas/IntegerOptional"
        OptionGroupName:
          $ref: "#/components/schemas/String"
        CharacterSetName:
          $ref: "#/components/schemas/String"
        PubliclyAccessible:
          $ref: "#/components/schemas/BooleanOptional"
        Tags:
          $ref: "#/components/schemas/TagList"
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
        StorageType:
          $ref: "#/components/schemas/String"
        TdeCredentialArn:
          $ref: "#/components/schemas/String"
        TdeCredentialPassword:
          $ref: "#/components/schemas/String"
        StorageEncrypted:
          $ref: "#/components/schemas/BooleanOptional"
        KmsKeyId:
          $ref: "#/components/schemas/String"
        Domain:
          $ref: "#/components/schemas/String"
        CopyTagsToSnapshot:
          $ref: "#/components/schemas/BooleanOptional"
        MonitoringInterval:
          $ref: "#/components/schemas/IntegerOptional"
        MonitoringRoleArn:
          $ref: "#/components/schemas/String"
        DomainIAMRoleName:
          $ref: "#/components/schemas/String"
        PromotionTier:
          $ref: "#/components/schemas/IntegerOptional"
        Timezone:
          $ref: "#/components/schemas/String"
        EnableIAMDatabaseAuthentication:
          $ref: "#/components/schemas/BooleanOptional"
        EnablePerformanceInsights:
          $ref: "#/components/schemas/BooleanOptional"
        PerformanceInsightsKMSKeyId:
          $ref: "#/components/schemas/String"
        EnableCloudwatchLogsExports:
          $ref: "#/components/schemas/LogTypeList"
    DBInstance:
      type: object
      properties:
        DBInstanceIdentifier:
          $ref: "#/components/schemas/String"
        DBInstanceClass:
          $ref: "#/components/schemas/String"
        Engine:
          $ref: "#/components/schemas/String"
        DBInstanceStatus:
          $ref: "#/components/schemas/String"
        MasterUsername:
          $ref: "#/components/schemas/String"
        DBName:
          $ref: "#/components/schemas/String"
        Endpoint:
          $ref: "#/components/schemas/Endpoint"
        AllocatedStorage:
          $ref: "#/components/schemas/Integer"
        InstanceCreateTime:
          $ref: "#/components/schemas/TStamp"
        PreferredBackupWindow:
          $ref: "#/components/schemas/String"
        BackupRetentionPeriod:
          $ref: "#/components/schemas/Integer"
        DBSecurityGroups:
          $ref: "#/components/schemas/DBSecurityGroupMembershipList"
        VpcSecurityGroups:
          $ref: "#/components/schemas/VpcSecurityGroupMembershipList"
        DBParameterGroups:
          $ref: "#/components/schemas/DBParameterGroupStatusList"
        AvailabilityZone:
          $ref: "#/components/schemas/String"
        DBSubnetGroup:
          $ref: "#/components/schemas/DBSubnetGroup"
        PreferredMaintenanceWindow:
          $ref: "#/components/schemas/String"
        PendingModifiedValues:
          $ref: "#/components/schemas/PendingModifiedValues"
        LatestRestorableTime:
          $ref: "#/components/schemas/TStamp"
        MultiAZ:
          $ref: "#/components/schemas/Boolean"
        EngineVersion:
          $ref: "#/components/schemas/String"
        AutoMinorVersionUpgrade:
          $ref: "#/components/schemas/Boolean"
        ReadReplicaSourceDBInstanceIdentifier:
          $ref: "#/components/schemas/String"
        ReadReplicaDBInstanceIdentifiers:
          $ref: "#/components/schemas/ReadReplicaDBInstanceIdentifierList"
        ReadReplicaDBClusterIdentifiers:
          $ref: "#/components/schemas/ReadReplicaDBClusterIdentifierList"
        LicenseModel:
          $ref: "#/components/schemas/String"
        Iops:
          $ref: "#/components/schemas/IntegerOptional"
        OptionGroupMemberships:
          $ref: "#/components/schemas/OptionGroupMembershipList"
        CharacterSetName:
          $ref: "#/components/schemas/String"
        SecondaryAvailabilityZone:
          $ref: "#/components/schemas/String"
        PubliclyAccessible:
          $ref: "#/components/schemas/Boolean"
        StatusInfos:
          $ref: "#/components/schemas/DBInstanceStatusInfoList"
        StorageType:
          $ref: "#/components/schemas/String"
        TdeCredentialArn:
          $ref: "#/components/schemas/String"
        DbInstancePort:
          $ref: "#/components/schemas/Integer"
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
        StorageEncrypted:
          $ref: "#/components/schemas/Boolean"
        KmsKeyId:
          $ref: "#/components/schemas/String"
        DbiResourceId:
          $ref: "#/components/schemas/String"
        CACertificateIdentifier:
          $ref: "#/components/schemas/String"
        DomainMemberships:
          $ref: "#/components/schemas/DomainMembershipList"
        CopyTagsToSnapshot:
          $ref: "#/components/schemas/Boolean"
        MonitoringInterval:
          $ref: "#/components/schemas/IntegerOptional"
        EnhancedMonitoringResourceArn:
          $ref: "#/components/schemas/String"
        MonitoringRoleArn:
          $ref: "#/components/schemas/String"
        PromotionTier:
          $ref: "#/components/schemas/IntegerOptional"
        DBInstanceArn:
          $ref: "#/components/schemas/String"
        Timezone:
          $ref: "#/components/schemas/String"
        IAMDatabaseAuthenticationEnabled:
          $ref: "#/components/schemas/Boolean"
        PerformanceInsightsEnabled:
          $ref: "#/components/schemas/BooleanOptional"
        PerformanceInsightsKMSKeyId:
          $ref: "#/components/schemas/String"
        EnabledCloudwatchLogsExports:
          $ref: "#/components/schemas/LogTypeList"
      description: <p>Contains the details of an Amazon Neptune DB instance.</p> <p>This
        data type is used as a response element in the
        <a>DescribeDBInstances</a> action.</p>
    CreateDBParameterGroupMessage:
      type: object
      required:
        - DBParameterGroupName
        - DBParameterGroupFamily
        - Description
      properties:
        DBParameterGroupName:
          $ref: "#/components/schemas/String"
        DBParameterGroupFamily:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
    SubnetIdentifierList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    CreateDBSubnetGroupMessage:
      type: object
      required:
        - DBSubnetGroupName
        - DBSubnetGroupDescription
        - SubnetIds
      properties:
        DBSubnetGroupName:
          $ref: "#/components/schemas/String"
        DBSubnetGroupDescription:
          $ref: "#/components/schemas/String"
        SubnetIds:
          $ref: "#/components/schemas/SubnetIdentifierList"
        Tags:
          $ref: "#/components/schemas/TagList"
    DBSubnetGroup:
      type: object
      properties:
        DBSubnetGroupName:
          $ref: "#/components/schemas/String"
        DBSubnetGroupDescription:
          $ref: "#/components/schemas/String"
        VpcId:
          $ref: "#/components/schemas/String"
        SubnetGroupStatus:
          $ref: "#/components/schemas/String"
        Subnets:
          $ref: "#/components/schemas/SubnetList"
        DBSubnetGroupArn:
          $ref: "#/components/schemas/String"
      description: <p>Contains the details of an Amazon Neptune DB subnet group.</p>
        <p>This data type is used as a response element in the
        <a>DescribeDBSubnetGroups</a> action.</p>
    EventCategoriesList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    SourceIdsList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    CreateEventSubscriptionMessage:
      type: object
      required:
        - SubscriptionName
        - SnsTopicArn
      properties:
        SubscriptionName:
          $ref: "#/components/schemas/String"
        SnsTopicArn:
          $ref: "#/components/schemas/String"
        SourceType:
          $ref: "#/components/schemas/String"
        EventCategories:
          $ref: "#/components/schemas/EventCategoriesList"
        SourceIds:
          $ref: "#/components/schemas/SourceIdsList"
        Enabled:
          $ref: "#/components/schemas/BooleanOptional"
        Tags:
          $ref: "#/components/schemas/TagList"
    TStamp:
      type: string
      format: date-time
    DBClusterOptionGroupMemberships:
      type: array
      items:
        $ref: "#/components/schemas/DBClusterOptionGroupStatus"
    ReadReplicaIdentifierList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    DBClusterMemberList:
      type: array
      items:
        $ref: "#/components/schemas/DBClusterMember"
    VpcSecurityGroupMembershipList:
      type: array
      items:
        $ref: "#/components/schemas/VpcSecurityGroupMembership"
    DBClusterRoles:
      type: array
      items:
        $ref: "#/components/schemas/DBClusterRole"
    DBClusterList:
      type: array
      items:
        $ref: "#/components/schemas/DBCluster"
    DBClusterMember:
      type: object
      properties:
        DBInstanceIdentifier:
          $ref: "#/components/schemas/String"
        IsClusterWriter:
          $ref: "#/components/schemas/Boolean"
        DBClusterParameterGroupStatus:
          $ref: "#/components/schemas/String"
        PromotionTier:
          $ref: "#/components/schemas/IntegerOptional"
      description: Contains information about an instance that is part of a DB cluster.
    DBClusterOptionGroupStatus:
      type: object
      properties:
        DBClusterOptionGroupName:
          $ref: "#/components/schemas/String"
        Status:
          $ref: "#/components/schemas/String"
      description: Contains status information for a DB cluster option group.
    ParametersList:
      type: array
      items:
        $ref: "#/components/schemas/Parameter"
    DBClusterParameterGroupList:
      type: array
      items:
        $ref: "#/components/schemas/DBClusterParameterGroup"
    DBClusterRole:
      type: object
      properties:
        RoleArn:
          $ref: "#/components/schemas/String"
        Status:
          $ref: "#/components/schemas/String"
      description: Describes an AWS Identity and Access Management (IAM) role that is
        associated with a DB cluster.
    Integer:
      type: integer
    DBClusterSnapshotAttribute:
      type: object
      properties:
        AttributeName:
          $ref: "#/components/schemas/String"
        AttributeValues:
          $ref: "#/components/schemas/AttributeValueList"
      description: <p>Contains the name and values of a manual DB cluster snapshot
        attribute.</p> <p>Manual DB cluster snapshot attributes are used to
        authorize other AWS accounts to restore a manual DB cluster snapshot.
        For more information, see the <a>ModifyDBClusterSnapshotAttribute</a>
        API action.</p>
    DBClusterSnapshotAttributeList:
      type: array
      items:
        $ref: "#/components/schemas/DBClusterSnapshotAttribute"
    DBClusterSnapshotAttributesResult:
      type: object
      properties:
        DBClusterSnapshotIdentifier:
          $ref: "#/components/schemas/String"
        DBClusterSnapshotAttributes:
          $ref: "#/components/schemas/DBClusterSnapshotAttributeList"
      description: <p>Contains the results of a successful call to the
        <a>DescribeDBClusterSnapshotAttributes</a> API action.</p> <p>Manual DB
        cluster snapshot attributes are used to authorize other AWS accounts to
        copy or restore a manual DB cluster snapshot. For more information, see
        the <a>ModifyDBClusterSnapshotAttribute</a> API action.</p>
    DBClusterSnapshotList:
      type: array
      items:
        $ref: "#/components/schemas/DBClusterSnapshot"
    SupportedCharacterSetsList:
      type: array
      items:
        $ref: "#/components/schemas/CharacterSet"
    ValidUpgradeTargetList:
      type: array
      items:
        $ref: "#/components/schemas/UpgradeTarget"
    SupportedTimezonesList:
      type: array
      items:
        $ref: "#/components/schemas/Timezone"
    DBEngineVersion:
      type: object
      properties:
        Engine:
          $ref: "#/components/schemas/String"
        EngineVersion:
          $ref: "#/components/schemas/String"
        DBParameterGroupFamily:
          $ref: "#/components/schemas/String"
        DBEngineDescription:
          $ref: "#/components/schemas/String"
        DBEngineVersionDescription:
          $ref: "#/components/schemas/String"
        DefaultCharacterSet:
          $ref: "#/components/schemas/CharacterSet"
        SupportedCharacterSets:
          $ref: "#/components/schemas/SupportedCharacterSetsList"
        ValidUpgradeTarget:
          $ref: "#/components/schemas/ValidUpgradeTargetList"
        SupportedTimezones:
          $ref: "#/components/schemas/SupportedTimezonesList"
        ExportableLogTypes:
          $ref: "#/components/schemas/LogTypeList"
        SupportsLogExportsToCloudwatchLogs:
          $ref: "#/components/schemas/Boolean"
        SupportsReadReplica:
          $ref: "#/components/schemas/Boolean"
      description: " This data type is used as a response element in the action
        <a>DescribeDBEngineVersions</a>."
    DBEngineVersionList:
      type: array
      items:
        $ref: "#/components/schemas/DBEngineVersion"
    Endpoint:
      type: object
      properties:
        Address:
          $ref: "#/components/schemas/String"
        Port:
          $ref: "#/components/schemas/Integer"
        HostedZoneId:
          $ref: "#/components/schemas/String"
      description: Specifies a connection endpoint.
    DBSecurityGroupMembershipList:
      type: array
      items:
        $ref: "#/components/schemas/DBSecurityGroupMembership"
    DBParameterGroupStatusList:
      type: array
      items:
        $ref: "#/components/schemas/DBParameterGroupStatus"
    PendingModifiedValues:
      type: object
      properties:
        DBInstanceClass:
          $ref: "#/components/schemas/String"
        AllocatedStorage:
          $ref: "#/components/schemas/IntegerOptional"
        MasterUserPassword:
          $ref: "#/components/schemas/String"
        Port:
          $ref: "#/components/schemas/IntegerOptional"
        BackupRetentionPeriod:
          $ref: "#/components/schemas/IntegerOptional"
        MultiAZ:
          $ref: "#/components/schemas/BooleanOptional"
        EngineVersion:
          $ref: "#/components/schemas/String"
        LicenseModel:
          $ref: "#/components/schemas/String"
        Iops:
          $ref: "#/components/schemas/IntegerOptional"
        DBInstanceIdentifier:
          $ref: "#/components/schemas/String"
        StorageType:
          $ref: "#/components/schemas/String"
        CACertificateIdentifier:
          $ref: "#/components/schemas/String"
        DBSubnetGroupName:
          $ref: "#/components/schemas/String"
        PendingCloudwatchLogsExports:
          $ref: "#/components/schemas/PendingCloudwatchLogsExports"
      description: " This data type is used as a response element in the
        <a>ModifyDBInstance</a> action."
    ReadReplicaDBInstanceIdentifierList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    ReadReplicaDBClusterIdentifierList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    OptionGroupMembershipList:
      type: array
      items:
        $ref: "#/components/schemas/OptionGroupMembership"
    DBInstanceStatusInfoList:
      type: array
      items:
        $ref: "#/components/schemas/DBInstanceStatusInfo"
    DomainMembershipList:
      type: array
      items:
        $ref: "#/components/schemas/DomainMembership"
    DBInstanceList:
      type: array
      items:
        $ref: "#/components/schemas/DBInstance"
    DBInstanceStatusInfo:
      type: object
      properties:
        StatusType:
          $ref: "#/components/schemas/String"
        Normal:
          $ref: "#/components/schemas/Boolean"
        Status:
          $ref: "#/components/schemas/String"
        Message:
          $ref: "#/components/schemas/String"
      description: Provides a list of status information for a DB instance.
    DBParameterGroupList:
      type: array
      items:
        $ref: "#/components/schemas/DBParameterGroup"
    DBParameterGroupStatus:
      type: object
      properties:
        DBParameterGroupName:
          $ref: "#/components/schemas/String"
        ParameterApplyStatus:
          $ref: "#/components/schemas/String"
      description: <p>The status of the DB parameter group.</p> <p>This data type is used
        as a response element in the following actions:</p> <ul> <li> <p>
        <a>CreateDBInstance</a> </p> </li> <li> <p> <a>DeleteDBInstance</a> </p>
        </li> <li> <p> <a>ModifyDBInstance</a> </p> </li> <li> <p>
        <a>RebootDBInstance</a> </p> </li> </ul>
    DBSecurityGroupMembership:
      type: object
      properties:
        DBSecurityGroupName:
          $ref: "#/components/schemas/String"
        Status:
          $ref: "#/components/schemas/String"
      description: Specifies membership in a designated DB security group.
    SubnetList:
      type: array
      items:
        $ref: "#/components/schemas/Subnet"
    DBSubnetGroups:
      type: array
      items:
        $ref: "#/components/schemas/DBSubnetGroup"
    DeleteDBClusterMessage:
      type: object
      required:
        - DBClusterIdentifier
      properties:
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
        SkipFinalSnapshot:
          $ref: "#/components/schemas/Boolean"
        FinalDBSnapshotIdentifier:
          $ref: "#/components/schemas/String"
    DeleteDBClusterParameterGroupMessage:
      type: object
      required:
        - DBClusterParameterGroupName
      properties:
        DBClusterParameterGroupName:
          $ref: "#/components/schemas/String"
    DeleteDBClusterSnapshotMessage:
      type: object
      required:
        - DBClusterSnapshotIdentifier
      properties:
        DBClusterSnapshotIdentifier:
          $ref: "#/components/schemas/String"
    DeleteDBInstanceMessage:
      type: object
      required:
        - DBInstanceIdentifier
      properties:
        DBInstanceIdentifier:
          $ref: "#/components/schemas/String"
        SkipFinalSnapshot:
          $ref: "#/components/schemas/Boolean"
        FinalDBSnapshotIdentifier:
          $ref: "#/components/schemas/String"
    DeleteDBParameterGroupMessage:
      type: object
      required:
        - DBParameterGroupName
      properties:
        DBParameterGroupName:
          $ref: "#/components/schemas/String"
    DeleteDBSubnetGroupMessage:
      type: object
      required:
        - DBSubnetGroupName
      properties:
        DBSubnetGroupName:
          $ref: "#/components/schemas/String"
    DeleteEventSubscriptionMessage:
      type: object
      required:
        - SubscriptionName
      properties:
        SubscriptionName:
          $ref: "#/components/schemas/String"
    FilterList:
      type: array
      items:
        $ref: "#/components/schemas/Filter"
    DescribeDBClusterParameterGroupsMessage:
      type: object
      properties:
        DBClusterParameterGroupName:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/FilterList"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
    DescribeDBClusterParametersMessage:
      type: object
      required:
        - DBClusterParameterGroupName
      properties:
        DBClusterParameterGroupName:
          $ref: "#/components/schemas/String"
        Source:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/FilterList"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
    DescribeDBClusterSnapshotAttributesMessage:
      type: object
      required:
        - DBClusterSnapshotIdentifier
      properties:
        DBClusterSnapshotIdentifier:
          $ref: "#/components/schemas/String"
    DescribeDBClusterSnapshotsMessage:
      type: object
      properties:
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
        DBClusterSnapshotIdentifier:
          $ref: "#/components/schemas/String"
        SnapshotType:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/FilterList"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
        IncludeShared:
          $ref: "#/components/schemas/Boolean"
        IncludePublic:
          $ref: "#/components/schemas/Boolean"
    DescribeDBClustersMessage:
      type: object
      properties:
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/FilterList"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
    DescribeDBEngineVersionsMessage:
      type: object
      properties:
        Engine:
          $ref: "#/components/schemas/String"
        EngineVersion:
          $ref: "#/components/schemas/String"
        DBParameterGroupFamily:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/FilterList"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
        DefaultOnly:
          $ref: "#/components/schemas/Boolean"
        ListSupportedCharacterSets:
          $ref: "#/components/schemas/BooleanOptional"
        ListSupportedTimezones:
          $ref: "#/components/schemas/BooleanOptional"
    DescribeDBInstancesMessage:
      type: object
      properties:
        DBInstanceIdentifier:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/FilterList"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
    DescribeDBParameterGroupsMessage:
      type: object
      properties:
        DBParameterGroupName:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/FilterList"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
    DescribeDBParametersMessage:
      type: object
      required:
        - DBParameterGroupName
      properties:
        DBParameterGroupName:
          $ref: "#/components/schemas/String"
        Source:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/FilterList"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
    DescribeDBSubnetGroupsMessage:
      type: object
      properties:
        DBSubnetGroupName:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/FilterList"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
    DescribeEngineDefaultClusterParametersMessage:
      type: object
      required:
        - DBParameterGroupFamily
      properties:
        DBParameterGroupFamily:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/FilterList"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
    EngineDefaults:
      type: object
      properties:
        DBParameterGroupFamily:
          $ref: "#/components/schemas/String"
        Marker:
          $ref: "#/components/schemas/String"
        Parameters:
          $ref: "#/components/schemas/ParametersList"
      description: " Contains the result of a successful invocation of the
        <a>DescribeEngineDefaultParameters</a> action."
    DescribeEngineDefaultParametersMessage:
      type: object
      required:
        - DBParameterGroupFamily
      properties:
        DBParameterGroupFamily:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/FilterList"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
    DescribeEventCategoriesMessage:
      type: object
      properties:
        SourceType:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/FilterList"
    DescribeEventSubscriptionsMessage:
      type: object
      properties:
        SubscriptionName:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/FilterList"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
    SourceType:
      type: string
      enum:
        - db-instance
        - db-parameter-group
        - db-security-group
        - db-snapshot
        - db-cluster
        - db-cluster-snapshot
    DescribeEventsMessage:
      type: object
      properties:
        SourceIdentifier:
          $ref: "#/components/schemas/String"
        SourceType:
          $ref: "#/components/schemas/SourceType"
        StartTime:
          $ref: "#/components/schemas/TStamp"
        EndTime:
          $ref: "#/components/schemas/TStamp"
        Duration:
          $ref: "#/components/schemas/IntegerOptional"
        EventCategories:
          $ref: "#/components/schemas/EventCategoriesList"
        Filters:
          $ref: "#/components/schemas/FilterList"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
    DescribeOrderableDBInstanceOptionsMessage:
      type: object
      required:
        - Engine
      properties:
        Engine:
          $ref: "#/components/schemas/String"
        EngineVersion:
          $ref: "#/components/schemas/String"
        DBInstanceClass:
          $ref: "#/components/schemas/String"
        LicenseModel:
          $ref: "#/components/schemas/String"
        Vpc:
          $ref: "#/components/schemas/BooleanOptional"
        Filters:
          $ref: "#/components/schemas/FilterList"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
    DescribePendingMaintenanceActionsMessage:
      type: object
      properties:
        ResourceIdentifier:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/FilterList"
        Marker:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
    DescribeValidDBInstanceModificationsMessage:
      type: object
      required:
        - DBInstanceIdentifier
      properties:
        DBInstanceIdentifier:
          $ref: "#/components/schemas/String"
    ValidDBInstanceModificationsMessage:
      type: object
      properties:
        Storage:
          $ref: "#/components/schemas/ValidStorageOptionsList"
      description: "Information about valid modifications that you can make to your DB
        instance. Contains the result of a successful call to the
        <a>DescribeValidDBInstanceModifications</a> action. You can use this
        information when you call <a>ModifyDBInstance</a>. "
    DomainMembership:
      type: object
      properties:
        Domain:
          $ref: "#/components/schemas/String"
        Status:
          $ref: "#/components/schemas/String"
        FQDN:
          $ref: "#/components/schemas/String"
        IAMRoleName:
          $ref: "#/components/schemas/String"
      description: An Active Directory Domain membership record associated with a DB
        instance.
    Double:
      type: number
      format: double
    DoubleOptional:
      type: number
      format: double
    DoubleRange:
      type: object
      properties:
        From:
          $ref: "#/components/schemas/Double"
        To:
          $ref: "#/components/schemas/Double"
      description: A range of double values.
    DoubleRangeList:
      type: array
      items:
        $ref: "#/components/schemas/DoubleRange"
    Event:
      type: object
      properties:
        SourceIdentifier:
          $ref: "#/components/schemas/String"
        SourceType:
          $ref: "#/components/schemas/SourceType"
        Message:
          $ref: "#/components/schemas/String"
        EventCategories:
          $ref: "#/components/schemas/EventCategoriesList"
        Date:
          $ref: "#/components/schemas/TStamp"
        SourceArn:
          $ref: "#/components/schemas/String"
      description: " This data type is used as a response element in the
        <a>DescribeEvents</a> action."
    EventCategoriesMap:
      type: object
      properties:
        SourceType:
          $ref: "#/components/schemas/String"
        EventCategories:
          $ref: "#/components/schemas/EventCategoriesList"
      description: Contains the results of a successful invocation of the
        <a>DescribeEventCategories</a> action.
    EventCategoriesMapList:
      type: array
      items:
        $ref: "#/components/schemas/EventCategoriesMap"
    EventList:
      type: array
      items:
        $ref: "#/components/schemas/Event"
    EventSubscriptionsList:
      type: array
      items:
        $ref: "#/components/schemas/EventSubscription"
    FailoverDBClusterMessage:
      type: object
      properties:
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
        TargetDBInstanceIdentifier:
          $ref: "#/components/schemas/String"
    FilterValueList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    KeyList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    ListTagsForResourceMessage:
      type: object
      required:
        - ResourceName
      properties:
        ResourceName:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/FilterList"
    ModifyDBClusterMessage:
      type: object
      required:
        - DBClusterIdentifier
      properties:
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
        NewDBClusterIdentifier:
          $ref: "#/components/schemas/String"
        ApplyImmediately:
          $ref: "#/components/schemas/Boolean"
        BackupRetentionPeriod:
          $ref: "#/components/schemas/IntegerOptional"
        DBClusterParameterGroupName:
          $ref: "#/components/schemas/String"
        VpcSecurityGroupIds:
          $ref: "#/components/schemas/VpcSecurityGroupIdList"
        Port:
          $ref: "#/components/schemas/IntegerOptional"
        MasterUserPassword:
          $ref: "#/components/schemas/String"
        OptionGroupName:
          $ref: "#/components/schemas/String"
        PreferredBackupWindow:
          $ref: "#/components/schemas/String"
        PreferredMaintenanceWindow:
          $ref: "#/components/schemas/String"
        EnableIAMDatabaseAuthentication:
          $ref: "#/components/schemas/BooleanOptional"
        CloudwatchLogsExportConfiguration:
          $ref: "#/components/schemas/CloudwatchLogsExportConfiguration"
        EngineVersion:
          $ref: "#/components/schemas/String"
    ModifyDBClusterParameterGroupMessage:
      type: object
      required:
        - DBClusterParameterGroupName
        - Parameters
      properties:
        DBClusterParameterGroupName:
          $ref: "#/components/schemas/String"
        Parameters:
          $ref: "#/components/schemas/ParametersList"
    ModifyDBClusterSnapshotAttributeMessage:
      type: object
      required:
        - DBClusterSnapshotIdentifier
        - AttributeName
      properties:
        DBClusterSnapshotIdentifier:
          $ref: "#/components/schemas/String"
        AttributeName:
          $ref: "#/components/schemas/String"
        ValuesToAdd:
          $ref: "#/components/schemas/AttributeValueList"
        ValuesToRemove:
          $ref: "#/components/schemas/AttributeValueList"
    ModifyDBInstanceMessage:
      type: object
      required:
        - DBInstanceIdentifier
      properties:
        DBInstanceIdentifier:
          $ref: "#/components/schemas/String"
        AllocatedStorage:
          $ref: "#/components/schemas/IntegerOptional"
        DBInstanceClass:
          $ref: "#/components/schemas/String"
        DBSubnetGroupName:
          $ref: "#/components/schemas/String"
        DBSecurityGroups:
          $ref: "#/components/schemas/DBSecurityGroupNameList"
        VpcSecurityGroupIds:
          $ref: "#/components/schemas/VpcSecurityGroupIdList"
        ApplyImmediately:
          $ref: "#/components/schemas/Boolean"
        MasterUserPassword:
          $ref: "#/components/schemas/String"
        DBParameterGroupName:
          $ref: "#/components/schemas/String"
        BackupRetentionPeriod:
          $ref: "#/components/schemas/IntegerOptional"
        PreferredBackupWindow:
          $ref: "#/components/schemas/String"
        PreferredMaintenanceWindow:
          $ref: "#/components/schemas/String"
        MultiAZ:
          $ref: "#/components/schemas/BooleanOptional"
        EngineVersion:
          $ref: "#/components/schemas/String"
        AllowMajorVersionUpgrade:
          $ref: "#/components/schemas/Boolean"
        AutoMinorVersionUpgrade:
          $ref: "#/components/schemas/BooleanOptional"
        LicenseModel:
          $ref: "#/components/schemas/String"
        Iops:
          $ref: "#/components/schemas/IntegerOptional"
        OptionGroupName:
          $ref: "#/components/schemas/String"
        NewDBInstanceIdentifier:
          $ref: "#/components/schemas/String"
        StorageType:
          $ref: "#/components/schemas/String"
        TdeCredentialArn:
          $ref: "#/components/schemas/String"
        TdeCredentialPassword:
          $ref: "#/components/schemas/String"
        CACertificateIdentifier:
          $ref: "#/components/schemas/String"
        Domain:
          $ref: "#/components/schemas/String"
        CopyTagsToSnapshot:
          $ref: "#/components/schemas/BooleanOptional"
        MonitoringInterval:
          $ref: "#/components/schemas/IntegerOptional"
        DBPortNumber:
          $ref: "#/components/schemas/IntegerOptional"
        PubliclyAccessible:
          $ref: "#/components/schemas/BooleanOptional"
        MonitoringRoleArn:
          $ref: "#/components/schemas/String"
        DomainIAMRoleName:
          $ref: "#/components/schemas/String"
        PromotionTier:
          $ref: "#/components/schemas/IntegerOptional"
        EnableIAMDatabaseAuthentication:
          $ref: "#/components/schemas/BooleanOptional"
        EnablePerformanceInsights:
          $ref: "#/components/schemas/BooleanOptional"
        PerformanceInsightsKMSKeyId:
          $ref: "#/components/schemas/String"
        CloudwatchLogsExportConfiguration:
          $ref: "#/components/schemas/CloudwatchLogsExportConfiguration"
    ModifyDBParameterGroupMessage:
      type: object
      required:
        - DBParameterGroupName
        - Parameters
      properties:
        DBParameterGroupName:
          $ref: "#/components/schemas/String"
        Parameters:
          $ref: "#/components/schemas/ParametersList"
    ModifyDBSubnetGroupMessage:
      type: object
      required:
        - DBSubnetGroupName
        - SubnetIds
      properties:
        DBSubnetGroupName:
          $ref: "#/components/schemas/String"
        DBSubnetGroupDescription:
          $ref: "#/components/schemas/String"
        SubnetIds:
          $ref: "#/components/schemas/SubnetIdentifierList"
    ModifyEventSubscriptionMessage:
      type: object
      required:
        - SubscriptionName
      properties:
        SubscriptionName:
          $ref: "#/components/schemas/String"
        SnsTopicArn:
          $ref: "#/components/schemas/String"
        SourceType:
          $ref: "#/components/schemas/String"
        EventCategories:
          $ref: "#/components/schemas/EventCategoriesList"
        Enabled:
          $ref: "#/components/schemas/BooleanOptional"
    OptionGroupMembership:
      type: object
      properties:
        OptionGroupName:
          $ref: "#/components/schemas/String"
        Status:
          $ref: "#/components/schemas/String"
      description: Provides information on the option groups the DB instance is a member of.
    OrderableDBInstanceOption:
      type: object
      properties:
        Engine:
          $ref: "#/components/schemas/String"
        EngineVersion:
          $ref: "#/components/schemas/String"
        DBInstanceClass:
          $ref: "#/components/schemas/String"
        LicenseModel:
          $ref: "#/components/schemas/String"
        AvailabilityZones:
          $ref: "#/components/schemas/AvailabilityZoneList"
        MultiAZCapable:
          $ref: "#/components/schemas/Boolean"
        ReadReplicaCapable:
          $ref: "#/components/schemas/Boolean"
        Vpc:
          $ref: "#/components/schemas/Boolean"
        SupportsStorageEncryption:
          $ref: "#/components/schemas/Boolean"
        StorageType:
          $ref: "#/components/schemas/String"
        SupportsIops:
          $ref: "#/components/schemas/Boolean"
        SupportsEnhancedMonitoring:
          $ref: "#/components/schemas/Boolean"
        SupportsIAMDatabaseAuthentication:
          $ref: "#/components/schemas/Boolean"
        SupportsPerformanceInsights:
          $ref: "#/components/schemas/Boolean"
        MinStorageSize:
          $ref: "#/components/schemas/IntegerOptional"
        MaxStorageSize:
          $ref: "#/components/schemas/IntegerOptional"
        MinIopsPerDbInstance:
          $ref: "#/components/schemas/IntegerOptional"
        MaxIopsPerDbInstance:
          $ref: "#/components/schemas/IntegerOptional"
        MinIopsPerGib:
          $ref: "#/components/schemas/DoubleOptional"
        MaxIopsPerGib:
          $ref: "#/components/schemas/DoubleOptional"
      description: <p>Contains a list of available options for a DB instance.</p> <p> This
        data type is used as a response element in the
        <a>DescribeOrderableDBInstanceOptions</a> action.</p>
    OrderableDBInstanceOptionsList:
      type: array
      items:
        $ref: "#/components/schemas/OrderableDBInstanceOption"
    PendingCloudwatchLogsExports:
      type: object
      properties:
        LogTypesToEnable:
          $ref: "#/components/schemas/LogTypeList"
        LogTypesToDisable:
          $ref: "#/components/schemas/LogTypeList"
      description: A list of the log types whose configuration is still pending. In other
        words, these log types are in the process of being activated or
        deactivated.
    PendingMaintenanceAction:
      type: object
      properties:
        Action:
          $ref: "#/components/schemas/String"
        AutoAppliedAfterDate:
          $ref: "#/components/schemas/TStamp"
        ForcedApplyDate:
          $ref: "#/components/schemas/TStamp"
        OptInStatus:
          $ref: "#/components/schemas/String"
        CurrentApplyDate:
          $ref: "#/components/schemas/TStamp"
        Description:
          $ref: "#/components/schemas/String"
      description: Provides information about a pending maintenance action for a resource.
    PendingMaintenanceActionDetails:
      type: array
      items:
        $ref: "#/components/schemas/PendingMaintenanceAction"
    PendingMaintenanceActions:
      type: array
      items:
        $ref: "#/components/schemas/ResourcePendingMaintenanceActions"
    PromoteReadReplicaDBClusterMessage:
      type: object
      required:
        - DBClusterIdentifier
      properties:
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
    Range:
      type: object
      properties:
        From:
          $ref: "#/components/schemas/Integer"
        To:
          $ref: "#/components/schemas/Integer"
        Step:
          $ref: "#/components/schemas/IntegerOptional"
      description: A range of integer values.
    RangeList:
      type: array
      items:
        $ref: "#/components/schemas/Range"
    RebootDBInstanceMessage:
      type: object
      required:
        - DBInstanceIdentifier
      properties:
        DBInstanceIdentifier:
          $ref: "#/components/schemas/String"
        ForceFailover:
          $ref: "#/components/schemas/BooleanOptional"
    RemoveRoleFromDBClusterMessage:
      type: object
      required:
        - DBClusterIdentifier
        - RoleArn
      properties:
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
        RoleArn:
          $ref: "#/components/schemas/String"
    RemoveSourceIdentifierFromSubscriptionMessage:
      type: object
      required:
        - SubscriptionName
        - SourceIdentifier
      properties:
        SubscriptionName:
          $ref: "#/components/schemas/String"
        SourceIdentifier:
          $ref: "#/components/schemas/String"
    RemoveTagsFromResourceMessage:
      type: object
      required:
        - ResourceName
        - TagKeys
      properties:
        ResourceName:
          $ref: "#/components/schemas/String"
        TagKeys:
          $ref: "#/components/schemas/KeyList"
    ResetDBClusterParameterGroupMessage:
      type: object
      required:
        - DBClusterParameterGroupName
      properties:
        DBClusterParameterGroupName:
          $ref: "#/components/schemas/String"
        ResetAllParameters:
          $ref: "#/components/schemas/Boolean"
        Parameters:
          $ref: "#/components/schemas/ParametersList"
    ResetDBParameterGroupMessage:
      type: object
      required:
        - DBParameterGroupName
      properties:
        DBParameterGroupName:
          $ref: "#/components/schemas/String"
        ResetAllParameters:
          $ref: "#/components/schemas/Boolean"
        Parameters:
          $ref: "#/components/schemas/ParametersList"
    RestoreDBClusterFromSnapshotMessage:
      type: object
      required:
        - DBClusterIdentifier
        - SnapshotIdentifier
        - Engine
      properties:
        AvailabilityZones:
          $ref: "#/components/schemas/AvailabilityZones"
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
        SnapshotIdentifier:
          $ref: "#/components/schemas/String"
        Engine:
          $ref: "#/components/schemas/String"
        EngineVersion:
          $ref: "#/components/schemas/String"
        Port:
          $ref: "#/components/schemas/IntegerOptional"
        DBSubnetGroupName:
          $ref: "#/components/schemas/String"
        DatabaseName:
          $ref: "#/components/schemas/String"
        OptionGroupName:
          $ref: "#/components/schemas/String"
        VpcSecurityGroupIds:
          $ref: "#/components/schemas/VpcSecurityGroupIdList"
        Tags:
          $ref: "#/components/schemas/TagList"
        KmsKeyId:
          $ref: "#/components/schemas/String"
        EnableIAMDatabaseAuthentication:
          $ref: "#/components/schemas/BooleanOptional"
        EnableCloudwatchLogsExports:
          $ref: "#/components/schemas/LogTypeList"
        DBClusterParameterGroupName:
          $ref: "#/components/schemas/String"
    RestoreDBClusterToPointInTimeMessage:
      type: object
      required:
        - DBClusterIdentifier
        - SourceDBClusterIdentifier
      properties:
        DBClusterIdentifier:
          $ref: "#/components/schemas/String"
        RestoreType:
          $ref: "#/components/schemas/String"
        SourceDBClusterIdentifier:
          $ref: "#/components/schemas/String"
        RestoreToTime:
          $ref: "#/components/schemas/TStamp"
        UseLatestRestorableTime:
          $ref: "#/components/schemas/Boolean"
        Port:
          $ref: "#/components/schemas/IntegerOptional"
        DBSubnetGroupName:
          $ref: "#/components/schemas/String"
        OptionGroupName:
          $ref: "#/components/schemas/String"
        VpcSecurityGroupIds:
          $ref: "#/components/schemas/VpcSecurityGroupIdList"
        Tags:
          $ref: "#/components/schemas/TagList"
        KmsKeyId:
          $ref: "#/components/schemas/String"
        EnableIAMDatabaseAuthentication:
          $ref: "#/components/schemas/BooleanOptional"
        EnableCloudwatchLogsExports:
          $ref: "#/components/schemas/LogTypeList"
        DBClusterParameterGroupName:
          $ref: "#/components/schemas/String"
    Subnet:
      type: object
      properties:
        SubnetIdentifier:
          $ref: "#/components/schemas/String"
        SubnetAvailabilityZone:
          $ref: "#/components/schemas/AvailabilityZone"
        SubnetStatus:
          $ref: "#/components/schemas/String"
      description: <p>Specifies a subnet.</p> <p> This data type is used as a response
        element in the <a>DescribeDBSubnetGroups</a> action.</p>
    Timezone:
      type: object
      properties:
        TimezoneName:
          $ref: "#/components/schemas/String"
      description: A time zone associated with a <a>DBInstance</a>.
    UpgradeTarget:
      type: object
      properties:
        Engine:
          $ref: "#/components/schemas/String"
        EngineVersion:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        AutoUpgrade:
          $ref: "#/components/schemas/Boolean"
        IsMajorVersionUpgrade:
          $ref: "#/components/schemas/Boolean"
      description: The version of the database engine that a DB instance can be upgraded to.
    ValidStorageOptionsList:
      type: array
      items:
        $ref: "#/components/schemas/ValidStorageOptions"
    ValidStorageOptions:
      type: object
      properties:
        StorageType:
          $ref: "#/components/schemas/String"
        StorageSize:
          $ref: "#/components/schemas/RangeList"
        ProvisionedIops:
          $ref: "#/components/schemas/RangeList"
        IopsToStorageRatio:
          $ref: "#/components/schemas/DoubleRangeList"
      description: <p>Information about valid modifications that you can make to your DB
        instance.</p> <p>Contains the result of a successful call to the
        <a>DescribeValidDBInstanceModifications</a> action.</p>
    VpcSecurityGroupMembership:
      type: object
      properties:
        VpcSecurityGroupId:
          $ref: "#/components/schemas/String"
        Status:
          $ref: "#/components/schemas/String"
      description: This data type is used as a response element for queries on VPC security
        group membership.
