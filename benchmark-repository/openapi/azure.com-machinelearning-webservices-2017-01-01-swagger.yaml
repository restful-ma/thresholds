openapi: 3.0.0
info:
  description: These APIs allow end users to operate on Azure Machine Learning Web Services
    resources. They support the following operations:<ul><li>Create or update a
    web service</li><li>Get a web service</li><li>Patch a web
    service</li><li>Delete a web service</li><li>Get All Web Services in a
    Resource Group </li><li>Get All Web Services in a Subscription</li><li>Get
    Web Services Keys</li></ul>
  title: Azure ML Web Services Management Client
  version: 2017-01-01
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/machinelearning/resource-manager/Microsoft.MachineLearning/stable/2017-01-01/webservices.json
      version: "2.0"
  x-preferred: true
  x-providerName: azure.com
  x-serviceName: machinelearning-webservices
  x-tags:
    - Azure
    - Microsoft
paths:
  /providers/Microsoft.MachineLearning/operations:
    get:
      description: Lists all the available REST API operations.
      operationId: Operations_List
      parameters:
        - $ref: "#/components/parameters/APIVersionParameter"
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationEntityListResult"
      x-ms-pageable: {}
  "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearning/webServices":
    get:
      description: Gets the web services in the specified subscription.
      operationId: WebServices_ListBySubscriptionId
      parameters:
        - description: Continuation token for pagination.
          in: query
          name: $skiptoken
          required: false
          schema:
            type: string
        - $ref: "#/components/parameters/APIVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: Success. The response includes a paginated array of web service
            objects and a URI to the next set of results, if any. Note that the
            web service objects are sparsely populated to conserve space in the
            response content. To get the full web service object, call the GET
            operation on the web service.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedWebServicesList"
              examples:
                GET WebServices by Subscription Id:
                  $ref: "#/components/examples/GET_WebServices_by_Subscription_Id"
      tags:
        - WebServices
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices":
    get:
      description: Gets the web services in the specified resource group.
      operationId: WebServices_ListByResourceGroup
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - description: Continuation token for pagination.
          in: query
          name: $skiptoken
          required: false
          schema:
            type: string
        - $ref: "#/components/parameters/APIVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: Success. The response includes a paginated array of web service
            objects and a URI to the next set of results, if any. For the more
            information the limits of the number of items in a resource group,
            see
            https://azure.microsoft.com/en-us/documentation/articles/azure-subscription-service-limits/.
            Note that the web service objects are sparsely populated to conserve
            space in the response content. To get the full web service object,
            call the GET operation on the web service.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedWebServicesList"
              examples:
                GET WebServices by Resource Group:
                  $ref: "#/components/examples/GET_WebServices_by_Resource_Group"
      tags:
        - WebServices
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}":
    delete:
      description: Deletes the specified web service.
      operationId: WebServices_Remove
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WebServiceNameParameter"
        - $ref: "#/components/parameters/APIVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "202":
          description: Accepted. Note that a 202 status is returned even if the service did
            not exist.
        "204":
          description: No Content.
      tags:
        - WebServices
      x-ms-long-running-operation: true
    get:
      description: Gets the Web Service Definition as specified by a subscription, resource
        group, and name. Note that the storage credentials and web service keys
        are not returned by this call. To get the web service access keys, call
        List Keys.
      operationId: WebServices_Get
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WebServiceNameParameter"
        - description: The region for which encrypted credential parameters are valid.
          in: query
          name: region
          required: false
          schema:
            type: string
        - $ref: "#/components/parameters/APIVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: Success.  The response includes the Provisioning State and the
            Azure-AsyncOperation header. To get the progress of the operation,
            call GET operation on the URL in Azure-AsyncOperation header field.
            For more informationFor more information about Asynchronous
            Operations, see
            https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-async-operations.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebService"
              examples:
                GET WebService:
                  $ref: "#/components/examples/GET_WebService"
      tags:
        - WebServices
    patch:
      description: Modifies an existing web service resource. The PATCH API call is an
        asynchronous operation. To determine whether it has completed
        successfully, you must perform a Get operation.
      operationId: WebServices_Patch
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WebServiceNameParameter"
        - $ref: "#/components/parameters/APIVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedWebService"
        description: The payload to use to patch the web service.
        required: true
      responses:
        "200":
          description: Success. The response payload is identical to the response payload
            that is returned by the GET operation. The response includes the
            Provisioning State and the Azure-AsyncOperation header. To get the
            progress of the operation, call GET operation on the URL in
            Azure-AsyncOperation header field. For more information about
            Asynchronous Operations, see
            https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-async-operations.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebService"
              examples:
                Patch WebService:
                  $ref: "#/components/examples/Patch_WebService"
      tags:
        - WebServices
      x-ms-long-running-operation: true
    put:
      description: Create or update a web service. This call will overwrite an existing web
        service. Note that there is no warning or confirmation. This is a
        nonrecoverable operation. If your intent is to create a new web service,
        call the Get operation first to verify that it does not exist.
      operationId: WebServices_CreateOrUpdate
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WebServiceNameParameter"
        - $ref: "#/components/parameters/APIVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WebService"
        description: The payload that is used to create or update the web service.
        required: true
      responses:
        "200":
          description: Success. This response is returned for an update web service
            operation. The response payload is identical to the response payload
            that is returned by the GET operation. The response includes the
            Provisioning State and the Azure-AsyncOperation header. To get the
            progress of the operation, call GET operation on the URL in
            Azure-AsyncOperation header field. For more information about
            Asynchronous Operations, see
            https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-async-operations.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebService"
              examples:
                PUT WebService:
                  $ref: "#/components/examples/PUT_WebService"
        "201":
          description: Created. This response is returned for a create web service
            operation. The response includes the Provisioning State and the
            Azure-AsyncOperation header. To get the progress of the operation,
            call GET operation on the URL in Azure-AsyncOperation header field.
            For more information about Asynchronous Operations, see
            https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-async-operations.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebService"
              examples:
                PUT WebService:
                  $ref: "#/components/examples/PUT_WebService"
      tags:
        - WebServices
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}/CreateRegionalBlob":
    post:
      description: Creates an encrypted credentials parameter blob for the specified
        region. To get the web service from a region other than the region in
        which it has been created, you must first call Create Regional Web
        Services Properties to create a copy of the encrypted credential
        parameter blob in that region. You only need to do this before the first
        time that you get the web service in the new region.
      operationId: WebServices_CreateRegionalProperties
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WebServiceNameParameter"
        - description: The region for which encrypted credential parameters are created.
          in: query
          name: region
          required: true
          schema:
            type: string
          examples:
            Create Regional Properties:
              value: Southeast Asia
        - $ref: "#/components/parameters/APIVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: OK. Internal use only. Used for SDK return values.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AsyncOperationStatus"
        "202":
          description: Accepted.  The response includes the Azure-AsyncOperation header. To
            get the progress of the operation, call the GET operation on the URL
            in the Azure-AsyncOperation header field. For more information about
            Asynchronous Operations, see
            https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-async-operations.
      tags:
        - WebServices
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}/listKeys":
    get:
      description: Gets the access keys for the specified web service.
      operationId: WebServices_ListKeys
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WebServiceNameParameter"
        - $ref: "#/components/parameters/APIVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: Success.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebServiceKeys"
              examples:
                GET WebService Keys:
                  $ref: "#/components/examples/GET_WebService_Keys"
      tags:
        - WebServices
servers:
  - url: https://management.azure.com
components:
  examples:
    GET_WebServices_by_Subscription_Id:
      value:
        nextLink: https://the.next/link
        value:
          - id: TheWebServiceId
            location: West US
            properties:
              commitmentPlan:
                id: /subscriptions/subscriptionId/resourceGroups/resourceGroupName/providers/Microsoft.MachineLearning/commitmentPlans/commitmentPlanName
              createdOn: 2017-01-01T01:01:01Z
              description: New Web Service Description
              diagnostics:
                level: None
              exposeSampleData: true
              modifiedOn: 2017-01-01T02:02:02Z
              packageType: Graph
              payloadsInBlobStorage: false
              provisioningState: Provisioning
              readOnly: false
              realtimeConfiguration:
                maxConcurrentCalls: 4
              storageAccount:
                name: Storage_Name
              swaggerLocation: https://ussouthcentral.services.azureml.net/subscriptions/subscriptionId/services/serviceId/swagger.json
              title: New Web Service Title
            tags:
              tag1: value1
              tag2: value2
          - id: TheWebServiceId2
            location: West US
            properties:
              commitmentPlan:
                id: /subscriptions/subscriptionId/resourceGroups/resourceGroupName/providers/Microsoft.MachineLearning/commitmentPlans/commitmentPlanName
              createdOn: 2017-01-01T01:01:01Z
              description: New Web Service Description2
              diagnostics:
                level: None
              exposeSampleData: true
              modifiedOn: 2017-01-01T02:02:02Z
              packageType: Graph
              payloadsInBlobStorage: false
              provisioningState: Provisioning
              readOnly: false
              realtimeConfiguration:
                maxConcurrentCalls: 4
              storageAccount:
                name: Storage_Name
              swaggerLocation: https://ussouthcentral.services.azureml.net/subscriptions/subscriptionId/services/serviceId/swagger.json
              title: New Web Service Title2
            tags:
              tag1: value1
              tag2: value2
    GET_WebServices_by_Resource_Group:
      value:
        nextLink: https://the.next/link
        value:
          - id: TheWebServiceId
            location: West US
            properties:
              commitmentPlan:
                id: /subscriptions/subscriptionId/resourceGroups/resourceGroupName/providers/Microsoft.MachineLearning/commitmentPlans/commitmentPlanName
              createdOn: 2017-01-01T01:01:01Z
              description: New Web Service Description
              diagnostics:
                level: None
              exposeSampleData: true
              modifiedOn: 2017-01-01T02:02:02Z
              packageType: Graph
              payloadsInBlobStorage: false
              provisioningState: Provisioning
              readOnly: false
              realtimeConfiguration:
                maxConcurrentCalls: 4
              storageAccount:
                name: Storage_Name
              swaggerLocation: https://ussouthcentral.services.azureml.net/subscriptions/subscriptionId/services/serviceId/swagger.json
              title: New Web Service Title
            tags:
              tag1: value1
              tag2: value2
          - id: TheWebServiceId2
            location: West US
            properties:
              commitmentPlan:
                id: /subscriptions/subscriptionId/resourceGroups/resourceGroupName/providers/Microsoft.MachineLearning/commitmentPlans/commitmentPlanName
              createdOn: 2017-01-01T01:01:01Z
              description: New Web Service Description2
              diagnostics:
                level: None
              exposeSampleData: true
              modifiedOn: 2017-01-01T02:02:02Z
              packageType: Graph
              payloadsInBlobStorage: false
              provisioningState: Provisioning
              readOnly: false
              realtimeConfiguration:
                maxConcurrentCalls: 4
              storageAccount:
                name: Storage_Name
              swaggerLocation: https://ussouthcentral.services.azureml.net/subscriptions/subscriptionId/services/serviceId/swagger.json
              title: New Web Service Title2
            tags:
              tag1: value1
              tag2: value2
    GET_WebService:
      value:
        id: TheWebServiceId
        location: West US
        properties:
          assets:
            asset1:
              locationInfo:
                credentials: ""
                uri: aml://module/moduleId-1
              name: Execute R Script
              type: Module
            asset2:
              locationInfo:
                credentials: ""
                uri: aml://module/moduleId-2
              name: Import Data
              type: Module
          commitmentPlan:
            id: /subscriptions/subscriptionId/resourceGroups/resourceGroupName/providers/Microsoft.MachineLearning/commitmentPlans/commitmentPlanName
          createdOn: 2017-01-01T01:01:01Z
          description: Web Service Description
          diagnostics:
            level: None
          exampleRequest:
            globalParameters: null
            inputs:
              input1:
                - - age
                - - workclass
                - - fnlwgt
                - - education
                - - education-num
          exposeSampleData: true
          input:
            description: ""
            properties:
              input1:
                description: ""
                properties:
                  column_name:
                    type: String
                    x-ms-isnullable: false
                title: ""
                type: object
            title: ""
            type: object
          machineLearningWorkspace:
            id: workspaceId
          modifiedOn: 2017-01-01T02:02:02Z
          output:
            description: ""
            properties:
              output1:
                description: ""
                properties:
                  age:
                    format: Int32
                    type: Integer
                    x-ms-isnullable: true
                  workclass:
                    type: String
                    x-ms-isnullable: false
                title: ""
                type: object
            title: ""
            type: object
          package:
            edges:
              - sourceNodeId: node2
                sourcePortId: Results dataset
                targetNodeId: node1
                targetPortId: Dataset2
              - sourceNodeId: node3
                targetNodeId: node1
                targetPortId: Dataset1
              - sourceNodeId: node1
                sourcePortId: Result Dataset
                targetNodeId: node4
            graphParameters: {}
            nodes:
              node1:
                assetId: asset1
                parameters:
                  R Script:
                    certificateThumbprint: ""
                    value: The R Script
                  R Version:
                    certificateThumbprint: ""
                    value: CRAN R 3.1.0
              node2:
                assetId: asset2
                parameters:
                  Account Key:
                    certificateThumbprint: TheThumbprint
                    value: Encrypted Key
                  Account Name:
                    certificateThumbprint: ""
                    value: accountName
                  Please Specify Authentication Type:
                    certificateThumbprint: ""
                    value: Account
                  Please Specify Data Source:
                    certificateThumbprint: ""
                    value: AzureBlobStorage
              node3:
                inputId: input1
              node4:
                outputId: output1
          packageType: Graph
          parameters: {}
          payloadsInBlobStorage: false
          provisioningState: Provisioning
          readOnly: false
          realtimeConfiguration:
            maxConcurrentCalls: 4
          storageAccount:
            name: Storage_Name
          swaggerLocation: https://ussouthcentral.services.azureml.net/subscriptions/subscriptionId/services/serviceId/swagger.json
          title: Web Service Title
        tags:
          tag1: value1
          tag2: value2
    Patch_WebService:
      value:
        id: TheWebServiceId
        location: West US
        properties:
          assets:
            asset1:
              locationInfo:
                credentials: ""
                uri: aml://module/moduleId-1
              name: Execute R Script
              type: Module
            asset2:
              locationInfo:
                credentials: ""
                uri: aml://module/moduleId-2
              name: Import Data
              type: Module
          commitmentPlan:
            id: /subscriptions/subscriptionId/resourceGroups/resourceGroupName/providers/Microsoft.MachineLearning/commitmentPlans/commitmentPlanName
          createdOn: 2017-01-01T01:01:01Z
          description: New Web Service Description
          diagnostics:
            level: None
          exampleRequest:
            globalParameters: null
            inputs:
              input1:
                - - age
                - - workclass
                - - fnlwgt
                - - education
                - - education-num
          exposeSampleData: true
          input:
            description: ""
            properties:
              input1:
                description: ""
                properties:
                  column_name:
                    type: String
                    x-ms-isnullable: false
                title: ""
                type: object
            title: ""
            type: object
          machineLearningWorkspace:
            id: workspaceId
          modifiedOn: 2017-01-01T02:02:02Z
          output:
            description: ""
            properties:
              output1:
                description: ""
                properties:
                  age:
                    format: Int32
                    type: Integer
                    x-ms-isnullable: true
                  workclass:
                    type: String
                    x-ms-isnullable: false
                title: ""
                type: object
            title: ""
            type: object
          package:
            edges:
              - sourceNodeId: node2
                sourcePortId: Results dataset
                targetNodeId: node1
                targetPortId: Dataset2
              - sourceNodeId: node3
                targetNodeId: node1
                targetPortId: Dataset1
              - sourceNodeId: node1
                sourcePortId: Result Dataset
                targetNodeId: node4
            graphParameters: {}
            nodes:
              node1:
                assetId: asset1
                parameters:
                  R Script:
                    certificateThumbprint: ""
                    value: The R Script
                  R Version:
                    certificateThumbprint: ""
                    value: CRAN R 3.1.0
              node2:
                assetId: asset2
                parameters:
                  Account Key:
                    certificateThumbprint: TheThumbprint
                    value: Encrypted Key
                  Account Name:
                    certificateThumbprint: ""
                    value: accountName
                  Please Specify Authentication Type:
                    certificateThumbprint: ""
                    value: Account
                  Please Specify Data Source:
                    certificateThumbprint: ""
                    value: AzureBlobStorage
              node3:
                inputId: input1
              node4:
                outputId: output1
          packageType: Graph
          parameters: {}
          payloadsInBlobStorage: false
          provisioningState: Provisioning
          readOnly: false
          realtimeConfiguration:
            maxConcurrentCalls: 4
          storageAccount:
            name: Storage_Name
          swaggerLocation: https://ussouthcentral.services.azureml.net/subscriptions/subscriptionId/services/serviceId/swagger.json
          title: New Web Service Title
        tags:
          tag1: value1
          tag2: value2
    PUT_WebService:
      value:
        id: TheWebServiceId
        location: West US
        properties:
          assets:
            asset1:
              locationInfo:
                credentials: ""
                uri: aml://module/moduleId-1
              name: Execute R Script
              type: Module
            asset2:
              locationInfo:
                credentials: ""
                uri: aml://module/moduleId-2
              name: Import Data
              type: Module
          commitmentPlan:
            id: /subscriptions/subscriptionId/resourceGroups/resourceGroupName/providers/Microsoft.MachineLearning/commitmentPlans/commitmentPlanName
          createdOn: 2017-01-01T01:01:01Z
          description: Web Service Description
          diagnostics:
            level: None
          exampleRequest:
            globalParameters: null
            inputs:
              input1:
                - - age
                - - workclass
                - - fnlwgt
                - - education
                - - education-num
          exposeSampleData: true
          input:
            description: ""
            properties:
              input1:
                description: ""
                properties:
                  column_name:
                    type: String
                    x-ms-isnullable: false
                title: ""
                type: object
            title: ""
            type: object
          machineLearningWorkspace:
            id: workspaceId
          modifiedOn: 2017-01-01T01:01:01Z
          output:
            description: ""
            properties:
              output1:
                description: ""
                properties:
                  age:
                    format: Int32
                    type: Integer
                    x-ms-isnullable: true
                  workclass:
                    type: String
                    x-ms-isnullable: false
                title: ""
                type: object
            title: ""
            type: object
          package:
            edges:
              - sourceNodeId: node2
                sourcePortId: Results dataset
                targetNodeId: node1
                targetPortId: Dataset2
              - sourceNodeId: node3
                targetNodeId: node1
                targetPortId: Dataset1
              - sourceNodeId: node1
                sourcePortId: Result Dataset
                targetNodeId: node4
            graphParameters: {}
            nodes:
              node1:
                assetId: asset1
                parameters:
                  R Script:
                    certificateThumbprint: ""
                    value: The R Script
                  R Version:
                    certificateThumbprint: ""
                    value: CRAN R 3.1.0
              node2:
                assetId: asset2
                parameters:
                  Account Key:
                    certificateThumbprint: TheThumbprint
                    value: Encrypted Key
                  Account Name:
                    certificateThumbprint: ""
                    value: accountName
                  Please Specify Authentication Type:
                    certificateThumbprint: ""
                    value: Account
                  Please Specify Data Source:
                    certificateThumbprint: ""
                    value: AzureBlobStorage
              node3:
                inputId: input1
              node4:
                outputId: output1
          packageType: Graph
          parameters: {}
          payloadsInBlobStorage: false
          provisioningState: Provisioning
          readOnly: false
          realtimeConfiguration:
            maxConcurrentCalls: 4
          storageAccount:
            name: Storage_Name
          swaggerLocation: https://ussouthcentral.services.azureml.net/subscriptions/subscriptionId/services/serviceId/swagger.json
          title: Web Service Title
        tags:
          tag1: value1
          tag2: value2
    GET_WebService_Keys:
      value:
        primary: The Primary key
        secondary: The Secondary key
  parameters:
    APIVersionParameter:
      description: The version of the Microsoft.MachineLearning resource provider API to
        use.
      in: query
      name: api-version
      required: true
      schema:
        type: string
      examples:
        GET WebServices by Subscription Id:
          value: 2017-01-01
        GET WebServices by Resource Group:
          value: 2017-01-01
        Delete WebService:
          value: 2017-01-01
        GET WebService:
          value: 2017-01-01
        Patch WebService:
          value: 2017-01-01
        PUT WebService:
          value: 2017-01-01
        Create Regional Properties:
          value: 2017-01-01
        GET WebService Keys:
          value: 2017-01-01
    ResourceGroupNameParameter:
      description: Name of the resource group in which the web service is located.
      in: path
      name: resourceGroupName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
      examples:
        GET WebServices by Resource Group:
          value: OneResourceGroupName
        Delete WebService:
          value: OneResourceGroupName
        GET WebService:
          value: OneResourceGroupName
        Patch WebService:
          value: OneResourceGroupName
        PUT WebService:
          value: OneResourceGroupName
        Create Regional Properties:
          value: OneResourceGroupName
        GET WebService Keys:
          value: OneResourceGroupName
    SubscriptionIdParameter:
      description: The Azure subscription ID.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
      examples:
        GET WebServices by Subscription Id:
          value: subscription-id
        GET WebServices by Resource Group:
          value: subscription-id
        Delete WebService:
          value: subscription-id
        GET WebService:
          value: subscription-id
        Patch WebService:
          value: subscription-id
        PUT WebService:
          value: subscription-id
        Create Regional Properties:
          value: subscription-id
        GET WebService Keys:
          value: subscription-id
    WebServiceNameParameter:
      description: The name of the web service.
      in: path
      name: webServiceName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
      examples:
        Delete WebService:
          value: TargetWebServiceName
        GET WebService:
          value: TargetWebServiceName
        Patch WebService:
          value: TargetWebServiceName
        PUT WebService:
          value: TargetWebServiceName
        Create Regional Properties:
          value: TargetWebServiceName
        GET WebService Keys:
          value: TargetWebServiceName
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    AssetItem:
      description: Information about an asset associated with the web service.
      properties:
        id:
          description: Asset's Id.
          type: string
        inputPorts:
          additionalProperties:
            $ref: "#/components/schemas/InputPort"
          description: Information about the asset's input ports.
          type: object
        locationInfo:
          $ref: "#/components/schemas/BlobLocation"
        metadata:
          additionalProperties:
            type: string
          description: If the asset is a custom module, this holds the module's metadata.
          type: object
        name:
          description: Asset's friendly name.
          type: string
        outputPorts:
          additionalProperties:
            $ref: "#/components/schemas/OutputPort"
          description: Information about the asset's output ports.
          type: object
        parameters:
          description: If the asset is a custom module, this holds the module's parameters.
          items:
            $ref: "#/components/schemas/ModuleAssetParameter"
          type: array
        type:
          description: Asset's type.
          enum:
            - Module
            - Resource
          type: string
          x-ms-enum:
            modelAsString: true
            name: AssetType
      required:
        - name
        - type
        - locationInfo
      type: object
    AsyncOperationErrorInfo:
      description: The error detail information for async operation
      properties:
        code:
          description: The error code.
          readOnly: true
          type: string
        details:
          description: An array containing error information.
          items:
            $ref: "#/components/schemas/AsyncOperationErrorInfo"
          readOnly: true
          type: array
        message:
          description: The error message.
          readOnly: true
          type: string
        target:
          description: The error target.
          readOnly: true
          type: string
      type: object
    AsyncOperationStatus:
      description: Azure async operation status.
      properties:
        endTime:
          description: The date time that the async operation finished.
          format: date-time
          readOnly: true
          type: string
        errorInfo:
          $ref: "#/components/schemas/AsyncOperationErrorInfo"
        id:
          description: Async operation id.
          readOnly: true
          type: string
        name:
          description: Async operation name.
          readOnly: true
          type: string
        percentComplete:
          description: Async operation progress.
          readOnly: true
          type: number
        provisioningState:
          description: "Read Only: The provisioning state of the web service. Valid values
            are Unknown, Provisioning, Succeeded, and Failed."
          enum:
            - Unknown
            - Provisioning
            - Succeeded
            - Failed
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ProvisioningState
        startTime:
          description: The date time that the async operation started.
          format: date-time
          readOnly: true
          type: string
      type: object
    BlobLocation:
      description: Describes the access location for a blob.
      properties:
        credentials:
          description: Access credentials for the blob, if applicable (e.g. blob specified
            by storage account connection string + blob URI)
          type: string
        uri:
          description: The URI from which the blob is accessible from. For example,
            aml://abc for system assets or https://xyz for user assets or
            payload.
          type: string
      required:
        - uri
      type: object
    ColumnSpecification:
      description: "Swagger 2.0 schema for a column within the data table representing a
        web service input or output. See Swagger specification:
        http://swagger.io/specification/"
      properties:
        enum:
          description: If the data type is categorical, this provides the list of accepted
            categories.
          items:
            type: object
          type: array
        format:
          description: Additional format information for the data type.
          enum:
            - Byte
            - Char
            - Complex64
            - Complex128
            - Date-time
            - Date-timeOffset
            - Double
            - Duration
            - Float
            - Int8
            - Int16
            - Int32
            - Int64
            - Uint8
            - Uint16
            - Uint32
            - Uint64
          type: string
          x-ms-enum:
            modelAsString: true
            name: ColumnFormat
        type:
          description: Data type of the column.
          enum:
            - Boolean
            - Integer
            - Number
            - String
          type: string
          x-ms-enum:
            modelAsString: true
            name: ColumnType
        x-ms-isnullable:
          description: Flag indicating if the type supports null values or not.
          type: boolean
        x-ms-isordered:
          description: Flag indicating whether the categories are treated as an ordered set
            or not, if this is a categorical column.
          type: boolean
      required:
        - type
      type: object
    CommitmentPlan:
      description: Information about the machine learning commitment plan associated with
        the web service.
      properties:
        id:
          description: Specifies the Azure Resource Manager ID of the commitment plan
            associated with the web service.
          type: string
      required:
        - id
      type: object
    DiagnosticsConfiguration:
      description: Diagnostics settings for an Azure ML web service.
      properties:
        expiry:
          description: Specifies the date and time when the logging will cease. If null,
            diagnostic collection is not time limited.
          format: date-time
          type: string
        level:
          description: "Specifies the verbosity of the diagnostic output. Valid values are:
            None - disables tracing; Error - collects only error (stderr)
            traces; All - collects all traces (stdout and stderr)."
          enum:
            - None
            - Error
            - All
          type: string
          x-ms-enum:
            modelAsString: true
            name: DiagnosticsLevel
      required:
        - level
      type: object
    ExampleRequest:
      description: Sample input data for the service's input(s).
      properties:
        globalParameters:
          additionalProperties:
            type: object
          description: Sample input data for the web service's global parameters
          type: object
        inputs:
          additionalProperties:
            items:
              items:
                type: object
              type: array
            type: array
          description: Sample input data for the web service's input(s) given as an input
            name to sample input values matrix map.
          type: object
      type: object
    GraphEdge:
      description: Defines an edge within the web service's graph.
      properties:
        sourceNodeId:
          description: The source graph node's identifier.
          type: string
        sourcePortId:
          description: The identifier of the source node's port that the edge connects from.
          type: string
        targetNodeId:
          description: The destination graph node's identifier.
          type: string
        targetPortId:
          description: The identifier of the destination node's port that the edge connects
            into.
          type: string
      type: object
    GraphNode:
      description: Specifies a node in the web service graph. The node can either be an
        input, output or asset node, so only one of the corresponding id
        properties is populated at any given time.
      properties:
        assetId:
          description: The id of the asset represented by this node.
          type: string
        inputId:
          description: The id of the input element represented by this node.
          type: string
        outputId:
          description: The id of the output element represented by this node.
          type: string
        parameters:
          additionalProperties:
            $ref: "#/components/schemas/WebServiceParameter"
          description: If applicable, parameters of the node. Global graph parameters map
            into these, with values set at runtime.
          type: object
      type: object
    GraphPackage:
      description: Defines the graph of modules making up the machine learning solution.
      properties:
        edges:
          description: The list of edges making up the graph.
          items:
            $ref: "#/components/schemas/GraphEdge"
          type: array
        graphParameters:
          additionalProperties:
            $ref: "#/components/schemas/GraphParameter"
          description: The collection of global parameters for the graph, given as a global
            parameter name to GraphParameter map. Each parameter here has a 1:1
            match with the global parameters values map declared at the
            WebServiceProperties level.
          type: object
        nodes:
          additionalProperties:
            $ref: "#/components/schemas/GraphNode"
          description: The set of nodes making up the graph, provided as a nodeId to
            GraphNode map
          type: object
      type: object
    GraphParameter:
      description: Defines a global parameter in the graph.
      properties:
        description:
          description: Description of this graph parameter.
          type: string
        links:
          description: Association links for this parameter to nodes in the graph.
          items:
            $ref: "#/components/schemas/GraphParameterLink"
          type: array
        type:
          description: Graph parameter's type.
          enum:
            - String
            - Int
            - Float
            - Enumerated
            - Script
            - Mode
            - Credential
            - Boolean
            - Double
            - ColumnPicker
            - ParameterRange
            - DataGatewayName
          type: string
          x-ms-enum:
            modelAsString: true
            name: ParameterType
      required:
        - type
        - links
      type: object
    GraphParameterLink:
      description: Association link for a graph global parameter to a node in the graph.
      properties:
        nodeId:
          description: The graph node's identifier
          type: string
        parameterKey:
          description: The identifier of the node parameter that the global parameter maps
            to.
          type: string
      required:
        - nodeId
        - parameterKey
      type: object
    InputPort:
      description: Asset input port
      properties:
        type:
          default: Dataset
          description: Port data type.
          enum:
            - Dataset
          type: string
          x-ms-enum:
            modelAsString: true
            name: InputPortType
      type: object
    MachineLearningWorkspace:
      description: Information about the machine learning workspace containing the
        experiment that is source for the web service.
      properties:
        id:
          description: Specifies the workspace ID of the machine learning workspace
            associated with the web service
          type: string
      required:
        - id
      type: object
    ModeValueInfo:
      description: Nested parameter definition.
      properties:
        interfaceString:
          description: The interface string name for the nested parameter.
          type: string
        parameters:
          description: The definition of the parameter.
          items:
            $ref: "#/components/schemas/ModuleAssetParameter"
          type: array
      type: object
    ModuleAssetParameter:
      description: Parameter definition for a module asset.
      properties:
        modeValuesInfo:
          additionalProperties:
            $ref: "#/components/schemas/ModeValueInfo"
          description: Definitions for nested interface parameters if this is a complex
            module parameter.
          type: object
        name:
          description: Parameter name.
          type: string
        parameterType:
          description: Parameter type.
          type: string
      type: object
    OperationDisplayInfo:
      description: The API operation info.
      properties:
        description:
          description: The description of the operation.
          readOnly: true
          type: string
        operation:
          description: The action that users can perform, based on their permission level.
          readOnly: true
          type: string
        provider:
          description: The service provider.
          readOnly: true
          type: string
        resource:
          description: The resource on which the operation is performed.
          readOnly: true
          type: string
      type: object
    OperationEntity:
      description: An API operation.
      properties:
        display:
          $ref: "#/components/schemas/OperationDisplayInfo"
        name:
          description: "Operation name: {provider}/{resource}/{operation}."
          readOnly: true
          type: string
      type: object
    OperationEntityListResult:
      description: The list of REST API operations.
      properties:
        value:
          description: The list of operations.
          items:
            $ref: "#/components/schemas/OperationEntity"
          readOnly: true
          type: array
      type: object
    OutputPort:
      description: Asset output port
      properties:
        type:
          default: Dataset
          description: Port data type.
          enum:
            - Dataset
          type: string
          x-ms-enum:
            modelAsString: true
            name: OutputPortType
      type: object
    PaginatedWebServicesList:
      description: Paginated list of web services.
      properties:
        nextLink:
          description: A continuation link (absolute URI) to the next page of results in
            the list.
          type: string
        value:
          description: An array of web service objects.
          items:
            $ref: "#/components/schemas/WebService"
          type: array
      type: object
    PatchedResource:
      description: Azure resource.
      properties:
        id:
          description: Specifies the resource ID.
          readOnly: true
          type: string
        location:
          description: Specifies the location of the resource.
          readOnly: true
          type: string
        name:
          description: Specifies the name of the resource.
          readOnly: true
          type: string
        tags:
          additionalProperties:
            type: string
          description: Contains resource tags defined as key/value pairs.
          type: object
        type:
          description: Specifies the type of the resource.
          readOnly: true
          type: string
      x-ms-azure-resource: true
    PatchedWebService:
      allOf:
        - $ref: "#/components/schemas/PatchedResource"
      description: Instance of an Patched Azure ML web service resource.
      properties:
        properties:
          $ref: "#/components/schemas/WebServiceProperties"
      type: object
    RealtimeConfiguration:
      description: Holds the available configuration options for an Azure ML web service
        endpoint.
      properties:
        maxConcurrentCalls:
          description: "Specifies the maximum concurrent calls that can be made to the web
            service. Minimum value: 4, Maximum value: 200."
          maximum: 200
          minimum: 4
          type: integer
      type: object
    Resource:
      description: Azure resource.
      properties:
        id:
          description: Specifies the resource ID.
          readOnly: true
          type: string
        location:
          description: Specifies the location of the resource.
          type: string
        name:
          description: Specifies the name of the resource.
          readOnly: true
          type: string
        tags:
          additionalProperties:
            type: string
          description: Contains resource tags defined as key/value pairs.
          type: object
        type:
          description: Specifies the type of the resource.
          readOnly: true
          type: string
      required:
        - location
      x-ms-azure-resource: true
    ServiceInputOutputSpecification:
      description: "The swagger 2.0 schema describing the service's inputs or outputs. See
        Swagger specification: http://swagger.io/specification/"
      properties:
        description:
          description: The description of the Swagger schema.
          type: string
        properties:
          additionalProperties:
            $ref: "#/components/schemas/TableSpecification"
          description: Specifies a collection that contains the column schema for each
            input or output of the web service. For more information, see the
            Swagger specification.
          type: object
        title:
          description: The title of your Swagger schema.
          type: string
        type:
          default: object
          description: The type of the entity described in swagger. Always 'object'.
          type: string
      required:
        - type
        - properties
      type: object
    StorageAccount:
      description: Access information for a storage account.
      properties:
        key:
          description: Specifies the key used to access the storage account.
          type: string
        name:
          description: Specifies the name of the storage account.
          type: string
      type: object
    TableSpecification:
      description: "The swagger 2.0 schema describing a single service input or output. See
        Swagger specification: http://swagger.io/specification/"
      properties:
        description:
          description: Swagger schema description.
          type: string
        format:
          description: The format, if 'type' is not 'object'
          type: string
        properties:
          additionalProperties:
            $ref: "#/components/schemas/ColumnSpecification"
          description: The set of columns within the data table.
          type: object
        title:
          description: Swagger schema title.
          type: string
        type:
          default: object
          description: The type of the entity described in swagger.
          type: string
      required:
        - type
      type: object
    WebService:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Instance of an Azure ML web service resource.
      properties:
        properties:
          $ref: "#/components/schemas/WebServiceProperties"
      required:
        - properties
      type: object
    WebServiceKeys:
      description: Access keys for the web service calls.
      properties:
        primary:
          description: The primary access key.
          type: string
        secondary:
          description: The secondary access key.
          type: string
      type: object
    WebServiceParameter:
      description: Web Service Parameter object for node and global parameter
      properties:
        certificateThumbprint:
          description: If the parameter value in 'value' field is encrypted, the thumbprint
            of the certificate should be put here.
          type: string
        value:
          description: The parameter value
          type: object
      type: object
    WebServiceProperties:
      description: The set of properties specific to the Azure ML web service resource.
      discriminator:
        propertyName: packageType
      properties:
        assets:
          additionalProperties:
            $ref: "#/components/schemas/AssetItem"
          description: Contains user defined properties describing web service assets.
            Properties are expressed as Key/Value pairs.
          type: object
        commitmentPlan:
          $ref: "#/components/schemas/CommitmentPlan"
        createdOn:
          description: "Read Only: The date and time when the web service was created."
          format: date-time
          readOnly: true
          type: string
        description:
          description: The description of the web service.
          type: string
        diagnostics:
          $ref: "#/components/schemas/DiagnosticsConfiguration"
        exampleRequest:
          $ref: "#/components/schemas/ExampleRequest"
        exposeSampleData:
          description: When set to true, sample data is included in the web service's
            swagger definition. The default value is true.
          type: boolean
        input:
          $ref: "#/components/schemas/ServiceInputOutputSpecification"
        keys:
          $ref: "#/components/schemas/WebServiceKeys"
        machineLearningWorkspace:
          $ref: "#/components/schemas/MachineLearningWorkspace"
        modifiedOn:
          description: "Read Only: The date and time when the web service was last
            modified."
          format: date-time
          readOnly: true
          type: string
        output:
          $ref: "#/components/schemas/ServiceInputOutputSpecification"
        packageType:
          description: "Specifies the package type. Valid values are Graph (Specifies a web
            service published through the Machine Learning Studio) and Code
            (Specifies a web service published using code such as Python). Note:
            Code is not supported at this time."
          enum:
            - Graph
          type: string
        parameters:
          additionalProperties:
            $ref: "#/components/schemas/WebServiceParameter"
          description: The set of global parameters values defined for the web service,
            given as a global parameter name to default value map. If no default
            value is specified, the parameter is considered to be required.
          type: object
        payloadsInBlobStorage:
          description: When set to true, indicates that the payload size is larger than 3
            MB. Otherwise false. If the payload size exceed 3 MB, the payload is
            stored in a blob and the PayloadsLocation parameter contains the URI
            of the blob. Otherwise, this will be set to false and Assets, Input,
            Output, Package, Parameters, ExampleRequest are inline. The Payload
            sizes is determined by adding the size of the Assets, Input, Output,
            Package, Parameters, and the ExampleRequest.
          type: boolean
        payloadsLocation:
          $ref: "#/components/schemas/BlobLocation"
        provisioningState:
          description: "Read Only: The provision state of the web service. Valid values are
            Unknown, Provisioning, Succeeded, and Failed."
          enum:
            - Unknown
            - Provisioning
            - Succeeded
            - Failed
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ProvisioningState
        readOnly:
          description: "When set to true, indicates that the web service is read-only and
            can no longer be updated or patched, only removed. Default, is
            false. Note: Once set to true, you cannot change its value."
          type: boolean
        realtimeConfiguration:
          $ref: "#/components/schemas/RealtimeConfiguration"
        storageAccount:
          $ref: "#/components/schemas/StorageAccount"
        swaggerLocation:
          description: "Read Only: Contains the URI of the swagger spec associated with
            this web service."
          readOnly: true
          type: string
        title:
          description: The title of the web service.
          type: string
      required:
        - packageType
      type: object
    WebServicePropertiesForGraph:
      allOf:
        - $ref: "#/components/schemas/WebServiceProperties"
      description: Properties specific to a Graph based web service.
      properties:
        package:
          $ref: "#/components/schemas/GraphPackage"
      x-ms-discriminator-value: Graph
