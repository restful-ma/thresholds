openapi: 3.0.0
info:
  description: Use these APIs to manage Azure Websites resources through the Azure Resource
    Manager. All task operations conform to the HTTP/1.1 protocol specification
    and each operation returns an x-ms-request-id header that can be used to
    obtain information about the request. You must make sure that requests made
    to these resources are secure. For more information, see
    https://msdn.microsoft.com/en-us/library/azure/dn790557.aspx.
  title: WebSite Management Client
  version: 2015-08-01
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/web/resource-manager/Microsoft.Web/stable/2015-08-01/service.json
      version: "2.0"
  x-providerName: azure.com
  x-serviceName: web-service
  x-tags:
    - Azure
    - Microsoft
security:
  - azure_auth:
      - user_impersonation
paths:
  /providers/Microsoft.Web/publishingUsers/web:
    get:
      deprecated: false
      operationId: Provider_GetPublishingUser
      parameters:
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
            text/json:
              schema:
                $ref: "#/components/schemas/User"
            application/xml:
              schema:
                $ref: "#/components/schemas/User"
            text/xml:
              schema:
                $ref: "#/components/schemas/User"
      summary: Gets publishing user
      tags:
        - Provider
    put:
      deprecated: false
      operationId: Provider_UpdatePublishingUser
      parameters:
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
          text/json:
            schema:
              $ref: "#/components/schemas/User"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/User"
        description: Details of publishing user
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
            text/json:
              schema:
                $ref: "#/components/schemas/User"
            application/xml:
              schema:
                $ref: "#/components/schemas/User"
            text/xml:
              schema:
                $ref: "#/components/schemas/User"
      summary: Updates publishing user
      tags:
        - Provider
  /providers/Microsoft.Web/sourcecontrols:
    get:
      deprecated: false
      operationId: Provider_GetSourceControls
      parameters:
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SourceControlCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/SourceControlCollection"
      summary: Gets the source controls available for Azure websites
      tags:
        - Provider
      x-ms-pageable:
        nextLinkName: nextLink
  "/providers/Microsoft.Web/sourcecontrols/{sourceControlType}":
    get:
      deprecated: false
      operationId: Provider_GetSourceControl
      parameters:
        - description: Type of source control
          in: path
          name: sourceControlType
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SourceControl"
            text/json:
              schema:
                $ref: "#/components/schemas/SourceControl"
            application/xml:
              schema:
                $ref: "#/components/schemas/SourceControl"
            text/xml:
              schema:
                $ref: "#/components/schemas/SourceControl"
      summary: Gets source control token
      tags:
        - Provider
    put:
      deprecated: false
      operationId: Provider_UpdateSourceControl
      parameters:
        - description: Type of source control
          in: path
          name: sourceControlType
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SourceControl"
          text/json:
            schema:
              $ref: "#/components/schemas/SourceControl"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SourceControl"
        description: Source control token information
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SourceControl"
            text/json:
              schema:
                $ref: "#/components/schemas/SourceControl"
            application/xml:
              schema:
                $ref: "#/components/schemas/SourceControl"
            text/xml:
              schema:
                $ref: "#/components/schemas/SourceControl"
      summary: Updates source control token
      tags:
        - Provider
  "/subscriptions/{subscriptionId}/providers/Microsoft.CertificateRegistration/certificateOrders":
    get:
      deprecated: false
      operationId: GlobalCertificateOrder_GetAllCertificateOrders
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateOrderCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CertificateOrderCollection"
      summary: Lists all domains in a subscription
      tags:
        - GlobalCertificateOrder
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.CertificateRegistration/validateCertificateRegistrationInformation":
    post:
      deprecated: false
      operationId: GlobalCertificateOrder_ValidateCertificatePurchaseInformation
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CertificateOrder"
          text/json:
            schema:
              $ref: "#/components/schemas/CertificateOrder"
          application/xml:
            schema:
              $ref: "#/components/schemas/CertificateOrder"
          text/xml:
            schema:
              $ref: "#/components/schemas/CertificateOrder"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CertificateOrder"
        description: Certificate order
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Validate certificate purchase information
      tags:
        - GlobalCertificateOrder
  "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/checkDomainAvailability":
    post:
      deprecated: false
      operationId: GlobalDomainRegistration_CheckDomainAvailability
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NameIdentifier"
          text/json:
            schema:
              $ref: "#/components/schemas/NameIdentifier"
          application/xml:
            schema:
              $ref: "#/components/schemas/NameIdentifier"
          text/xml:
            schema:
              $ref: "#/components/schemas/NameIdentifier"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/NameIdentifier"
        description: Name of the domain
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainAvailablilityCheckResult"
            text/json:
              schema:
                $ref: "#/components/schemas/DomainAvailablilityCheckResult"
            application/xml:
              schema:
                $ref: "#/components/schemas/DomainAvailablilityCheckResult"
            text/xml:
              schema:
                $ref: "#/components/schemas/DomainAvailablilityCheckResult"
      summary: Checks if a domain is available for registration
      tags:
        - GlobalDomainRegistration
  "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/domains":
    get:
      deprecated: false
      operationId: GlobalDomainRegistration_GetAllDomains
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/DomainCollection"
      summary: Lists all domains in a subscription
      tags:
        - GlobalDomainRegistration
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/generateSsoRequest":
    post:
      deprecated: false
      operationId: GlobalDomainRegistration_GetDomainControlCenterSsoRequest
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainControlCenterSsoRequest"
            text/json:
              schema:
                $ref: "#/components/schemas/DomainControlCenterSsoRequest"
            application/xml:
              schema:
                $ref: "#/components/schemas/DomainControlCenterSsoRequest"
            text/xml:
              schema:
                $ref: "#/components/schemas/DomainControlCenterSsoRequest"
      summary: Generates a single sign on request for domain management portal
      tags:
        - GlobalDomainRegistration
  "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/listDomainRecommendations":
    post:
      deprecated: false
      operationId: GlobalDomainRegistration_ListDomainRecommendations
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DomainRecommendationSearchParameters"
          text/json:
            schema:
              $ref: "#/components/schemas/DomainRecommendationSearchParameters"
          application/xml:
            schema:
              $ref: "#/components/schemas/DomainRecommendationSearchParameters"
          text/xml:
            schema:
              $ref: "#/components/schemas/DomainRecommendationSearchParameters"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/DomainRecommendationSearchParameters"
        description: Domain recommendation search parameters
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NameIdentifierCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/NameIdentifierCollection"
      summary: Lists domain recommendations based on keywords
      tags:
        - GlobalDomainRegistration
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/topLevelDomains":
    get:
      deprecated: false
      operationId: TopLevelDomains_GetGetTopLevelDomains
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TopLevelDomainCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/TopLevelDomainCollection"
      summary: Lists all top level domains supported for registration
      tags:
        - TopLevelDomains
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/topLevelDomains/{name}":
    get:
      deprecated: false
      operationId: TopLevelDomains_GetTopLevelDomain
      parameters:
        - description: Name of the top level domain
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TopLevelDomain"
            text/json:
              schema:
                $ref: "#/components/schemas/TopLevelDomain"
            application/xml:
              schema:
                $ref: "#/components/schemas/TopLevelDomain"
            text/xml:
              schema:
                $ref: "#/components/schemas/TopLevelDomain"
      summary: Gets details of a top level domain
      tags:
        - TopLevelDomains
  "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/topLevelDomains/{name}/listAgreements":
    post:
      deprecated: false
      operationId: TopLevelDomains_ListTopLevelDomainAgreements
      parameters:
        - description: Name of the top level domain
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TopLevelDomainAgreementOption"
          text/json:
            schema:
              $ref: "#/components/schemas/TopLevelDomainAgreementOption"
          application/xml:
            schema:
              $ref: "#/components/schemas/TopLevelDomainAgreementOption"
          text/xml:
            schema:
              $ref: "#/components/schemas/TopLevelDomainAgreementOption"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/TopLevelDomainAgreementOption"
        description: Domain agreement options
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TldLegalAgreementCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/TldLegalAgreementCollection"
      summary: Lists legal agreements that user needs to accept before purchasing domain
      tags:
        - TopLevelDomains
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/validateDomainRegistrationInformation":
    post:
      deprecated: false
      operationId: GlobalDomainRegistration_ValidateDomainPurchaseInformation
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DomainRegistrationInput"
          text/json:
            schema:
              $ref: "#/components/schemas/DomainRegistrationInput"
          application/xml:
            schema:
              $ref: "#/components/schemas/DomainRegistrationInput"
          text/xml:
            schema:
              $ref: "#/components/schemas/DomainRegistrationInput"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/DomainRegistrationInput"
        description: Domain registration information
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Validates domain registration information
      tags:
        - GlobalDomainRegistration
  "/subscriptions/{subscriptionId}/providers/Microsoft.Web/certificates":
    get:
      deprecated: false
      operationId: Global_GetAllCertificates
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CertificateCollection"
      summary: Get all certificates for a subscription
      tags:
        - Global
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.Web/checknameavailability":
    post:
      deprecated: false
      operationId: Global_CheckNameAvailability
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceNameAvailabilityRequest"
          text/json:
            schema:
              $ref: "#/components/schemas/ResourceNameAvailabilityRequest"
          application/xml:
            schema:
              $ref: "#/components/schemas/ResourceNameAvailabilityRequest"
          text/xml:
            schema:
              $ref: "#/components/schemas/ResourceNameAvailabilityRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ResourceNameAvailabilityRequest"
        description: Name availability request
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNameAvailability"
            text/json:
              schema:
                $ref: "#/components/schemas/ResourceNameAvailability"
            application/xml:
              schema:
                $ref: "#/components/schemas/ResourceNameAvailability"
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceNameAvailability"
      summary: Check if resource name is available
      tags:
        - Global
  "/subscriptions/{subscriptionId}/providers/Microsoft.Web/classicMobileServices":
    get:
      deprecated: false
      operationId: Global_GetAllClassicMobileServices
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClassicMobileServiceCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ClassicMobileServiceCollection"
      summary: Gets all mobile services for a subscription
      tags:
        - Global
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.Web/geoRegions":
    get:
      deprecated: false
      operationId: Global_GetSubscriptionGeoRegions
      parameters:
        - description: Filter only to regions that support this sku
          in: query
          name: sku
          schema:
            type: string
        - description: Filter only to regions that support linux workers
          in: query
          name: linuxWorkersEnabled
          schema:
            type: boolean
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeoRegionCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/GeoRegionCollection"
      summary: Gets list of available geo regions
      tags:
        - Global
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.Web/hostingEnvironments":
    get:
      deprecated: false
      operationId: Global_GetAllHostingEnvironments
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HostingEnvironmentCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/HostingEnvironmentCollection"
      summary: Gets all hostingEnvironments (App Service Environment) for a subscription
      tags:
        - Global
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.Web/ishostingenvironmentnameavailable":
    get:
      deprecated: false
      operationId: Global_IsHostingEnvironmentNameAvailable
      parameters:
        - description: Hosting environment name
          in: query
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Whether hosting environment name is available
      tags:
        - Global
  "/subscriptions/{subscriptionId}/providers/Microsoft.Web/ishostingenvironmentnameavailable/{name}":
    get:
      deprecated: false
      operationId: Global_IsHostingEnvironmentWithLegacyNameAvailable
      parameters:
        - description: Hosting environment name
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Whether hosting environment name is available
      tags:
        - Global
  "/subscriptions/{subscriptionId}/providers/Microsoft.Web/managedHostingEnvironments":
    get:
      deprecated: false
      operationId: Global_GetAllManagedHostingEnvironments
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManagedHostingEnvironmentCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ManagedHostingEnvironmentCollection"
      summary: Gets all managed hosting environments for a subscription
      tags:
        - Global
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.Web/premieraddonoffers":
    get:
      deprecated: false
      operationId: Global_ListPremierAddOnOffers
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: List premier add on offers
      tags:
        - Global
  "/subscriptions/{subscriptionId}/providers/Microsoft.Web/publishingCredentials":
    get:
      deprecated: false
      operationId: Global_GetSubscriptionPublishingCredentials
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
            text/json:
              schema:
                $ref: "#/components/schemas/User"
            application/xml:
              schema:
                $ref: "#/components/schemas/User"
            text/xml:
              schema:
                $ref: "#/components/schemas/User"
      summary: Gets publishing credentials for the subscription owner
      tags:
        - Global
    put:
      deprecated: false
      operationId: Global_UpdateSubscriptionPublishingCredentials
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
          text/json:
            schema:
              $ref: "#/components/schemas/User"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/User"
        description: requestMessage with new publishing credentials
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
            text/json:
              schema:
                $ref: "#/components/schemas/User"
            application/xml:
              schema:
                $ref: "#/components/schemas/User"
            text/xml:
              schema:
                $ref: "#/components/schemas/User"
      summary: Updates publishing credentials for the subscription owner
      tags:
        - Global
  "/subscriptions/{subscriptionId}/providers/Microsoft.Web/recommendations":
    get:
      deprecated: false
      operationId: Recommendations_GetRecommendationBySubscription
      parameters:
        - description: If set, this API returns only the most critical recommendation among
            the others. Otherwise this API returns all recommendations available
          in: query
          name: featured
          schema:
            type: boolean
        - description: "Return only channels specified in the filter. Filter is specified
            by using OData syntax. Example: $filter=channels eq 'Api' or channel
            eq 'Notification'"
          in: query
          name: $filter
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Recommendation"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/Recommendation"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Recommendation"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Recommendation"
                type: array
      summary: Gets a list of recommendations associated with the specified
        subscription.
      tags:
        - Recommendations
  "/subscriptions/{subscriptionId}/providers/Microsoft.Web/serverfarms":
    get:
      deprecated: false
      operationId: Global_GetAllServerFarms
      parameters:
        - description: "False to return a subset of App Service Plan properties, true to
            return all of the properties.\r

            \            Retrieval of all properties may increase
            the API latency."
          in: query
          name: detailed
          schema:
            type: boolean
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerFarmCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ServerFarmCollection"
      summary: Gets all App Service Plans for a subscription
      tags:
        - Global
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.Web/sites":
    get:
      deprecated: false
      operationId: Global_GetAllSites
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteCollection"
      summary: Gets all Web Apps for a subscription
      tags:
        - Global
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/moveResources":
    post:
      deprecated: false
      operationId: GlobalResourceGroups_MoveResources
      parameters:
        - in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CsmMoveResourceEnvelope"
          text/json:
            schema:
              $ref: "#/components/schemas/CsmMoveResourceEnvelope"
          application/xml:
            schema:
              $ref: "#/components/schemas/CsmMoveResourceEnvelope"
          text/xml:
            schema:
              $ref: "#/components/schemas/CsmMoveResourceEnvelope"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CsmMoveResourceEnvelope"
        required: true
      responses:
        "204":
          description: No Content
      tags:
        - GlobalResourceGroups
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders":
    get:
      deprecated: false
      operationId: CertificateOrders_GetCertificateOrders
      parameters:
        - description: Azure resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateOrderCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CertificateOrderCollection"
      summary: Get certificate orders in a resource group
      tags:
        - CertificateOrders
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates":
    get:
      deprecated: false
      operationId: CertificateOrders_GetCertificates
      parameters:
        - description: Azure resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Certificate name
          in: path
          name: certificateOrderName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateOrderCertificateCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CertificateOrderCertificateCollection"
      summary: List all certificates associated with a certificate order (only one
        certificate can be associated with an order at a time)
      tags:
        - CertificateOrders
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates/{name}":
    delete:
      deprecated: false
      operationId: CertificateOrders_DeleteCertificate
      parameters:
        - description: Azure resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Certificate name
          in: path
          name: certificateOrderName
          required: true
          schema:
            type: string
        - description: Certificate name
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Deletes the certificate associated with the certificate order
      tags:
        - CertificateOrders
    get:
      deprecated: false
      operationId: CertificateOrders_GetCertificate
      parameters:
        - description: Azure resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Certificate name
          in: path
          name: certificateOrderName
          required: true
          schema:
            type: string
        - description: Certificate name
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateOrderCertificate"
            text/json:
              schema:
                $ref: "#/components/schemas/CertificateOrderCertificate"
            application/xml:
              schema:
                $ref: "#/components/schemas/CertificateOrderCertificate"
            text/xml:
              schema:
                $ref: "#/components/schemas/CertificateOrderCertificate"
      summary: Get certificate associated with the certificate order
      tags:
        - CertificateOrders
    patch:
      deprecated: false
      operationId: CertificateOrders_UpdateCertificate
      parameters:
        - description: Azure resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Certificate name
          in: path
          name: certificateOrderName
          required: true
          schema:
            type: string
        - description: Certificate name
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/CertificateOrderCertificate"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateOrderCertificate"
            text/json:
              schema:
                $ref: "#/components/schemas/CertificateOrderCertificate"
            application/xml:
              schema:
                $ref: "#/components/schemas/CertificateOrderCertificate"
            text/xml:
              schema:
                $ref: "#/components/schemas/CertificateOrderCertificate"
      summary: Associates a Key Vault secret to a certificate store that will be used
        for storing the certificate once it's ready
      tags:
        - CertificateOrders
    put:
      deprecated: false
      operationId: CertificateOrders_CreateOrUpdateCertificate
      parameters:
        - description: Azure resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Certificate name
          in: path
          name: certificateOrderName
          required: true
          schema:
            type: string
        - description: Certificate name
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/CertificateOrderCertificate"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateOrderCertificate"
            text/json:
              schema:
                $ref: "#/components/schemas/CertificateOrderCertificate"
            application/xml:
              schema:
                $ref: "#/components/schemas/CertificateOrderCertificate"
            text/xml:
              schema:
                $ref: "#/components/schemas/CertificateOrderCertificate"
      summary: Associates a Key Vault secret to a certificate store that will be used
        for storing the certificate once it's ready
      tags:
        - CertificateOrders
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}":
    delete:
      deprecated: false
      operationId: CertificateOrders_DeleteCertificateOrder
      parameters:
        - description: Azure resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Certificate name
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Delete an existing certificate order
      tags:
        - CertificateOrders
    get:
      deprecated: false
      operationId: CertificateOrders_GetCertificateOrder
      parameters:
        - description: Azure resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Certificate name
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateOrder"
            text/json:
              schema:
                $ref: "#/components/schemas/CertificateOrder"
            application/xml:
              schema:
                $ref: "#/components/schemas/CertificateOrder"
            text/xml:
              schema:
                $ref: "#/components/schemas/CertificateOrder"
      summary: Get a certificate order
      tags:
        - CertificateOrders
    patch:
      deprecated: false
      operationId: CertificateOrders_UpdateCertificateOrder
      parameters:
        - description: Azure resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Certificate name
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/CertificateOrder"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateOrder"
            text/json:
              schema:
                $ref: "#/components/schemas/CertificateOrder"
            application/xml:
              schema:
                $ref: "#/components/schemas/CertificateOrder"
            text/xml:
              schema:
                $ref: "#/components/schemas/CertificateOrder"
      summary: Create or update a certificate purchase order
      tags:
        - CertificateOrders
    put:
      deprecated: false
      operationId: CertificateOrders_CreateOrUpdateCertificateOrder
      parameters:
        - description: Azure resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Certificate name
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/CertificateOrder"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateOrder"
            text/json:
              schema:
                $ref: "#/components/schemas/CertificateOrder"
            application/xml:
              schema:
                $ref: "#/components/schemas/CertificateOrder"
            text/xml:
              schema:
                $ref: "#/components/schemas/CertificateOrder"
      summary: Create or update a certificate purchase order
      tags:
        - CertificateOrders
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}/reissue":
    post:
      deprecated: false
      operationId: CertificateOrders_ReissueCertificateOrder
      parameters:
        - description: Azure resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Certificate name
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReissueCertificateOrderRequest"
          text/json:
            schema:
              $ref: "#/components/schemas/ReissueCertificateOrderRequest"
          application/xml:
            schema:
              $ref: "#/components/schemas/ReissueCertificateOrderRequest"
          text/xml:
            schema:
              $ref: "#/components/schemas/ReissueCertificateOrderRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ReissueCertificateOrderRequest"
        description: Reissue parameters
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Reissue an existing certificate order
      tags:
        - CertificateOrders
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}/renew":
    post:
      deprecated: false
      operationId: CertificateOrders_RenewCertificateOrder
      parameters:
        - description: Azure resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Certificate name
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RenewCertificateOrderRequest"
          text/json:
            schema:
              $ref: "#/components/schemas/RenewCertificateOrderRequest"
          application/xml:
            schema:
              $ref: "#/components/schemas/RenewCertificateOrderRequest"
          text/xml:
            schema:
              $ref: "#/components/schemas/RenewCertificateOrderRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/RenewCertificateOrderRequest"
        description: Renew parameters
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Renew an existing certificate order
      tags:
        - CertificateOrders
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}/resendEmail":
    post:
      deprecated: false
      operationId: CertificateOrders_ResendCertificateEmail
      parameters:
        - description: Azure resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Certificate order name
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Resend certificate email
      tags:
        - CertificateOrders
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}/retrieveCertificateActions":
    post:
      deprecated: false
      operationId: CertificateOrders_RetrieveCertificateActions
      parameters:
        - description: Azure resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Certificate order name
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CertificateOrderAction"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CertificateOrderAction"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/CertificateOrderAction"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/CertificateOrderAction"
                type: array
      summary: Retrieve the list of certificate actions
      tags:
        - CertificateOrders
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}/retrieveEmailHistory":
    post:
      deprecated: false
      operationId: CertificateOrders_RetrieveCertificateEmailHistory
      parameters:
        - description: Azure resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Certificate order name
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CertificateEmail"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CertificateEmail"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/CertificateEmail"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/CertificateEmail"
                type: array
      summary: Retrieve email history
      tags:
        - CertificateOrders
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}/verifyDomainOwnership":
    post:
      deprecated: false
      operationId: CertificateOrders_VerifyDomainOwnership
      parameters:
        - description: Azure resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Certificate order name
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Verify domain ownership for this certificate order
      tags:
        - CertificateOrders
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains":
    get:
      deprecated: false
      operationId: Domains_GetDomains
      parameters:
        - description: Name of the resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/DomainCollection"
      summary: Lists domains under a resource group
      tags:
        - Domains
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}":
    delete:
      deprecated: false
      operationId: Domains_DeleteDomain
      parameters:
        - description: Name of the resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of the domain
          in: path
          name: domainName
          required: true
          schema:
            type: string
        - description: If true then the domain will be deleted immediately instead of after
            24 hours
          in: query
          name: forceHardDeleteDomain
          schema:
            type: boolean
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "204":
          description: Domain does not exist in Azure database probably because it has
            already been deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Deletes a domain
      tags:
        - Domains
    get:
      deprecated: false
      operationId: Domains_GetDomain
      parameters:
        - description: Name of the resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of the domain
          in: path
          name: domainName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Domain"
            text/json:
              schema:
                $ref: "#/components/schemas/Domain"
            application/xml:
              schema:
                $ref: "#/components/schemas/Domain"
            text/xml:
              schema:
                $ref: "#/components/schemas/Domain"
      summary: Gets details of a domain
      tags:
        - Domains
    patch:
      deprecated: false
      operationId: Domains_UpdateDomain
      parameters:
        - description: "&gt;Name of the resource group"
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of the domain
          in: path
          name: domainName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/Domain"
      responses:
        "200":
          description: Domain purchase was successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Domain"
            text/json:
              schema:
                $ref: "#/components/schemas/Domain"
            application/xml:
              schema:
                $ref: "#/components/schemas/Domain"
            text/xml:
              schema:
                $ref: "#/components/schemas/Domain"
        "202":
          description: Domain purchase is in progress
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Domain"
            text/json:
              schema:
                $ref: "#/components/schemas/Domain"
            application/xml:
              schema:
                $ref: "#/components/schemas/Domain"
            text/xml:
              schema:
                $ref: "#/components/schemas/Domain"
      summary: Creates a domain
      tags:
        - Domains
    put:
      deprecated: false
      operationId: Domains_CreateOrUpdateDomain
      parameters:
        - description: "&gt;Name of the resource group"
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of the domain
          in: path
          name: domainName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/Domain"
      responses:
        "200":
          description: Domain purchase was successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Domain"
            text/json:
              schema:
                $ref: "#/components/schemas/Domain"
            application/xml:
              schema:
                $ref: "#/components/schemas/Domain"
            text/xml:
              schema:
                $ref: "#/components/schemas/Domain"
        "202":
          description: Domain purchase is in progress
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Domain"
            text/json:
              schema:
                $ref: "#/components/schemas/Domain"
            application/xml:
              schema:
                $ref: "#/components/schemas/Domain"
            text/xml:
              schema:
                $ref: "#/components/schemas/Domain"
      summary: Creates a domain
      tags:
        - Domains
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}/operationresults/{operationId}":
    get:
      deprecated: false
      operationId: Domains_GetDomainOperation
      parameters:
        - description: Name of the resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of the domain
          in: path
          name: domainName
          required: true
          schema:
            type: string
        - description: Domain purchase operation Id
          in: path
          name: operationId
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: Domain purchase was successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Domain"
            text/json:
              schema:
                $ref: "#/components/schemas/Domain"
            application/xml:
              schema:
                $ref: "#/components/schemas/Domain"
            text/xml:
              schema:
                $ref: "#/components/schemas/Domain"
        "202":
          description: Domain purchase is in progress
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Domain"
            text/json:
              schema:
                $ref: "#/components/schemas/Domain"
            application/xml:
              schema:
                $ref: "#/components/schemas/Domain"
            text/xml:
              schema:
                $ref: "#/components/schemas/Domain"
        "500":
          description: Domain purchase request failed
      summary: Retrieves the latest status of a domain purchase operation
      tags:
        - Domains
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web.Admin/environments/{environmentName}/usage":
    get:
      deprecated: false
      operationId: Usage_GetUsage
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Environment name
          in: path
          name: environmentName
          required: true
          schema:
            type: string
        - description: Last marker that was returned from the batch
          in: query
          name: lastId
          required: true
          schema:
            type: string
        - description: size of the batch to be returned.
          in: query
          name: batchSize
          required: true
          schema:
            type: integer
            format: int32
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Returns usage records for specified subscription and resource groups
      tags:
        - Usage
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/certificates":
    get:
      deprecated: false
      operationId: Certificates_GetCertificates
      parameters:
        - description: Name of the resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CertificateCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CertificateCollection"
      summary: Get certificates for a subscription in the specified resource group.
      tags:
        - Certificates
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/certificates/{name}":
    delete:
      deprecated: false
      operationId: Certificates_DeleteCertificate
      parameters:
        - description: Name of the resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of the certificate to be deleted.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Delete a certificate by name in a specified subscription and
        resourcegroup.
      tags:
        - Certificates
    get:
      deprecated: false
      operationId: Certificates_GetCertificate
      parameters:
        - description: Name of the resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of the certificate.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Certificate"
            text/json:
              schema:
                $ref: "#/components/schemas/Certificate"
            application/xml:
              schema:
                $ref: "#/components/schemas/Certificate"
            text/xml:
              schema:
                $ref: "#/components/schemas/Certificate"
      summary: Get a certificate by certificate name for a subscription in the
        specified resource group.
      tags:
        - Certificates
    patch:
      deprecated: false
      operationId: Certificates_UpdateCertificate
      parameters:
        - description: Name of the resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of the certificate.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/Certificate"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Certificate"
            text/json:
              schema:
                $ref: "#/components/schemas/Certificate"
            application/xml:
              schema:
                $ref: "#/components/schemas/Certificate"
            text/xml:
              schema:
                $ref: "#/components/schemas/Certificate"
      summary: Creates or modifies an existing certificate.
      tags:
        - Certificates
    put:
      deprecated: false
      operationId: Certificates_CreateOrUpdateCertificate
      parameters:
        - description: Name of the resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of the certificate.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/Certificate"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Certificate"
            text/json:
              schema:
                $ref: "#/components/schemas/Certificate"
            application/xml:
              schema:
                $ref: "#/components/schemas/Certificate"
            text/xml:
              schema:
                $ref: "#/components/schemas/Certificate"
      summary: Creates or modifies an existing certificate.
      tags:
        - Certificates
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/classicMobileServices":
    get:
      deprecated: false
      operationId: ClassicMobileServices_GetClassicMobileServices
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClassicMobileServiceCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ClassicMobileServiceCollection"
      summary: Get all mobile services in a resource group.
      tags:
        - ClassicMobileServices
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/classicMobileServices/{name}":
    delete:
      deprecated: false
      operationId: ClassicMobileServices_DeleteClassicMobileService
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of mobile service
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Delete a mobile service.
      tags:
        - ClassicMobileServices
    get:
      deprecated: false
      operationId: ClassicMobileServices_GetClassicMobileService
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of mobile service
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClassicMobileService"
            text/json:
              schema:
                $ref: "#/components/schemas/ClassicMobileService"
            application/xml:
              schema:
                $ref: "#/components/schemas/ClassicMobileService"
            text/xml:
              schema:
                $ref: "#/components/schemas/ClassicMobileService"
      summary: Get a mobile service.
      tags:
        - ClassicMobileServices
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/csrs":
    get:
      deprecated: false
      operationId: Certificates_GetCsrs
      parameters:
        - description: Name of the resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Csr"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/Csr"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Csr"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Csr"
                type: array
      summary: Gets the certificate signing requests for a subscription in the
        specified resource group
      tags:
        - Certificates
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/csrs/{name}":
    delete:
      deprecated: false
      operationId: Certificates_DeleteCsr
      parameters:
        - description: Name of the resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of the certificate signing request.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Delete the certificate signing request.
      tags:
        - Certificates
    get:
      deprecated: false
      operationId: Certificates_GetCsr
      parameters:
        - description: Name of the resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of the certificate.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Csr"
            text/json:
              schema:
                $ref: "#/components/schemas/Csr"
            application/xml:
              schema:
                $ref: "#/components/schemas/Csr"
            text/xml:
              schema:
                $ref: "#/components/schemas/Csr"
      summary: Gets a certificate signing request by certificate name for a
        subscription in the specified resource group
      tags:
        - Certificates
    patch:
      deprecated: false
      operationId: Certificates_UpdateCsr
      parameters:
        - description: Name of the resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of the certificate.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/Csr"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Csr"
            text/json:
              schema:
                $ref: "#/components/schemas/Csr"
            application/xml:
              schema:
                $ref: "#/components/schemas/Csr"
            text/xml:
              schema:
                $ref: "#/components/schemas/Csr"
      summary: Creates or modifies an existing certificate signing request.
      tags:
        - Certificates
    put:
      deprecated: false
      operationId: Certificates_CreateOrUpdateCsr
      parameters:
        - description: Name of the resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of the certificate.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/Csr"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Csr"
            text/json:
              schema:
                $ref: "#/components/schemas/Csr"
            application/xml:
              schema:
                $ref: "#/components/schemas/Csr"
            text/xml:
              schema:
                $ref: "#/components/schemas/Csr"
      summary: Creates or modifies an existing certificate signing request.
      tags:
        - Certificates
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/deletedSites":
    get:
      deprecated: false
      operationId: Sites_GetDeletedSites
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Additional web app properties included in the response
          in: query
          name: propertiesToInclude
          schema:
            type: string
        - description: Types of apps included in the response
          in: query
          name: includeSiteTypes
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeletedSiteCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/DeletedSiteCollection"
      summary: Gets deleted web apps in subscription
      tags:
        - Sites
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments":
    get:
      deprecated: false
      operationId: HostingEnvironments_GetHostingEnvironments
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HostingEnvironmentCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/HostingEnvironmentCollection"
      summary: Get all hostingEnvironments (App Service Environments) in a resource
        group.
      tags:
        - HostingEnvironments
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}":
    delete:
      deprecated: false
      operationId: HostingEnvironments_DeleteHostingEnvironment
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Delete even if the hostingEnvironment (App Service Environment)
            contains resources
          in: query
          name: forceDelete
          schema:
            type: boolean
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
        "202":
          description: Operation is in progress
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
        "400":
          description: Bad request
        "404":
          description: Not found
        "409":
          description: Conflict
      summary: Delete a hostingEnvironment (App Service Environment).
      tags:
        - HostingEnvironments
      x-ms-long-running-operation: true
    get:
      deprecated: false
      operationId: HostingEnvironments_GetHostingEnvironment
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HostingEnvironment"
            text/json:
              schema:
                $ref: "#/components/schemas/HostingEnvironment"
            application/xml:
              schema:
                $ref: "#/components/schemas/HostingEnvironment"
            text/xml:
              schema:
                $ref: "#/components/schemas/HostingEnvironment"
      summary: Get properties of hostingEnvironment (App Service Environment).
      tags:
        - HostingEnvironments
    put:
      deprecated: false
      operationId: HostingEnvironments_CreateOrUpdateHostingEnvironment
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HostingEnvironment"
          text/json:
            schema:
              $ref: "#/components/schemas/HostingEnvironment"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/HostingEnvironment"
        description: Properties of hostingEnvironment (App Service Environment)
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HostingEnvironment"
            text/json:
              schema:
                $ref: "#/components/schemas/HostingEnvironment"
            application/xml:
              schema:
                $ref: "#/components/schemas/HostingEnvironment"
            text/xml:
              schema:
                $ref: "#/components/schemas/HostingEnvironment"
        "202":
          description: Operation is in progress
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HostingEnvironment"
            text/json:
              schema:
                $ref: "#/components/schemas/HostingEnvironment"
            application/xml:
              schema:
                $ref: "#/components/schemas/HostingEnvironment"
            text/xml:
              schema:
                $ref: "#/components/schemas/HostingEnvironment"
        "400":
          description: Bad request
        "404":
          description: Not found
        "409":
          description: Conflict
      summary: Create or update a hostingEnvironment (App Service Environment).
      tags:
        - HostingEnvironments
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/capacities/compute":
    get:
      deprecated: false
      operationId: HostingEnvironments_GetHostingEnvironmentCapacities
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StampCapacityCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/StampCapacityCollection"
      summary: Get used, available, and total worker capacity for hostingEnvironment
        (App Service Environment).
      tags:
        - HostingEnvironments
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/capacities/virtualip":
    get:
      deprecated: false
      operationId: HostingEnvironments_GetHostingEnvironmentVips
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddressResponse"
            text/json:
              schema:
                $ref: "#/components/schemas/AddressResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/AddressResponse"
            text/xml:
              schema:
                $ref: "#/components/schemas/AddressResponse"
      summary: Get IP addresses assigned to the hostingEnvironment (App Service
        Environment).
      tags:
        - HostingEnvironments
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/diagnostics":
    get:
      deprecated: false
      operationId: HostingEnvironments_GetHostingEnvironmentDiagnostics
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/HostingEnvironmentDiagnostics"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/HostingEnvironmentDiagnostics"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/HostingEnvironmentDiagnostics"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/HostingEnvironmentDiagnostics"
                type: array
      summary: Get diagnostic information for hostingEnvironment (App Service
        Environment).
      tags:
        - HostingEnvironments
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/diagnostics/{diagnosticsName}":
    get:
      deprecated: false
      operationId: HostingEnvironments_GetHostingEnvironmentDiagnosticsItem
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of the diagnostics
          in: path
          name: diagnosticsName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HostingEnvironmentDiagnostics"
            text/json:
              schema:
                $ref: "#/components/schemas/HostingEnvironmentDiagnostics"
            application/xml:
              schema:
                $ref: "#/components/schemas/HostingEnvironmentDiagnostics"
            text/xml:
              schema:
                $ref: "#/components/schemas/HostingEnvironmentDiagnostics"
      summary: Get diagnostic information for hostingEnvironment (App Service
        Environment).
      tags:
        - HostingEnvironments
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/metricdefinitions":
    get:
      deprecated: false
      operationId: HostingEnvironments_GetHostingEnvironmentMetricDefinitions
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricDefinition"
            text/json:
              schema:
                $ref: "#/components/schemas/MetricDefinition"
            application/xml:
              schema:
                $ref: "#/components/schemas/MetricDefinition"
            text/xml:
              schema:
                $ref: "#/components/schemas/MetricDefinition"
      summary: Get global metric definitions of hostingEnvironment (App Service
        Environment).
      tags:
        - HostingEnvironments
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/metrics":
    get:
      deprecated: false
      operationId: HostingEnvironments_GetHostingEnvironmentMetrics
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Include instance details
          in: query
          name: details
          schema:
            type: boolean
        - description: "Return only usages/metrics specified in the filter. Filter conforms
            to odata syntax. Example: $filter=(name.value eq 'Metric1' or
            name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and
            endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
            duration'[Hour|Minute|Day]'."
          in: query
          name: $filter
          schema:
            type: string
          allowReserved: true
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceMetricCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ResourceMetricCollection"
      summary: Get global metrics of hostingEnvironment (App Service Environment).
      tags:
        - HostingEnvironments
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools":
    get:
      deprecated: false
      operationId: HostingEnvironments_GetMultiRolePools
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkerPoolCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/WorkerPoolCollection"
      summary: Get all multi role pools
      tags:
        - HostingEnvironments
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default":
    get:
      deprecated: false
      operationId: HostingEnvironments_GetMultiRolePool
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkerPool"
            text/json:
              schema:
                $ref: "#/components/schemas/WorkerPool"
            application/xml:
              schema:
                $ref: "#/components/schemas/WorkerPool"
            text/xml:
              schema:
                $ref: "#/components/schemas/WorkerPool"
      summary: Get properties of a multiRole pool.
      tags:
        - HostingEnvironments
    put:
      deprecated: false
      operationId: HostingEnvironments_CreateOrUpdateMultiRolePool
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkerPool"
          text/json:
            schema:
              $ref: "#/components/schemas/WorkerPool"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/WorkerPool"
        description: Properties of multiRole pool
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkerPool"
            text/json:
              schema:
                $ref: "#/components/schemas/WorkerPool"
            application/xml:
              schema:
                $ref: "#/components/schemas/WorkerPool"
            text/xml:
              schema:
                $ref: "#/components/schemas/WorkerPool"
        "202":
          description: Operation is in progress
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkerPool"
            text/json:
              schema:
                $ref: "#/components/schemas/WorkerPool"
            application/xml:
              schema:
                $ref: "#/components/schemas/WorkerPool"
            text/xml:
              schema:
                $ref: "#/components/schemas/WorkerPool"
        "400":
          description: Bad request
        "404":
          description: Not found
        "409":
          description: Conflict
      summary: Create or update a multiRole pool.
      tags:
        - HostingEnvironments
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/instances/{instance}/metricdefinitions":
    get:
      deprecated: false
      operationId: HostingEnvironments_GetMultiRolePoolInstanceMetricDefinitions
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of instance in the multiRole pool&gt;
          in: path
          name: instance
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Get metric definitions for a specific instance of a multiRole pool of a
        hostingEnvironment (App Service Environment).
      tags:
        - HostingEnvironments
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/instances/{instance}/metrics":
    get:
      deprecated: false
      operationId: HostingEnvironments_GetMultiRolePoolInstanceMetrics
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of instance in the multiRole pool
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Include instance details
          in: query
          name: details
          schema:
            type: boolean
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Get metrics for a specific instance of a multiRole pool of a
        hostingEnvironment (App Service Environment).
      tags:
        - HostingEnvironments
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/metricdefinitions":
    get:
      deprecated: false
      operationId: HostingEnvironments_GetHostingEnvironmentMultiRoleMetricDefinitions
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricDefinitionCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/MetricDefinitionCollection"
      summary: Get metric definitions for a multiRole pool of a hostingEnvironment (App
        Service Environment).
      tags:
        - HostingEnvironments
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/metrics":
    get:
      deprecated: false
      operationId: HostingEnvironments_GetHostingEnvironmentMultiRoleMetrics
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Beginning time of metrics query
          in: query
          name: startTime
          schema:
            type: string
        - description: End time of metrics query
          in: query
          name: endTime
          schema:
            type: string
        - description: Time granularity of metrics query
          in: query
          name: timeGrain
          schema:
            type: string
        - description: Include instance details
          in: query
          name: details
          schema:
            type: boolean
        - description: "Return only usages/metrics specified in the filter. Filter conforms
            to odata syntax. Example: $filter=(name.value eq 'Metric1' or
            name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and
            endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
            duration'[Hour|Minute|Day]'."
          in: query
          name: $filter
          schema:
            type: string
          allowReserved: true
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceMetricCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ResourceMetricCollection"
      summary: Get metrics for a multiRole pool of a hostingEnvironment (App Service
        Environment).
      tags:
        - HostingEnvironments
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/skus":
    get:
      deprecated: false
      operationId: HostingEnvironments_GetMultiRolePoolSkus
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SkuInfoCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/SkuInfoCollection"
      summary: Get available skus for scaling a multiRole pool.
      tags:
        - HostingEnvironments
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default/usages":
    get:
      deprecated: false
      operationId: HostingEnvironments_GetHostingEnvironmentMultiRoleUsages
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsageCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/UsageCollection"
      summary: Get usages for a multiRole pool of a hostingEnvironment (App Service
        Environment).
      tags:
        - HostingEnvironments
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/operations":
    get:
      deprecated: false
      operationId: HostingEnvironments_GetHostingEnvironmentOperations
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: List all currently running operations on the hostingEnvironment (App
        Service Environment)
      tags:
        - HostingEnvironments
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/operations/{operationId}":
    get:
      deprecated: false
      operationId: HostingEnvironments_GetHostingEnvironmentOperation
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: operation identifier GUID
          in: path
          name: operationId
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: Operation completed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
        "202":
          description: Asynchronous operation in progress
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
        "404":
          description: Not found
        "500":
          description: Operation failed
      summary: Get status of an operation on a hostingEnvironment (App Service
        Environment).
      tags:
        - HostingEnvironments
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/reboot":
    post:
      deprecated: false
      operationId: HostingEnvironments_RebootHostingEnvironment
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "202":
          description: Asynchronous operation in progress
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
        "400":
          description: Bad request
        "404":
          description: Not found
        "409":
          description: Conflict
      summary: Reboots all machines in a hostingEnvironment (App Service Environment).
      tags:
        - HostingEnvironments
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/resume":
    post:
      deprecated: false
      operationId: HostingEnvironments_ResumeHostingEnvironment
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteCollection"
        "202":
          description: Operation is in progress
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteCollection"
      summary: Resumes the hostingEnvironment.
      tags:
        - HostingEnvironments
      x-ms-long-running-operation: true
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/serverfarms":
    get:
      deprecated: false
      operationId: HostingEnvironments_GetHostingEnvironmentServerFarms
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerFarmCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ServerFarmCollection"
      summary: Get all serverfarms (App Service Plans) on the hostingEnvironment (App
        Service Environment).
      tags:
        - HostingEnvironments
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/sites":
    get:
      deprecated: false
      operationId: HostingEnvironments_GetHostingEnvironmentSites
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Comma separated list of site properties to include
          in: query
          name: propertiesToInclude
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteCollection"
      summary: Get all sites on the hostingEnvironment (App Service Environment).
      tags:
        - HostingEnvironments
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/suspend":
    post:
      deprecated: false
      operationId: HostingEnvironments_SuspendHostingEnvironment
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteCollection"
        "202":
          description: Operation is in progress
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteCollection"
      summary: Suspends the hostingEnvironment.
      tags:
        - HostingEnvironments
      x-ms-long-running-operation: true
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/usages":
    get:
      deprecated: false
      operationId: HostingEnvironments_GetHostingEnvironmentUsages
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: "Return only usages/metrics specified in the filter. Filter conforms
            to odata syntax. Example: $filter=(name.value eq 'Metric1' or
            name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and
            endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
            duration'[Hour|Minute|Day]'."
          in: query
          name: $filter
          schema:
            type: string
          allowReserved: true
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CsmUsageQuotaCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CsmUsageQuotaCollection"
      summary: Get global usages of hostingEnvironment (App Service Environment).
      tags:
        - HostingEnvironments
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/webhostingplans":
    get:
      deprecated: false
      operationId: HostingEnvironments_GetHostingEnvironmentWebHostingPlans
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerFarmCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ServerFarmCollection"
      summary: Get all serverfarms (App Service Plans) on the hostingEnvironment (App
        Service Environment).
      tags:
        - HostingEnvironments
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools":
    get:
      deprecated: false
      operationId: HostingEnvironments_GetWorkerPools
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkerPoolCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/WorkerPoolCollection"
      summary: Get all worker pools
      tags:
        - HostingEnvironments
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}":
    get:
      deprecated: false
      operationId: HostingEnvironments_GetWorkerPool
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of worker pool
          in: path
          name: workerPoolName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkerPool"
            text/json:
              schema:
                $ref: "#/components/schemas/WorkerPool"
            application/xml:
              schema:
                $ref: "#/components/schemas/WorkerPool"
            text/xml:
              schema:
                $ref: "#/components/schemas/WorkerPool"
      summary: Get properties of a worker pool.
      tags:
        - HostingEnvironments
    put:
      deprecated: false
      operationId: HostingEnvironments_CreateOrUpdateWorkerPool
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of worker pool
          in: path
          name: workerPoolName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkerPool"
          text/json:
            schema:
              $ref: "#/components/schemas/WorkerPool"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/WorkerPool"
        description: Properties of worker pool
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkerPool"
            text/json:
              schema:
                $ref: "#/components/schemas/WorkerPool"
            application/xml:
              schema:
                $ref: "#/components/schemas/WorkerPool"
            text/xml:
              schema:
                $ref: "#/components/schemas/WorkerPool"
        "202":
          description: Operation is in progress
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkerPool"
            text/json:
              schema:
                $ref: "#/components/schemas/WorkerPool"
            application/xml:
              schema:
                $ref: "#/components/schemas/WorkerPool"
            text/xml:
              schema:
                $ref: "#/components/schemas/WorkerPool"
        "400":
          description: Bad request
        "404":
          description: Not found
        "409":
          description: Conflict
      summary: Create or update a worker pool.
      tags:
        - HostingEnvironments
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/instances/{instance}/metricdefinitions":
    get:
      deprecated: false
      operationId: HostingEnvironments_GetWorkerPoolInstanceMetricDefinitions
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of worker pool
          in: path
          name: workerPoolName
          required: true
          schema:
            type: string
        - description: Name of instance in the worker pool
          in: path
          name: instance
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Get metric definitions for a specific instance of a worker pool of a
        hostingEnvironment (App Service Environment).
      tags:
        - HostingEnvironments
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/instances/{instance}/metrics":
    get:
      deprecated: false
      operationId: HostingEnvironments_GetWorkerPoolInstanceMetrics
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of worker pool
          in: path
          name: workerPoolName
          required: true
          schema:
            type: string
        - description: Name of instance in the worker pool
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Include instance details
          in: query
          name: details
          schema:
            type: boolean
        - description: "Return only usages/metrics specified in the filter. Filter conforms
            to odata syntax. Example: $filter=(name.value eq 'Metric1' or
            name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and
            endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
            duration'[Hour|Minute|Day]'."
          in: query
          name: $filter
          schema:
            type: string
          allowReserved: true
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Get metrics for a specific instance of a worker pool of a
        hostingEnvironment (App Service Environment).
      tags:
        - HostingEnvironments
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/metricdefinitions":
    get:
      deprecated: false
      operationId: HostingEnvironments_GetHostingEnvironmentWebWorkerMetricDefinitions
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of worker pool
          in: path
          name: workerPoolName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricDefinitionCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/MetricDefinitionCollection"
      summary: Get metric definitions for a worker pool of a hostingEnvironment (App
        Service Environment).
      tags:
        - HostingEnvironments
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/metrics":
    get:
      deprecated: false
      operationId: HostingEnvironments_GetHostingEnvironmentWebWorkerMetrics
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of worker pool
          in: path
          name: workerPoolName
          required: true
          schema:
            type: string
        - description: Include instance details
          in: query
          name: details
          schema:
            type: boolean
        - description: "Return only usages/metrics specified in the filter. Filter conforms
            to odata syntax. Example: $filter=(name.value eq 'Metric1' or
            name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and
            endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
            duration'[Hour|Minute|Day]'."
          in: query
          name: $filter
          schema:
            type: string
          allowReserved: true
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceMetricCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ResourceMetricCollection"
      summary: Get metrics for a worker pool of a hostingEnvironment (App Service
        Environment).
      tags:
        - HostingEnvironments
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/skus":
    get:
      deprecated: false
      operationId: HostingEnvironments_GetWorkerPoolSkus
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of worker pool
          in: path
          name: workerPoolName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SkuInfoCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/SkuInfoCollection"
      summary: Get available skus for scaling a worker pool.
      tags:
        - HostingEnvironments
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}/usages":
    get:
      deprecated: false
      operationId: HostingEnvironments_GetHostingEnvironmentWebWorkerUsages
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of hostingEnvironment (App Service Environment)
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of worker pool
          in: path
          name: workerPoolName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsageCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/UsageCollection"
      summary: Get usages for a worker pool of a hostingEnvironment (App Service
        Environment).
      tags:
        - HostingEnvironments
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/managedHostingEnvironments":
    get:
      deprecated: false
      operationId: ManagedHostingEnvironments_GetManagedHostingEnvironments
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HostingEnvironmentCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/HostingEnvironmentCollection"
      summary: Get all managed hosting environments in a resource group.
      tags:
        - ManagedHostingEnvironments
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/managedHostingEnvironments/{name}":
    delete:
      deprecated: false
      operationId: ManagedHostingEnvironments_DeleteManagedHostingEnvironment
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of managed hosting environment
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Delete even if the managed hosting environment contains resources
          in: query
          name: forceDelete
          schema:
            type: boolean
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "202":
          description: Asynchronous operation in progress
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
        "400":
          description: Bad request
        "404":
          description: Not found
        "409":
          description: Conflict
      summary: Delete a managed hosting environment.
      tags:
        - ManagedHostingEnvironments
      x-ms-long-running-operation: true
    get:
      deprecated: false
      operationId: ManagedHostingEnvironments_GetManagedHostingEnvironment
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of managed hosting environment
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManagedHostingEnvironment"
            text/json:
              schema:
                $ref: "#/components/schemas/ManagedHostingEnvironment"
            application/xml:
              schema:
                $ref: "#/components/schemas/ManagedHostingEnvironment"
            text/xml:
              schema:
                $ref: "#/components/schemas/ManagedHostingEnvironment"
      summary: Get properties of a managed hosting environment.
      tags:
        - ManagedHostingEnvironments
    put:
      deprecated: false
      operationId: ManagedHostingEnvironments_CreateOrUpdateManagedHostingEnvironment
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of managed hosting environment
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HostingEnvironment"
          text/json:
            schema:
              $ref: "#/components/schemas/HostingEnvironment"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/HostingEnvironment"
        description: Properties of managed hosting environment
        required: true
      responses:
        "202":
          description: Asynchronous operation in progress
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HostingEnvironment"
            text/json:
              schema:
                $ref: "#/components/schemas/HostingEnvironment"
            application/xml:
              schema:
                $ref: "#/components/schemas/HostingEnvironment"
            text/xml:
              schema:
                $ref: "#/components/schemas/HostingEnvironment"
        "400":
          description: Bad request
        "404":
          description: Not found
        "409":
          description: Conflict
      summary: Create or update a managed hosting environment.
      tags:
        - ManagedHostingEnvironments
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/managedHostingEnvironments/{name}/capacities/virtualip":
    get:
      deprecated: false
      operationId: ManagedHostingEnvironments_GetManagedHostingEnvironmentVips
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of managed hosting environment
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddressResponse"
            text/json:
              schema:
                $ref: "#/components/schemas/AddressResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/AddressResponse"
            text/xml:
              schema:
                $ref: "#/components/schemas/AddressResponse"
      summary: Get list of ip addresses assigned to a managed hosting environment
      tags:
        - ManagedHostingEnvironments
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/managedHostingEnvironments/{name}/operations/{operationId}":
    get:
      deprecated: false
      operationId: ManagedHostingEnvironments_GetManagedHostingEnvironmentOperation
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of managed hosting environment
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: operation identifier GUID
          in: path
          name: operationId
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: Operation completed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
        "202":
          description: Asynchronous operation in progress
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
        "404":
          description: Not found
        "500":
          description: Operation failed
      summary: Get status of an operation on a managed hosting environment.
      tags:
        - ManagedHostingEnvironments
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/managedHostingEnvironments/{name}/serverfarms":
    get:
      deprecated: false
      operationId: ManagedHostingEnvironments_GetManagedHostingEnvironmentServerFarms
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of managed hosting environment
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerFarmCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ServerFarmCollection"
      summary: Get all serverfarms (App Service Plans) on the managed hosting
        environment.
      tags:
        - ManagedHostingEnvironments
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/managedHostingEnvironments/{name}/sites":
    get:
      deprecated: false
      operationId: ManagedHostingEnvironments_GetManagedHostingEnvironmentSites
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of managed hosting environment
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Comma separated list of site properties to include
          in: query
          name: propertiesToInclude
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteCollection"
      summary: Get all sites on the managed hosting environment.
      tags:
        - ManagedHostingEnvironments
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/managedHostingEnvironments/{name}/webhostingplans":
    get:
      deprecated: false
      operationId: ManagedHostingEnvironments_GetManagedHostingEnvironmentWebHostingPlans
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of managed hosting environment
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerFarmCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ServerFarmCollection"
      summary: Get all serverfarms (App Service Plans) on the managed hosting
        environment.
      tags:
        - ManagedHostingEnvironments
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms":
    get:
      deprecated: false
      operationId: ServerFarms_GetServerFarms
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerFarmCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ServerFarmCollection"
      summary: Gets collection of App Service Plans in a resource group for a given
        subscription.
      tags:
        - ServerFarms
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}":
    delete:
      deprecated: false
      operationId: ServerFarms_DeleteServerFarm
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of App Service Plan
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Deletes a App Service Plan
      tags:
        - ServerFarms
    get:
      deprecated: false
      operationId: ServerFarms_GetServerFarm
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of App Service Plan
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerFarmWithRichSku"
            text/json:
              schema:
                $ref: "#/components/schemas/ServerFarmWithRichSku"
            application/xml:
              schema:
                $ref: "#/components/schemas/ServerFarmWithRichSku"
            text/xml:
              schema:
                $ref: "#/components/schemas/ServerFarmWithRichSku"
      summary: Gets specified App Service Plan in a resource group
      tags:
        - ServerFarms
    put:
      deprecated: false
      operationId: ServerFarms_CreateOrUpdateServerFarm
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of App Service Plan
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: "OBSOLETE: If true, allow pending state for App Service Plan"
          in: query
          name: allowPendingState
          schema:
            type: boolean
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServerFarmWithRichSku"
          text/json:
            schema:
              $ref: "#/components/schemas/ServerFarmWithRichSku"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ServerFarmWithRichSku"
        description: Details of App Service Plan
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerFarmWithRichSku"
            text/json:
              schema:
                $ref: "#/components/schemas/ServerFarmWithRichSku"
            application/xml:
              schema:
                $ref: "#/components/schemas/ServerFarmWithRichSku"
            text/xml:
              schema:
                $ref: "#/components/schemas/ServerFarmWithRichSku"
        "202":
          description: Operation is in progress
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerFarmWithRichSku"
            text/json:
              schema:
                $ref: "#/components/schemas/ServerFarmWithRichSku"
            application/xml:
              schema:
                $ref: "#/components/schemas/ServerFarmWithRichSku"
            text/xml:
              schema:
                $ref: "#/components/schemas/ServerFarmWithRichSku"
      summary: Creates or updates an App Service Plan
      tags:
        - ServerFarms
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/metricdefinitions":
    get:
      deprecated: false
      operationId: ServerFarms_GetServerFarmMetricDefintions
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of App Service Plan
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricDefinitionCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/MetricDefinitionCollection"
      summary: List of metrics that can be queried for an App Service Plan
      tags:
        - ServerFarms
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/metrics":
    get:
      deprecated: false
      operationId: ServerFarms_GetServerFarmMetrics
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of App Service Plan
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: If true, metrics are broken down per App Service Plan instance
          in: query
          name: details
          schema:
            type: boolean
        - description: "Return only usages/metrics specified in the filter. Filter conforms
            to odata syntax. Example: $filter=(name.value eq 'Metric1' or
            name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and
            endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
            duration'[Hour|Minute|Day]'."
          in: query
          name: $filter
          schema:
            type: string
          allowReserved: true
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceMetricCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ResourceMetricCollection"
      summary: Queries for App Service Plan metrics
      tags:
        - ServerFarms
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/operationresults/{operationId}":
    get:
      deprecated: false
      operationId: ServerFarms_GetServerFarmOperation
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of server farm
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Id of Server farm operation"&gt;
          in: path
          name: operationId
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerFarmWithRichSku"
            text/json:
              schema:
                $ref: "#/components/schemas/ServerFarmWithRichSku"
            application/xml:
              schema:
                $ref: "#/components/schemas/ServerFarmWithRichSku"
            text/xml:
              schema:
                $ref: "#/components/schemas/ServerFarmWithRichSku"
      summary: Gets a server farm operation
      tags:
        - ServerFarms
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/restartSites":
    post:
      deprecated: false
      operationId: ServerFarms_RestartSitesForServerFarm
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of App Service Plan
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Soft restart applies the configuration settings and restarts the
            apps if necessary. Hard restart always restarts and reprovisions the
            apps
          in: query
          name: softRestart
          schema:
            type: boolean
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Restarts web apps in a specified App Service Plan
      tags:
        - ServerFarms
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/sites":
    get:
      deprecated: false
      operationId: ServerFarms_GetServerFarmSites
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of App Service Plan
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Skip to of web apps in a list. If specified, the resulting list will
            contain web apps starting from (including) the skipToken. Else, the
            resulting list contains web apps from the start of the list
          in: query
          name: $skipToken
          schema:
            type: string
        - description: "Supported filter: $filter=state eq running. Returns only web apps
            that are currently running"
          in: query
          name: $filter
          schema:
            type: string
        - description: List page size. If specified, results are paged.
          in: query
          name: $top
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteCollection"
      summary: Gets list of Apps associated with an App Service Plan
      tags:
        - ServerFarms
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections":
    get:
      deprecated: false
      operationId: ServerFarms_GetVnetsForServerFarm
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of App Service Plan
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/VnetInfo"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/VnetInfo"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/VnetInfo"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/VnetInfo"
                type: array
      summary: Gets list of VNets associated with App Service Plan
      tags:
        - ServerFarms
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}":
    get:
      deprecated: false
      operationId: ServerFarms_GetVnetFromServerFarm
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of App Service Plan
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of virtual network
          in: path
          name: vnetName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VnetInfo"
            text/json:
              schema:
                $ref: "#/components/schemas/VnetInfo"
            application/xml:
              schema:
                $ref: "#/components/schemas/VnetInfo"
            text/xml:
              schema:
                $ref: "#/components/schemas/VnetInfo"
        "404":
          description: Virtual network could not be found
      summary: Gets a vnet associated with an App Service Plan
      tags:
        - ServerFarms
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}/gateways/{gatewayName}":
    get:
      deprecated: false
      operationId: ServerFarms_GetServerFarmVnetGateway
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of the App Service Plan
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of the virtual network
          in: path
          name: vnetName
          required: true
          schema:
            type: string
        - description: Name of the gateway. Only the 'primary' gateway is supported.
          in: path
          name: gatewayName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VnetGateway"
            text/json:
              schema:
                $ref: "#/components/schemas/VnetGateway"
            application/xml:
              schema:
                $ref: "#/components/schemas/VnetGateway"
            text/xml:
              schema:
                $ref: "#/components/schemas/VnetGateway"
      summary: Gets the vnet gateway.
      tags:
        - ServerFarms
    put:
      deprecated: false
      operationId: ServerFarms_UpdateServerFarmVnetGateway
      parameters:
        - description: The resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the App Service Plan
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The name of the virtual network
          in: path
          name: vnetName
          required: true
          schema:
            type: string
        - description: The name of the gateway. Only 'primary' is supported.
          in: path
          name: gatewayName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VnetGateway"
          text/json:
            schema:
              $ref: "#/components/schemas/VnetGateway"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/VnetGateway"
        description: The gateway entity.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VnetGateway"
            text/json:
              schema:
                $ref: "#/components/schemas/VnetGateway"
            application/xml:
              schema:
                $ref: "#/components/schemas/VnetGateway"
            text/xml:
              schema:
                $ref: "#/components/schemas/VnetGateway"
      summary: Updates the vnet gateway
      tags:
        - ServerFarms
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}/routes":
    get:
      deprecated: false
      operationId: ServerFarms_GetRoutesForVnet
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of App Service Plan
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of virtual network
          in: path
          name: vnetName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/VnetRoute"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/VnetRoute"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/VnetRoute"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/VnetRoute"
                type: array
      summary: Gets a list of all routes associated with a vnet, in an app service plan
      tags:
        - ServerFarms
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}/routes/{routeName}":
    delete:
      deprecated: false
      operationId: ServerFarms_DeleteVnetRoute
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of App Service Plan
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of virtual network
          in: path
          name: vnetName
          required: true
          schema:
            type: string
        - description: Name of the virtual network route
          in: path
          name: routeName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
        "404":
          description: Specified route does not exist.
      summary: Deletes an existing route for a vnet in an app service plan.
      tags:
        - ServerFarms
    get:
      deprecated: false
      operationId: ServerFarms_GetRouteForVnet
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of App Service Plan
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of virtual network
          in: path
          name: vnetName
          required: true
          schema:
            type: string
        - description: Name of the virtual network route
          in: path
          name: routeName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/VnetRoute"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/VnetRoute"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/VnetRoute"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/VnetRoute"
                type: array
        "404":
          description: Specified route does not exist
      summary: Gets a specific route associated with a vnet, in an app service plan
      tags:
        - ServerFarms
    patch:
      deprecated: false
      operationId: ServerFarms_UpdateVnetRoute
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of App Service Plan
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of virtual network
          in: path
          name: vnetName
          required: true
          schema:
            type: string
        - description: Name of the virtual network route
          in: path
          name: routeName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/VnetRoute"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VnetRoute"
            text/json:
              schema:
                $ref: "#/components/schemas/VnetRoute"
            application/xml:
              schema:
                $ref: "#/components/schemas/VnetRoute"
            text/xml:
              schema:
                $ref: "#/components/schemas/VnetRoute"
        "400":
          description: Invalid request. Ensure that required parameters are given, and that
            addresses and address spaces are valid
        "404":
          description: Route not found. This will only occur when using the PATCH verb.
      summary: Creates a new route or updates an existing route for a vnet in an app
        service plan.
      tags:
        - ServerFarms
    put:
      deprecated: false
      operationId: ServerFarms_CreateOrUpdateVnetRoute
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of App Service Plan
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of virtual network
          in: path
          name: vnetName
          required: true
          schema:
            type: string
        - description: Name of the virtual network route
          in: path
          name: routeName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/VnetRoute"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VnetRoute"
            text/json:
              schema:
                $ref: "#/components/schemas/VnetRoute"
            application/xml:
              schema:
                $ref: "#/components/schemas/VnetRoute"
            text/xml:
              schema:
                $ref: "#/components/schemas/VnetRoute"
        "400":
          description: Invalid request. Ensure that required parameters are given, and that
            addresses and address spaces are valid
        "404":
          description: Route not found. This will only occur when using the PATCH verb.
      summary: Creates a new route or updates an existing route for a vnet in an app
        service plan.
      tags:
        - ServerFarms
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/workers/{workerName}/reboot":
    post:
      deprecated: false
      operationId: ServerFarms_RebootWorkerForServerFarm
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of server farm
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of worker machine, typically starts with RD
          in: path
          name: workerName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Submit a reboot request for a worker machine in the specified server farm
      tags:
        - ServerFarms
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites":
    get:
      deprecated: false
      operationId: Sites_GetSites
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Additional web app properties included in the response
          in: query
          name: propertiesToInclude
          schema:
            type: string
        - description: Types of apps included in the response
          in: query
          name: includeSiteTypes
          schema:
            type: string
        - description: Whether or not to include deployments slots in results
          in: query
          name: includeSlots
          schema:
            type: boolean
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteCollection"
      summary: Gets the web apps for a subscription in the specified resource group
      tags:
        - Sites
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}":
    delete:
      deprecated: false
      operationId: Sites_DeleteSite
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: If true, web app metrics are also deleted
          in: query
          name: deleteMetrics
          schema:
            type: string
        - description: If true and App Service Plan is empty after web app deletion, App
            Service Plan is also deleted
          in: query
          name: deleteEmptyServerFarm
          schema:
            type: string
        - description: If true, DNS registration is skipped
          in: query
          name: skipDnsRegistration
          schema:
            type: string
        - description: If true, all slots associated with web app are also deleted
          in: query
          name: deleteAllSlots
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Deletes a web app
      tags:
        - Sites
    get:
      deprecated: false
      operationId: Sites_GetSite
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Additional web app properties included in the response
          in: query
          name: propertiesToInclude
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Site"
            text/json:
              schema:
                $ref: "#/components/schemas/Site"
            application/xml:
              schema:
                $ref: "#/components/schemas/Site"
            text/xml:
              schema:
                $ref: "#/components/schemas/Site"
      summary: Get details of a web app
      tags:
        - Sites
    put:
      deprecated: false
      operationId: Sites_CreateOrUpdateSite
      parameters:
        - description: Name of the resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: "If true web app hostname is not registered with DNS on creation.
            This parameter is\r

            \            only used for app creation"
          in: query
          name: skipDnsRegistration
          schema:
            type: string
        - description: If true, custom (non *.azurewebsites.net) domains associated with
            web app are not verified.
          in: query
          name: skipCustomDomainVerification
          schema:
            type: string
        - description: If true, web app hostname is force registered with DNS
          in: query
          name: forceDnsRegistration
          schema:
            type: string
        - description: Time to live in seconds for web app's default domain name
          in: query
          name: ttlInSeconds
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/Site"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Site"
            text/json:
              schema:
                $ref: "#/components/schemas/Site"
            application/xml:
              schema:
                $ref: "#/components/schemas/Site"
            text/xml:
              schema:
                $ref: "#/components/schemas/Site"
        "202":
          description: Asynchronous operation in progress
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Site"
            text/json:
              schema:
                $ref: "#/components/schemas/Site"
            application/xml:
              schema:
                $ref: "#/components/schemas/Site"
            text/xml:
              schema:
                $ref: "#/components/schemas/Site"
      summary: Creates a new web app or modifies an existing web app.
      tags:
        - Sites
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/applySlotConfig":
    post:
      deprecated: false
      operationId: Sites_ApplySlotConfigToProduction
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/CsmSlotEntity2"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Applies the configuration settings from the target slot onto the current
        slot
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backup":
    post:
      deprecated: false
      operationId: Sites_BackupSite
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/BackupRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupItem"
            text/json:
              schema:
                $ref: "#/components/schemas/BackupItem"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackupItem"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackupItem"
      summary: Creates web app backup
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups":
    get:
      deprecated: false
      operationId: Sites_ListSiteBackups
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupItemCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/BackupItemCollection"
      summary: Lists all available backups for web app
      tags:
        - Sites
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/discover":
    put:
      deprecated: false
      operationId: Sites_DiscoverSiteRestore
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/RestoreRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestoreRequest"
            text/json:
              schema:
                $ref: "#/components/schemas/RestoreRequest"
            application/xml:
              schema:
                $ref: "#/components/schemas/RestoreRequest"
            text/xml:
              schema:
                $ref: "#/components/schemas/RestoreRequest"
      summary: Discovers existing web app backups that can be restored
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}":
    delete:
      deprecated: false
      operationId: Sites_DeleteBackup
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Id of backup
          in: path
          name: backupId
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupItem"
            text/json:
              schema:
                $ref: "#/components/schemas/BackupItem"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackupItem"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackupItem"
      summary: Deletes a backup from Azure Storage
      tags:
        - Sites
    get:
      deprecated: false
      operationId: Sites_GetSiteBackupStatus
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Id of backup
          in: path
          name: backupId
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupItem"
            text/json:
              schema:
                $ref: "#/components/schemas/BackupItem"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackupItem"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackupItem"
      summary: Gets status of a web app backup that may be in progress.
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}/list":
    post:
      deprecated: false
      operationId: Sites_GetSiteBackupStatusSecrets
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Id of backup
          in: path
          name: backupId
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/BackupRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupItem"
            text/json:
              schema:
                $ref: "#/components/schemas/BackupItem"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackupItem"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackupItem"
      summary: Gets status of a web app backup that may be in progress, including
        secrets associated with the backup, such as the Azure Storage SAS URL.
        Also can be used to update the SAS URL for the backup if a new URL is
        passed in the request body.
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}/restore":
    post:
      deprecated: false
      operationId: Sites_RestoreSite
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Id of backup to restore
          in: path
          name: backupId
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/RestoreRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestoreResponse"
            text/json:
              schema:
                $ref: "#/components/schemas/RestoreResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/RestoreResponse"
            text/xml:
              schema:
                $ref: "#/components/schemas/RestoreResponse"
      summary: Restores a web app
      tags:
        - Sites
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/appsettings":
    put:
      deprecated: false
      operationId: Sites_UpdateSiteAppSettings
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/StringDictionary2"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StringDictionary"
            text/json:
              schema:
                $ref: "#/components/schemas/StringDictionary"
            application/xml:
              schema:
                $ref: "#/components/schemas/StringDictionary"
            text/xml:
              schema:
                $ref: "#/components/schemas/StringDictionary"
      summary: Updates the application settings of web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/appsettings/list":
    post:
      deprecated: false
      operationId: Sites_ListSiteAppSettings
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StringDictionary"
            text/json:
              schema:
                $ref: "#/components/schemas/StringDictionary"
            application/xml:
              schema:
                $ref: "#/components/schemas/StringDictionary"
            text/xml:
              schema:
                $ref: "#/components/schemas/StringDictionary"
      summary: Gets the application settings of web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/authsettings":
    put:
      deprecated: false
      operationId: Sites_UpdateSiteAuthSettings
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/SiteAuthSettings"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteAuthSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteAuthSettings"
            application/xml:
              schema:
                $ref: "#/components/schemas/SiteAuthSettings"
            text/xml:
              schema:
                $ref: "#/components/schemas/SiteAuthSettings"
      summary: Updates the Authentication / Authorization settings associated with web
        app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/authsettings/list":
    post:
      deprecated: false
      operationId: Sites_ListSiteAuthSettings
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteAuthSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteAuthSettings"
            application/xml:
              schema:
                $ref: "#/components/schemas/SiteAuthSettings"
            text/xml:
              schema:
                $ref: "#/components/schemas/SiteAuthSettings"
      summary: Gets the Authentication / Authorization settings associated with web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/backup":
    put:
      deprecated: false
      operationId: Sites_UpdateSiteBackupConfiguration
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/BackupRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupRequest"
            text/json:
              schema:
                $ref: "#/components/schemas/BackupRequest"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackupRequest"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackupRequest"
      summary: Updates backup configuration of web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/backup/list":
    post:
      deprecated: false
      operationId: Sites_GetSiteBackupConfiguration
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupRequest"
            text/json:
              schema:
                $ref: "#/components/schemas/BackupRequest"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackupRequest"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackupRequest"
      summary: Gets the backup configuration for a web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/connectionstrings":
    put:
      deprecated: false
      operationId: Sites_UpdateSiteConnectionStrings
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/ConnectionStringDictionary"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectionStringDictionary"
            text/json:
              schema:
                $ref: "#/components/schemas/ConnectionStringDictionary"
            application/xml:
              schema:
                $ref: "#/components/schemas/ConnectionStringDictionary"
            text/xml:
              schema:
                $ref: "#/components/schemas/ConnectionStringDictionary"
      summary: Updates the connection strings associated with web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/connectionstrings/list":
    post:
      deprecated: false
      operationId: Sites_ListSiteConnectionStrings
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectionStringDictionary"
            text/json:
              schema:
                $ref: "#/components/schemas/ConnectionStringDictionary"
            application/xml:
              schema:
                $ref: "#/components/schemas/ConnectionStringDictionary"
            text/xml:
              schema:
                $ref: "#/components/schemas/ConnectionStringDictionary"
      summary: Gets the connection strings associated with web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/logs":
    get:
      deprecated: false
      operationId: Sites_GetSiteLogsConfig
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteLogsConfig"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteLogsConfig"
            application/xml:
              schema:
                $ref: "#/components/schemas/SiteLogsConfig"
            text/xml:
              schema:
                $ref: "#/components/schemas/SiteLogsConfig"
      summary: Gets the web app logs configuration
      tags:
        - Sites
    put:
      deprecated: false
      operationId: Sites_UpdateSiteLogsConfig
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/SiteLogsConfig"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteLogsConfig"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteLogsConfig"
            application/xml:
              schema:
                $ref: "#/components/schemas/SiteLogsConfig"
            text/xml:
              schema:
                $ref: "#/components/schemas/SiteLogsConfig"
      summary: Updates the meta data for web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/metadata":
    put:
      deprecated: false
      operationId: Sites_UpdateSiteMetadata
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/StringDictionary"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StringDictionary"
            text/json:
              schema:
                $ref: "#/components/schemas/StringDictionary"
            application/xml:
              schema:
                $ref: "#/components/schemas/StringDictionary"
            text/xml:
              schema:
                $ref: "#/components/schemas/StringDictionary"
      summary: Updates the meta data for web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/metadata/list":
    post:
      deprecated: false
      operationId: Sites_ListSiteMetadata
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StringDictionary"
            text/json:
              schema:
                $ref: "#/components/schemas/StringDictionary"
            application/xml:
              schema:
                $ref: "#/components/schemas/StringDictionary"
            text/xml:
              schema:
                $ref: "#/components/schemas/StringDictionary"
      summary: Gets the web app meta data.
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/publishingcredentials/list":
    post:
      deprecated: false
      operationId: Sites_ListSitePublishingCredentials
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
            text/json:
              schema:
                $ref: "#/components/schemas/User"
            application/xml:
              schema:
                $ref: "#/components/schemas/User"
            text/xml:
              schema:
                $ref: "#/components/schemas/User"
      summary: Gets the web app publishing credentials
      tags:
        - Sites
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/slotConfigNames":
    get:
      deprecated: false
      operationId: Sites_GetSlotConfigNames
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SlotConfigNamesResource"
            text/json:
              schema:
                $ref: "#/components/schemas/SlotConfigNamesResource"
            application/xml:
              schema:
                $ref: "#/components/schemas/SlotConfigNamesResource"
            text/xml:
              schema:
                $ref: "#/components/schemas/SlotConfigNamesResource"
      summary: Gets the names of application settings and connection string that remain
        with the slot during swap operation
      tags:
        - Sites
    put:
      deprecated: false
      operationId: Sites_UpdateSlotConfigNames
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SlotConfigNamesResource"
          text/json:
            schema:
              $ref: "#/components/schemas/SlotConfigNamesResource"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SlotConfigNamesResource"
        description: Request body containing the names of application settings and
          connection strings
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SlotConfigNamesResource"
            text/json:
              schema:
                $ref: "#/components/schemas/SlotConfigNamesResource"
            application/xml:
              schema:
                $ref: "#/components/schemas/SlotConfigNamesResource"
            text/xml:
              schema:
                $ref: "#/components/schemas/SlotConfigNamesResource"
      summary: Updates the names of application settings and connection string that
        remain with the slot during swap operation
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web":
    get:
      deprecated: false
      operationId: Sites_GetSiteConfig
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteConfig"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteConfig"
            application/xml:
              schema:
                $ref: "#/components/schemas/SiteConfig"
            text/xml:
              schema:
                $ref: "#/components/schemas/SiteConfig"
      summary: Gets the configuration of the web app
      tags:
        - Sites
    patch:
      deprecated: false
      operationId: Sites_UpdateSiteConfig
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/SiteConfig"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteConfig"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteConfig"
            application/xml:
              schema:
                $ref: "#/components/schemas/SiteConfig"
            text/xml:
              schema:
                $ref: "#/components/schemas/SiteConfig"
      summary: Update the configuration of web app
      tags:
        - Sites
    put:
      deprecated: false
      operationId: Sites_CreateOrUpdateSiteConfig
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/SiteConfig"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteConfig"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteConfig"
            application/xml:
              schema:
                $ref: "#/components/schemas/SiteConfig"
            text/xml:
              schema:
                $ref: "#/components/schemas/SiteConfig"
      summary: Update the configuration of web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments":
    get:
      deprecated: false
      operationId: Sites_GetDeployments
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/DeploymentCollection"
      summary: List deployments
      tags:
        - Sites
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments/{id}":
    delete:
      deprecated: false
      operationId: Sites_DeleteDeployment
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Id of the deployment
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Delete the deployment
      tags:
        - Sites
    get:
      deprecated: false
      operationId: Sites_GetDeployment
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Id of the deployment
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Deployment"
            text/json:
              schema:
                $ref: "#/components/schemas/Deployment"
            application/xml:
              schema:
                $ref: "#/components/schemas/Deployment"
            text/xml:
              schema:
                $ref: "#/components/schemas/Deployment"
      summary: Get the deployment
      tags:
        - Sites
    put:
      deprecated: false
      operationId: Sites_CreateDeployment
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Id of the deployment
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/Deployment"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Deployment"
            text/json:
              schema:
                $ref: "#/components/schemas/Deployment"
            application/xml:
              schema:
                $ref: "#/components/schemas/Deployment"
            text/xml:
              schema:
                $ref: "#/components/schemas/Deployment"
      summary: Create a deployment
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings":
    get:
      deprecated: false
      operationId: Sites_GetSiteHostNameBindings
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HostNameBindingCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/HostNameBindingCollection"
      summary: Get web app hostname bindings
      tags:
        - Sites
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings/{hostName}":
    delete:
      deprecated: false
      operationId: Sites_DeleteSiteHostNameBinding
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of host
          in: path
          name: hostName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Deletes a host name binding
      tags:
        - Sites
    get:
      deprecated: false
      operationId: Sites_GetSiteHostNameBinding
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of host
          in: path
          name: hostName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HostNameBinding"
            text/json:
              schema:
                $ref: "#/components/schemas/HostNameBinding"
            application/xml:
              schema:
                $ref: "#/components/schemas/HostNameBinding"
            text/xml:
              schema:
                $ref: "#/components/schemas/HostNameBinding"
      summary: Get web app binding for a hostname
      tags:
        - Sites
    put:
      deprecated: false
      operationId: Sites_CreateOrUpdateSiteHostNameBinding
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of host
          in: path
          name: hostName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/HostNameBinding"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HostNameBinding"
            text/json:
              schema:
                $ref: "#/components/schemas/HostNameBinding"
            application/xml:
              schema:
                $ref: "#/components/schemas/HostNameBinding"
            text/xml:
              schema:
                $ref: "#/components/schemas/HostNameBinding"
      summary: Creates a web app hostname binding
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection":
    get:
      deprecated: false
      operationId: Sites_ListSiteRelayServiceConnections
      parameters:
        - description: The resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
            text/json:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
            application/xml:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
            text/xml:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
      summary: Retrieves all BizTalk Hybrid Connections associated with this web app.
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection/{entityName}":
    delete:
      deprecated: false
      operationId: Sites_DeleteSiteRelayServiceConnection
      parameters:
        - description: The resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The name by which the Hybrid Connection is identified
          in: path
          name: entityName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Removes the association to a BizTalk Hybrid Connection, identified by
        its entity name.
      tags:
        - Sites
    get:
      deprecated: false
      operationId: Sites_GetSiteRelayServiceConnection
      parameters:
        - description: The resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The name by which the Hybrid Connection is identified
          in: path
          name: entityName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
            text/json:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
            application/xml:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
            text/xml:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
      summary: Retrieves a BizTalk Hybrid Connection identified by its entity name.
      tags:
        - Sites
    patch:
      deprecated: false
      operationId: Sites_UpdateSiteRelayServiceConnection
      parameters:
        - description: The resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The name by which the Hybrid Connection is identified
          in: path
          name: entityName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/RelayServiceConnectionEntity"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
            text/json:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
            application/xml:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
            text/xml:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
      summary: Creates a new association to a BizTalk Hybrid Connection, or updates an
        existing one.
      tags:
        - Sites
    put:
      deprecated: false
      operationId: Sites_CreateOrUpdateSiteRelayServiceConnection
      parameters:
        - description: The resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The name by which the Hybrid Connection is identified
          in: path
          name: entityName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/RelayServiceConnectionEntity"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
            text/json:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
            application/xml:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
            text/xml:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
      summary: Creates a new association to a BizTalk Hybrid Connection, or updates an
        existing one.
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances":
    get:
      deprecated: false
      operationId: Sites_GetSiteInstanceIdentifiers
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteInstanceCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteInstanceCollection"
      summary: Gets all instance of a web app
      tags:
        - Sites
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/deployments":
    get:
      deprecated: false
      operationId: Sites_GetInstanceDeployments
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Id of web app instance
          in: path
          name: instanceId
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/DeploymentCollection"
      summary: List deployments
      tags:
        - Sites
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/deployments/{id}":
    delete:
      deprecated: false
      operationId: Sites_DeleteInstanceDeployment
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Id of the deployment
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Id of web app instance
          in: path
          name: instanceId
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Delete the deployment
      tags:
        - Sites
    get:
      deprecated: false
      operationId: Sites_GetInstanceDeployment
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Id of the deployment
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Id of web app instance
          in: path
          name: instanceId
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Deployment"
            text/json:
              schema:
                $ref: "#/components/schemas/Deployment"
            application/xml:
              schema:
                $ref: "#/components/schemas/Deployment"
            text/xml:
              schema:
                $ref: "#/components/schemas/Deployment"
      summary: Get the deployment
      tags:
        - Sites
    put:
      deprecated: false
      operationId: Sites_CreateInstanceDeployment
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Id of the deployment
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Id of web app instance
          in: path
          name: instanceId
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/Deployment"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Deployment"
            text/json:
              schema:
                $ref: "#/components/schemas/Deployment"
            application/xml:
              schema:
                $ref: "#/components/schemas/Deployment"
            text/xml:
              schema:
                $ref: "#/components/schemas/Deployment"
      summary: Create a deployment
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/iscloneable":
    post:
      deprecated: false
      operationId: Sites_IsSiteCloneable
      parameters:
        - description: Name of the resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteCloneability"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteCloneability"
            application/xml:
              schema:
                $ref: "#/components/schemas/SiteCloneability"
            text/xml:
              schema:
                $ref: "#/components/schemas/SiteCloneability"
      summary: Creates a new web app or modifies an existing web app.
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/metricdefinitions":
    get:
      deprecated: false
      operationId: Sites_GetSiteMetricDefinitions
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricDefinitionCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/MetricDefinitionCollection"
      summary: Gets metric definitions for web app
      tags:
        - Sites
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/metrics":
    get:
      deprecated: false
      operationId: Sites_GetSiteMetrics
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: If true, metric details are included in response
          in: query
          name: details
          schema:
            type: boolean
        - description: "Return only usages/metrics specified in the filter. Filter conforms
            to odata syntax. Example: $filter=(name.value eq 'Metric1' or
            name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and
            endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
            duration'[Hour|Minute|Day]'."
          in: query
          name: $filter
          schema:
            type: string
          allowReserved: true
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceMetricCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ResourceMetricCollection"
      summary: Gets metrics for web app
      tags:
        - Sites
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkFeatures/{view}":
    get:
      deprecated: false
      operationId: Sites_GetSiteNetworkFeatures
      parameters:
        - description: The resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The type of view. This can either be "summary" or "detailed".
          in: path
          name: view
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkFeatures"
            text/json:
              schema:
                $ref: "#/components/schemas/NetworkFeatures"
            application/xml:
              schema:
                $ref: "#/components/schemas/NetworkFeatures"
            text/xml:
              schema:
                $ref: "#/components/schemas/NetworkFeatures"
        "404":
          description: The requested view does not exist.
      summary: Retrieves a view of all network features in use on this web app.
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/newpassword":
    post:
      deprecated: false
      operationId: Sites_GenerateNewSitePublishingPassword
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Generates new random app publishing password
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/operationresults/{operationId}":
    get:
      deprecated: false
      operationId: Sites_GetSiteOperation
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Id of an operation
          in: path
          name: operationId
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Gets the operation for a web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons":
    get:
      deprecated: false
      operationId: Sites_ListSitePremierAddOns
      parameters:
        - in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons/{premierAddOnName}":
    delete:
      deprecated: false
      operationId: Sites_DeleteSitePremierAddOn
      parameters:
        - in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
        - in: path
          name: premierAddOnName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      tags:
        - Sites
    get:
      deprecated: false
      operationId: Sites_GetSitePremierAddOn
      parameters:
        - in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
        - in: path
          name: premierAddOnName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      tags:
        - Sites
    put:
      deprecated: false
      operationId: Sites_AddSitePremierAddOn
      parameters:
        - in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
        - in: path
          name: premierAddOnName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/PremierAddOnRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/publishxml":
    post:
      deprecated: false
      operationId: Sites_ListSitePublishingProfileXml
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/CsmPublishingProfileOptions"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
            text/json:
              schema:
                type: string
                format: binary
            application/xml:
              schema:
                type: string
                format: binary
            text/xml:
              schema:
                type: string
                format: binary
      summary: Gets the publishing profile for web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/recover":
    post:
      deprecated: false
      operationId: Sites_RecoverSite
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/CsmSiteRecoveryEntity"
      responses:
        "202":
          description: Asynchronous operation in progress
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Site"
            text/json:
              schema:
                $ref: "#/components/schemas/Site"
            application/xml:
              schema:
                $ref: "#/components/schemas/Site"
            text/xml:
              schema:
                $ref: "#/components/schemas/Site"
        "404":
          description: Web app not found
      summary: Recovers a deleted web app
      tags:
        - Sites
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/resetSlotConfig":
    post:
      deprecated: false
      operationId: Sites_ResetProductionSlotConfig
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Resets the configuration settings of the current slot if they were
        previously modified by calling ApplySlotConfig API
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/restart":
    post:
      deprecated: false
      operationId: Sites_RestartSite
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Soft restart applies the configuration settings and restarts the app
            if necessary. Hard restart always restarts and reprovisions the app
          in: query
          name: softRestart
          schema:
            type: boolean
        - description: If true then the API will block until the app has been restarted
          in: query
          name: synchronous
          schema:
            type: boolean
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Restarts web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots":
    get:
      deprecated: false
      operationId: Sites_GetSiteSlots
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: List of app properties to include in the response
          in: query
          name: propertiesToInclude
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteCollection"
      summary: Gets all the slots for a web apps
      tags:
        - Sites
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}":
    delete:
      deprecated: false
      operationId: Sites_DeleteSiteSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - description: If true, web app metrics are also deleted
          in: query
          name: deleteMetrics
          schema:
            type: string
        - description: If true and App Service Plan is empty after web app deletion, App
            Service Plan is also deleted
          in: query
          name: deleteEmptyServerFarm
          schema:
            type: string
        - description: If true, DNS registration is skipped
          in: query
          name: skipDnsRegistration
          schema:
            type: string
        - description: If true, all slots associated with web app are also deleted
          in: query
          name: deleteAllSlots
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Deletes a web app
      tags:
        - Sites
    get:
      deprecated: false
      operationId: Sites_GetSiteSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - description: Additional web app properties included in the response
          in: query
          name: propertiesToInclude
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Site"
            text/json:
              schema:
                $ref: "#/components/schemas/Site"
            application/xml:
              schema:
                $ref: "#/components/schemas/Site"
            text/xml:
              schema:
                $ref: "#/components/schemas/Site"
      summary: Get details of a web app
      tags:
        - Sites
    put:
      deprecated: false
      operationId: Sites_CreateOrUpdateSiteSlot
      parameters:
        - description: Name of the resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - description: "If true web app hostname is not registered with DNS on creation.
            This parameter is\r

            \            only used for app creation"
          in: query
          name: skipDnsRegistration
          schema:
            type: string
        - description: If true, custom (non *.azurewebsites.net) domains associated with
            web app are not verified.
          in: query
          name: skipCustomDomainVerification
          schema:
            type: string
        - description: If true, web app hostname is force registered with DNS
          in: query
          name: forceDnsRegistration
          schema:
            type: string
        - description: Time to live in seconds for web app's default domain name
          in: query
          name: ttlInSeconds
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/Site"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Site"
            text/json:
              schema:
                $ref: "#/components/schemas/Site"
            application/xml:
              schema:
                $ref: "#/components/schemas/Site"
            text/xml:
              schema:
                $ref: "#/components/schemas/Site"
        "202":
          description: Asynchronous operation in progress
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Site"
            text/json:
              schema:
                $ref: "#/components/schemas/Site"
            application/xml:
              schema:
                $ref: "#/components/schemas/Site"
            text/xml:
              schema:
                $ref: "#/components/schemas/Site"
      summary: Creates a new web app or modifies an existing web app.
      tags:
        - Sites
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/applySlotConfig":
    post:
      deprecated: false
      operationId: Sites_ApplySlotConfigSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of the source slot. Settings from the target slot will be
            applied onto this slot
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/CsmSlotEntity2"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Applies the configuration settings from the target slot onto the current
        slot
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backup":
    post:
      deprecated: false
      operationId: Sites_BackupSiteSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/BackupRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupItem"
            text/json:
              schema:
                $ref: "#/components/schemas/BackupItem"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackupItem"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackupItem"
      summary: Creates web app backup
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups":
    get:
      deprecated: false
      operationId: Sites_ListSiteBackupsSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupItemCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/BackupItemCollection"
      summary: Lists all available backups for web app
      tags:
        - Sites
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/discover":
    put:
      deprecated: false
      operationId: Sites_DiscoverSiteRestoreSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/RestoreRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestoreRequest"
            text/json:
              schema:
                $ref: "#/components/schemas/RestoreRequest"
            application/xml:
              schema:
                $ref: "#/components/schemas/RestoreRequest"
            text/xml:
              schema:
                $ref: "#/components/schemas/RestoreRequest"
      summary: Discovers existing web app backups that can be restored
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}":
    delete:
      deprecated: false
      operationId: Sites_DeleteBackupSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Id of backup
          in: path
          name: backupId
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupItem"
            text/json:
              schema:
                $ref: "#/components/schemas/BackupItem"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackupItem"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackupItem"
      summary: Deletes a backup from Azure Storage
      tags:
        - Sites
    get:
      deprecated: false
      operationId: Sites_GetSiteBackupStatusSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Id of backup
          in: path
          name: backupId
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupItem"
            text/json:
              schema:
                $ref: "#/components/schemas/BackupItem"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackupItem"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackupItem"
      summary: Gets status of a web app backup that may be in progress.
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}/list":
    post:
      deprecated: false
      operationId: Sites_GetSiteBackupStatusSecretsSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Id of backup
          in: path
          name: backupId
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/BackupRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupItem"
            text/json:
              schema:
                $ref: "#/components/schemas/BackupItem"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackupItem"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackupItem"
      summary: Gets status of a web app backup that may be in progress, including
        secrets associated with the backup, such as the Azure Storage SAS URL.
        Also can be used to update the SAS URL for the backup if a new URL is
        passed in the request body.
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}/restore":
    post:
      deprecated: false
      operationId: Sites_RestoreSiteSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Id of backup to restore
          in: path
          name: backupId
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/RestoreRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestoreResponse"
            text/json:
              schema:
                $ref: "#/components/schemas/RestoreResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/RestoreResponse"
            text/xml:
              schema:
                $ref: "#/components/schemas/RestoreResponse"
      summary: Restores a web app
      tags:
        - Sites
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/appsettings":
    put:
      deprecated: false
      operationId: Sites_UpdateSiteAppSettingsSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/StringDictionary2"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StringDictionary"
            text/json:
              schema:
                $ref: "#/components/schemas/StringDictionary"
            application/xml:
              schema:
                $ref: "#/components/schemas/StringDictionary"
            text/xml:
              schema:
                $ref: "#/components/schemas/StringDictionary"
      summary: Updates the application settings of web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/appsettings/list":
    post:
      deprecated: false
      operationId: Sites_ListSiteAppSettingsSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StringDictionary"
            text/json:
              schema:
                $ref: "#/components/schemas/StringDictionary"
            application/xml:
              schema:
                $ref: "#/components/schemas/StringDictionary"
            text/xml:
              schema:
                $ref: "#/components/schemas/StringDictionary"
      summary: Gets the application settings of web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/authsettings":
    put:
      deprecated: false
      operationId: Sites_UpdateSiteAuthSettingsSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/SiteAuthSettings"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteAuthSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteAuthSettings"
            application/xml:
              schema:
                $ref: "#/components/schemas/SiteAuthSettings"
            text/xml:
              schema:
                $ref: "#/components/schemas/SiteAuthSettings"
      summary: Updates the Authentication / Authorization settings associated with web
        app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/authsettings/list":
    post:
      deprecated: false
      operationId: Sites_ListSiteAuthSettingsSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteAuthSettings"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteAuthSettings"
            application/xml:
              schema:
                $ref: "#/components/schemas/SiteAuthSettings"
            text/xml:
              schema:
                $ref: "#/components/schemas/SiteAuthSettings"
      summary: Gets the Authentication / Authorization settings associated with web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/backup":
    put:
      deprecated: false
      operationId: Sites_UpdateSiteBackupConfigurationSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/BackupRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupRequest"
            text/json:
              schema:
                $ref: "#/components/schemas/BackupRequest"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackupRequest"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackupRequest"
      summary: Updates backup configuration of web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/backup/list":
    post:
      deprecated: false
      operationId: Sites_GetSiteBackupConfigurationSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupRequest"
            text/json:
              schema:
                $ref: "#/components/schemas/BackupRequest"
            application/xml:
              schema:
                $ref: "#/components/schemas/BackupRequest"
            text/xml:
              schema:
                $ref: "#/components/schemas/BackupRequest"
      summary: Gets the backup configuration for a web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/connectionstrings":
    put:
      deprecated: false
      operationId: Sites_UpdateSiteConnectionStringsSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/ConnectionStringDictionary"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectionStringDictionary"
            text/json:
              schema:
                $ref: "#/components/schemas/ConnectionStringDictionary"
            application/xml:
              schema:
                $ref: "#/components/schemas/ConnectionStringDictionary"
            text/xml:
              schema:
                $ref: "#/components/schemas/ConnectionStringDictionary"
      summary: Updates the connection strings associated with web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/connectionstrings/list":
    post:
      deprecated: false
      operationId: Sites_ListSiteConnectionStringsSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectionStringDictionary"
            text/json:
              schema:
                $ref: "#/components/schemas/ConnectionStringDictionary"
            application/xml:
              schema:
                $ref: "#/components/schemas/ConnectionStringDictionary"
            text/xml:
              schema:
                $ref: "#/components/schemas/ConnectionStringDictionary"
      summary: Gets the connection strings associated with web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/logs":
    get:
      deprecated: false
      operationId: Sites_GetSiteLogsConfigSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteLogsConfig"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteLogsConfig"
            application/xml:
              schema:
                $ref: "#/components/schemas/SiteLogsConfig"
            text/xml:
              schema:
                $ref: "#/components/schemas/SiteLogsConfig"
      summary: Gets the web app logs configuration
      tags:
        - Sites
    put:
      deprecated: false
      operationId: Sites_UpdateSiteLogsConfigSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/SiteLogsConfig"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteLogsConfig"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteLogsConfig"
            application/xml:
              schema:
                $ref: "#/components/schemas/SiteLogsConfig"
            text/xml:
              schema:
                $ref: "#/components/schemas/SiteLogsConfig"
      summary: Updates the meta data for web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/metadata":
    put:
      deprecated: false
      operationId: Sites_UpdateSiteMetadataSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/StringDictionary"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StringDictionary"
            text/json:
              schema:
                $ref: "#/components/schemas/StringDictionary"
            application/xml:
              schema:
                $ref: "#/components/schemas/StringDictionary"
            text/xml:
              schema:
                $ref: "#/components/schemas/StringDictionary"
      summary: Updates the meta data for web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/metadata/list":
    post:
      deprecated: false
      operationId: Sites_ListSiteMetadataSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StringDictionary"
            text/json:
              schema:
                $ref: "#/components/schemas/StringDictionary"
            application/xml:
              schema:
                $ref: "#/components/schemas/StringDictionary"
            text/xml:
              schema:
                $ref: "#/components/schemas/StringDictionary"
      summary: Gets the web app meta data.
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/publishingcredentials/list":
    post:
      deprecated: false
      operationId: Sites_ListSitePublishingCredentialsSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
            text/json:
              schema:
                $ref: "#/components/schemas/User"
            application/xml:
              schema:
                $ref: "#/components/schemas/User"
            text/xml:
              schema:
                $ref: "#/components/schemas/User"
      summary: Gets the web app publishing credentials
      tags:
        - Sites
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web":
    get:
      deprecated: false
      operationId: Sites_GetSiteConfigSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteConfig"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteConfig"
            application/xml:
              schema:
                $ref: "#/components/schemas/SiteConfig"
            text/xml:
              schema:
                $ref: "#/components/schemas/SiteConfig"
      summary: Gets the configuration of the web app
      tags:
        - Sites
    patch:
      deprecated: false
      operationId: Sites_UpdateSiteConfigSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/SiteConfig"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteConfig"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteConfig"
            application/xml:
              schema:
                $ref: "#/components/schemas/SiteConfig"
            text/xml:
              schema:
                $ref: "#/components/schemas/SiteConfig"
      summary: Update the configuration of web app
      tags:
        - Sites
    put:
      deprecated: false
      operationId: Sites_CreateOrUpdateSiteConfigSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/SiteConfig"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteConfig"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteConfig"
            application/xml:
              schema:
                $ref: "#/components/schemas/SiteConfig"
            text/xml:
              schema:
                $ref: "#/components/schemas/SiteConfig"
      summary: Update the configuration of web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments":
    get:
      deprecated: false
      operationId: Sites_GetDeploymentsSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/DeploymentCollection"
      summary: List deployments
      tags:
        - Sites
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments/{id}":
    delete:
      deprecated: false
      operationId: Sites_DeleteDeploymentSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Id of the deployment
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Delete the deployment
      tags:
        - Sites
    get:
      deprecated: false
      operationId: Sites_GetDeploymentSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Id of the deployment
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Deployment"
            text/json:
              schema:
                $ref: "#/components/schemas/Deployment"
            application/xml:
              schema:
                $ref: "#/components/schemas/Deployment"
            text/xml:
              schema:
                $ref: "#/components/schemas/Deployment"
      summary: Get the deployment
      tags:
        - Sites
    put:
      deprecated: false
      operationId: Sites_CreateDeploymentSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Id of the deployment
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/Deployment"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Deployment"
            text/json:
              schema:
                $ref: "#/components/schemas/Deployment"
            application/xml:
              schema:
                $ref: "#/components/schemas/Deployment"
            text/xml:
              schema:
                $ref: "#/components/schemas/Deployment"
      summary: Create a deployment
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings":
    get:
      deprecated: false
      operationId: Sites_GetSiteHostNameBindingsSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HostNameBindingCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/HostNameBindingCollection"
      summary: Get web app hostname bindings
      tags:
        - Sites
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings/{hostName}":
    delete:
      deprecated: false
      operationId: Sites_DeleteSiteHostNameBindingSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - description: Name of host
          in: path
          name: hostName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Deletes a host name binding
      tags:
        - Sites
    get:
      deprecated: false
      operationId: Sites_GetSiteHostNameBindingSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - description: Name of host
          in: path
          name: hostName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HostNameBinding"
            text/json:
              schema:
                $ref: "#/components/schemas/HostNameBinding"
            application/xml:
              schema:
                $ref: "#/components/schemas/HostNameBinding"
            text/xml:
              schema:
                $ref: "#/components/schemas/HostNameBinding"
      summary: Get web app binding for a hostname
      tags:
        - Sites
    put:
      deprecated: false
      operationId: Sites_CreateOrUpdateSiteHostNameBindingSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of host
          in: path
          name: hostName
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/HostNameBinding"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HostNameBinding"
            text/json:
              schema:
                $ref: "#/components/schemas/HostNameBinding"
            application/xml:
              schema:
                $ref: "#/components/schemas/HostNameBinding"
            text/xml:
              schema:
                $ref: "#/components/schemas/HostNameBinding"
      summary: Creates a web app hostname binding
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection":
    get:
      deprecated: false
      operationId: Sites_ListSiteRelayServiceConnectionsSlot
      parameters:
        - description: The resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The name of the slot for the web app.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
            text/json:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
            application/xml:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
            text/xml:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
      summary: Retrieves all BizTalk Hybrid Connections associated with this web app.
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection/{entityName}":
    delete:
      deprecated: false
      operationId: Sites_DeleteSiteRelayServiceConnectionSlot
      parameters:
        - description: The resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The name by which the Hybrid Connection is identified
          in: path
          name: entityName
          required: true
          schema:
            type: string
        - description: The name of the slot for the web app.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Removes the association to a BizTalk Hybrid Connection, identified by
        its entity name.
      tags:
        - Sites
    get:
      deprecated: false
      operationId: Sites_GetSiteRelayServiceConnectionSlot
      parameters:
        - description: The resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The name by which the Hybrid Connection is identified
          in: path
          name: entityName
          required: true
          schema:
            type: string
        - description: The name of the slot for the web app.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
            text/json:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
            application/xml:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
            text/xml:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
      summary: Retrieves a BizTalk Hybrid Connection identified by its entity name.
      tags:
        - Sites
    patch:
      deprecated: false
      operationId: Sites_UpdateSiteRelayServiceConnectionSlot
      parameters:
        - description: The resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The name by which the Hybrid Connection is identified
          in: path
          name: entityName
          required: true
          schema:
            type: string
        - description: The name of the slot for the web app.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/RelayServiceConnectionEntity"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
            text/json:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
            application/xml:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
            text/xml:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
      summary: Creates a new association to a BizTalk Hybrid Connection, or updates an
        existing one.
      tags:
        - Sites
    put:
      deprecated: false
      operationId: Sites_CreateOrUpdateSiteRelayServiceConnectionSlot
      parameters:
        - description: The resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The name by which the Hybrid Connection is identified
          in: path
          name: entityName
          required: true
          schema:
            type: string
        - description: The name of the slot for the web app.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/RelayServiceConnectionEntity"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
            text/json:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
            application/xml:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
            text/xml:
              schema:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
      summary: Creates a new association to a BizTalk Hybrid Connection, or updates an
        existing one.
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances":
    get:
      deprecated: false
      operationId: Sites_GetSiteInstanceIdentifiersSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteInstanceCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteInstanceCollection"
      summary: Gets all instance of a web app
      tags:
        - Sites
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/deployments":
    get:
      deprecated: false
      operationId: Sites_GetInstanceDeploymentsSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - description: Id of web app instance
          in: path
          name: instanceId
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/DeploymentCollection"
      summary: List deployments
      tags:
        - Sites
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/deployments/{id}":
    delete:
      deprecated: false
      operationId: Sites_DeleteInstanceDeploymentSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Id of the deployment
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - description: Id of web app instance
          in: path
          name: instanceId
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Delete the deployment
      tags:
        - Sites
    get:
      deprecated: false
      operationId: Sites_GetInstanceDeploymentSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Id of the deployment
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - description: Id of web app instance
          in: path
          name: instanceId
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Deployment"
            text/json:
              schema:
                $ref: "#/components/schemas/Deployment"
            application/xml:
              schema:
                $ref: "#/components/schemas/Deployment"
            text/xml:
              schema:
                $ref: "#/components/schemas/Deployment"
      summary: Get the deployment
      tags:
        - Sites
    put:
      deprecated: false
      operationId: Sites_CreateInstanceDeploymentSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Id of the deployment
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - description: Id of web app instance
          in: path
          name: instanceId
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/Deployment"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Deployment"
            text/json:
              schema:
                $ref: "#/components/schemas/Deployment"
            application/xml:
              schema:
                $ref: "#/components/schemas/Deployment"
            text/xml:
              schema:
                $ref: "#/components/schemas/Deployment"
      summary: Create a deployment
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/iscloneable":
    post:
      deprecated: false
      operationId: Sites_IsSiteCloneableSlot
      parameters:
        - description: Name of the resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteCloneability"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteCloneability"
            application/xml:
              schema:
                $ref: "#/components/schemas/SiteCloneability"
            text/xml:
              schema:
                $ref: "#/components/schemas/SiteCloneability"
      summary: Creates a new web app or modifies an existing web app.
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/metricdefinitions":
    get:
      deprecated: false
      operationId: Sites_GetSiteMetricDefinitionsSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricDefinitionCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/MetricDefinitionCollection"
      summary: Gets metric definitions for web app
      tags:
        - Sites
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/metrics":
    get:
      deprecated: false
      operationId: Sites_GetSiteMetricsSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - description: If true, metric details are included in response
          in: query
          name: details
          schema:
            type: boolean
        - description: "Return only usages/metrics specified in the filter. Filter conforms
            to odata syntax. Example: $filter=(name.value eq 'Metric1' or
            name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and
            endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
            duration'[Hour|Minute|Day]'."
          in: query
          name: $filter
          schema:
            type: string
          allowReserved: true
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceMetricCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/ResourceMetricCollection"
      summary: Gets metrics for web app
      tags:
        - Sites
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkFeatures/{view}":
    get:
      deprecated: false
      operationId: Sites_GetSiteNetworkFeaturesSlot
      parameters:
        - description: The resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The type of view. This can either be "summary" or "detailed".
          in: path
          name: view
          required: true
          schema:
            type: string
        - description: The name of the slot for this web app.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkFeatures"
            text/json:
              schema:
                $ref: "#/components/schemas/NetworkFeatures"
            application/xml:
              schema:
                $ref: "#/components/schemas/NetworkFeatures"
            text/xml:
              schema:
                $ref: "#/components/schemas/NetworkFeatures"
        "404":
          description: The requested view does not exist.
      summary: Retrieves a view of all network features in use on this web app.
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/newpassword":
    post:
      deprecated: false
      operationId: Sites_GenerateNewSitePublishingPasswordSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Generates new random app publishing password
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/operationresults/{operationId}":
    get:
      deprecated: false
      operationId: Sites_GetSiteOperationSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Id of an operation
          in: path
          name: operationId
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Gets the operation for a web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons":
    get:
      deprecated: false
      operationId: Sites_ListSitePremierAddOnsSlot
      parameters:
        - in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
        - in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons/{premierAddOnName}":
    delete:
      deprecated: false
      operationId: Sites_DeleteSitePremierAddOnSlot
      parameters:
        - in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
        - in: path
          name: premierAddOnName
          required: true
          schema:
            type: string
        - in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      tags:
        - Sites
    get:
      deprecated: false
      operationId: Sites_GetSitePremierAddOnSlot
      parameters:
        - in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
        - in: path
          name: premierAddOnName
          required: true
          schema:
            type: string
        - in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      tags:
        - Sites
    put:
      deprecated: false
      operationId: Sites_AddSitePremierAddOnSlot
      parameters:
        - in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
        - in: path
          name: premierAddOnName
          required: true
          schema:
            type: string
        - in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/PremierAddOnRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/publishxml":
    post:
      deprecated: false
      operationId: Sites_ListSitePublishingProfileXmlSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/CsmPublishingProfileOptions"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
            text/json:
              schema:
                type: string
                format: binary
            application/xml:
              schema:
                type: string
                format: binary
            text/xml:
              schema:
                type: string
                format: binary
      summary: Gets the publishing profile for web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/recover":
    post:
      deprecated: false
      operationId: Sites_RecoverSiteSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/CsmSiteRecoveryEntity"
      responses:
        "202":
          description: Asynchronous operation in progress
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Site"
            text/json:
              schema:
                $ref: "#/components/schemas/Site"
            application/xml:
              schema:
                $ref: "#/components/schemas/Site"
            text/xml:
              schema:
                $ref: "#/components/schemas/Site"
        "404":
          description: Web app not found
      summary: Recovers a deleted web app
      tags:
        - Sites
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/resetSlotConfig":
    post:
      deprecated: false
      operationId: Sites_ResetSlotConfigSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Resets the configuration settings of the current slot if they were
        previously modified by calling ApplySlotConfig API
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/restart":
    post:
      deprecated: false
      operationId: Sites_RestartSiteSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - description: Soft restart applies the configuration settings and restarts the app
            if necessary. Hard restart always restarts and reprovisions the app
          in: query
          name: softRestart
          schema:
            type: boolean
        - description: If true then the API will block until the app has been restarted
          in: query
          name: synchronous
          schema:
            type: boolean
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Restarts web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/slotsdiffs":
    post:
      deprecated: false
      operationId: Sites_GetSlotsDifferencesSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of the source slot
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/CsmSlotEntity"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SlotDifferenceCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/SlotDifferenceCollection"
      summary: Get the difference in configuration settings between two web app slots
      tags:
        - Sites
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/slotsswap":
    post:
      deprecated: false
      operationId: Sites_SwapSlotsSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of source slot for the swap
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/CsmSlotEntity"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
        "202":
          description: Operation is in progress
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Swaps web app slots
      tags:
        - Sites
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/snapshots":
    put:
      deprecated: false
      operationId: Sites_GetSiteSnapshotsSlot
      parameters:
        - description: Webspace
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Website Name
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Website Slot
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Returns all Snapshots to the user.
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web":
    delete:
      deprecated: false
      operationId: Sites_DeleteSiteSourceControlSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Delete source control configuration of web app
      tags:
        - Sites
    get:
      deprecated: false
      operationId: Sites_GetSiteSourceControlSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
            application/xml:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
            text/xml:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
      summary: Get the source control configuration of web app
      tags:
        - Sites
    patch:
      deprecated: false
      operationId: Sites_UpdateSiteSourceControlSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/SiteSourceControl"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
            application/xml:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
            text/xml:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
      summary: Update the source control configuration of web app
      tags:
        - Sites
    put:
      deprecated: false
      operationId: Sites_CreateOrUpdateSiteSourceControlSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/SiteSourceControl"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
            application/xml:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
            text/xml:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
            application/xml:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
            text/xml:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
      summary: Update the source control configuration of web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/start":
    post:
      deprecated: false
      operationId: Sites_StartSiteSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Starts web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/stop":
    post:
      deprecated: false
      operationId: Sites_StopSiteSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Stops web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sync":
    post:
      deprecated: false
      operationId: Sites_SyncSiteRepositorySlot
      parameters:
        - in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
        - in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/usages":
    get:
      deprecated: false
      operationId: Sites_GetSiteUsagesSlot
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Name of web app slot. If not specified then will default to
            production slot.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - description: "Return only usages specified in the filter. Filter is specified by
            using OData syntax. Example: $filter=(name.value eq 'Metric1' or
            name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and
            endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
            duration'[Hour|Minute|Day]'."
          in: query
          name: $filter
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CsmUsageQuotaCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CsmUsageQuotaCollection"
      summary: Gets the quota usage numbers for web app
      tags:
        - Sites
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections":
    get:
      deprecated: false
      operationId: Sites_GetSiteVNETConnectionsSlot
      parameters:
        - description: The resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The name of the slot for this web app.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/VnetInfo"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/VnetInfo"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/VnetInfo"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/VnetInfo"
                type: array
      summary: Retrieves a list of all Virtual Network Connections associated with this
        web app.
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}":
    delete:
      deprecated: false
      operationId: Sites_DeleteSiteVNETConnectionSlot
      parameters:
        - description: The resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The name of the Virtual Network
          in: path
          name: vnetName
          required: true
          schema:
            type: string
        - description: The name of the slot for this web app.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Removes the specified Virtual Network Connection association from this
        web app.
      tags:
        - Sites
    get:
      deprecated: false
      operationId: Sites_GetSiteVNETConnectionSlot
      parameters:
        - description: The resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The name of the Virtual Network
          in: path
          name: vnetName
          required: true
          schema:
            type: string
        - description: The name of the slot for this web app.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VnetInfo"
            text/json:
              schema:
                $ref: "#/components/schemas/VnetInfo"
            application/xml:
              schema:
                $ref: "#/components/schemas/VnetInfo"
            text/xml:
              schema:
                $ref: "#/components/schemas/VnetInfo"
      summary: Retrieves a specific Virtual Network Connection associated with this web
        app.
      tags:
        - Sites
    patch:
      deprecated: false
      operationId: Sites_UpdateSiteVNETConnectionSlot
      parameters:
        - description: The resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The name of the Virtual Network
          in: path
          name: vnetName
          required: true
          schema:
            type: string
        - description: The name of the slot for this web app.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/VnetInfo"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VnetInfo"
            text/json:
              schema:
                $ref: "#/components/schemas/VnetInfo"
            application/xml:
              schema:
                $ref: "#/components/schemas/VnetInfo"
            text/xml:
              schema:
                $ref: "#/components/schemas/VnetInfo"
      summary: Adds a Virtual Network Connection or updates it's properties.
      tags:
        - Sites
    put:
      deprecated: false
      operationId: Sites_CreateOrUpdateSiteVNETConnectionSlot
      parameters:
        - description: The resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The name of the Virtual Network
          in: path
          name: vnetName
          required: true
          schema:
            type: string
        - description: The name of the slot for this web app.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/VnetInfo"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VnetInfo"
            text/json:
              schema:
                $ref: "#/components/schemas/VnetInfo"
            application/xml:
              schema:
                $ref: "#/components/schemas/VnetInfo"
            text/xml:
              schema:
                $ref: "#/components/schemas/VnetInfo"
      summary: Adds a Virtual Network Connection or updates it's properties.
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}/gateways/{gatewayName}":
    get:
      deprecated: false
      operationId: Sites_GetSiteVnetGatewaySlot
      parameters:
        - description: The resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The name of the Virtual Network
          in: path
          name: vnetName
          required: true
          schema:
            type: string
        - description: The name of the gateway. The only gateway that exists presently is
            "primary"
          in: path
          name: gatewayName
          required: true
          schema:
            type: string
        - description: The name of the slot for this web app.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
        "404":
          description: Gateway does not exist. Only the "primary" gateway exists presently.
      summary: Retrieves a Virtual Network connection gateway associated with this web
        app and virtual network.
      tags:
        - Sites
    patch:
      deprecated: false
      operationId: Sites_UpdateSiteVNETConnectionGatewaySlot
      parameters:
        - description: The resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The name of the Virtual Network
          in: path
          name: vnetName
          required: true
          schema:
            type: string
        - description: The name of the gateway. The only gateway that exists presently is
            "primary"
          in: path
          name: gatewayName
          required: true
          schema:
            type: string
        - description: The name of the slot for this web app.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/VnetGateway"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VnetGateway"
            text/json:
              schema:
                $ref: "#/components/schemas/VnetGateway"
            application/xml:
              schema:
                $ref: "#/components/schemas/VnetGateway"
            text/xml:
              schema:
                $ref: "#/components/schemas/VnetGateway"
      summary: Updates the Virtual Network Gateway.
      tags:
        - Sites
    put:
      deprecated: false
      operationId: Sites_CreateOrUpdateSiteVNETConnectionGatewaySlot
      parameters:
        - description: The resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The name of the Virtual Network
          in: path
          name: vnetName
          required: true
          schema:
            type: string
        - description: The name of the gateway. The only gateway that exists presently is
            "primary"
          in: path
          name: gatewayName
          required: true
          schema:
            type: string
        - description: The name of the slot for this web app.
          in: path
          name: slot
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/VnetGateway"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VnetGateway"
            text/json:
              schema:
                $ref: "#/components/schemas/VnetGateway"
            application/xml:
              schema:
                $ref: "#/components/schemas/VnetGateway"
            text/xml:
              schema:
                $ref: "#/components/schemas/VnetGateway"
      summary: Updates the Virtual Network Gateway.
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slotsdiffs":
    post:
      deprecated: false
      operationId: Sites_GetSlotsDifferencesFromProduction
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/CsmSlotEntity"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SlotDifferenceCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/SlotDifferenceCollection"
      summary: Get the difference in configuration settings between two web app slots
      tags:
        - Sites
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slotsswap":
    post:
      deprecated: false
      operationId: Sites_SwapSlotWithProduction
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/CsmSlotEntity"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
        "202":
          description: Operation is in progress
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Swaps web app slots
      tags:
        - Sites
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/snapshots":
    put:
      deprecated: false
      operationId: Sites_GetSiteSnapshots
      parameters:
        - description: Webspace
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Website Name
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Returns all Snapshots to the user.
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web":
    delete:
      deprecated: false
      operationId: Sites_DeleteSiteSourceControl
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Delete source control configuration of web app
      tags:
        - Sites
    get:
      deprecated: false
      operationId: Sites_GetSiteSourceControl
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
            application/xml:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
            text/xml:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
      summary: Get the source control configuration of web app
      tags:
        - Sites
    patch:
      deprecated: false
      operationId: Sites_UpdateSiteSourceControl
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/SiteSourceControl"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
            application/xml:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
            text/xml:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
      summary: Update the source control configuration of web app
      tags:
        - Sites
    put:
      deprecated: false
      operationId: Sites_CreateOrUpdateSiteSourceControl
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/SiteSourceControl"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
            application/xml:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
            text/xml:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
            text/json:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
            application/xml:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
            text/xml:
              schema:
                $ref: "#/components/schemas/SiteSourceControl"
      summary: Update the source control configuration of web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/start":
    post:
      deprecated: false
      operationId: Sites_StartSite
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Starts web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/stop":
    post:
      deprecated: false
      operationId: Sites_StopSite
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Stops web app
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sync":
    post:
      deprecated: false
      operationId: Sites_SyncSiteRepository
      parameters:
        - in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/usages":
    get:
      deprecated: false
      operationId: Sites_GetSiteUsages
      parameters:
        - description: Name of resource group
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: "Return only usages specified in the filter. Filter is specified by
            using OData syntax. Example: $filter=(name.value eq 'Metric1' or
            name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and
            endTime eq '2014-12-31T23:59:59Z' and timeGrain eq
            duration'[Hour|Minute|Day]'."
          in: query
          name: $filter
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CsmUsageQuotaCollection"
            text/json:
              schema:
                $ref: "#/components/schemas/CsmUsageQuotaCollection"
      summary: Gets the quota usage numbers for web app
      tags:
        - Sites
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections":
    get:
      deprecated: false
      operationId: Sites_GetSiteVNETConnections
      parameters:
        - description: The resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/VnetInfo"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/VnetInfo"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/VnetInfo"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/VnetInfo"
                type: array
      summary: Retrieves a list of all Virtual Network Connections associated with this
        web app.
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}":
    delete:
      deprecated: false
      operationId: Sites_DeleteSiteVNETConnection
      parameters:
        - description: The resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The name of the Virtual Network
          in: path
          name: vnetName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
      summary: Removes the specified Virtual Network Connection association from this
        web app.
      tags:
        - Sites
    get:
      deprecated: false
      operationId: Sites_GetSiteVNETConnection
      parameters:
        - description: The resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The name of the Virtual Network
          in: path
          name: vnetName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VnetInfo"
            text/json:
              schema:
                $ref: "#/components/schemas/VnetInfo"
            application/xml:
              schema:
                $ref: "#/components/schemas/VnetInfo"
            text/xml:
              schema:
                $ref: "#/components/schemas/VnetInfo"
      summary: Retrieves a specific Virtual Network Connection associated with this web
        app.
      tags:
        - Sites
    patch:
      deprecated: false
      operationId: Sites_UpdateSiteVNETConnection
      parameters:
        - description: The resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The name of the Virtual Network
          in: path
          name: vnetName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/VnetInfo"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VnetInfo"
            text/json:
              schema:
                $ref: "#/components/schemas/VnetInfo"
            application/xml:
              schema:
                $ref: "#/components/schemas/VnetInfo"
            text/xml:
              schema:
                $ref: "#/components/schemas/VnetInfo"
      summary: Adds a Virtual Network Connection or updates it's properties.
      tags:
        - Sites
    put:
      deprecated: false
      operationId: Sites_CreateOrUpdateSiteVNETConnection
      parameters:
        - description: The resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The name of the Virtual Network
          in: path
          name: vnetName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/VnetInfo"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VnetInfo"
            text/json:
              schema:
                $ref: "#/components/schemas/VnetInfo"
            application/xml:
              schema:
                $ref: "#/components/schemas/VnetInfo"
            text/xml:
              schema:
                $ref: "#/components/schemas/VnetInfo"
      summary: Adds a Virtual Network Connection or updates it's properties.
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}/gateways/{gatewayName}":
    get:
      deprecated: false
      operationId: Sites_GetSiteVnetGateway
      parameters:
        - description: The resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The name of the Virtual Network
          in: path
          name: vnetName
          required: true
          schema:
            type: string
        - description: The name of the gateway. The only gateway that exists presently is
            "primary"
          in: path
          name: gatewayName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Object"
            text/json:
              schema:
                $ref: "#/components/schemas/Object"
            application/xml:
              schema:
                $ref: "#/components/schemas/Object"
            text/xml:
              schema:
                $ref: "#/components/schemas/Object"
        "404":
          description: Gateway does not exist. Only the "primary" gateway exists presently.
      summary: Retrieves a Virtual Network connection gateway associated with this web
        app and virtual network.
      tags:
        - Sites
    patch:
      deprecated: false
      operationId: Sites_UpdateSiteVNETConnectionGateway
      parameters:
        - description: The resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The name of the Virtual Network
          in: path
          name: vnetName
          required: true
          schema:
            type: string
        - description: The name of the gateway. The only gateway that exists presently is
            "primary"
          in: path
          name: gatewayName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/VnetGateway"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VnetGateway"
            text/json:
              schema:
                $ref: "#/components/schemas/VnetGateway"
            application/xml:
              schema:
                $ref: "#/components/schemas/VnetGateway"
            text/xml:
              schema:
                $ref: "#/components/schemas/VnetGateway"
      summary: Updates the Virtual Network Gateway.
      tags:
        - Sites
    put:
      deprecated: false
      operationId: Sites_CreateOrUpdateSiteVNETConnectionGateway
      parameters:
        - description: The resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the web app
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The name of the Virtual Network
          in: path
          name: vnetName
          required: true
          schema:
            type: string
        - description: The name of the gateway. The only gateway that exists presently is
            "primary"
          in: path
          name: gatewayName
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      requestBody:
        $ref: "#/components/requestBodies/VnetGateway"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VnetGateway"
            text/json:
              schema:
                $ref: "#/components/schemas/VnetGateway"
            application/xml:
              schema:
                $ref: "#/components/schemas/VnetGateway"
            text/xml:
              schema:
                $ref: "#/components/schemas/VnetGateway"
      summary: Updates the Virtual Network Gateway.
      tags:
        - Sites
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendationHistory":
    get:
      deprecated: false
      operationId: Recommendations_GetRecommendationHistoryForSite
      parameters:
        - description: Resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Site name
          in: path
          name: siteName
          required: true
          schema:
            type: string
        - description: The start time of a time range to query, e.g. $filter=startTime eq
            '2015-01-01T00:00:00Z' and endTime eq '2015-01-02T00:00:00Z'
          in: query
          name: startTime
          schema:
            type: string
        - description: The end time of a time range to query, e.g. $filter=startTime eq
            '2015-01-01T00:00:00Z' and endTime eq '2015-01-02T00:00:00Z'
          in: query
          name: endTime
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Recommendation"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/Recommendation"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Recommendation"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Recommendation"
                type: array
      summary: Gets the list of past recommendations optionally specified by the time
        range.
      tags:
        - Recommendations
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendations":
    get:
      deprecated: false
      operationId: Recommendations_GetRecommendedRulesForSite
      parameters:
        - description: Resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Site name
          in: path
          name: siteName
          required: true
          schema:
            type: string
        - description: If set, this API returns only the most critical recommendation among
            the others. Otherwise this API returns all recommendations available
          in: query
          name: featured
          schema:
            type: boolean
        - description: The name of site SKU.
          in: query
          name: siteSku
          schema:
            type: string
        - description: The number of site slots associated to the site
          in: query
          name: numSlots
          schema:
            type: integer
            format: int32
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Recommendation"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/Recommendation"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Recommendation"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Recommendation"
                type: array
      summary: Gets a list of recommendations associated with the specified web site.
      tags:
        - Recommendations
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendations/{name}":
    get:
      deprecated: false
      operationId: Recommendations_GetRuleDetailsBySiteName
      parameters:
        - description: Resource group name
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Site name
          in: path
          name: siteName
          required: true
          schema:
            type: string
        - description: Recommendation rule name
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/apiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecommendationRule"
            text/json:
              schema:
                $ref: "#/components/schemas/RecommendationRule"
            application/xml:
              schema:
                $ref: "#/components/schemas/RecommendationRule"
            text/xml:
              schema:
                $ref: "#/components/schemas/RecommendationRule"
      summary: Gets the detailed properties of the recommendation object for the
        specified web site.
      tags:
        - Recommendations
servers:
  - url: https://management.azure.com
components:
  parameters:
    apiVersionParameter:
      description: API Version
      in: query
      name: api-version
      required: true
      schema:
        type: string
    subscriptionIdParameter:
      description: Subscription Id
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
  requestBodies:
    CsmPublishingProfileOptions:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CsmPublishingProfileOptions"
        text/json:
          schema:
            $ref: "#/components/schemas/CsmPublishingProfileOptions"
        application/xml:
          schema:
            $ref: "#/components/schemas/CsmPublishingProfileOptions"
        text/xml:
          schema:
            $ref: "#/components/schemas/CsmPublishingProfileOptions"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/CsmPublishingProfileOptions"
      description: Specifies options for publishing profile. Pass
        CsmPublishingProfileOptions.Format=FileZilla3 for FileZilla FTP format.
      required: true
    RestoreRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RestoreRequest"
        text/json:
          schema:
            $ref: "#/components/schemas/RestoreRequest"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/RestoreRequest"
      description: Information on restore request
      required: true
    PremierAddOnRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PremierAddOnRequest"
        text/json:
          schema:
            $ref: "#/components/schemas/PremierAddOnRequest"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/PremierAddOnRequest"
      required: true
    CertificateOrderCertificate:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CertificateOrderCertificate"
        text/json:
          schema:
            $ref: "#/components/schemas/CertificateOrderCertificate"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/CertificateOrderCertificate"
      description: Key Vault secret csm Id
      required: true
    BackupRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BackupRequest"
        text/json:
          schema:
            $ref: "#/components/schemas/BackupRequest"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/BackupRequest"
      description: Information on backup request
      required: true
    Csr:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Csr"
        text/json:
          schema:
            $ref: "#/components/schemas/Csr"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/Csr"
      description: Details of certificate signing request if it exists already.
      required: true
    CsmSlotEntity:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CsmSlotEntity"
        text/json:
          schema:
            $ref: "#/components/schemas/CsmSlotEntity"
        application/xml:
          schema:
            $ref: "#/components/schemas/CsmSlotEntity"
        text/xml:
          schema:
            $ref: "#/components/schemas/CsmSlotEntity"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/CsmSlotEntity"
      description: Request body that contains the target slot name
      required: true
    Certificate:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Certificate"
        text/json:
          schema:
            $ref: "#/components/schemas/Certificate"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/Certificate"
      description: Details of certificate if it exists already.
      required: true
    ConnectionStringDictionary:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ConnectionStringDictionary"
        text/json:
          schema:
            $ref: "#/components/schemas/ConnectionStringDictionary"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/ConnectionStringDictionary"
      description: Connection strings associated with web app
      required: true
    Deployment:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Deployment"
        text/json:
          schema:
            $ref: "#/components/schemas/Deployment"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/Deployment"
      description: Details of deployment
      required: true
    StringDictionary:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/StringDictionary"
        text/json:
          schema:
            $ref: "#/components/schemas/StringDictionary"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/StringDictionary"
      description: Meta data of web app
      required: true
    SiteConfig:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SiteConfig"
        text/json:
          schema:
            $ref: "#/components/schemas/SiteConfig"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/SiteConfig"
      description: Request body that contains the configuration setting for the web app
      required: true
    VnetRoute:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/VnetRoute"
        text/json:
          schema:
            $ref: "#/components/schemas/VnetRoute"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/VnetRoute"
      description: The route object
      required: true
    CertificateOrder:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CertificateOrder"
        text/json:
          schema:
            $ref: "#/components/schemas/CertificateOrder"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/CertificateOrder"
      description: Distinguished name to be used for purchasing certificate
      required: true
    Domain:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Domain"
        text/json:
          schema:
            $ref: "#/components/schemas/Domain"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/Domain"
      description: Domain registration information
      required: true
    Site:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Site"
        text/json:
          schema:
            $ref: "#/components/schemas/Site"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/Site"
      description: Details of web app if it exists already
      required: true
    CsmSlotEntity2:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CsmSlotEntity"
        text/json:
          schema:
            $ref: "#/components/schemas/CsmSlotEntity"
        application/xml:
          schema:
            $ref: "#/components/schemas/CsmSlotEntity"
        text/xml:
          schema:
            $ref: "#/components/schemas/CsmSlotEntity"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/CsmSlotEntity"
      description: Request body that contains the target slot name. Settings from that slot
        will be applied on the source slot
      required: true
    StringDictionary2:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/StringDictionary"
        text/json:
          schema:
            $ref: "#/components/schemas/StringDictionary"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/StringDictionary"
      description: Application settings of web app
      required: true
    SiteAuthSettings:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SiteAuthSettings"
        text/json:
          schema:
            $ref: "#/components/schemas/SiteAuthSettings"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/SiteAuthSettings"
      description: Auth settings associated with web app
      required: true
    SiteLogsConfig:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SiteLogsConfig"
        text/json:
          schema:
            $ref: "#/components/schemas/SiteLogsConfig"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/SiteLogsConfig"
      description: Site logs configuration
      required: true
    HostNameBinding:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HostNameBinding"
        text/json:
          schema:
            $ref: "#/components/schemas/HostNameBinding"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/HostNameBinding"
      description: Host name binding information
      required: true
    RelayServiceConnectionEntity:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RelayServiceConnectionEntity"
        text/json:
          schema:
            $ref: "#/components/schemas/RelayServiceConnectionEntity"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/RelayServiceConnectionEntity"
      description: The details of the Hybrid Connection
      required: true
    CsmSiteRecoveryEntity:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CsmSiteRecoveryEntity"
        text/json:
          schema:
            $ref: "#/components/schemas/CsmSiteRecoveryEntity"
        application/xml:
          schema:
            $ref: "#/components/schemas/CsmSiteRecoveryEntity"
        text/xml:
          schema:
            $ref: "#/components/schemas/CsmSiteRecoveryEntity"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/CsmSiteRecoveryEntity"
      description: Snapshot data used for web app recovery. Snapshot information can be
        obtained by calling GetDeletedSites or GetSiteSnapshots API.
      required: true
    SiteSourceControl:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SiteSourceControl"
        text/json:
          schema:
            $ref: "#/components/schemas/SiteSourceControl"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/SiteSourceControl"
      description: Request body that contains the source control parameters
      required: true
    VnetInfo:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/VnetInfo"
        text/json:
          schema:
            $ref: "#/components/schemas/VnetInfo"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/VnetInfo"
      description: The properties of this Virtual Network Connection
      required: true
    VnetGateway:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/VnetGateway"
        text/json:
          schema:
            $ref: "#/components/schemas/VnetGateway"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/VnetGateway"
      description: The properties to update this gateway with.
      required: true
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    Address:
      description: Address information for domain registration
      properties:
        address1:
          description: Address 1
          type: string
        address2:
          description: Address 2
          type: string
        city:
          description: City
          type: string
        country:
          description: Country
          type: string
        postalCode:
          description: Postal code
          type: string
        state:
          description: State
          type: string
      type: object
    AddressResponse:
      description: Describes main public ip address and any extra vips
      properties:
        internalIpAddress:
          description: VNET internal ip address of the hostingEnvironment (App Service
            Environment) if it is in internal load-balancing mode
          type: string
        outboundIpAddresses:
          description: IP addresses appearing on outbound connections
          items:
            type: string
          type: array
        serviceIpAddress:
          description: Main public vip
          type: string
        vipMappings:
          description: Additional vips
          items:
            $ref: "#/components/schemas/VirtualIPMapping"
          type: array
      type: object
    ApiDefinitionInfo:
      description: Information about the formal API definition for the web app.
      properties:
        url:
          description: The URL of the API definition.
          type: string
      type: object
    ApplicationLogsConfig:
      description: Application logs configuration
      properties:
        azureBlobStorage:
          $ref: "#/components/schemas/AzureBlobStorageApplicationLogsConfig"
        azureTableStorage:
          $ref: "#/components/schemas/AzureTableStorageApplicationLogsConfig"
        fileSystem:
          $ref: "#/components/schemas/FileSystemApplicationLogsConfig"
      type: object
    ArmPlan:
      description: The plan object in an ARM, represents a marketplace plan
      properties:
        name:
          description: The name
          type: string
        product:
          description: The product
          type: string
        promotionCode:
          description: The promotion code
          type: string
        publisher:
          description: The publisher
          type: string
        version:
          description: Version of product
          type: string
      type: object
    AutoHealActions:
      description: "AutoHealActions - Describes the actions which can be\r

        \            taken by the auto-heal module when a rule is
        triggered."
      properties:
        actionType:
          description: ActionType - predefined action to be taken
          enum:
            - Recycle
            - LogEvent
            - CustomAction
          type: string
          x-ms-enum:
            modelAsString: false
            name: AutoHealActionType
        customAction:
          $ref: "#/components/schemas/AutoHealCustomAction"
        minProcessExecutionTime:
          description: "MinProcessExecutionTime - minimum time the process must execute\r

            \            before taking the action"
          type: string
      required:
        - actionType
      type: object
    AutoHealCustomAction:
      description: "AutoHealCustomAction - Describes the custom action to be executed\r

        \            when an auto heal rule is triggered."
      properties:
        exe:
          description: Executable to be run
          type: string
        parameters:
          description: Parameters for the executable
          type: string
      type: object
    AutoHealRules:
      description: AutoHealRules - describes the rules which can be defined for auto-heal
      properties:
        actions:
          $ref: "#/components/schemas/AutoHealActions"
        triggers:
          $ref: "#/components/schemas/AutoHealTriggers"
      type: object
    AutoHealTriggers:
      description: AutoHealTriggers - describes the triggers for auto-heal.
      properties:
        privateBytesInKB:
          description: PrivateBytesInKB - Defines a rule based on private bytes
          format: int32
          type: integer
        requests:
          $ref: "#/components/schemas/RequestsBasedTrigger"
        slowRequests:
          $ref: "#/components/schemas/SlowRequestsBasedTrigger"
        statusCodes:
          description: StatusCodes - Defines a rule based on status codes
          items:
            $ref: "#/components/schemas/StatusCodesBasedTrigger"
          type: array
      type: object
    AzureBlobStorageApplicationLogsConfig:
      description: Application logs azure blob storage configuration
      properties:
        level:
          description: Log level
          enum:
            - Off
            - Verbose
            - Information
            - Warning
            - Error
          type: string
          x-ms-enum:
            modelAsString: false
            name: LogLevel
        retentionInDays:
          description: "Retention in days.\r

            \            Remove blobs older than X days.\r

            \            0 or lower means no retention."
          format: int32
          type: integer
        sasUrl:
          description: SAS url to a azure blob container with read/write/list/delete
            permissions
          type: string
      type: object
    AzureBlobStorageHttpLogsConfig:
      description: Http logs to azure blob storage configuration
      properties:
        enabled:
          description: Enabled
          type: boolean
        retentionInDays:
          description: "Retention in days.\r

            \            Remove blobs older than X days.\r

            \            0 or lower means no retention."
          format: int32
          type: integer
        sasUrl:
          description: SAS url to a azure blob container with read/write/list/delete
            permissions
          type: string
      type: object
    AzureTableStorageApplicationLogsConfig:
      description: Application logs to azure table storage configuration
      properties:
        level:
          description: Log level
          enum:
            - Off
            - Verbose
            - Information
            - Warning
            - Error
          type: string
          x-ms-enum:
            modelAsString: false
            name: LogLevel
        sasUrl:
          description: SAS url to an azure table with add/query/delete permissions
          type: string
      type: object
    BackupItem:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Backup description
      properties:
        properties:
          properties:
            blobName:
              description: Name of the blob which contains data for this backup
              type: string
            correlationId:
              description: Unique correlation identifier. Please use this along with the
                timestamp while communicating with Azure support.
              type: string
            created:
              description: Timestamp of the backup creation
              format: date-time
              type: string
            databases:
              description: List of databases included in the backup
              items:
                $ref: "#/components/schemas/DatabaseBackupSetting"
              type: array
            finishedTimeStamp:
              description: Timestamp when this backup finished.
              format: date-time
              type: string
            id:
              description: Id of the backup.
              format: int32
              type: integer
            lastRestoreTimeStamp:
              description: Timestamp of a last restore operation which used this backup.
              format: date-time
              type: string
            log:
              description: Details regarding this backup. Might contain an error message.
              type: string
            name:
              description: Name of this backup
              type: string
            scheduled:
              description: True if this backup has been created due to a schedule being
                triggered.
              type: boolean
            sizeInBytes:
              description: Size of the backup in bytes
              format: int64
              type: integer
            status:
              description: Backup status
              enum:
                - InProgress
                - Failed
                - Succeeded
                - TimedOut
                - Created
                - Skipped
                - PartiallySucceeded
                - DeleteInProgress
                - DeleteFailed
                - Deleted
              type: string
              x-ms-enum:
                modelAsString: false
                name: BackupItemStatus
            storageAccountUrl:
              description: SAS URL for the storage account container which contains this
                backup
              type: string
            websiteSizeInBytes:
              description: Size of the original web app which has been backed up
              format: int64
              type: integer
          required:
            - status
          x-ms-client-flatten: true
      type: object
    BackupItemCollection:
      description: Collection of Backup Items
      properties:
        nextLink:
          description: Link to next page of resources
          type: string
        value:
          description: Collection of resources
          items:
            $ref: "#/components/schemas/BackupItem"
          type: array
      type: object
    BackupRequest:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Description of a backup which will be performed
      properties:
        properties:
          properties:
            backupSchedule:
              $ref: "#/components/schemas/BackupSchedule"
            databases:
              description: Databases included in the backup
              items:
                $ref: "#/components/schemas/DatabaseBackupSetting"
              type: array
            enabled:
              description: True if the backup schedule is enabled (must be included in that
                case), false if the backup schedule should be disabled
              type: boolean
            name:
              description: Name of the backup
              type: string
            storageAccountUrl:
              description: SAS URL to the container
              type: string
            type:
              description: Type of the backup
              enum:
                - Default
                - Clone
                - Relocation
              type: string
              x-ms-enum:
                modelAsString: false
                name: BackupRestoreOperationType
          required:
            - type
          x-ms-client-flatten: true
      type: object
    BackupSchedule:
      description: Description of a backup schedule. Describes how often should be the
        backup performed and what should be the retention policy.
      properties:
        frequencyInterval:
          description: How often should be the backup executed (e.g. for weekly backup,
            this should be set to 7 and FrequencyUnit should be set to Day)
          format: int32
          type: integer
        frequencyUnit:
          description: How often should be the backup executed (e.g. for weekly backup,
            this should be set to Day and FrequencyInterval should be set to 7)
          enum:
            - Day
            - Hour
          type: string
          x-ms-enum:
            modelAsString: false
            name: FrequencyUnit
        keepAtLeastOneBackup:
          description: True if the retention policy should always keep at least one backup
            in the storage account, regardless how old it is; false otherwise.
          type: boolean
        lastExecutionTime:
          description: The last time when this schedule was triggered
          format: date-time
          type: string
        retentionPeriodInDays:
          description: After how many days backups should be deleted
          format: int32
          type: integer
        startTime:
          description: When the schedule should start working
          format: date-time
          type: string
      required:
        - frequencyUnit
      type: object
    Certificate:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: App certificate
      properties:
        properties:
          properties:
            cerBlob:
              description: Raw bytes of .cer file
              type: string
            expirationDate:
              description: Certificate expiration date
              format: date-time
              type: string
            friendlyName:
              description: Friendly name of the certificate
              type: string
            hostNames:
              description: Host names the certificate applies to
              items:
                type: string
              type: array
            hostingEnvironmentProfile:
              $ref: "#/components/schemas/HostingEnvironmentProfile"
            issueDate:
              description: Certificate issue Date
              format: date-time
              type: string
            issuer:
              description: Certificate issuer
              type: string
            password:
              description: Certificate password
              type: string
            pfxBlob:
              description: Pfx blob
              type: string
            publicKeyHash:
              description: Public key hash
              type: string
            selfLink:
              description: Self link
              type: string
            siteName:
              description: App name
              type: string
            subjectName:
              description: Subject name of the certificate
              type: string
            thumbprint:
              description: Certificate thumbprint
              type: string
            valid:
              description: Is the certificate valid?
              type: boolean
          x-ms-client-flatten: true
      type: object
    CertificateCollection:
      description: Collection of certificates
      properties:
        nextLink:
          description: Link to next page of resources
          type: string
        value:
          description: Collection of resources
          items:
            $ref: "#/components/schemas/Certificate"
          type: array
      type: object
    CertificateDetails:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Certificate Details
      properties:
        properties:
          properties:
            issuer:
              description: Issuer
              type: string
            notAfter:
              description: Valid to
              format: date-time
              type: string
            notBefore:
              description: Valid from
              format: date-time
              type: string
            rawData:
              description: Raw certificate data
              type: string
            serialNumber:
              description: Serial Number
              type: string
            signatureAlgorithm:
              description: Signature Algorithm
              type: string
            subject:
              description: Subject
              type: string
            thumbprint:
              description: Thumbprint
              type: string
            version:
              description: Version
              format: int32
              type: integer
          x-ms-client-flatten: true
      type: object
    CertificateEmail:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Certificate Email
      properties:
        properties:
          properties:
            emailId:
              description: Email id
              type: string
            timeStamp:
              description: Time stamp
              format: date-time
              type: string
          x-ms-client-flatten: true
      type: object
    CertificateOrder:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Certificate purchase order
      properties:
        properties:
          properties:
            autoRenew:
              description: Auto renew
              type: boolean
            certificates:
              additionalProperties:
                $ref: "#/components/schemas/CertificateOrderCertificate"
              description: State of the Key Vault secret
              type: object
            csr:
              description: Last CSR that was created for this order
              type: string
            distinguishedName:
              description: Certificate distinguished name
              type: string
            domainVerificationToken:
              description: Domain Verification Token
              type: string
            expirationTime:
              description: Certificate expiration time
              format: date-time
              type: string
            intermediate:
              $ref: "#/components/schemas/CertificateDetails"
            keySize:
              description: Certificate Key Size
              format: int32
              type: integer
            lastCertificateIssuanceTime:
              description: Certificate last issuance time
              format: date-time
              type: string
            productType:
              description: Certificate product type
              enum:
                - StandardDomainValidatedSsl
                - StandardDomainValidatedWildCardSsl
              type: string
              x-ms-enum:
                modelAsString: false
                name: CertificateProductType
            provisioningState:
              description: Status of certificate order
              enum:
                - Succeeded
                - Failed
                - Canceled
                - InProgress
                - Deleting
              type: string
              x-ms-enum:
                modelAsString: false
                name: ProvisioningState
            root:
              $ref: "#/components/schemas/CertificateDetails"
            serialNumber:
              description: Current serial number of the certificate
              type: string
            signedCertificate:
              $ref: "#/components/schemas/CertificateDetails"
            status:
              description: Current order status
              enum:
                - Pendingissuance
                - Issued
                - Revoked
                - Canceled
                - Denied
                - Pendingrevocation
                - PendingRekey
                - Unused
                - Expired
                - NotSubmitted
              type: string
              x-ms-enum:
                modelAsString: false
                name: CertificateOrderStatus
            validityInYears:
              description: Duration in years (must be between 1 and 3)
              format: int32
              type: integer
          x-ms-client-flatten: true
      type: object
    CertificateOrderAction:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Represents a certificate action
      properties:
        properties:
          properties:
            createdAt:
              description: Time at which the certificate action was performed
              format: date-time
              type: string
            type:
              description: Type
              enum:
                - CertificateIssued
                - CertificateOrderCanceled
                - CertificateOrderCreated
                - CertificateRevoked
                - DomainValidationComplete
                - FraudDetected
                - OrgNameChange
                - OrgValidationComplete
                - SanDrop
              type: string
              x-ms-enum:
                modelAsString: false
                name: CertificateOrderActionType
          required:
            - type
          x-ms-client-flatten: true
      type: object
    CertificateOrderCertificate:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Class representing the Key Vault container for certificate purchased
        through Azure
      properties:
        properties:
          properties:
            keyVaultId:
              description: Key Vault Csm resource Id
              type: string
            keyVaultSecretName:
              description: Key Vault secret name
              type: string
            provisioningState:
              description: Status of the Key Vault secret
              enum:
                - Initialized
                - WaitingOnCertificateOrder
                - Succeeded
                - CertificateOrderFailed
                - OperationNotPermittedOnKeyVault
                - AzureServiceUnauthorizedToAccessKeyVault
                - KeyVaultDoesNotExist
                - KeyVaultSecretDoesNotExist
                - UnknownError
                - Unknown
              type: string
              x-ms-enum:
                modelAsString: false
                name: KeyVaultSecretStatus
          x-ms-client-flatten: true
      type: object
    CertificateOrderCertificateCollection:
      description: Collection of certificate order certificates
      properties:
        nextLink:
          description: Link to next page of resources
          type: string
        value:
          description: Collection of resources
          items:
            $ref: "#/components/schemas/CertificateOrderCertificate"
          type: array
      type: object
    CertificateOrderCollection:
      description: Collection of certificate orders
      properties:
        nextLink:
          description: Link to next page of resources
          type: string
        value:
          description: Collection of resources
          items:
            $ref: "#/components/schemas/CertificateOrder"
          type: array
      type: object
    ClassicMobileService:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: A mobile service
      properties:
        properties:
          properties:
            name:
              description: Name of the mobile service
              type: string
          x-ms-client-flatten: true
      type: object
    ClassicMobileServiceCollection:
      description: Collection of Classic Mobile Services
      properties:
        nextLink:
          description: Link to next page of resources
          type: string
        value:
          description: Collection of resources
          items:
            $ref: "#/components/schemas/ClassicMobileService"
          type: array
      type: object
    CloningInfo:
      description: Represents information needed for cloning operation
      properties:
        appSettingsOverrides:
          additionalProperties:
            type: string
          description: "Application settings overrides for cloned web app. If specified
            these settings will override the settings cloned \r

            \            from source web app. If not specified,
            application settings from source web app are retained."
          type: object
        cloneCustomHostNames:
          description: If true, clone custom hostnames from source web app
          type: boolean
        cloneSourceControl:
          description: Clone source control from source web app
          type: boolean
        configureLoadBalancing:
          description: If specified configure load balancing for source and clone site
          type: boolean
        correlationId:
          description: "Correlation Id of cloning operation. This id ties multiple cloning
            operations\r

            \            together to use the same snapshot"
          type: string
        hostingEnvironment:
          description: Hosting environment
          type: string
        overwrite:
          description: Overwrite destination web app
          type: boolean
        sourceWebAppId:
          description: "ARM resource id of the source web app. Web app resource id is of
            the form \r

            \            /subscriptions/{subId}/resourceGroups/{res\
            ourceGroupName}/providers/Microsoft.Web/sites/{siteName} for
            production slots and \r

            \            /subscriptions/{subId}/resourceGroups/{res\
            ourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slo\
            tName} for other slots"
          type: string
        trafficManagerProfileId:
          description: "ARM resource id of the traffic manager profile to use if it exists.
            Traffic manager resource id is of the form \r

            \            /subscriptions/{subId}/resourceGroups/{res\
            ourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/\
            {profileName}"
          type: string
        trafficManagerProfileName:
          description: Name of traffic manager profile to create. This is only needed if
            traffic manager profile does not already exist
          type: string
      type: object
    ConnStringInfo:
      description: Represents database connection string information
      properties:
        connectionString:
          description: Connection string value
          type: string
        name:
          description: Name of connection string
          type: string
        type:
          description: Type of database
          enum:
            - MySql
            - SQLServer
            - SQLAzure
            - Custom
          type: string
          x-ms-enum:
            modelAsString: false
            name: DatabaseServerType
      required:
        - type
      type: object
    ConnStringValueTypePair:
      description: Database connection string value to type pair
      properties:
        type:
          description: Type of database
          enum:
            - MySql
            - SQLServer
            - SQLAzure
            - Custom
          type: string
          x-ms-enum:
            modelAsString: false
            name: DatabaseServerType
        value:
          description: Value of pair
          type: string
      required:
        - type
      type: object
    ConnectionStringDictionary:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: String dictionary resource
      properties:
        properties:
          additionalProperties:
            $ref: "#/components/schemas/ConnStringValueTypePair"
          description: Connection strings
          type: object
          x-ms-client-flatten: true
      type: object
    Contact:
      description: Contact information for domain registration. If 'Domain Privacy' option
        is not selected then the contact information will be made publicly
        available through the Whois directories as per ICANN requirements.
      properties:
        addressMailing:
          $ref: "#/components/schemas/Address"
        email:
          description: Email address
          type: string
        fax:
          description: Fax number
          type: string
        jobTitle:
          description: Job title
          type: string
        nameFirst:
          description: First name
          type: string
        nameLast:
          description: Last name
          type: string
        nameMiddle:
          description: Middle name
          type: string
        organization:
          description: Organization
          type: string
        phone:
          description: Phone number
          type: string
      type: object
    CorsSettings:
      description: Cross-Origin Resource Sharing (CORS) settings for the web app.
      properties:
        allowedOrigins:
          description: "Gets or sets the list of origins that should be allowed to make
            cross-origin\r

            \            calls (for example:
            http://example.com:12345). Use \"*\" to allow all."
          items:
            type: string
          type: array
      type: object
    CsmMoveResourceEnvelope:
      description: Class containing a list of the resources that need to be moved and the
        resource group they should be moved to
      properties:
        resources:
          items:
            type: string
          type: array
        targetResourceGroup:
          type: string
      type: object
    CsmPublishingProfileOptions:
      description: Publishing options for requested profile
      properties:
        format:
          description: "Name of the format. Valid values are: \r

            \            FileZilla3\r

            \            WebDeploy -- default\r

            \            Ftp"
          type: string
      type: object
    CsmSiteRecoveryEntity:
      description: Class containing details about site recovery operation.
      properties:
        recoverConfig:
          description: If true, then the website's configuration will be reverted to its
            state at SnapshotTime
          type: boolean
        siteName:
          description: "[Optional] Destination web app name into which web app should be
            recovered. This is case when new web app should be created instead."
          type: string
        slotName:
          description: "[Optional] Destination web app slot name into which web app should
            be recovered"
          type: string
        snapshotTime:
          description: Point in time in which the site recover should be attempted.
          format: date-time
          type: string
      type: object
    CsmSlotEntity:
      description: Class containing deployment slot parameters
      properties:
        preserveVnet:
          description: Get or set the flag indicating it should preserve VNet to the slot
            during swap
          type: boolean
        targetSlot:
          description: Set the destination deployment slot during swap operation
          type: string
      type: object
    CsmUsageQuota:
      description: Usage of the quota resource
      properties:
        currentValue:
          description: The current value of the resource counter
          format: int64
          type: integer
        limit:
          description: The resource limit
          format: int64
          type: integer
        name:
          $ref: "#/components/schemas/LocalizableString"
        nextResetTime:
          description: Next reset time for the resource counter
          format: date-time
          type: string
        unit:
          description: Units of measurement for the quota resource
          type: string
      type: object
    CsmUsageQuotaCollection:
      description: Collection of csm usage quotas
      properties:
        nextLink:
          description: Link to next page of resources
          type: string
        value:
          description: Collection of resources
          items:
            $ref: "#/components/schemas/CsmUsageQuota"
          type: array
      type: object
    Csr:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Certificate signing request object
      properties:
        properties:
          properties:
            csrString:
              description: Actual CSR string created
              type: string
            distinguishedName:
              description: Distinguished name of certificate to be created
              type: string
            hostingEnvironment:
              description: Hosting environment
              type: string
            name:
              description: Name used to locate CSR object
              type: string
            password:
              description: PFX password
              type: string
            pfxBlob:
              description: PFX certificate of created certificate
              type: string
            publicKeyHash:
              description: Hash of the certificates public key
              type: string
          x-ms-client-flatten: true
      type: object
    DatabaseBackupSetting:
      description: "Note: properties are serialized in JSON format and stored in DB. \r

        \            if new properties are added they might not be in
        the previous data rows \r

        \            so please handle nulls"
      properties:
        connectionString:
          description: Contains a connection string to a database which is being backed
            up/restored. If the restore should happen to a new database, the
            database name inside is the new one.
          type: string
        connectionStringName:
          description: "Contains a connection string name that is linked to the
            SiteConfig.ConnectionStrings.\r

            \            This is used during restore with overwrite
            connection strings options."
          type: string
        databaseType:
          description: SqlAzure / MySql
          type: string
        name:
          type: string
      type: object
    DeletedSite:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Reports deleted site including the timestamp of operation
      properties:
        properties:
          properties:
            availabilityState:
              description: "Management information availability state for the web app.
                Possible values are Normal or Limited. \r

                \            Normal means that the site is
                running correctly and that management information for the site
                is available. \r

                \            Limited means that only partial
                management information for the site is available and that
                detailed site information is unavailable."
              enum:
                - Normal
                - Limited
                - DisasterRecoveryMode
              readOnly: true
              type: string
              x-ms-enum:
                modelAsString: false
                name: SiteAvailabilityState
            clientAffinityEnabled:
              description: Specifies if the client affinity is enabled when load balancing
                http request for multiple instances of the web app
              type: boolean
            clientCertEnabled:
              description: Specifies if the client certificate is enabled for the web app
              type: boolean
            cloningInfo:
              $ref: "#/components/schemas/CloningInfo"
            containerSize:
              description: Size of a function container
              format: int32
              type: integer
            defaultHostName:
              description: Default hostname of the web app
              readOnly: true
              type: string
            deletedTimestamp:
              description: Time when the site was deleted
              format: date-time
              type: string
            enabled:
              description: True if the site is enabled; otherwise, false. Setting
                this  value to false disables the site (takes the site off
                line).
              type: boolean
            enabledHostNames:
              description: "Hostnames for the web app that are enabled. Hostnames need to
                be assigned and enabled. If some hostnames are assigned but not
                enabled\r

                \            the app is not served on those
                hostnames"
              items:
                type: string
              readOnly: true
              type: array
            gatewaySiteName:
              description: Name of gateway app associated with web app
              type: string
            hostNameSslStates:
              description: Hostname SSL states are  used to manage the SSL bindings for
                site's hostnames.
              items:
                $ref: "#/components/schemas/HostNameSslState"
              type: array
            hostNames:
              description: Hostnames associated with web app
              items:
                type: string
              readOnly: true
              type: array
            hostNamesDisabled:
              description: "Specifies if the public hostnames are disabled the web app.\r

                \            If set to true the app is only
                accessible via API Management process"
              type: boolean
            hostingEnvironmentProfile:
              $ref: "#/components/schemas/HostingEnvironmentProfile"
            isDefaultContainer:
              description: Site is a default container
              readOnly: true
              type: boolean
            lastModifiedTimeUtc:
              description: Last time web app was modified in UTC
              format: date-time
              readOnly: true
              type: string
            maxNumberOfWorkers:
              description: "Maximum number of workers\r

                \            This only applies to function
                container"
              format: int32
              type: integer
            microService:
              description: ""
              type: string
            name:
              description: Name of web app
              type: string
            outboundIpAddresses:
              description: List of comma separated IP addresses that this web app uses for
                outbound connections. Those can be used when configuring
                firewall rules for databases accessed by this web app.
              readOnly: true
              type: string
            premiumAppDeployed:
              description: If set indicates whether web app is deployed as a premium app
              readOnly: true
              type: boolean
            repositorySiteName:
              description: Name of repository site
              readOnly: true
              type: string
            resourceGroup:
              description: Resource group web app belongs to
              readOnly: true
              type: string
            scmSiteAlsoStopped:
              description: If set indicates whether to stop SCM (KUDU) site when the web
                app is stopped. Default is false.
              type: boolean
            serverFarmId:
              type: string
            siteConfig:
              $ref: "#/components/schemas/SiteConfig"
            state:
              description: State of the web app
              readOnly: true
              type: string
            targetSwapSlot:
              description: Read-only property that specifies which slot this app will swap
                into
              readOnly: true
              type: string
            trafficManagerHostNames:
              description: Read-only list of Azure Traffic manager hostnames associated
                with web app
              items:
                type: string
              readOnly: true
              type: array
            usageState:
              description: State indicating whether web app has exceeded its quota usage
              enum:
                - Normal
                - Exceeded
              readOnly: true
              type: string
              x-ms-enum:
                modelAsString: false
                name: UsageState
          required:
            - usageState
            - availabilityState
          x-ms-client-flatten: true
      type: object
    DeletedSiteCollection:
      description: Collection of deleted sites
      properties:
        nextLink:
          description: Link to next page of resources
          type: string
        value:
          description: Collection of resources
          items:
            $ref: "#/components/schemas/DeletedSite"
          type: array
      type: object
    Deployment:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Represents user credentials used for publishing activity
      properties:
        properties:
          properties:
            active:
              description: Active
              type: boolean
            author:
              description: Author
              type: string
            author_email:
              description: AuthorEmail
              type: string
            deployer:
              description: Deployer
              type: string
            details:
              description: Detail
              type: string
            end_time:
              description: EndTime
              format: date-time
              type: string
            id:
              description: Id
              type: string
            message:
              description: Message
              type: string
            start_time:
              description: StartTime
              format: date-time
              type: string
            status:
              description: Status
              format: int32
              type: integer
          x-ms-client-flatten: true
      type: object
    DeploymentCollection:
      description: Collection of app deployments
      properties:
        nextLink:
          description: Link to next page of resources
          type: string
        value:
          description: Collection of resources
          items:
            $ref: "#/components/schemas/Deployment"
          type: array
      type: object
    Domain:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Represents a domain
      properties:
        properties:
          properties:
            autoRenew:
              description: If true then domain will renewed automatically
              type: boolean
            consent:
              $ref: "#/components/schemas/DomainPurchaseConsent"
            contactAdmin:
              $ref: "#/components/schemas/Contact"
            contactBilling:
              $ref: "#/components/schemas/Contact"
            contactRegistrant:
              $ref: "#/components/schemas/Contact"
            contactTech:
              $ref: "#/components/schemas/Contact"
            createdTime:
              description: Domain creation timestamp
              format: date-time
              type: string
            domainNotRenewableReasons:
              description: Reasons why domain is not renewable
              items:
                enum:
                  - RegistrationStatusNotSupportedForRenewal
                  - ExpirationNotInRenewalTimeRange
                  - SubscriptionNotActive
                type: string
              type: array
            expirationTime:
              description: Domain expiration timestamp
              format: date-time
              type: string
            lastRenewedTime:
              description: Timestamp when the domain was renewed last time
              format: date-time
              type: string
            managedHostNames:
              description: All hostnames derived from the domain and assigned to Azure
                resources
              items:
                $ref: "#/components/schemas/HostName"
              type: array
            nameServers:
              description: Name servers
              items:
                type: string
              type: array
            privacy:
              description: If true then domain privacy is enabled for this domain
              type: boolean
            provisioningState:
              description: Domain provisioning state
              enum:
                - Succeeded
                - Failed
                - Canceled
                - InProgress
                - Deleting
              type: string
              x-ms-enum:
                modelAsString: false
                name: ProvisioningState
            readyForDnsRecordManagement:
              description: If true then Azure can assign this domain to Web Apps. This
                value will be true if domain registration status is active and
                it is hosted on name servers Azure has programmatic access to
              type: boolean
            registrationStatus:
              description: Domain registration status
              enum:
                - Active
                - Awaiting
                - Cancelled
                - Confiscated
                - Disabled
                - Excluded
                - Expired
                - Failed
                - Held
                - Locked
                - Parked
                - Pending
                - Reserved
                - Reverted
                - Suspended
                - Transferred
                - Unknown
                - Unlocked
                - Unparked
                - Updated
                - JsonConverterFailed
              type: string
              x-ms-enum:
                modelAsString: false
                name: DomainStatus
          x-ms-client-flatten: true
      type: object
    DomainAvailablilityCheckResult:
      description: Domain availablility check result
      properties:
        available:
          description: If true then domain can be purchased using CreateDomain Api
          type: boolean
        domainType:
          description: Domain type
          enum:
            - Regular
            - SoftDeleted
          type: string
          x-ms-enum:
            modelAsString: false
            name: DomainType
        name:
          description: Name of the domain
          type: string
      type: object
    DomainCollection:
      description: Collection of domains
      properties:
        nextLink:
          description: Link to next page of resources
          type: string
        value:
          description: Collection of resources
          items:
            $ref: "#/components/schemas/Domain"
          type: array
      type: object
    DomainControlCenterSsoRequest:
      description: Single sign on request information for domain management
      properties:
        postParameterKey:
          description: Post parameter key
          type: string
        postParameterValue:
          description: Post parameter value. Client should use
            'application/x-www-form-urlencoded' encoding for this value.
          type: string
        url:
          description: Url where the single sign on request is to be made
          type: string
      type: object
    DomainPurchaseConsent:
      description: Domain purchase consent object representing acceptance of applicable
        legal agreements
      properties:
        agreedAt:
          description: Timestamp when the agreements were accepted
          format: date-time
          type: string
        agreedBy:
          description: Client IP address
          type: string
        agreementKeys:
          description: List of applicable legal agreement keys. This list can be retrieved
            using ListLegalAgreements Api under TopLevelDomain resource
          items:
            type: string
          type: array
      type: object
    DomainRecommendationSearchParameters:
      description: Domain recommendation search parameters
      properties:
        keywords:
          description: Keywords to be used for generating domain recommendations
          type: string
        maxDomainRecommendations:
          description: Maximum number of recommendations
          format: int32
          type: integer
      type: object
    DomainRegistrationInput:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Domain registration input for validation Api
      properties:
        properties:
          properties:
            autoRenew:
              description: If true then domain will renewed automatically
              type: boolean
            consent:
              $ref: "#/components/schemas/DomainPurchaseConsent"
            contactAdmin:
              $ref: "#/components/schemas/Contact"
            contactBilling:
              $ref: "#/components/schemas/Contact"
            contactRegistrant:
              $ref: "#/components/schemas/Contact"
            contactTech:
              $ref: "#/components/schemas/Contact"
            createdTime:
              description: Domain creation timestamp
              format: date-time
              type: string
            domainNotRenewableReasons:
              description: Reasons why domain is not renewable
              items:
                enum:
                  - RegistrationStatusNotSupportedForRenewal
                  - ExpirationNotInRenewalTimeRange
                  - SubscriptionNotActive
                type: string
              type: array
            expirationTime:
              description: Domain expiration timestamp
              format: date-time
              type: string
            lastRenewedTime:
              description: Timestamp when the domain was renewed last time
              format: date-time
              type: string
            managedHostNames:
              description: All hostnames derived from the domain and assigned to Azure
                resources
              items:
                $ref: "#/components/schemas/HostName"
              type: array
            name:
              description: Name of the domain
              type: string
            nameServers:
              description: Name servers
              items:
                type: string
              type: array
            privacy:
              description: If true then domain privacy is enabled for this domain
              type: boolean
            provisioningState:
              description: Domain provisioning state
              enum:
                - Succeeded
                - Failed
                - Canceled
                - InProgress
                - Deleting
              type: string
              x-ms-enum:
                modelAsString: false
                name: ProvisioningState
            readyForDnsRecordManagement:
              description: If true then Azure can assign this domain to Web Apps. This
                value will be true if domain registration status is active and
                it is hosted on name servers Azure has programmatic access to
              type: boolean
            registrationStatus:
              description: Domain registration status
              enum:
                - Active
                - Awaiting
                - Cancelled
                - Confiscated
                - Disabled
                - Excluded
                - Expired
                - Failed
                - Held
                - Locked
                - Parked
                - Pending
                - Reserved
                - Reverted
                - Suspended
                - Transferred
                - Unknown
                - Unlocked
                - Unparked
                - Updated
                - JsonConverterFailed
              type: string
              x-ms-enum:
                modelAsString: false
                name: DomainStatus
          x-ms-client-flatten: true
      type: object
    EnabledConfig:
      description: Enabled configuration
      properties:
        enabled:
          description: Enabled
          type: boolean
      type: object
    Experiments:
      description: Class containing Routing in production experiments
      properties:
        rampUpRules:
          description: List of {Microsoft.Web.Hosting.Administration.RampUpRule} objects.
          items:
            $ref: "#/components/schemas/RampUpRule"
          type: array
      type: object
    FileSystemApplicationLogsConfig:
      description: Application logs to file system configuration
      properties:
        level:
          description: Log level
          enum:
            - Off
            - Verbose
            - Information
            - Warning
            - Error
          type: string
          x-ms-enum:
            modelAsString: false
            name: LogLevel
      type: object
    FileSystemHttpLogsConfig:
      description: Http logs to file system configuration
      properties:
        enabled:
          description: Enabled
          type: boolean
        retentionInDays:
          description: "Retention in days.\r

            \            Remove files older than X days.\r

            \            0 or lower means no retention."
          format: int32
          type: integer
        retentionInMb:
          description: "Maximum size in megabytes that http log files can use.\r

            \            When reached old log files will be removed
            to make space for new ones.\r

            \            Value can range between 25 and 100."
          format: int32
          type: integer
      type: object
    GeoRegion:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Geographical region
      properties:
        properties:
          properties:
            description:
              description: Region description
              type: string
            displayName:
              description: Display name for region
              type: string
            name:
              description: Region name
              type: string
          x-ms-client-flatten: true
      type: object
    GeoRegionCollection:
      description: Collection of geo regions
      properties:
        nextLink:
          description: Link to next page of resources
          type: string
        value:
          description: Collection of resources
          items:
            $ref: "#/components/schemas/GeoRegion"
          type: array
      type: object
    HandlerMapping:
      description: "The IIS handler mappings used to define which handler processes HTTP
        requests with certain extension. \r

        \            For example it is used to configure php-cgi.exe
        process to handle all HTTP requests with *.php extension."
      properties:
        arguments:
          description: Command-line arguments to be passed to the script processor.
          type: string
        extension:
          description: Requests with this extension will be handled using the specified
            FastCGI application.
          type: string
        scriptProcessor:
          description: The absolute path to the FastCGI application.
          type: string
      type: object
    HostName:
      description: Details of a hostname derived from a domain
      properties:
        azureResourceName:
          description: Name of the Azure resource the hostname is assigned to. If it is
            assigned to a traffic manager then it will be the traffic manager
            name otherwise it will be the website name
          type: string
        azureResourceType:
          description: Type of the Azure resource the hostname is assigned to
          enum:
            - Website
            - TrafficManager
          type: string
          x-ms-enum:
            modelAsString: false
            name: AzureResourceType
        customHostNameDnsRecordType:
          description: Type of the Dns record
          enum:
            - CName
            - A
          type: string
          x-ms-enum:
            modelAsString: false
            name: CustomHostNameDnsRecordType
        hostNameType:
          description: Type of the hostname
          enum:
            - Verified
            - Managed
          type: string
          x-ms-enum:
            modelAsString: false
            name: HostNameType
        name:
          description: Name of the hostname
          type: string
        siteNames:
          description: List of sites the hostname is assigned to. This list will have more
            than one site only if the hostname is pointing to a Traffic Manager
          items:
            type: string
          type: array
      type: object
    HostNameBinding:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: A host name binding object
      properties:
        properties:
          properties:
            azureResourceName:
              description: Azure resource name
              type: string
            azureResourceType:
              description: Azure resource type
              enum:
                - Website
                - TrafficManager
              type: string
              x-ms-enum:
                modelAsString: false
                name: AzureResourceType
            customHostNameDnsRecordType:
              description: Custom DNS record type
              enum:
                - CName
                - A
              type: string
              x-ms-enum:
                modelAsString: false
                name: CustomHostNameDnsRecordType
            domainId:
              description: Fully qualified ARM domain resource URI
              type: string
            hostNameType:
              description: Host name type
              enum:
                - Verified
                - Managed
              type: string
              x-ms-enum:
                modelAsString: false
                name: HostNameType
            name:
              description: Hostname
              type: string
            siteName:
              description: Web app name
              type: string
          x-ms-client-flatten: true
      type: object
    HostNameBindingCollection:
      description: Collection of host name bindings
      properties:
        nextLink:
          description: Link to next page of resources
          type: string
        value:
          description: Collection of resources
          items:
            $ref: "#/components/schemas/HostNameBinding"
          type: array
      type: object
    HostNameSslState:
      description: Object that represents a SSL-enabled host name.
      properties:
        name:
          description: Host name
          type: string
        sslState:
          description: SSL type
          enum:
            - Disabled
            - SniEnabled
            - IpBasedEnabled
          type: string
          x-ms-enum:
            modelAsString: false
            name: SslState
        thumbprint:
          description: SSL cert thumbprint
          type: string
        toUpdate:
          description: Set this flag to update existing host name
          type: boolean
        virtualIP:
          description: Virtual IP address assigned to the host name if IP based SSL is
            enabled
          type: string
      required:
        - sslState
      type: object
    HostingEnvironment:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Description of an hostingEnvironment (App Service Environment)
      properties:
        properties:
          properties:
            allowedMultiSizes:
              description: List of comma separated strings describing which VM sizes are
                allowed for front-ends
              type: string
            allowedWorkerSizes:
              description: List of comma separated strings describing which VM sizes are
                allowed for workers
              type: string
            apiManagementAccountId:
              description: Api Management Account associated with this Hosting Environment
              type: string
            clusterSettings:
              description: Custom settings for changing the behavior of the hosting
                environment
              items:
                $ref: "#/components/schemas/NameValuePair"
              type: array
            databaseEdition:
              description: Edition of the metadata database for the hostingEnvironment (App
                Service Environment) e.g. "Standard"
              type: string
            databaseServiceObjective:
              description: Service objective of the metadata database for the
                hostingEnvironment (App Service Environment) e.g. "S0"
              type: string
            dnsSuffix:
              description: DNS suffix of the hostingEnvironment (App Service Environment)
              type: string
            environmentCapacities:
              description: Current total, used, and available worker capacities
              items:
                $ref: "#/components/schemas/StampCapacity"
              type: array
            environmentIsHealthy:
              description: True/false indicating whether the hostingEnvironment (App
                Service Environment) is healthy
              type: boolean
            environmentStatus:
              description: Detailed message about with results of the last check of the
                hostingEnvironment (App Service Environment)
              type: string
            internalLoadBalancingMode:
              description: Specifies which endpoints to serve internally in the
                hostingEnvironment's (App Service Environment) VNET
              enum:
                - None
                - Web
                - Publishing
              type: string
              x-ms-enum:
                modelAsString: false
                name: InternalLoadBalancingMode
            ipsslAddressCount:
              description: Number of IP SSL addresses reserved for this hostingEnvironment
                (App Service Environment)
              format: int32
              type: integer
            lastAction:
              description: Last deployment action on this hostingEnvironment (App Service
                Environment)
              type: string
            lastActionResult:
              description: Result of the last deployment action on this hostingEnvironment
                (App Service Environment)
              type: string
            location:
              description: Location of the hostingEnvironment (App Service Environment),
                e.g. "West US"
              type: string
            maximumNumberOfMachines:
              description: Maximum number of VMs in this hostingEnvironment (App Service
                Environment)
              format: int32
              type: integer
            multiRoleCount:
              description: Number of front-end instances
              format: int32
              type: integer
            multiSize:
              description: Front-end VM size, e.g. "Medium", "Large"
              type: string
            name:
              description: Name of the hostingEnvironment (App Service Environment)
              type: string
            networkAccessControlList:
              description: Access control list for controlling traffic to the
                hostingEnvironment (App Service Environment)
              items:
                $ref: "#/components/schemas/NetworkAccessControlEntry"
              type: array
            provisioningState:
              description: Provisioning state of the hostingEnvironment (App Service
                Environment)
              enum:
                - Succeeded
                - Failed
                - Canceled
                - InProgress
                - Deleting
              type: string
              x-ms-enum:
                modelAsString: false
                name: ProvisioningState
            resourceGroup:
              description: Resource group of the hostingEnvironment (App Service
                Environment)
              type: string
            status:
              description: Current status of the hostingEnvironment (App Service
                Environment)
              enum:
                - Preparing
                - Ready
                - Scaling
                - Deleting
              type: string
              x-ms-enum:
                modelAsString: false
                name: HostingEnvironmentStatus
            subscriptionId:
              description: Subscription of the hostingEnvironment (App Service Environment)
              type: string
            suspended:
              description: "True/false indicating whether the hostingEnvironment is
                suspended. The environment can be suspended e.g. when the
                management endpoint is no longer available\r

                \            (most likely because NSG blocked
                the incoming traffic)"
              type: boolean
            upgradeDomains:
              description: Number of upgrade domains of this hostingEnvironment (App
                Service Environment)
              format: int32
              type: integer
            vipMappings:
              description: Description of IP SSL mapping for this hostingEnvironment (App
                Service Environment)
              items:
                $ref: "#/components/schemas/VirtualIPMapping"
              type: array
            virtualNetwork:
              $ref: "#/components/schemas/VirtualNetworkProfile"
            vnetName:
              description: Name of the hostingEnvironment's (App Service Environment)
                virtual network
              type: string
            vnetResourceGroupName:
              description: Resource group of the hostingEnvironment's (App Service
                Environment) virtual network
              type: string
            vnetSubnetName:
              description: Subnet of the hostingEnvironment's (App Service Environment)
                virtual network
              type: string
            workerPools:
              description: Description of worker pools with worker size ids, VM sizes, and
                number of workers in each pool
              items:
                $ref: "#/components/schemas/WorkerPool"
              type: array
          required:
            - status
          x-ms-client-flatten: true
      type: object
    HostingEnvironmentCollection:
      description: Collection of hosting environments (App Service Environments)
      properties:
        nextLink:
          description: Link to next page of resources
          type: string
        value:
          description: Collection of resources
          items:
            $ref: "#/components/schemas/HostingEnvironment"
          type: array
      type: object
    HostingEnvironmentDiagnostics:
      description: Diagnostics for a hosting environment (App Service Environment)
      properties:
        diagnosicsOutput:
          description: Diagnostics output
          type: string
        name:
          description: Name/identifier of the diagnostics
          type: string
      type: object
    HostingEnvironmentProfile:
      description: Specification for a hostingEnvironment (App Service Environment) to use
        for this resource
      properties:
        id:
          description: Resource id of the hostingEnvironment (App Service Environment)
          type: string
        name:
          description: Name of the hostingEnvironment (App Service Environment) (read only)
          type: string
        type:
          description: Resource type of the hostingEnvironment (App Service Environment)
            (read only)
          type: string
      type: object
    HttpLogsConfig:
      description: Http logs configuration
      properties:
        azureBlobStorage:
          $ref: "#/components/schemas/AzureBlobStorageHttpLogsConfig"
        fileSystem:
          $ref: "#/components/schemas/FileSystemHttpLogsConfig"
      type: object
    IpSecurityRestriction:
      description: Represents an ip security restriction on a web app.
      properties:
        ipAddress:
          description: IP address the security restriction is valid for
          type: string
        subnetMask:
          description: Subnet mask for the range of IP addresses the restriction is valid
            for
          type: string
      type: object
    LocalizableString:
      description: LocalizableString object containing the name and a localized value.
      properties:
        localizedValue:
          description: Localized name
          type: string
        value:
          description: Non localized name
          type: string
      type: object
    ManagedHostingEnvironment:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Description of a managed hosting environment
      properties:
        properties:
          properties:
            apiManagementAccount:
              description: Resource id of the api management account associated with this
                managed hosting environment (read only)
              type: string
            dnsSuffix:
              description: DNS suffix of the managed hosting environment
              type: string
            environmentIsHealthy:
              description: True/false indicating whether the managed hosting environment is
                healthy
              type: boolean
            environmentStatus:
              description: Detailed message about with results of the last check of the
                managed hosting environment
              type: string
            ipsslAddressCount:
              description: Number of ip ssl addresses reserved for the managed hosting
                environment
              format: int32
              type: integer
            location:
              description: Location of the managed hosting environment e.g. "West US"
              type: string
            name:
              description: Name of the managed hosting environment
              type: string
            resourceGroup:
              description: Resource group of the managed hosting environment (read only)
              type: string
            status:
              description: Current status of the managed hosting environment
              enum:
                - Preparing
                - Ready
                - Deleting
              type: string
              x-ms-enum:
                modelAsString: false
                name: ManagedHostingEnvironmentStatus
            subscriptionId:
              description: Subscription of the managed hosting environment (read only)
              type: string
            suspended:
              description: "True/false indicating whether the managed hosting environment
                is suspended. The environment can be suspended e.g. when the
                management endpoint is no longer available\r

                \            (most likely because NSG blocked
                the incoming traffic)"
              type: boolean
            virtualNetwork:
              $ref: "#/components/schemas/VirtualNetworkProfile"
          required:
            - status
          x-ms-client-flatten: true
      type: object
    ManagedHostingEnvironmentCollection:
      description: Collection of managed hosting environments
      properties:
        nextLink:
          description: Link to next page of resources
          type: string
        value:
          description: Collection of resources
          items:
            $ref: "#/components/schemas/ManagedHostingEnvironment"
          type: array
      type: object
    MetricAvailabilily:
      description: Class representing metrics availability and retention
      properties:
        retention:
          description: Retention period for the current
            {Microsoft.Web.Hosting.Administration.MetricAvailabilily.TimeGrain}
          type: string
        timeGrain:
          description: Time grain
          type: string
      type: object
    MetricDefinition:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Class representing metadata for the metrics
      properties:
        properties:
          properties:
            displayName:
              description: Friendly name shown in the UI
              type: string
            metricAvailabilities:
              description: List of time grains supported for the metric together with
                retention period
              items:
                $ref: "#/components/schemas/MetricAvailabilily"
              type: array
            name:
              description: Name of the metric
              type: string
            primaryAggregationType:
              description: Primary aggregation type
              type: string
            unit:
              description: Unit of the metric
              type: string
          x-ms-client-flatten: true
      type: object
    MetricDefinitionCollection:
      description: Collection of metric definitions
      properties:
        nextLink:
          description: Link to next page of resources
          type: string
        value:
          description: Collection of resources
          items:
            $ref: "#/components/schemas/MetricDefinition"
          type: array
      type: object
    NameIdentifier:
      description: Identifies an object
      properties:
        name:
          description: Name of the object
          type: string
      type: object
    NameIdentifierCollection:
      description: Collection of domain name identifiers
      properties:
        nextLink:
          description: Link to next page of resources
          type: string
        value:
          description: Collection of resources
          items:
            $ref: "#/components/schemas/NameIdentifier"
          type: array
      type: object
    NameValuePair:
      description: Name value pair
      properties:
        name:
          description: Pair name
          type: string
        value:
          description: Pair value
          type: string
      type: object
    NetworkAccessControlEntry:
      properties:
        action:
          enum:
            - Permit
            - Deny
          type: string
          x-ms-enum:
            modelAsString: false
            name: AccessControlEntryAction
        description:
          type: string
        order:
          format: int32
          type: integer
        remoteSubnet:
          type: string
      type: object
    NetworkFeatures:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: "This is an object used to store a full view of network features
        (presently VNET integration and Hybrid Connections)\r

        \            for a web app."
      properties:
        properties:
          properties:
            hybridConnections:
              description: The Hybrid Connections Summary view
              items:
                $ref: "#/components/schemas/RelayServiceConnectionEntity"
              type: array
            virtualNetworkConnection:
              $ref: "#/components/schemas/VnetInfo"
            virtualNetworkName:
              description: The Vnet Name
              type: string
          x-ms-client-flatten: true
      type: object
    Object:
      properties: {}
      type: object
    PremierAddOnRequest:
      properties:
        location:
          description: Geo region resource belongs to e.g. SouthCentralUS, SouthEastAsia
          type: string
        plan:
          $ref: "#/components/schemas/ArmPlan"
        properties:
          $ref: "#/components/schemas/Object"
        sku:
          $ref: "#/components/schemas/SkuDescription"
        tags:
          additionalProperties:
            type: string
          description: Tags associated with resource
          type: object
      type: object
    RampUpRule:
      description: Routing rules for ramp up testing. This rule allows to redirect static
        traffic % to a slot or to gradually change routing % based on
        performance
      properties:
        actionHostName:
          description: Hostname of a slot to which the traffic will be redirected if
            decided to. E.g. mysite-stage.azurewebsites.net
          type: string
        changeDecisionCallbackUrl:
          description: "Custom decision algorithm can be provided in TiPCallback site
            extension which Url can be specified. See TiPCallback site extension
            for the scaffold and contracts.\r

            \            https://www.siteextensions.net/packages/Ti\
            PCallback/"
          type: string
        changeIntervalInMinutes:
          description: "[Optional] Specifies interval in minutes to reevaluate
            ReroutePercentage"
          format: int32
          type: integer
        changeStep:
          description: "[Optional] In auto ramp up scenario this is the step to add/remove
            from
            {Microsoft.Web.Hosting.Administration.RampUpRule.ReroutePercentage}
            until it reaches \r

            \            {Microsoft.Web.Hosting.Administration.Ramp\
            UpRule.MinReroutePercentage} or
            {Microsoft.Web.Hosting.Administration.RampUpRule.MaxReroutePercenta\
            ge}. Site metrics are checked every N minutes specified in
            {Microsoft.Web.Hosting.Administration.RampUpRule.ChangeIntervalInMi\
            nutes}.\r

            \            Custom decision algorithm can be provided
            in TiPCallback site extension which Url can be specified in
            {Microsoft.Web.Hosting.Administration.RampUpRule.ChangeDecisionCall\
            backUrl}"
          format: double
          type: number
        maxReroutePercentage:
          description: "[Optional] Specifies upper boundary below which ReroutePercentage
            will stay."
          format: double
          type: number
        minReroutePercentage:
          description: "[Optional] Specifies lower boundary above which ReroutePercentage
            will stay."
          format: double
          type: number
        name:
          description: Name of the routing rule. The recommended name would be to point to
            the slot which will receive the traffic in the experiment.
          type: string
        reroutePercentage:
          description: Percentage of the traffic which will be redirected to
            {Microsoft.Web.Hosting.Administration.RampUpRule.ActionHostName}
          format: double
          type: number
      type: object
    Recommendation:
      description: Represents a recommendation result generated by the recommendation engine
      properties:
        actionName:
          description: Name of action recommended by this object.
          type: string
        channels:
          description: List of channels that this recommendation can apply.
          enum:
            - Notification
            - Api
            - Email
            - All
          type: string
          x-ms-enum:
            modelAsString: false
            name: Channels
        creationTime:
          description: Timestamp when this instance was created.
          format: date-time
          type: string
        displayName:
          description: UI friendly name of the rule (may not be unique)
          type: string
        enabled:
          description: On/off flag indicating the rule is currently enabled or disabled.
          format: int32
          type: integer
        endTime:
          description: The end time of a range that the recommendation refers to.
          format: date-time
          type: string
        level:
          description: Level indicating how critical this recommendation can impact.
          enum:
            - Critical
            - Warning
            - Information
            - NonUrgentSuggestion
          type: string
          x-ms-enum:
            modelAsString: false
            name: NotificationLevel
        message:
          description: Localized text of recommendation, good for UI.
          type: string
        nextNotificationTime:
          description: When to notify this recommendation next. Null means that this will
            never be notified anymore.
          format: date-time
          type: string
        notificationExpirationTime:
          description: Date and time when this notification expires.
          format: date-time
          type: string
        notifiedTime:
          description: Last timestamp this instance was actually notified. Null means that
            this recommendation hasn't been notified yet.
          format: date-time
          type: string
        recommendationId:
          description: A GUID value that each recommendation object is associated with.
          type: string
        resourceId:
          description: Full ARM resource ID string that this recommendation object is
            associated with.
          type: string
        resourceScope:
          description: Name of a resource type this recommendation applies, e.g.
            Subscription, ServerFarm, Site.
          type: string
        ruleName:
          description: Unique name of the rule
          type: string
        score:
          description: A metric value measured by the rule.
          format: double
          type: number
        startTime:
          description: The beginning time of a range that the recommendation refers to.
          format: date-time
          type: string
        tags:
          description: The list of category tags that this recommendation belongs to.
          items:
            type: string
          type: array
      required:
        - level
        - channels
      type: object
    RecommendationRule:
      description: Represents a recommendation rule that the recommendation engine can
        perform
      properties:
        actionName:
          description: Name of action that is recommended by this rule in string
          type: string
        channels:
          description: List of available channels that this rule applies.
          enum:
            - Notification
            - Api
            - Email
            - All
          type: string
          x-ms-enum:
            modelAsString: false
            name: Channels
        description:
          description: Localized detailed description of the rule
          type: string
        displayName:
          description: UI friendly name of the rule
          type: string
        enabled:
          description: On/off flag indicating the rule is currently enabled or disabled.
          format: int32
          type: integer
        level:
          description: Level of impact indicating how critical this rule is.
          enum:
            - Critical
            - Warning
            - Information
            - NonUrgentSuggestion
          type: string
          x-ms-enum:
            modelAsString: false
            name: NotificationLevel
        message:
          description: Localized name of the rule (Good for UI)
          type: string
        name:
          description: Unique name of the rule
          type: string
        recommendationId:
          description: "Recommendation ID of an associated recommendation object tied to
            the rule, if exists.\r

            \            If such an object doesn't exist, it is set
            to null."
          type: string
        tags:
          description: An array of category tags that the rule contains.
          items:
            type: string
          type: array
      required:
        - level
        - channels
      type: object
    ReissueCertificateOrderRequest:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Class representing certificate reissue request
      properties:
        properties:
          properties:
            delayExistingRevokeInHours:
              description: Delay in hours to revoke existing certificate after the new
                certificate is issued
              format: int32
              type: integer
            keySize:
              description: Certificate Key Size
              format: int32
              type: integer
          x-ms-client-flatten: true
      type: object
    RelayServiceConnectionEntity:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Class that represents a BizTalk Hybrid Connection
      properties:
        properties:
          properties:
            biztalkUri:
              type: string
            entityConnectionString:
              type: string
            entityName:
              type: string
            hostname:
              type: string
            port:
              format: int32
              type: integer
            resourceConnectionString:
              type: string
            resourceType:
              type: string
          x-ms-client-flatten: true
      type: object
    RenewCertificateOrderRequest:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Class representing certificate renew request
      properties:
        properties:
          properties:
            keySize:
              description: Certificate Key Size
              format: int32
              type: integer
          x-ms-client-flatten: true
      type: object
    RequestsBasedTrigger:
      description: RequestsBasedTrigger
      properties:
        count:
          description: Count
          format: int32
          type: integer
        timeInterval:
          description: TimeInterval
          type: string
      type: object
    Resource:
      properties:
        id:
          description: Resource Id
          type: string
        kind:
          description: Kind of resource
          type: string
        location:
          description: Resource Location
          type: string
        name:
          description: Resource Name
          type: string
        tags:
          additionalProperties:
            type: string
          description: Resource tags
          type: object
        type:
          description: Resource type
          type: string
      required:
        - location
      x-ms-azure-resource: true
    ResourceMetric:
      description: Object representing a metric for any resource
      properties:
        endTime:
          description: Metric end time
          format: date-time
          type: string
        metricValues:
          description: Metric values
          items:
            $ref: "#/components/schemas/ResourceMetricValue"
          type: array
        name:
          $ref: "#/components/schemas/ResourceMetricName"
        properties:
          description: Properties
          items:
            $ref: "#/components/schemas/KeyValuePair_String_String_"
          type: array
        resourceId:
          description: Metric resource Id
          type: string
        startTime:
          description: Metric start time
          format: date-time
          type: string
        timeGrain:
          description: Metric granularity. E.g PT1H, PT5M, P1D
          type: string
        unit:
          description: Metric unit
          type: string
      type: object
    ResourceMetricCollection:
      description: Collection of metric responses
      properties:
        nextLink:
          description: Link to next page of resources
          type: string
        value:
          description: Collection of resources
          items:
            $ref: "#/components/schemas/ResourceMetric"
          type: array
      type: object
    ResourceMetricName:
      description: Name of a metric for any resource
      properties:
        localizedValue:
          description: Localized metric name value
          type: string
        value:
          description: metric name value
          type: string
      type: object
    ResourceMetricValue:
      description: Value of resource metric
      properties:
        average:
          description: Value average
          format: float
          type: number
        count:
          description: Value count
          format: float
          type: number
        maximum:
          description: Value maximum
          format: float
          type: number
        minimum:
          description: Value minimum
          format: float
          type: number
        timeStamp:
          description: Value timestamp
          type: string
        total:
          description: Value total
          format: float
          type: number
      type: object
    ResourceNameAvailability:
      description: Describes if a resource name is available
      properties:
        message:
          type: string
        nameAvailable:
          description: True indicates name is valid and available.  False indicates the
            name is invalid, unavailable, or both.
          type: boolean
        reason:
          description: Required if nameAvailable is false. 'Invalid' indicates the name
            provided does not match Azure WebApp service’s naming requirements.
            'AlreadyExists' indicates that the name is already in use and is
            therefore unavailable.
          type: string
      type: object
    ResourceNameAvailabilityRequest:
      description: Resource name availability request content
      properties:
        isFqdn:
          description: Is fully qualified domain name
          type: boolean
        name:
          description: Resource name to verify
          type: string
        type:
          description: Resource type used for verification
          type: string
      type: object
    RestoreRequest:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Description of a restore request
      properties:
        properties:
          properties:
            adjustConnectionStrings:
              description: Gets or sets a flag showing if SiteConfig.ConnectionStrings
                should be set in new site
              type: boolean
            blobName:
              description: Name of a blob which contains the backup
              type: string
            databases:
              description: Collection of databases which should be restored. This list has
                to match the list of databases included in the backup.
              items:
                $ref: "#/components/schemas/DatabaseBackupSetting"
              type: array
            hostingEnvironment:
              description: App Service Environment name, if needed (only when restoring a
                site to an App Service Environment)
              type: string
            ignoreConflictingHostNames:
              description: "Changes a logic when restoring a site with custom domains. If
                \"true\", custom domains are removed automatically. If
                \"false\", custom domains are added to \r

                \            the site object when it is being
                restored, but that might fail due to conflicts during the
                operation."
              type: boolean
            operationType:
              description: Operation type
              enum:
                - Default
                - Clone
                - Relocation
              type: string
              x-ms-enum:
                modelAsString: false
                name: BackupRestoreOperationType
            overwrite:
              description: True if the restore operation can overwrite target site. "True"
                needed if trying to restore over an existing site.
              type: boolean
            siteName:
              description: Name of a site (Web App)
              type: string
            storageAccountUrl:
              description: SAS URL to the container
              type: string
          required:
            - operationType
          x-ms-client-flatten: true
      type: object
    RestoreResponse:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Response for a restore site request
      properties:
        properties:
          properties:
            operationId:
              description: When server starts the restore process, it will return an
                OperationId identifying that particular restore operation
              type: string
          x-ms-client-flatten: true
      type: object
    RoutingRule:
      description: Routing rules for TiP
      properties:
        name:
          description: Name of the routing rule. The recommended name would be to point to
            the slot which will receive the traffic in the experiment.
          type: string
      type: object
    ServerFarmCollection:
      description: Collection of serverfarms
      properties:
        nextLink:
          description: Link to next page of resources
          type: string
        value:
          description: Collection of resources
          items:
            $ref: "#/components/schemas/ServerFarmWithRichSku"
          type: array
      type: object
    ServerFarmWithRichSku:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: App Service Plan Model
      properties:
        properties:
          properties:
            adminSiteName:
              description: App Service Plan administration site
              type: string
            geoRegion:
              description: Geographical location for the App Service Plan
              readOnly: true
              type: string
            hostingEnvironmentProfile:
              $ref: "#/components/schemas/HostingEnvironmentProfile"
            maximumNumberOfWorkers:
              description: Maximum number of instances that can be assigned to this App
                Service Plan
              format: int32
              type: integer
            name:
              description: Name for the App Service Plan
              type: string
            numberOfSites:
              description: Number of web apps assigned to this App Service Plan
              format: int32
              readOnly: true
              type: integer
            perSiteScaling:
              description: "If True apps assigned to this App Service Plan can be scaled
                independently\r

                \            If False apps assigned to this App
                Service Plan will scale to all instances of the plan"
              type: boolean
            reserved:
              description: Enables creation of a Linux App Service Plan
              type: boolean
            resourceGroup:
              description: Resource group of the server farm
              readOnly: true
              type: string
            status:
              description: App Service Plan Status
              enum:
                - Ready
                - Pending
              readOnly: true
              type: string
              x-ms-enum:
                modelAsString: false
                name: StatusOptions
            subscription:
              description: App Service Plan Subscription
              readOnly: true
              type: string
            workerTierName:
              description: Target worker tier assigned to the App Service Plan
              type: string
          required:
            - status
          x-ms-client-flatten: true
        sku:
          $ref: "#/components/schemas/SkuDescription"
      type: object
    Site:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Represents a web app
      properties:
        properties:
          properties:
            availabilityState:
              description: "Management information availability state for the web app.
                Possible values are Normal or Limited. \r

                \            Normal means that the site is
                running correctly and that management information for the site
                is available. \r

                \            Limited means that only partial
                management information for the site is available and that
                detailed site information is unavailable."
              enum:
                - Normal
                - Limited
                - DisasterRecoveryMode
              readOnly: true
              type: string
              x-ms-enum:
                modelAsString: false
                name: SiteAvailabilityState
            clientAffinityEnabled:
              description: Specifies if the client affinity is enabled when load balancing
                http request for multiple instances of the web app
              type: boolean
            clientCertEnabled:
              description: Specifies if the client certificate is enabled for the web app
              type: boolean
            cloningInfo:
              $ref: "#/components/schemas/CloningInfo"
            containerSize:
              description: Size of a function container
              format: int32
              type: integer
            defaultHostName:
              description: Default hostname of the web app
              readOnly: true
              type: string
            enabled:
              description: True if the site is enabled; otherwise, false. Setting
                this  value to false disables the site (takes the site off
                line).
              type: boolean
            enabledHostNames:
              description: "Hostnames for the web app that are enabled. Hostnames need to
                be assigned and enabled. If some hostnames are assigned but not
                enabled\r

                \            the app is not served on those
                hostnames"
              items:
                type: string
              readOnly: true
              type: array
            gatewaySiteName:
              description: Name of gateway app associated with web app
              type: string
            hostNameSslStates:
              description: Hostname SSL states are  used to manage the SSL bindings for
                site's hostnames.
              items:
                $ref: "#/components/schemas/HostNameSslState"
              type: array
            hostNames:
              description: Hostnames associated with web app
              items:
                type: string
              readOnly: true
              type: array
            hostNamesDisabled:
              description: "Specifies if the public hostnames are disabled the web app.\r

                \            If set to true the app is only
                accessible via API Management process"
              type: boolean
            hostingEnvironmentProfile:
              $ref: "#/components/schemas/HostingEnvironmentProfile"
            isDefaultContainer:
              description: Site is a default container
              readOnly: true
              type: boolean
            lastModifiedTimeUtc:
              description: Last time web app was modified in UTC
              format: date-time
              readOnly: true
              type: string
            maxNumberOfWorkers:
              description: "Maximum number of workers\r

                \            This only applies to function
                container"
              format: int32
              type: integer
            microService:
              description: ""
              type: string
            name:
              description: Name of web app
              type: string
            outboundIpAddresses:
              description: List of comma separated IP addresses that this web app uses for
                outbound connections. Those can be used when configuring
                firewall rules for databases accessed by this web app.
              readOnly: true
              type: string
            premiumAppDeployed:
              description: If set indicates whether web app is deployed as a premium app
              readOnly: true
              type: boolean
            repositorySiteName:
              description: Name of repository site
              readOnly: true
              type: string
            resourceGroup:
              description: Resource group web app belongs to
              readOnly: true
              type: string
            scmSiteAlsoStopped:
              description: If set indicates whether to stop SCM (KUDU) site when the web
                app is stopped. Default is false.
              type: boolean
            serverFarmId:
              type: string
            siteConfig:
              $ref: "#/components/schemas/SiteConfig"
            state:
              description: State of the web app
              readOnly: true
              type: string
            targetSwapSlot:
              description: Read-only property that specifies which slot this app will swap
                into
              readOnly: true
              type: string
            trafficManagerHostNames:
              description: Read-only list of Azure Traffic manager hostnames associated
                with web app
              items:
                type: string
              readOnly: true
              type: array
            usageState:
              description: State indicating whether web app has exceeded its quota usage
              enum:
                - Normal
                - Exceeded
              readOnly: true
              type: string
              x-ms-enum:
                modelAsString: false
                name: UsageState
          required:
            - usageState
            - availabilityState
          x-ms-client-flatten: true
      type: object
    SiteAuthSettings:
      description: Configuration settings for the Azure App Service Authentication /
        Authorization feature.
      properties:
        aadClientId:
          type: string
        additionalLoginParams:
          description: "Gets or sets a list of login parameters to send to the OpenID
            Connect authorization endpoint when\r

            \            a user logs in. Each parameter must be in
            the form \"key=value\"."
          items:
            type: string
          type: array
        allowedAudiences:
          description: "Gets or sets a list of allowed audience values to consider when
            validating JWTs issued by \r

            \            Azure Active Directory. Note that the
            {Microsoft.Web.Hosting.Administration.SiteAuthSettings.ClientId}
            value is always considered an\r

            \            allowed audience, regardless of this
            setting."
          items:
            type: string
          type: array
        allowedExternalRedirectUrls:
          description: "Gets or sets a collection of external URLs that can be redirected
            to as part of logging in\r

            \            or logging out of the web app. Note that
            the query string part of the URL is ignored.\r

            \            This is an advanced setting typically only
            needed by Windows Store application backends.\r

            \            Note that URLs within the current domain
            are always implicitly allowed."
          items:
            type: string
          type: array
        clientId:
          description: "Gets or sets the Client ID of this relying party application, known
            as the client_id.\r

            \            This setting is required for enabling
            OpenID Connection authentication with Azure Active Directory or \r

            \            other 3rd party OpenID Connect providers.\r

            \            More information on OpenID Connect:
            http://openid.net/specs/openid-connect-core-1_0.html"
          type: string
        clientSecret:
          description: "Gets or sets the Client Secret of this relying party application
            (in Azure Active Directory, this is also referred to as the Key).\r

            \            This setting is optional. If no client
            secret is configured, the OpenID Connect implicit auth flow is used
            to authenticate end users.\r

            \            Otherwise, the OpenID Connect Authorization
            Code Flow is used to authenticate end users.\r

            \            More information on OpenID Connect:
            http://openid.net/specs/openid-connect-core-1_0.html"
          type: string
        defaultProvider:
          description: "Gets or sets the default authentication provider to use when
            multiple providers are configured.\r

            \            This setting is only needed if multiple
            providers are configured and the unauthenticated client\r

            \            action is set to \"RedirectToLoginPage\"."
          enum:
            - AzureActiveDirectory
            - Facebook
            - Google
            - MicrosoftAccount
            - Twitter
          type: string
          x-ms-enum:
            modelAsString: false
            name: BuiltInAuthenticationProvider
        enabled:
          description: Gets or sets a value indicating whether the Authentication /
            Authorization feature is enabled for the current app.
          type: boolean
        facebookAppId:
          description: "Gets or sets the App ID of the Facebook app used for login.\r

            \            This setting is required for enabling
            Facebook Login.\r

            \            Facebook Login documentation:
            https://developers.facebook.com/docs/facebook-login"
          type: string
        facebookAppSecret:
          description: "Gets or sets the App Secret of the Facebook app used for Facebook
            Login.\r

            \            This setting is required for enabling
            Facebook Login.\r

            \            Facebook Login documentation:
            https://developers.facebook.com/docs/facebook-login"
          type: string
        facebookOAuthScopes:
          description: "Gets or sets the OAuth 2.0 scopes that will be requested as part of
            Facebook Login authentication.\r

            \            This setting is optional.\r

            \            Facebook Login documentation:
            https://developers.facebook.com/docs/facebook-login"
          items:
            type: string
          type: array
        googleClientId:
          description: "Gets or sets the OpenID Connect Client ID for the Google web
            application.\r

            \            This setting is required for enabling
            Google Sign-In.\r

            \            Google Sign-In documentation:
            https://developers.google.com/identity/sign-in/web/"
          type: string
        googleClientSecret:
          description: "Gets or sets the client secret associated with the Google web
            application.\r

            \            This setting is required for enabling
            Google Sign-In.\r

            \            Google Sign-In documentation:
            https://developers.google.com/identity/sign-in/web/"
          type: string
        googleOAuthScopes:
          description: "Gets or sets the OAuth 2.0 scopes that will be requested as part of
            Google Sign-In authentication.\r

            \            This setting is optional. If not specified,
            \"openid\", \"profile\", and \"email\" are used as default scopes.\r

            \            Google Sign-In documentation:
            https://developers.google.com/identity/sign-in/web/"
          items:
            type: string
          type: array
        httpApiPrefixPath:
          description: "Gets or sets the relative path prefix used by platform HTTP APIs.\r

            \            Changing this value is not recommended
            except for compatibility reasons."
          type: string
        issuer:
          description: "Gets or sets the OpenID Connect Issuer URI that represents the
            entity which issues access tokens for this application.\r

            \            When using Azure Active Directory, this
            value is the URI of the directory tenant, e.g.
            https://sts.windows.net/{tenant-guid}/.\r

            \            This URI is a case-sensitive identifier for
            the token issuer.\r

            \            More information on OpenID Connect
            Discovery:
            http://openid.net/specs/openid-connect-discovery-1_0.html"
          type: string
        microsoftAccountClientId:
          description: "Gets or sets the OAuth 2.0 client ID that was created for the app
            used for authentication.\r

            \            This setting is required for enabling
            Microsoft Account authentication.\r

            \            Microsoft Account OAuth documentation:
            https://dev.onedrive.com/auth/msa_oauth.htm"
          type: string
        microsoftAccountClientSecret:
          description: "Gets or sets the OAuth 2.0 client secret that was created for the
            app used for authentication.\r

            \            This setting is required for enabling
            Microsoft Account authentication.\r

            \            Microsoft Account OAuth documentation:
            https://dev.onedrive.com/auth/msa_oauth.htm"
          type: string
        microsoftAccountOAuthScopes:
          description: "Gets or sets the OAuth 2.0 scopes that will be requested as part of
            Microsoft Account authentication.\r

            \            This setting is optional. If not specified,
            \"wl.basic\" is used as the default scope.\r

            \            Microsoft Account Scopes and permissions
            documentation:
            https://msdn.microsoft.com/en-us/library/dn631845.aspx"
          items:
            type: string
          type: array
        openIdIssuer:
          type: string
        tokenRefreshExtensionHours:
          description: "Gets or sets the number of hours after session token expiration
            that a session token can be used to\r

            \            call the token refresh API. The default is
            72 hours."
          format: double
          type: number
        tokenStoreEnabled:
          description: "Gets or sets a value indicating whether to durably store
            platform-specific security tokens\r

            \            obtained during login flows. This
            capability is disabled by default."
          type: boolean
        twitterConsumerKey:
          description: "Gets or sets the OAuth 1.0a consumer key of the Twitter application
            used for sign-in.\r

            \            This setting is required for enabling
            Twitter Sign-In.\r

            \            Twitter Sign-In documentation:
            https://dev.twitter.com/web/sign-in"
          type: string
        twitterConsumerSecret:
          description: "Gets or sets the OAuth 1.0a consumer secret of the Twitter
            application used for sign-in.\r

            \            This setting is required for enabling
            Twitter Sign-In.\r

            \            Twitter Sign-In documentation:
            https://dev.twitter.com/web/sign-in"
          type: string
        unauthenticatedClientAction:
          description: Gets or sets the action to take when an unauthenticated client
            attempts to access the app.
          enum:
            - RedirectToLoginPage
            - AllowAnonymous
          type: string
          x-ms-enum:
            modelAsString: false
            name: UnauthenticatedClientAction
      type: object
    SiteCloneability:
      description: Represents whether or not a web app is cloneable
      properties:
        blockingCharacteristics:
          description: List of blocking application characteristics
          items:
            $ref: "#/components/schemas/SiteCloneabilityCriterion"
          type: array
        blockingFeatures:
          description: List of features enabled on web app that prevent cloning
          items:
            $ref: "#/components/schemas/SiteCloneabilityCriterion"
          type: array
        result:
          description: Name of web app
          enum:
            - Cloneable
            - PartiallyCloneable
            - NotCloneable
          type: string
          x-ms-enum:
            modelAsString: false
            name: CloneAbilityResult
        unsupportedFeatures:
          description: "List of features enabled on web app that are non-blocking but
            cannot be cloned. The web app can still be cloned\r

            \            but the features in this list will not be
            set up on cloned web app."
          items:
            $ref: "#/components/schemas/SiteCloneabilityCriterion"
          type: array
      required:
        - result
      type: object
    SiteCloneabilityCriterion:
      description: Represents a site cloneability criterion
      properties:
        description:
          description: Description of criterion
          type: string
        name:
          description: Name of criterion
          type: string
      type: object
    SiteCollection:
      description: Collection of sites
      properties:
        nextLink:
          description: Link to next page of resources
          type: string
        value:
          description: Collection of resources
          items:
            $ref: "#/components/schemas/Site"
          type: array
      type: object
    SiteConfig:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Configuration of Azure web site
      properties:
        properties:
          properties:
            alwaysOn:
              description: Always On
              type: boolean
            apiDefinition:
              $ref: "#/components/schemas/ApiDefinitionInfo"
            appCommandLine:
              description: App Command Line to launch
              type: string
            appSettings:
              description: Application Settings
              items:
                $ref: "#/components/schemas/NameValuePair"
              type: array
            autoHealEnabled:
              description: Auto heal enabled
              type: boolean
            autoHealRules:
              $ref: "#/components/schemas/AutoHealRules"
            autoSwapSlotName:
              description: Auto swap slot name
              type: string
            connectionStrings:
              description: Connection strings
              items:
                $ref: "#/components/schemas/ConnStringInfo"
              type: array
            cors:
              $ref: "#/components/schemas/CorsSettings"
            defaultDocuments:
              description: Default documents
              items:
                type: string
              type: array
            detailedErrorLoggingEnabled:
              description: Detailed error logging enabled
              type: boolean
            documentRoot:
              description: Document root
              type: string
            experiments:
              $ref: "#/components/schemas/Experiments"
            handlerMappings:
              description: Handler mappings
              items:
                $ref: "#/components/schemas/HandlerMapping"
              type: array
            httpLoggingEnabled:
              description: HTTP logging Enabled
              type: boolean
            ipSecurityRestrictions:
              description: Ip Security restrictions
              items:
                $ref: "#/components/schemas/IpSecurityRestriction"
              type: array
            javaContainer:
              description: Java container
              type: string
            javaContainerVersion:
              description: Java container version
              type: string
            javaVersion:
              description: Java version
              type: string
            limits:
              $ref: "#/components/schemas/SiteLimits"
            loadBalancing:
              description: Site load balancing
              enum:
                - WeightedRoundRobin
                - LeastRequests
                - LeastResponseTime
                - WeightedTotalTraffic
                - RequestHash
              type: string
              x-ms-enum:
                modelAsString: false
                name: SiteLoadBalancing
            localMySqlEnabled:
              description: Local mysql enabled
              type: boolean
            logsDirectorySizeLimit:
              description: HTTP Logs Directory size limit
              format: int32
              type: integer
            managedPipelineMode:
              description: Managed pipeline mode
              enum:
                - Integrated
                - Classic
              type: string
              x-ms-enum:
                modelAsString: false
                name: ManagedPipelineMode
            metadata:
              description: Site Metadata
              items:
                $ref: "#/components/schemas/NameValuePair"
              type: array
            netFrameworkVersion:
              description: Net Framework Version
              type: string
            nodeVersion:
              description: Version of Node
              type: string
            numberOfWorkers:
              description: Number of workers
              format: int32
              type: integer
            phpVersion:
              description: Version of PHP
              type: string
            publishingPassword:
              description: Publishing password
              type: string
            publishingUsername:
              description: Publishing user name
              type: string
            pythonVersion:
              description: Version of Python
              type: string
            remoteDebuggingEnabled:
              description: Remote Debugging Enabled
              type: boolean
            remoteDebuggingVersion:
              description: Remote Debugging Version
              type: string
            requestTracingEnabled:
              description: Enable request tracing
              type: boolean
            requestTracingExpirationTime:
              description: Request tracing expiration time
              format: date-time
              type: string
            scmType:
              description: SCM type
              type: string
            tracingOptions:
              description: Tracing options
              type: string
            use32BitWorkerProcess:
              description: Use 32 bit worker process
              type: boolean
            virtualApplications:
              description: Virtual applications
              items:
                $ref: "#/components/schemas/VirtualApplication"
              type: array
            vnetName:
              description: Vnet name
              type: string
            webSocketsEnabled:
              description: Web socket enabled.
              type: boolean
          x-ms-client-flatten: true
      type: object
    SiteInstance:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Instance of a web app
      properties:
        properties:
          properties:
            name:
              description: Name of instance
              type: string
          x-ms-client-flatten: true
      type: object
    SiteInstanceCollection:
      description: Collection of site instances
      properties:
        nextLink:
          description: Link to next page of resources
          type: string
        value:
          description: Collection of resources
          items:
            $ref: "#/components/schemas/SiteInstance"
          type: array
      type: object
    SiteLimits:
      description: Represents metric limits set on a web app.
      properties:
        maxDiskSizeInMb:
          description: Maximum allowed disk size usage in MB
          format: int64
          type: integer
        maxMemoryInMb:
          description: Maximum allowed memory usage in MB
          format: int64
          type: integer
        maxPercentageCpu:
          description: Maximum allowed CPU usage percentage
          format: double
          type: number
      type: object
    SiteLogsConfig:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Configuration of Azure web site
      properties:
        properties:
          properties:
            applicationLogs:
              $ref: "#/components/schemas/ApplicationLogsConfig"
            detailedErrorMessages:
              $ref: "#/components/schemas/EnabledConfig"
            failedRequestsTracing:
              $ref: "#/components/schemas/EnabledConfig"
            httpLogs:
              $ref: "#/components/schemas/HttpLogsConfig"
          x-ms-client-flatten: true
      type: object
    SiteProperties:
      properties:
        appSettings:
          items:
            $ref: "#/components/schemas/NameValuePair"
          type: array
        metadata:
          items:
            $ref: "#/components/schemas/NameValuePair"
          type: array
        properties:
          items:
            $ref: "#/components/schemas/NameValuePair"
          type: array
      type: object
    SiteSourceControl:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Describes the source control configuration for web app
      properties:
        properties:
          properties:
            branch:
              description: Name of branch to use for deployment
              type: string
            deploymentRollbackEnabled:
              description: Whether to manual or continuous integration
              type: boolean
            isManualIntegration:
              description: Whether to manual or continuous integration
              type: boolean
            isMercurial:
              description: Mercurial or Git repository type
              type: boolean
            repoUrl:
              description: Repository or source control url
              type: string
          x-ms-client-flatten: true
      type: object
    SkuCapacity:
      description: Description of the App Service Plan scale options
      properties:
        default:
          description: Default number of Workers for this App Service Plan SKU
          format: int32
          type: integer
        maximum:
          description: Maximum number of Workers for this App Service Plan SKU
          format: int32
          type: integer
        minimum:
          description: Minimum number of Workers for this App Service Plan SKU
          format: int32
          type: integer
        scaleType:
          description: Available scale configurations for an App Service Plan
          type: string
      type: object
    SkuDescription:
      description: Describes a sku for a scalable resource
      properties:
        capacity:
          description: Current number of instances assigned to the resource
          format: int32
          type: integer
        family:
          description: Family code of the resource sku
          type: string
        name:
          description: Name of the resource sku
          type: string
        size:
          description: Size specifier of the resource sku
          type: string
        tier:
          description: Service Tier of the resource sku
          type: string
      type: object
    SkuInfo:
      description: Sku discovery information
      properties:
        capacity:
          $ref: "#/components/schemas/SkuCapacity"
        resourceType:
          description: Resource type that this sku applies to
          type: string
        sku:
          $ref: "#/components/schemas/SkuDescription"
      type: object
    SkuInfoCollection:
      description: Collection of SkuInfos
      properties:
        nextLink:
          description: Link to next page of resources
          type: string
        value:
          description: Collection of resources
          items:
            $ref: "#/components/schemas/SkuInfo"
          type: array
      type: object
    SlotConfigNames:
      description: "Class containing names for connection strings and application settings
        to be marked as sticky to the slot \r

        \            and not moved during swap operation\r

        \            This is valid for all deployment slots under the
        site"
      properties:
        appSettingNames:
          description: List of application settings names
          items:
            type: string
          type: array
        connectionStringNames:
          description: List of connection string names
          items:
            type: string
          type: array
      type: object
    SlotConfigNamesResource:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Slot Config names azure resource
      properties:
        properties:
          properties:
            appSettingNames:
              description: List of application settings names
              items:
                type: string
              type: array
            connectionStringNames:
              description: List of connection string names
              items:
                type: string
              type: array
          x-ms-client-flatten: true
      type: object
    SlotDifference:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: An object describing the difference in setting values between two web
        app slots
      properties:
        properties:
          properties:
            description:
              description: Description of the difference
              type: string
            diffRule:
              description: Rule that describes how to process the difference in settings
                during web app slot swap.
              type: string
            settingName:
              description: Name of the setting
              type: string
            settingType:
              description: "The type of the settings: General, AppSetting or
                ConnectionString"
              type: string
            type:
              description: "Indicates the type of the difference: Information, Warning or
                Error."
              type: string
            valueInCurrentSlot:
              description: Value of the setting in the current web app slot
              type: string
            valueInTargetSlot:
              description: Value of the setting in the target web app slot
              type: string
          x-ms-client-flatten: true
      type: object
    SlotDifferenceCollection:
      description: Collection of Slot Differences
      properties:
        nextLink:
          description: Link to next page of resources
          type: string
        value:
          description: Collection of resources
          items:
            $ref: "#/components/schemas/SlotDifference"
          type: array
      type: object
    SlowRequestsBasedTrigger:
      description: SlowRequestsBasedTrigger
      properties:
        count:
          description: Count
          format: int32
          type: integer
        timeInterval:
          description: TimeInterval
          type: string
        timeTaken:
          description: TimeTaken
          type: string
      type: object
    SourceControl:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Describes the Source Control OAuth Token
      properties:
        properties:
          properties:
            expirationTime:
              description: OAuth Token Expiration
              format: date-time
              type: string
            name:
              description: Name or Source Control Type
              type: string
            refreshToken:
              description: OAuth Refresh Token
              type: string
            token:
              description: OAuth Access Token
              type: string
            tokenSecret:
              description: OAuth Access Token Secret
              type: string
          x-ms-client-flatten: true
      type: object
    SourceControlCollection:
      description: Collection of source controls
      properties:
        nextLink:
          description: Link to next page of resources
          type: string
        value:
          description: Collection of resources
          items:
            $ref: "#/components/schemas/SourceControl"
          type: array
      type: object
    StampCapacity:
      description: Class containing stamp capacity information
      properties:
        availableCapacity:
          description: Available capacity (# of machines, bytes of storage etc...)
          format: int64
          type: integer
        computeMode:
          description: Shared/Dedicated workers
          enum:
            - Shared
            - Dedicated
            - Dynamic
          type: string
          x-ms-enum:
            modelAsString: false
            name: ComputeModeOptions
        excludeFromCapacityAllocation:
          description: "If true it includes basic sites\r

            \            Basic sites are not used for capacity
            allocation."
          type: boolean
        isApplicableForAllComputeModes:
          description: Is capacity applicable for all sites?
          type: boolean
        name:
          description: Name of the stamp
          type: string
        siteMode:
          description: Shared or Dedicated
          type: string
        totalCapacity:
          description: Total capacity (# of machines, bytes of storage etc...)
          format: int64
          type: integer
        unit:
          description: Name of the unit
          type: string
        workerSize:
          description: Size of the machines
          enum:
            - Default
            - Small
            - Medium
            - Large
          type: string
          x-ms-enum:
            modelAsString: false
            name: WorkerSizeOptions
        workerSizeId:
          description: "Size Id of machines: \r

            \            0 - Small\r

            \            1 - Medium\r

            \            2 - Large"
          format: int32
          type: integer
      type: object
    StampCapacityCollection:
      description: Collection of stamp capacities
      properties:
        nextLink:
          description: Link to next page of resources
          type: string
        value:
          description: Collection of resources
          items:
            $ref: "#/components/schemas/StampCapacity"
          type: array
      type: object
    StatusCodesBasedTrigger:
      description: StatusCodeBasedTrigger
      properties:
        count:
          description: Count
          format: int32
          type: integer
        status:
          description: HTTP status code
          format: int32
          type: integer
        subStatus:
          description: SubStatus
          format: int32
          type: integer
        timeInterval:
          description: TimeInterval
          type: string
        win32Status:
          description: Win32 error code
          format: int32
          type: integer
      type: object
    StringDictionary:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: String dictionary resource
      properties:
        properties:
          additionalProperties:
            type: string
          description: Settings
          type: object
          x-ms-client-flatten: true
      type: object
    TldLegalAgreement:
      description: Represents a legal agreement for top level domain
      properties:
        agreementKey:
          description: Unique identifier for the agreement
          type: string
        content:
          description: Agreement details
          type: string
        title:
          description: Agreement title
          type: string
        url:
          description: Url where a copy of the agreement details is hosted
          type: string
      type: object
    TldLegalAgreementCollection:
      description: Collection of Tld Legal Agreements
      properties:
        nextLink:
          description: Link to next page of resources
          type: string
        value:
          description: Collection of resources
          items:
            $ref: "#/components/schemas/TldLegalAgreement"
          type: array
      type: object
    TopLevelDomain:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: A top level domain object
      properties:
        properties:
          properties:
            name:
              description: Name of the top level domain
              type: string
            privacy:
              description: If true then the top level domain supports domain privacy
              type: boolean
          x-ms-client-flatten: true
      type: object
    TopLevelDomainAgreementOption:
      description: Options for retrieving the list of top level domain legal agreements
      properties:
        includePrivacy:
          description: If true then the list of agreements will include agreements for
            domain privacy as well.
          type: boolean
      type: object
    TopLevelDomainCollection:
      description: Collection of Top Level Domains
      properties:
        nextLink:
          description: Link to next page of resources
          type: string
        value:
          description: Collection of resources
          items:
            $ref: "#/components/schemas/TopLevelDomain"
          type: array
      type: object
    Usage:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Class that represents usage of the quota resource.
      properties:
        properties:
          properties:
            computeMode:
              description: ComputeMode used for this usage
              enum:
                - Shared
                - Dedicated
                - Dynamic
              type: string
              x-ms-enum:
                modelAsString: false
                name: ComputeModeOptions
            currentValue:
              description: The current value of the resource counter
              format: int64
              type: integer
            displayName:
              description: Friendly name shown in the UI
              type: string
            limit:
              description: The resource limit
              format: int64
              type: integer
            name:
              description: Name of the quota
              type: string
            nextResetTime:
              description: Next reset time for the resource counter
              format: date-time
              type: string
            resourceName:
              description: Name of the quota resource
              type: string
            siteMode:
              description: SiteMode used for this usage
              type: string
            unit:
              description: Units of measurement for the quota resource
              type: string
          x-ms-client-flatten: true
      type: object
    UsageCollection:
      description: Collection of usages
      properties:
        nextLink:
          description: Link to next page of resources
          type: string
        value:
          description: Collection of resources
          items:
            $ref: "#/components/schemas/Usage"
          type: array
      type: object
    User:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Represents user credentials used for publishing activity
      properties:
        properties:
          properties:
            name:
              description: Username (internal)
              type: string
            publishingPassword:
              description: Password used for publishing
              type: string
            publishingUserName:
              description: Username used for publishing
              type: string
            scmUri:
              description: Service Control Manager URI, including username and password
              type: string
          x-ms-client-flatten: true
      type: object
    VirtualApplication:
      properties:
        physicalPath:
          type: string
        preloadEnabled:
          type: boolean
        virtualDirectories:
          items:
            $ref: "#/components/schemas/VirtualDirectory"
          type: array
        virtualPath:
          type: string
      type: object
    VirtualDirectory:
      properties:
        physicalPath:
          type: string
        virtualPath:
          type: string
      type: object
    VirtualIPMapping:
      description: Class that represents a VIP mapping
      properties:
        inUse:
          description: Is VIP mapping in use
          type: boolean
        internalHttpPort:
          description: Internal HTTP port
          format: int32
          type: integer
        internalHttpsPort:
          description: Internal HTTPS port
          format: int32
          type: integer
        virtualIP:
          description: Virtual IP address
          type: string
      type: object
    VirtualNetworkProfile:
      description: Specification for using a virtual network
      properties:
        id:
          description: Resource id of the virtual network
          type: string
        name:
          description: Name of the virtual network (read-only)
          type: string
        subnet:
          description: Subnet within the virtual network
          type: string
        type:
          description: Resource type of the virtual network (read-only)
          type: string
      type: object
    VnetGateway:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: The VnetGateway contract. This is used to give the vnet gateway access
        to the VPN package.
      properties:
        properties:
          properties:
            vnetName:
              description: The VNET name.
              type: string
            vpnPackageUri:
              description: The URI where the Vpn package can be downloaded
              type: string
          x-ms-client-flatten: true
      type: object
    VnetInfo:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: VNETInfo contract. This contract is public and is a stripped down
        version of VNETInfoInternal
      properties:
        properties:
          properties:
            certBlob:
              description: "A certificate file (.cer) blob containing the public key of the
                private key used to authenticate a \r

                \            Point-To-Site VPN connection."
              type: string
            certThumbprint:
              description: The client certificate thumbprint
              type: string
            dnsServers:
              description: Dns servers to be used by this VNET. This should be a
                comma-separated list of IP addresses.
              type: string
            resyncRequired:
              description: Flag to determine if a resync is required
              type: boolean
            routes:
              description: The routes that this virtual network connection uses.
              items:
                $ref: "#/components/schemas/VnetRoute"
              type: array
            vnetResourceId:
              description: The vnet resource id
              type: string
          x-ms-client-flatten: true
      type: object
    VnetRoute:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: VnetRoute contract used to pass routing information for a vnet.
      properties:
        properties:
          properties:
            endAddress:
              description: The ending address for this route. If the start address is
                specified in CIDR notation, this must be omitted.
              type: string
            name:
              description: The name of this route. This is only returned by the server and
                does not need to be set by the client.
              type: string
            routeType:
              description: "The type of route this is:\r

                \            DEFAULT - By default, every web app
                has routes to the local address ranges specified by RFC1918\r

                \            INHERITED - Routes inherited from
                the real Virtual Network routes\r

                \            STATIC - Static route set on the
                web app only\r

                \            \r

                \            These values will be used for
                syncing a Web App's routes with those from a Virtual Network.
                This operation will clear all DEFAULT and INHERITED routes and
                replace them\r

                \            with new INHERITED routes."
              type: string
            startAddress:
              description: The starting address for this route. This may also include a
                CIDR notation, in which case the end address must not be
                specified.
              type: string
          x-ms-client-flatten: true
      type: object
    WorkerPool:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Worker pool of a hostingEnvironment (App Service Environment)
      properties:
        properties:
          properties:
            computeMode:
              description: Shared or dedicated web app hosting
              enum:
                - Shared
                - Dedicated
                - Dynamic
              type: string
              x-ms-enum:
                modelAsString: false
                name: ComputeModeOptions
            instanceNames:
              description: Names of all instances in the worker pool (read only)
              items:
                type: string
              type: array
            workerCount:
              description: Number of instances in the worker pool
              format: int32
              type: integer
            workerSize:
              description: VM size of the worker pool instances
              type: string
            workerSizeId:
              description: Worker size id for referencing this worker pool
              format: int32
              type: integer
          x-ms-client-flatten: true
        sku:
          $ref: "#/components/schemas/SkuDescription"
      type: object
    WorkerPoolCollection:
      description: Collection of worker pools
      properties:
        nextLink:
          description: Link to next page of resources
          type: string
        value:
          description: Collection of resources
          items:
            $ref: "#/components/schemas/WorkerPool"
          type: array
      type: object
    KeyValuePair_String_String_:
      properties:
        key:
          readOnly: true
          type: string
        value:
          readOnly: true
          type: string
      type: object
