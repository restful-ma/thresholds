openapi: 3.0.0
info:
  description: The Azure BatchAI Management API.
  title: BatchAI
  version: 2018-05-01
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-ms-code-generation-settings:
    name: BatchAIManagementClient
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/batchai/resource-manager/Microsoft.BatchAI/stable/2018-05-01/BatchAI.json
      version: "2.0"
  x-preferred: true
  x-providerName: azure.com
  x-serviceName: batchai-BatchAI
  x-tags:
    - Azure
    - Microsoft
security:
  - azure_auth:
      - user_impersonation
paths:
  /providers/Microsoft.BatchAI/operations:
    get:
      description: Lists available operations for the Microsoft.BatchAI provider.
      operationId: Operations_List
      parameters:
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationListResult"
              examples:
                Create or update cluster:
                  $ref: "#/components/examples/Create_or_update_cluster"
      tags:
        - Operations
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.BatchAI/locations/{location}/usages":
    get:
      description: Gets the current usage information as well as limits for Batch AI
        resources for given subscription.
      operationId: Usages_List
      parameters:
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - description: The location for which resource usage is queried.
          in: path
          name: location
          required: true
          schema:
            type: string
            pattern: ^[-\w\._]+$
          examples:
            Create or update cluster:
              value: eastus
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListUsagesResult"
              examples:
                Create or update cluster:
                  $ref: "#/components/examples/Create_or_update_cluster"
      tags:
        - Usage
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.BatchAI/workspaces":
    get:
      description: Gets a list of Workspaces associated with the given subscription.
      operationId: Workspaces_List
      parameters:
        - $ref: "#/components/parameters/MaxResultsParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful. The response contains a formatted list
            of workspaces and their properties.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkspaceListResult"
              examples:
                List file servers:
                  $ref: "#/components/examples/List_file_servers"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Workspace
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/workspaces":
    get:
      description: Gets a list of Workspaces within the specified resource group.
      operationId: Workspaces_ListByResourceGroup
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/MaxResultsParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful. The response contains a list of
            workspaces within the resource group.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkspaceListResult"
              examples:
                List workspaces:
                  $ref: "#/components/examples/List_workspaces"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Workspace
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/workspaces/{workspaceName}":
    delete:
      description: Deletes a Workspace.
      operationId: Workspaces_Delete
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WorkspaceNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful.
        "202":
          description: The operation will be completed asynchronously.
        "204":
          description: No content.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Workspace
      x-ms-long-running-operation: true
    get:
      description: Gets information about a Workspace.
      operationId: Workspaces_Get
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WorkspaceNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful. The response contains information
            about the Workspace.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workspace"
              examples:
                Get a workspace information:
                  $ref: "#/components/examples/Get_a_workspace_information"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Workspace
    patch:
      description: Updates properties of a Workspace.
      operationId: Workspaces_Update
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WorkspaceNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkspaceUpdateParameters"
        description: Additional parameters for workspace update.
        required: true
      responses:
        "200":
          description: The operation was successful. The response contains the Workspace
            entity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workspace"
              examples:
                Update workspace tags:
                  $ref: "#/components/examples/Update_workspace_tags"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Workspace
    put:
      description: Creates a Workspace.
      operationId: Workspaces_Create
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WorkspaceNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkspaceCreateParameters"
        description: Workspace creation parameters.
        required: true
      responses:
        "200":
          description: The operation was successful. The response contains the workspace
            entity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workspace"
              examples:
                Create a workspace:
                  $ref: "#/components/examples/Create_a_workspace"
        "202":
          description: The operation will be completed asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Workspace
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/workspaces/{workspaceName}/clusters":
    get:
      description: Gets information about Clusters associated with the given Workspace.
      operationId: Clusters_ListByWorkspace
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WorkspaceNameParameter"
        - $ref: "#/components/parameters/MaxResultsParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful. The response contains a list of
            Clusters and their properties.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClusterListResult"
              examples:
                Get a list of cluster in a workspace:
                  $ref: "#/components/examples/Get_a_list_of_cluster_in_a_workspace"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Cluster
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/workspaces/{workspaceName}/clusters/{clusterName}":
    delete:
      description: Deletes a Cluster.
      operationId: Clusters_Delete
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WorkspaceNameParameter"
        - $ref: "#/components/parameters/ClusterNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful.
        "202":
          description: The operation will be completed asynchronously.
        "204":
          description: No content.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Cluster
      x-ms-long-running-operation: true
    get:
      description: Gets information about a Cluster.
      operationId: Clusters_Get
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WorkspaceNameParameter"
        - $ref: "#/components/parameters/ClusterNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful. The response contains information
            about the Cluster.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cluster"
              examples:
                Get a cluster's information:
                  $ref: "#/components/examples/Get_a_cluster_s_information"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Cluster
    patch:
      description: Updates properties of a Cluster.
      operationId: Clusters_Update
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WorkspaceNameParameter"
        - $ref: "#/components/parameters/ClusterNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClusterUpdateParameters"
        description: Additional parameters for cluster update.
        required: true
      responses:
        "200":
          description: The operation was successful. The response contains the Cluster
            entity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cluster"
              examples:
                Resize a cluster:
                  $ref: "#/components/examples/Resize_a_cluster"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Cluster
    put:
      description: Creates a Cluster in the given Workspace.
      operationId: Clusters_Create
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WorkspaceNameParameter"
        - $ref: "#/components/parameters/ClusterNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClusterCreateParameters"
        description: The parameters to provide for the Cluster creation.
        required: true
      responses:
        "200":
          description: The operation was successful. The response contains the Cluster
            entity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cluster"
              examples:
                Create a cluster:
                  $ref: "#/components/examples/Create_a_cluster"
        "202":
          description: The operation will be completed asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Cluster
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/workspaces/{workspaceName}/clusters/{clusterName}/listRemoteLoginInformation":
    post:
      description: Get the IP address, port of all the compute nodes in the Cluster.
      operationId: Clusters_ListRemoteLoginInformation
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WorkspaceNameParameter"
        - $ref: "#/components/parameters/ClusterNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful. The response contains the list of IP
            addresses.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RemoteLoginInformationListResult"
              examples:
                "Get remote login information for a cluster's nodes ":
                  $ref: "#/components/examples/Get_remote_login_information_for_a_c\
                    luster_s_nodes_"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Cluster
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/workspaces/{workspaceName}/experiments":
    get:
      description: Gets a list of Experiments within the specified Workspace.
      operationId: Experiments_ListByWorkspace
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WorkspaceNameParameter"
        - $ref: "#/components/parameters/MaxResultsParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful. The response contains a list of
            experiments within the workspace.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExperimentListResult"
              examples:
                List experiments:
                  $ref: "#/components/examples/List_experiments"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Experiment
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/workspaces/{workspaceName}/experiments/{experimentName}":
    delete:
      description: Deletes an Experiment.
      operationId: Experiments_Delete
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WorkspaceNameParameter"
        - $ref: "#/components/parameters/ExperimentNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful.
        "202":
          description: The operation will be completed asynchronously.
        "204":
          description: No content.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Experiment
      x-ms-long-running-operation: true
    get:
      description: Gets information about an Experiment.
      operationId: Experiments_Get
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WorkspaceNameParameter"
        - $ref: "#/components/parameters/ExperimentNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful. The response contains information
            about the experiment.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Experiment"
              examples:
                Get an experiment information:
                  $ref: "#/components/examples/Get_an_experiment_information"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Experiment
    put:
      description: Creates an Experiment.
      operationId: Experiments_Create
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WorkspaceNameParameter"
        - $ref: "#/components/parameters/ExperimentNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful. The response contains the experiment
            entity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Experiment"
              examples:
                Create an experiment:
                  $ref: "#/components/examples/Create_an_experiment"
        "202":
          description: The operation will be completed asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Experiment
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/workspaces/{workspaceName}/experiments/{experimentName}/jobs":
    get:
      description: Gets a list of Jobs within the specified Experiment.
      operationId: Jobs_ListByExperiment
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WorkspaceNameParameter"
        - $ref: "#/components/parameters/ExperimentNameParameter"
        - $ref: "#/components/parameters/MaxResultsParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful. The response contains a list of
            ExperimentJob entities associated with the experiment.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobListResult"
              examples:
                List jobs in an experiment:
                  $ref: "#/components/examples/List_jobs_in_an_experiment"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Job
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/workspaces/{workspaceName}/experiments/{experimentName}/jobs/{jobName}":
    delete:
      description: Deletes a Job.
      operationId: Jobs_Delete
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WorkspaceNameParameter"
        - $ref: "#/components/parameters/ExperimentNameParameter"
        - $ref: "#/components/parameters/JobNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful.
        "202":
          description: The operation will be completed asynchronously.
        "204":
          description: No content.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Job
      x-ms-long-running-operation: true
    get:
      description: Gets information about a Job.
      operationId: Jobs_Get
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WorkspaceNameParameter"
        - $ref: "#/components/parameters/ExperimentNameParameter"
        - $ref: "#/components/parameters/JobNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful. The response contains the Job entity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
              examples:
                Get job's information:
                  $ref: "#/components/examples/Get_job_s_information"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Job
    put:
      description: Creates a Job in the given Experiment.
      operationId: Jobs_Create
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WorkspaceNameParameter"
        - $ref: "#/components/parameters/ExperimentNameParameter"
        - $ref: "#/components/parameters/JobNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JobCreateParameters"
        description: The parameters to provide for job creation.
        required: true
      responses:
        "200":
          description: The operation was successful. The response contains the job entity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
              examples:
                Create a job:
                  $ref: "#/components/examples/Create_a_job"
        "202":
          description: The operation will be completed asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Job
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/workspaces/{workspaceName}/experiments/{experimentName}/jobs/{jobName}/listOutputFiles":
    post:
      description: List all directories and files inside the given directory of the Job's
        output directory (if the output directory is on Azure File Share or
        Azure Storage Container).
      operationId: Jobs_ListOutputFiles
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WorkspaceNameParameter"
        - $ref: "#/components/parameters/ExperimentNameParameter"
        - $ref: "#/components/parameters/JobNameParameter"
        - $ref: "#/components/parameters/OutputDirectoryIdParameter"
        - $ref: "#/components/parameters/Directory"
        - $ref: "#/components/parameters/DownloadLinkExpiryParameter"
        - $ref: "#/components/parameters/MaxResultsParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful. The response contains the list of
            files.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileListResult"
              examples:
                List a job's files:
                  $ref: "#/components/examples/List_a_job_s_files"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Job
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/workspaces/{workspaceName}/experiments/{experimentName}/jobs/{jobName}/listRemoteLoginInformation":
    post:
      description: Gets a list of currently existing nodes which were used for the Job
        execution. The returned information contains the node ID, its public IP
        and SSH port.
      operationId: Jobs_ListRemoteLoginInformation
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WorkspaceNameParameter"
        - $ref: "#/components/parameters/ExperimentNameParameter"
        - $ref: "#/components/parameters/JobNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful. The response contains compute node
            remote login information.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RemoteLoginInformationListResult"
              examples:
                Get information about nodes which ran a job:
                  $ref: "#/components/examples/Get_information_about_nodes_which_ra\
                    n_a_job"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Job
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/workspaces/{workspaceName}/experiments/{experimentName}/jobs/{jobName}/terminate":
    post:
      description: Terminates a job.
      operationId: Jobs_Terminate
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WorkspaceNameParameter"
        - $ref: "#/components/parameters/ExperimentNameParameter"
        - $ref: "#/components/parameters/JobNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful.
        "202":
          description: The operation will be completed asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Job
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/workspaces/{workspaceName}/fileServers":
    get:
      description: Gets a list of File Servers associated with the specified workspace.
      operationId: FileServers_ListByWorkspace
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WorkspaceNameParameter"
        - $ref: "#/components/parameters/MaxResultsParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful. The response contains a list of File
            Servers and their properties.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileServerListResult"
              examples:
                Get a list of file servers:
                  $ref: "#/components/examples/Get_a_list_of_file_servers"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - FileServer
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/workspaces/{workspaceName}/fileServers/{fileServerName}":
    delete:
      description: Deletes a File Server.
      operationId: FileServers_Delete
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WorkspaceNameParameter"
        - $ref: "#/components/parameters/FileServerNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful.
        "202":
          description: The operation will be completed asynchronously.
        "204":
          description: No content.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - FileServer
      x-ms-long-running-operation: true
    get:
      description: Gets information about a File Server.
      operationId: FileServers_Get
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WorkspaceNameParameter"
        - $ref: "#/components/parameters/FileServerNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful. The response contains information
            about the FileServer.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileServer"
              examples:
                Get a file server's information:
                  $ref: "#/components/examples/Get_a_file_server_s_information"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - FileServer
    put:
      description: Creates a File Server in the given workspace.
      operationId: FileServers_Create
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/WorkspaceNameParameter"
        - $ref: "#/components/parameters/FileServerNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FileServerCreateParameters"
        description: The parameters to provide for File Server creation.
        required: true
      responses:
        "200":
          description: The operation was successful. The response contains the file server
            entity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileServer"
              examples:
                Create a file server:
                  $ref: "#/components/examples/Create_a_file_server"
        "202":
          description: The operation will be completed asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - FileServer
      x-ms-long-running-operation: true
servers:
  - url: https://management.azure.com
components:
  examples:
    Create_or_update_cluster:
      value:
        value:
          - currentValue: 5
            limit: 20
            name:
              localizedValue: Clusters
              value: Clusters
            unit: Count
          - currentValue: 49
            limit: 600
            name:
              localizedValue: Total Cluster Dedicated Regional vCPUs
              value: Total Cluster Dedicated Regional vCPUs
            unit: Count
          - currentValue: 1
            limit: 600
            name:
              localizedValue: Standard D Family Cluster Dedicated vCPUs
              value: Standard D Family Cluster Dedicated vCPUs
            unit: Count
          - currentValue: 0
            limit: 600
            name:
              localizedValue: Standard Dv2 Family Cluster Dedicated vCPUs
              value: Standard Dv2 Family Cluster Dedicated vCPUs
            unit: Count
          - currentValue: 48
            limit: 600
            name:
              localizedValue: Standard NC Family Cluster Dedicated vCPUs
              value: Standard NC Family Cluster Dedicated vCPUs
            unit: Count
          - currentValue: 0
            limit: 0
            name:
              localizedValue: Standard NCv2 Family Cluster Dedicated vCPUs
              value: Standard NCv2 Family Cluster Dedicated vCPUs
            unit: Count
          - currentValue: 0
            limit: 0
            name:
              localizedValue: Standard NCv3 Family Cluster Dedicated vCPUs
              value: Standard NCv3 Family Cluster Dedicated vCPUs
            unit: Count
          - currentValue: 0
            limit: 0
            name:
              localizedValue: Standard ND Family Cluster Dedicated vCPUs
              value: Standard ND Family Cluster Dedicated vCPUs
            unit: Count
          - currentValue: 0
            limit: 600
            name:
              localizedValue: Standard NV Family Cluster Dedicated vCPUs
              value: Standard NV Family Cluster Dedicated vCPUs
            unit: Count
          - currentValue: 0
            limit: 150
            name:
              localizedValue: Total Cluster Low Priority Regional vCPUs
              value: Total Cluster LowPriority Regional vCPUs
            unit: Count
          - currentValue: 0
            limit: 150
            name:
              localizedValue: Standard D Family Cluster Low Priority vCPUs
              value: Standard D Family Cluster LowPriority vCPUs
            unit: Count
          - currentValue: 0
            limit: 150
            name:
              localizedValue: Standard Dv2 Family Cluster Low Priority vCPUs
              value: Standard Dv2 Family Cluster LowPriority vCPUs
            unit: Count
          - currentValue: 0
            limit: 150
            name:
              localizedValue: Standard NC Family Cluster Low Priority vCPUs
              value: Standard NC Family Cluster LowPriority vCPUs
            unit: Count
          - currentValue: 0
            limit: 0
            name:
              localizedValue: Standard NCv2 Family Cluster Low Priority vCPUs
              value: Standard NCv2 Family Cluster LowPriority vCPUs
            unit: Count
          - currentValue: 0
            limit: 0
            name:
              localizedValue: Standard NCv3 Family Cluster Low Priority vCPUs
              value: Standard NCv3 Family Cluster LowPriority vCPUs
            unit: Count
          - currentValue: 0
            limit: 0
            name:
              localizedValue: Standard ND Family Cluster Low Priority vCPUs
              value: Standard ND Family Cluster LowPriority vCPUs
            unit: Count
          - currentValue: 0
            limit: 150
            name:
              localizedValue: Standard NV Family Cluster Low Priority vCPUs
              value: Standard NV Family Cluster LowPriority vCPUs
            unit: Count
    List_file_servers:
      value:
        value:
          - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/workspace/demo_workspace
            location: eastus
            name: demo_workspace
            properties:
              creationTime: 2017-09-27T22:28:08.325Z
              provisioningState: succeeded
              provisioningStateTransitionTime: 2017-09-27T22:28:08.327Z
            type: Microsoft.BatchAI/Workspaces
    List_workspaces:
      value:
        value:
          - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/workspace/demo_workspace
            location: eastus
            name: demo_workspace
            properties:
              creationTime: 2017-09-27T22:28:08.325Z
              provisioningState: succeeded
              provisioningStateTransitionTime: 2017-09-27T22:28:08.327Z
            type: Microsoft.BatchAI/Workspaces
    Get_a_workspace_information:
      value:
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/workspaces/demo_workspace
        location: eastus
        name: demo_workspace
        properties:
          creationTime: 2017-09-27T21:50:03.828Z
          provisioningState: succeeded
          provisioningStateTransitionTime: 2017-09-27T21:50:03.828Z
        type: Microsoft.BatchAI/Workspace
    Update_workspace_tags:
      value:
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/workspaces/demo_workspace
        location: eastus
        name: demo_worksapce
        properties:
          creationTime: 2017-09-27T21:50:03.828Z
          provisioningState: succeeded
          provisioningStateTransitionTime: 2017-09-27T21:50:03.828Z
        tags:
          key1: value1
        type: Microsoft.BatchAI/Workspaces
    Create_a_workspace:
      value:
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/workspaces/demo_workspace
        location: eastus
        name: demo_worksapce
        properties:
          creationTime: 2017-09-27T21:50:03.828Z
          provisioningState: succeeded
          provisioningStateTransitionTime: 2017-09-27T21:50:03.828Z
        type: Microsoft.BatchAI/Workspaces
    Get_a_list_of_cluster_in_a_workspace:
      value:
        value:
          - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/workspace/demo_workspace/clusters/demo_cluster
            name: demo_cluster
            properties:
              allocationState: resizing
              allocationStateTransitionTime: 2017-09-27T22:28:08.998Z
              creationTime: 2017-09-27T22:28:07.645Z
              currentNodeCount: 0
              nodeSetup:
                mountVolumes:
                  azureFileShares:
                    - accountName: storage_account_name
                      azureFileUrl: https://storage_account_name.file.core.windows.net/azure_file_share_name
                      credentials: {}
                      directoryMode: "0777"
                      fileMode: "0777"
                      relativeMountPath: azfiles
              nodeStateCounts:
                idleNodeCount: 0
                leavingNodeCount: 0
                preparingNodeCount: 0
                runningNodeCount: 0
                unusableNodeCount: 0
              provisioningState: succeeded
              provisioningStateTransitionTime: 2017-09-27T22:28:08.327Z
              scaleSettings:
                manual:
                  nodeDeallocationOption: requeue
                  targetNodeCount: 1
              userAccountSettings:
                adminUserName: admin_user_name
              virtualMachineConfiguration:
                imageReference:
                  offer: UbuntuServer
                  publisher: Canonical
                  sku: 16.04-LTS
                  version: latest
              vmPriority: dedicated
              vmSize: STANDARD_NC6
            type: Microsoft.BatchAI/Clusters
    Get_a_cluster_s_information:
      value:
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/workspaces/demo_workspace/clusters/demo_cluster
        name: demo_cluster
        properties:
          allocationState: resizing
          allocationStateTransitionTime: 2017-09-27T21:50:04.521Z
          creationTime: 2017-09-27T21:50:02.377Z
          currentNodeCount: 0
          nodeSetup:
            mountVolumes:
              azureFileShares:
                - accountName: storage_account_name
                  azureFileUrl: https://storage_account_name.file.core.windows.net/azure_file_share_name
                  credentials: {}
                  directoryMode: "0777"
                  fileMode: "0777"
                  relativeMountPath: azfiles
              fileServers:
                - fileServer:
                    id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/workspaces/demo_workspace/fileservers/fileservercedd134b
                  mountOptions: rw
                  relativeMountPath: nfs
          nodeStateCounts:
            idleNodeCount: 0
            leavingNodeCount: 0
            preparingNodeCount: 0
            runningNodeCount: 0
            unusableNodeCount: 0
          provisioningState: succeeded
          provisioningStateTransitionTime: 2017-09-27T21:50:03.828Z
          scaleSettings:
            manual:
              nodeDeallocationOption: requeue
              targetNodeCount: 1
          subnet:
            id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.Network/virtualNetworks/7feb1976-8c31-4f1f-bea2-86cb1839a7bavnet/subnets/Subnet-1
          userAccountSettings:
            adminUserName: admin_user_name
          virtualMachineConfiguration:
            imageReference:
              offer: UbuntuServer
              publisher: Canonical
              sku: 16.04-LTS
              version: latest
          vmPriority: dedicated
          vmSize: STANDARD_NC6
        type: Microsoft.BatchAI/Clusters
    Resize_a_cluster:
      value:
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/workspaces/demo_workspace/clusters/demo_cluster
        name: demo_cluster
        properties:
          allocationState: steady
          allocationStateTransitionTime: 2017-09-27T21:43:57.664Z
          creationTime: 2017-09-27T21:43:55.215Z
          currentNodeCount: 0
          nodeSetup:
            mountVolumes:
              azureFileShares:
                - accountName: storage_account_name
                  azureFileUrl: https://storage_account_name.file.core.windows.net/azure_file_share_name
                  credentials: {}
                  directoryMode: "0777"
                  fileMode: "0777"
                  relativeMountPath: azfiles
          nodeStateCounts:
            idleNodeCount: 0
            leavingNodeCount: 0
            preparingNodeCount: 0
            runningNodeCount: 0
            unusableNodeCount: 0
          provisioningState: succeeded
          provisioningStateTransitionTime: 2017-09-27T21:43:56.238Z
          scaleSettings:
            autoScale:
              initialNodeCount: 0
              maximumNodeCount: 10
              minimumNodeCount: 0
          userAccountSettings:
            adminUserName: admin_user_name
          virtualMachineConfiguration:
            imageReference:
              offer: UbuntuServer
              publisher: Canonical
              sku: 16.04-LTS
              version: latest
          vmPriority: dedicated
          vmSize: STANDARD_NC6
        type: Microsoft.BatchAI/Clusters
    Create_a_cluster:
      value:
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/workspaces/demo_workspace/clusters/demo_cluster
        name: demo_cluster
        properties:
          allocationState: resizing
          allocationStateTransitionTime: 2017-09-27T21:50:04.521Z
          creationTime: 2017-09-27T21:50:02.377Z
          currentNodeCount: 0
          nodeSetup:
            mountVolumes:
              azureFileShares:
                - accountName: storage_account_name
                  azureFileUrl: https://storage_account_name.file.core.windows.net/azure_file_share_name
                  credentials: {}
                  directoryMode: "0777"
                  fileMode: "0777"
                  relativeMountPath: azfiles
              fileServers:
                - fileServer:
                    id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/workspaces/demo_workspaces/fileservers/fileservercedd134b
                  mountOptions: rw
                  relativeMountPath: nfs
          nodeStateCounts:
            idleNodeCount: 0
            leavingNodeCount: 0
            preparingNodeCount: 0
            runningNodeCount: 0
            unusableNodeCount: 0
          provisioningState: succeeded
          provisioningStateTransitionTime: 2017-09-27T21:50:03.828Z
          scaleSettings:
            manual:
              nodeDeallocationOption: requeue
              targetNodeCount: 1
          subnet:
            id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.Network/virtualNetworks/7feb1976-8c31-4f1f-bea2-86cb1839a7bavnet/subnets/Subnet-1
          userAccountSettings:
            adminUserName: admin_user_name
          virtualMachineConfiguration:
            imageReference:
              offer: UbuntuServer
              publisher: Canonical
              sku: 16.04-LTS
              version: latest
          vmPriority: dedicated
          vmSize: STANDARD_NC6
        type: Microsoft.BatchAI/Clusters
    Get_remote_login_information_for_a_cluster_s_nodes_:
      value:
        value:
          - ipAddress: 13.84.190.124
            nodeId: tvm-3601533753_1-20170719t162906z
            port: 50000
          - ipAddress: 13.84.190.124
            nodeId: tvm-3601533753_2-20170719t162906z
            port: 50001
    List_experiments:
      value:
        value:
          - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/workspace/demo_workspace/experiments/demo_experiment
            name: demo_experiment
            properties:
              creationTime: 2017-09-27T22:27:52.611Z
              provisioningState: succeeded
              provisioningStateTransitionTime: 2017-09-27T22:28:08.327Z
            type: Microsoft.BatchAI/Experiments
    Get_an_experiment_information:
      value:
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/workspace/demo_workspace/experiments/demo_experiment
        name: demo_experiment
        properties:
          creationTime: 2017-09-27T22:27:52.611Z
          provisioningState: succeeded
          provisioningStateTransitionTime: 2017-09-27T22:28:08.327Z
        type: Microsoft.BatchAI/Experiments
    Create_an_experiment:
      value:
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/workspaces/demo_workspace/experiments/demo_experiment
        name: demo_experiment
        properties:
          creationTime: 2017-09-27T21:49:52.611Z
          provisioningState: succeeded
          provisioningStateTransitionTime: 2017-09-27T21:50:03.828Z
        type: Microsoft.BatchAI/Experiments
    List_jobs_in_an_experiment:
      value:
        value:
          - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/workspaces/demo_workspace/jobs/demo_job
            name: demo_job
            properties:
              cluster:
                id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/workspaces/demo_workspace/clusters/demo_cluster
              constraints:
                maxWallClockTime: P7D
              containerSettings:
                imageSourceRegistry:
                  image: ubuntu
              creationTime: 2017-09-27T23:36:52.611Z
              customToolkitSettings:
                commandLine: echo hi | tee $AZ_BATCHAI_OUTPUT_OUTPUTS/hi.txt
              executionInfo:
                startTime: 2017-09-27T23:36:54.115Z
              executionState: running
              executionStateTransitionTime: 2017-09-27T23:36:56.395Z
              inputDirectories:
                - id: INPUT
                  path: $AZ_BATCHAI_MOUNT_ROOT/azfiles/input
              jobOutputDirectoryPathSegment: 00000000-0000-0000-0000-000000000000/demo_resource_group/workspaces/demo_workspace/experiments/demo_experiment/jobs/demo_job/00000000-0000-0000-0000-000000000000
              nodeCount: 1
              outputDirectories:
                - id: OUTPUTS
                  pathPrefix: $AZ_BATCHAI_MOUNT_ROOT/azfiles/
                  pathSuffix: files
              provisioningState: succeeded
              provisioningStateTransitionTime: 2017-09-27T23:36:53.701Z
              schedulingPriority: normal
              stdOutErrPathPrefix: $AZ_BATCHAI_MOUNT_ROOT/azfiles
              toolType: custom
            type: Microsoft.BatchAI/Jobs
    Get_job_s_information:
      value:
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/workspaces/demo_workspace/experiments/demo_experiment/jobs/demo_job
        name: demo_job
        properties:
          cluster:
            id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/clusters/demo_cluster
          constraints:
            maxWallClockTime: P7D
          containerSettings:
            imageSourceRegistry:
              image: ubuntu
          creationTime: 2017-09-27T23:36:52.611Z
          customToolkitSettings:
            commandLine: echo hi | tee $AZ_BATCHAI_OUTPUT_OUTPUTS/hi.txt
          executionInfo:
            startTime: 2017-09-27T23:36:54.115Z
          executionState: running
          executionStateTransitionTime: 2017-09-27T23:36:56.395Z
          inputDirectories:
            - id: INPUT
              path: $AZ_BATCHAI_MOUNT_ROOT/azfiles/input
          jobOutputDirectoryPathSegment: 00000000-0000-0000-0000-000000000000/demo_resource_group/workspaces/demo_workspace/experiments/demo_experiment/jobs/demo_job/00000000-0000-0000-0000-000000000000
          nodeCount: 1
          outputDirectories:
            - id: OUTPUTS
              pathPrefix: $AZ_BATCHAI_MOUNT_ROOT/azfiles/
              pathSuffix: files
          provisioningState: succeeded
          provisioningStateTransitionTime: 2017-09-27T23:36:53.701Z
          schedulingPriority: normal
          stdOutErrPathPrefix: $AZ_BATCHAI_MOUNT_ROOT/azfiles
          toolType: custom
        type: Microsoft.BatchAI/Jobs
    Create_a_job:
      value:
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/workspaces/demo_workspace/experiments/demo_experiment/jobs/demo_job
        name: demo_job
        properties:
          cluster:
            id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/workspaces/demo_workspace/clusters/demo_cluster
          constraints:
            maxWallClockTime: P7D
          containerSettings:
            imageSourceRegistry:
              image: ubuntu
          creationTime: 2017-09-27T23:36:52.611Z
          customToolkitSettings:
            commandLine: echo hi | tee $AZ_BATCHAI_OUTPUT_OUTPUTS/hi.txt
          executionInfo:
            startTime: 2017-09-27T23:36:54.115Z
          executionState: running
          executionStateTransitionTime: 2017-09-27T23:36:56.395Z
          inputDirectories:
            - id: INPUT
              path: $AZ_BATCHAI_MOUNT_ROOT/azfiles/input
          jobOutputDirectoryPathSegment: 00000000-0000-0000-0000-000000000000/demo_resource_group/workspaces/demo_workspace/00000000-0000-0000-0000-000000000000/experiments/demo_experiment/00000000-0000-0000-0000-000000000000/jobs/demo_job/00000000-0000-0000-0000-000000000000
          nodeCount: 1
          outputDirectories:
            - id: OUTPUTS
              pathPrefix: $AZ_BATCHAI_MOUNT_ROOT/azfiles/
              pathSuffix: files
          provisioningState: succeeded
          provisioningStateTransitionTime: 2017-09-27T23:36:53.701Z
          schedulingPriority: normal
          stdOutErrPathPrefix: $AZ_BATCHAI_MOUNT_ROOT/azfiles
          toolType: custom
        type: Microsoft.BatchAI/Job
    List_a_job_s_files:
      value:
        value:
          - downloadUrl: https://storage_account_name.file.core.windows.net/share/00000000-0000-0000-0000-000000000000/test_mgmt_batchai_jobs_test_job_preparation_hoste0e613b6/jobs/job/host_prep_stderr.txt?sv=2016-05-31&sr=f&sig=CNPJmjDQT9Anld9%2FdnQ52ZBpfOff2el8r4el6J%2BnpJE%3D&se=2017-09-28T01%3A22%3A35Z&sp=rl
            fileType: file
            name: stderr-job_prep.txt
            properties:
              contentLength: 0
              lastModified: 2017-09-28T00:22:19Z
          - downloadUrl: https://storage_account_name.file.core.windows.net/share/00000000-0000-0000-0000-000000000000/test_mgmt_batchai_jobs_test_job_preparation_hoste0e613b6/jobs/job/host_prep_stdout.txt?sv=2016-05-31&sr=f&sig=yK%2F5acWSTdcmBZGGL9%2F3IqeZ7N%2B1sRXfwB%2FaCkoRS%2Bc%3D&se=2017-09-28T01%3A22%3A35Z&sp=rl
            fileType: file
            name: stdout-job_prep.txt
            properties:
              contentLength: 720
              lastModified: 2017-09-28T00:22:19Z
          - downloadUrl: https://storage_account_name.file.core.windows.net/share/00000000-0000-0000-0000-000000000000/test_mgmt_batchai_jobs_test_job_preparation_hoste0e613b6/jobs/job/stderr.txt?sv=2016-05-31&sr=f&sig=TdvHhdQjvWWA0Z7aPb0oZpPgGbBPOyDarNXWHFnRS3c%3D&se=2017-09-28T01%3A22%3A35Z&sp=rl
            fileType: file
            name: stderr.txt
            properties:
              contentLength: 0
              lastModified: 2017-09-28T00:22:19Z
          - downloadUrl: https://storage_account_name.file.core.windows.net/share/00000000-0000-0000-0000-000000000000/test_mgmt_batchai_jobs_test_job_preparation_hoste0e613b6/jobs/job/stdout.txt?sv=2016-05-31&sr=f&sig=nyydEjNnYpQfovknJc%2B5G%2F05g0IV4acWKlfkM35lh00%3D&se=2017-09-28T01%3A22%3A35Z&sp=rl
            fileType: file
            name: stdout.txt
            properties:
              contentLength: 32
              lastModified: 2017-09-28T00:22:19Z
          - fileType: directory
            name: counters
    Get_information_about_nodes_which_ran_a_job:
      value:
        value:
          - ipAddress: 13.84.190.124
            nodeId: tvm-3601533753_1-20170719t162906z
            port: 50000
    Get_a_list_of_file_servers:
      value:
        value:
          - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/workspaces/demo_workspace/fileservers/fileservercedd134b
            name: fileservercedd134b
            properties:
              creationTime: 2017-09-27T21:45:28.159Z
              dataDisks:
                cachingType: none
                diskCount: 2
                diskSizeInGB: 10
                storageAccountType: Standard_LRS
              mountSettings:
                fileServerInternalIP: 10.0.0.4
                fileServerPublicIP: 13.90.141.66
                mountPoint: /mnt/data
              provisioningState: succeeded
              provisioningStateTransitionTime: 2017-09-27T21:49:25.416Z
              sshConfiguration:
                userAccountSettings:
                  adminUserName: admin_user_name
              subnet:
                id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.Network/virtualNetworks/7feb1976-8c31-4f1f-bea2-86cb1839a7bavnet/subnets/Subnet-1
              vmSize: STANDARD_NC6
            type: Microsoft.BatchAI/FileServers
    Get_a_file_server_s_information:
      value:
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/workspaces/demo_workspace/fileservers/fileservercedd134b
        name: fileservercedd134b
        properties:
          creationTime: 2017-09-27T21:45:28.159Z
          dataDisks:
            cachingType: none
            diskCount: 2
            diskSizeInGB: 10
            storageAccountType: Standard_LRS
          mountSettings:
            fileServerInternalIP: 10.0.0.4
            fileServerPublicIP: 13.90.141.66
            mountPoint: /mnt/data
          provisioningState: succeeded
          provisioningStateTransitionTime: 2017-09-27T21:49:25.416Z
          sshConfiguration:
            userAccountSettings:
              adminUserName: admin_user_name
          subnet:
            id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.Network/virtualNetworks/7feb1976-8c31-4f1f-bea2-86cb1839a7bavnet/subnets/Subnet-1
          vmSize: STANDARD_NC6
        type: Microsoft.BatchAI/FileServers
    Create_a_file_server:
      value:
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.BatchAI/workspaces/demo_workspace/fileservers/fileservercedd134b
        name: demo_nfs
        properties:
          creationTime: 2017-09-27T21:45:28.159Z
          dataDisks:
            cachingType: none
            diskCount: 2
            diskSizeInGB: 10
            storageAccountType: Standard_LRS
          mountSettings:
            fileServerInternalIP: 10.0.0.4
            fileServerPublicIP: 13.90.141.66
            mountPoint: /mnt/data
          provisioningState: succeeded
          provisioningStateTransitionTime: 2017-09-27T21:49:25.416Z
          sshConfiguration:
            userAccountSettings:
              adminUserName: admin_user_name
          subnet:
            id: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/demo_resource_group/providers/Microsoft.Network/virtualNetworks/7feb1976-8c31-4f1f-bea2-86cb1839a7bavnet/subnets/Subnet-1
          vmSize: STANDARD_NC6
        type: Microsoft.BatchAI/FileServers
  parameters:
    ApiVersionParameter:
      description: Specifies the version of API used for this request.
      in: query
      name: api-version
      required: true
      schema:
        type: string
      examples:
        Create or update cluster:
          value: 2018-05-01
        List file servers:
          value: 2018-05-01
        List workspaces:
          value: 2018-05-01
        Delete a workspace:
          value: 2018-05-01
        Get a workspace information:
          value: 2018-05-01
        Update workspace tags:
          value: 2018-05-01
        Create a workspace:
          value: 2018-05-01
        Get a list of cluster in a workspace:
          value: 2018-05-01
        Delete a cluster:
          value: 2018-05-01
        Get a cluster's information:
          value: 2018-05-01
        Resize a cluster:
          value: 2018-05-01
        Create a cluster:
          value: 2018-05-01
        "Get remote login information for a cluster's nodes ":
          value: 2018-05-01
        List experiments:
          value: 2018-05-01
        Delete an experiment:
          value: 2018-05-01
        Get an experiment information:
          value: 2018-05-01
        Create an experiment:
          value: 2018-05-01
        List jobs in an experiment:
          value: 2018-05-01
        Delete a job:
          value: 2018-05-01
        Get job's information:
          value: 2018-05-01
        Create a job:
          value: 2018-05-01
        List a job's files:
          value: 2018-05-01
        Get information about nodes which ran a job:
          value: 2018-05-01
        Terminate a job:
          value: 2018-05-01
        Get a list of file servers:
          value: 2018-05-01
        Delete a file server:
          value: 2018-05-01
        Get a file server's information:
          value: 2018-05-01
        Create a file server:
          value: 2018-05-01
    ClusterNameParameter:
      description: The name of the cluster within the specified resource group. Cluster
        names can only contain a combination of alphanumeric characters along
        with dash (-) and underscore (_). The name must be from 1 through 64
        characters long.
      in: path
      name: clusterName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
        minLength: 1
        maxLength: 64
        pattern: ^[-\w_]+$
      examples:
        Delete a cluster:
          value: demo_cluster
        Get a cluster's information:
          value: demo_cluster
        Resize a cluster:
          value: demo_cluster
        Create a cluster:
          value: demo_cluster
        "Get remote login information for a cluster's nodes ":
          value: demo_cluster
    Directory:
      description: The path to the directory.
      in: query
      name: directory
      required: false
      x-ms-parameter-grouping:
        postfix: Options
      x-ms-parameter-location: method
      schema:
        type: string
        default: .
    DownloadLinkExpiryParameter:
      description: The number of minutes after which the download link will expire.
      in: query
      name: linkexpiryinminutes
      required: false
      x-ms-parameter-grouping:
        postfix: Options
      x-ms-parameter-location: method
      schema:
        type: integer
        format: int32
        minimum: 5
        maximum: 600
        default: 60
    ExperimentNameParameter:
      description: The name of the experiment. Experiment names can only contain a
        combination of alphanumeric characters along with dash (-) and
        underscore (_). The name must be from 1 through 64 characters long.
      in: path
      name: experimentName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
        minLength: 1
        maxLength: 64
        pattern: ^[-\w_]+$
      examples:
        Delete an experiment:
          value: demo_experiment
        Get an experiment information:
          value: demo_experiment
        Create an experiment:
          value: demo_experiment
        List jobs in an experiment:
          value: demo_experimnet
        Delete a job:
          value: demo_experiment
        Get job's information:
          value: demo_experiment
        Create a job:
          value: demo_experiment
        List a job's files:
          value: demo_experiment
        Get information about nodes which ran a job:
          value: demo_experiment
        Terminate a job:
          value: demo_experiment
    FileServerNameParameter:
      description: The name of the file server within the specified resource group. File
        server names can only contain a combination of alphanumeric characters
        along with dash (-) and underscore (_). The name must be from 1 through
        64 characters long.
      in: path
      name: fileServerName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
        minLength: 1
        maxLength: 64
        pattern: ^[-\w_]+$
      examples:
        Delete a file server:
          value: demo_nfs
        Get a file server's information:
          value: demo_nfs
        Create a file server:
          value: demo_nfs
    JobNameParameter:
      description: The name of the job within the specified resource group. Job names can
        only contain a combination of alphanumeric characters along with dash
        (-) and underscore (_). The name must be from 1 through 64 characters
        long.
      in: path
      name: jobName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
        minLength: 1
        maxLength: 64
        pattern: ^[-\w_]+$
      examples:
        Delete a job:
          value: demo_job
        Get job's information:
          value: demo_job
        Create a job:
          value: demo_job
        List a job's files:
          value: demo_job
        Get information about nodes which ran a job:
          value: demo_job
        Terminate a job:
          value: demo_job
    MaxResultsParameter:
      description: The maximum number of items to return in the response. A maximum of 1000
        files can be returned.
      in: query
      name: maxresults
      required: false
      x-ms-client-name: maxResults
      x-ms-parameter-grouping:
        postfix: Options
      x-ms-parameter-location: method
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 1000
        default: 1000
    OutputDirectoryIdParameter:
      description: Id of the job output directory. This is the OutputDirectory-->id
        parameter that is given by the user during Create Job.
      in: query
      name: outputdirectoryid
      required: true
      x-ms-parameter-grouping:
        postfix: Options
      x-ms-parameter-location: method
      schema:
        type: string
      examples:
        List a job's files:
          value: stdouterr
    ResourceGroupNameParameter:
      description: Name of the resource group to which the resource belongs.
      in: path
      name: resourceGroupName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
        pattern: ^[-\w\._]+$
      examples:
        List workspaces:
          value: demo_resource_group
        Delete a workspace:
          value: demo_resource_group
        Get a workspace information:
          value: demo_resource_group
        Update workspace tags:
          value: demo_resource_group
        Create a workspace:
          value: demo_resource_group
        Get a list of cluster in a workspace:
          value: demo_resource_group
        Delete a cluster:
          value: demo_resource_group
        Get a cluster's information:
          value: demo_resource_group
        Resize a cluster:
          value: demo_resource_group
        Create a cluster:
          value: demo_resource_group
        "Get remote login information for a cluster's nodes ":
          value: demo_resource_group
        List experiments:
          value: demo_resource_group
        Delete an experiment:
          value: demo_resource_group
        Get an experiment information:
          value: demo_resource_group
        Create an experiment:
          value: demo_resource_group
        List jobs in an experiment:
          value: demo_resource_group
        Delete a job:
          value: demo_resource_group
        Get job's information:
          value: demo_resource_group
        Create a job:
          value: demo_resource_group
        List a job's files:
          value: demo_resource_group
        Get information about nodes which ran a job:
          value: demo_resource_group
        Terminate a job:
          value: demo_resource_group
        Get a list of file servers:
          value: demo_resource_group
        Delete a file server:
          value: demo_resource_group
        Get a file server's information:
          value: demo_resource_group
        Create a file server:
          value: demo_resource_group
    SubscriptionIdParameter:
      description: The subscriptionID for the Azure user.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
      examples:
        Create or update cluster:
          value: 00000000-0000-0000-0000-000000000000
        List file servers:
          value: 00000000-0000-0000-0000-000000000000
        List workspaces:
          value: 00000000-0000-0000-0000-000000000000
        Delete a workspace:
          value: 00000000-0000-0000-0000-000000000000
        Get a workspace information:
          value: 00000000-0000-0000-0000-000000000000
        Update workspace tags:
          value: 00000000-0000-0000-0000-000000000000
        Create a workspace:
          value: 00000000-0000-0000-0000-000000000000
        Get a list of cluster in a workspace:
          value: 00000000-0000-0000-0000-000000000000
        Delete a cluster:
          value: 00000000-0000-0000-0000-000000000000
        Get a cluster's information:
          value: 00000000-0000-0000-0000-000000000000
        Resize a cluster:
          value: 00000000-0000-0000-0000-000000000000
        Create a cluster:
          value: 00000000-0000-0000-0000-000000000000
        "Get remote login information for a cluster's nodes ":
          value: 00000000-0000-0000-0000-000000000000
        List experiments:
          value: 00000000-0000-0000-0000-000000000000
        Delete an experiment:
          value: 00000000-0000-0000-0000-000000000000
        Get an experiment information:
          value: 00000000-0000-0000-0000-000000000000
        Create an experiment:
          value: 00000000-0000-0000-0000-000000000000
        List jobs in an experiment:
          value: 00000000-0000-0000-0000-000000000000
        Delete a job:
          value: 00000000-0000-0000-0000-000000000000
        Get job's information:
          value: 00000000-0000-0000-0000-000000000000
        Create a job:
          value: 00000000-0000-0000-0000-000000000000
        List a job's files:
          value: 00000000-0000-0000-0000-000000000000
        Get information about nodes which ran a job:
          value: 00000000-0000-0000-0000-000000000000
        Terminate a job:
          value: 00000000-0000-0000-0000-000000000000
        Get a list of file servers:
          value: 00000000-0000-0000-0000-000000000000
        Delete a file server:
          value: 00000000-0000-0000-0000-000000000000
        Get a file server's information:
          value: 00000000-0000-0000-0000-000000000000
        Create a file server:
          value: 00000000-0000-0000-0000-000000000000
    WorkspaceNameParameter:
      description: The name of the workspace. Workspace names can only contain a
        combination of alphanumeric characters along with dash (-) and
        underscore (_). The name must be from 1 through 64 characters long.
      in: path
      name: workspaceName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
        minLength: 1
        maxLength: 64
        pattern: ^[-\w_]+$
      examples:
        Delete a workspace:
          value: demo_workspace
        Get a workspace information:
          value: demo_workspace
        Update workspace tags:
          value: demo_workspace
        Create a workspace:
          value: demo_workspace
        Get a list of cluster in a workspace:
          value: demo_workspace
        Delete a cluster:
          value: demo_workspace
        Get a cluster's information:
          value: demo_workspace
        Resize a cluster:
          value: demo_workspace
        Create a cluster:
          value: demo_workspace
        "Get remote login information for a cluster's nodes ":
          value: demo_workspace
        List experiments:
          value: demo_workspace
        Delete an experiment:
          value: demo_workspace
        Get an experiment information:
          value: demo_workspace
        Create an experiment:
          value: demo_workspace
        List jobs in an experiment:
          value: demo_workspace
        Delete a job:
          value: demo_workspace
        Get job's information:
          value: demo_workspace
        Create a job:
          value: demo_workspace
        List a job's files:
          value: demo_workspace
        Get information about nodes which ran a job:
          value: demo_workspace
        Terminate a job:
          value: demo_workspace
        Get a list of file servers:
          value: demo_workspace
        Delete a file server:
          value: demo_workspace
        Get a file server's information:
          value: demo_workspace
        Create a file server:
          value: demo_workspace
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    AppInsightsReference:
      description: Azure Application Insights information for performance counters
        reporting.
      properties:
        component:
          $ref: "#/components/schemas/ResourceId"
        instrumentationKey:
          description: Value of the Azure Application Insights instrumentation key.
          title: Instrumentation Key.
          type: string
        instrumentationKeySecretReference:
          $ref: "#/components/schemas/KeyVaultSecretReference"
      required:
        - component
    AutoScaleSettings:
      description: Auto-scale settings for the cluster. The system automatically scales the
        cluster up and down (within minimumNodeCount and maximumNodeCount) based
        on the number of queued and running jobs assigned to the cluster.
      properties:
        initialNodeCount:
          default: 0
          description: "The number of compute nodes to allocate on cluster creation. Note
            that this value is used only during cluster creation. Default: 0."
          format: int32
          title: Initial node count.
          type: integer
        maximumNodeCount:
          description: The maximum number of compute nodes the cluster can have.
          format: int32
          title: Maximum node count.
          type: integer
        minimumNodeCount:
          description: The minimum number of compute nodes the Batch AI service will try to
            allocate for the cluster. Note, the actual number of nodes can be
            less than the specified value if the subscription has not enough
            quota to fulfill the request.
          format: int32
          title: Minimum node count.
          type: integer
      required:
        - minimumNodeCount
        - maximumNodeCount
    AzureBlobFileSystemReference:
      description: Azure Blob Storage Container mounting configuration.
      properties:
        accountName:
          description: Name of the Azure storage account.
          title: Account name.
          type: string
        containerName:
          description: Name of the Azure Blob Storage container to mount on the cluster.
          title: Container name.
          type: string
        credentials:
          $ref: "#/components/schemas/AzureStorageCredentialsInfo"
        mountOptions:
          description: Mount options for mounting blobfuse file system.
          title: Mount options.
          type: string
        relativeMountPath:
          description: The relative path on the compute node where the Azure File container
            will be mounted. Note that all cluster level containers will be
            mounted under $AZ_BATCHAI_MOUNT_ROOT location and all job level
            containers will be mounted under $AZ_BATCHAI_JOB_MOUNT_ROOT.
          title: Relative mount path.
          type: string
      required:
        - accountName
        - containerName
        - credentials
        - relativeMountPath
    AzureFileShareReference:
      description: Azure File Share mounting configuration.
      properties:
        accountName:
          description: Name of the Azure storage account.
          title: Account name.
          type: string
        azureFileUrl:
          description: URL to access the Azure File.
          title: Azure File URL.
          type: string
        credentials:
          $ref: "#/components/schemas/AzureStorageCredentialsInfo"
        directoryMode:
          default: "0777"
          description: "File mode for directories on the mounted file share. Default value:
            0777."
          title: Directory mode.
          type: string
        fileMode:
          default: "0777"
          description: "File mode for files on the mounted file share. Default value: 0777."
          title: File mode.
          type: string
        relativeMountPath:
          description: The relative path on the compute node where the Azure File share
            will be mounted. Note that all cluster level file shares will be
            mounted under $AZ_BATCHAI_MOUNT_ROOT location and all job level file
            shares will be mounted under $AZ_BATCHAI_JOB_MOUNT_ROOT.
          title: Relative mount path.
          type: string
      required:
        - accountName
        - azureFileUrl
        - credentials
        - relativeMountPath
    AzureStorageCredentialsInfo:
      description: Azure storage account credentials.
      properties:
        accountKey:
          description: Storage account key. One of accountKey or accountKeySecretReference
            must be specified.
          title: Account key.
          type: string
        accountKeySecretReference:
          $ref: "#/components/schemas/KeyVaultSecretReference"
    BatchAIError:
      description: An error response from the Batch AI service.
      properties:
        code:
          description: An identifier of the error. Codes are invariant and are intended to
            be consumed programmatically.
          readOnly: true
          type: string
        details:
          description: A list of additional details about the error.
          items:
            $ref: "#/components/schemas/NameValuePair"
          readOnly: true
          type: array
        message:
          description: A message describing the error, intended to be suitable for display
            in a user interface.
          readOnly: true
          type: string
    CNTKsettings:
      description: CNTK (aka Microsoft Cognitive Toolkit) job settings.
      properties:
        commandLineArgs:
          description: Command line arguments that need to be passed to the python script
            or cntk executable.
          title: Command line arguments.
          type: string
        configFilePath:
          description: Specifies the path of the BrainScript config file. This property can
            be specified only if the languageType is 'BrainScript'.
          title: Config file path.
          type: string
        languageType:
          description: The language to use for launching CNTK (aka Microsoft Cognitive
            Toolkit) job. Valid values are 'BrainScript' or 'Python'.
          title: Language type.
          type: string
        processCount:
          description: Number of processes to launch for the job execution. The default
            value for this property is equal to nodeCount property
          format: int32
          title: Process count.
          type: integer
        pythonInterpreterPath:
          description: The path to the Python interpreter. This property can be specified
            only if the languageType is 'Python'.
          title: Python interpreter path.
          type: string
        pythonScriptFilePath:
          description: Python script to execute. This property can be specified only if the
            languageType is 'Python'.
          title: Python script file path.
          type: string
    Caffe2Settings:
      description: Caffe2 job settings.
      properties:
        commandLineArgs:
          description: Command line arguments that need to be passed to the python script.
          title: Command line arguments.
          type: string
        pythonInterpreterPath:
          description: The path to the Python interpreter.
          title: Python interpreter path.
          type: string
        pythonScriptFilePath:
          description: The python script to execute.
          title: Python script file path.
          type: string
      required:
        - pythonScriptFilePath
    CaffeSettings:
      description: Caffe job settings.
      properties:
        commandLineArgs:
          description: Command line arguments that need to be passed to the Caffe job.
          title: Command line arguments.
          type: string
        configFilePath:
          description: Path of the config file for the job. This property cannot be
            specified if pythonScriptFilePath is specified.
          title: Config file path.
          type: string
        processCount:
          description: Number of processes to launch for the job execution. The default
            value for this property is equal to nodeCount property
          format: int32
          title: Process count.
          type: integer
        pythonInterpreterPath:
          description: The path to the Python interpreter. The property can be specified
            only if the pythonScriptFilePath is specified.
          title: Python interpreter path.
          type: string
        pythonScriptFilePath:
          description: Python script to execute. This property cannot be specified if
            configFilePath is specified.
          title: Python script file path.
          type: string
    ChainerSettings:
      description: Chainer job settings.
      properties:
        commandLineArgs:
          description: Command line arguments that need to be passed to the python script.
          title: Command line arguments.
          type: string
        processCount:
          description: Number of processes to launch for the job execution. The default
            value for this property is equal to nodeCount property
          format: int32
          title: Process count.
          type: integer
        pythonInterpreterPath:
          description: The path to the Python interpreter.
          title: Python interpreter path.
          type: string
        pythonScriptFilePath:
          description: The python script to execute.
          title: Python script file path.
          type: string
      required:
        - pythonScriptFilePath
    CloudError:
      description: An error response from the Batch AI service.
      properties:
        error:
          $ref: "#/components/schemas/CloudErrorBody"
      x-ms-external: true
    CloudErrorBody:
      description: An error response from the Batch AI service.
      properties:
        code:
          description: An identifier for the error. Codes are invariant and are intended to
            be consumed programmatically.
          readOnly: true
          type: string
        details:
          description: A list of additional details about the error.
          items:
            $ref: "#/components/schemas/CloudErrorBody"
          readOnly: true
          type: array
        message:
          description: A message describing the error, intended to be suitable for display
            in a user interface.
          readOnly: true
          type: string
        target:
          description: The target of the particular error. For example, the name of the
            property in error.
          readOnly: true
          type: string
      x-ms-external: true
    Cluster:
      allOf:
        - $ref: "#/components/schemas/ProxyResource"
      description: Information about a Cluster.
      properties:
        properties:
          $ref: "#/components/schemas/ClusterProperties"
    ClusterBaseProperties:
      description: The properties of a Cluster.
      properties:
        nodeSetup:
          $ref: "#/components/schemas/NodeSetup"
        scaleSettings:
          $ref: "#/components/schemas/ScaleSettings"
        subnet:
          $ref: "#/components/schemas/ResourceId"
        userAccountSettings:
          $ref: "#/components/schemas/UserAccountSettings"
        virtualMachineConfiguration:
          $ref: "#/components/schemas/VirtualMachineConfiguration"
        vmPriority:
          default: dedicated
          description: "VM priority. Allowed values are: dedicated (default) and
            lowpriority."
          enum:
            - dedicated
            - lowpriority
          title: VM priority.
          type: string
          x-ms-enum:
            modelAsString: false
            name: VmPriority
        vmSize:
          description: The size of the virtual machines in the cluster. All nodes in a
            cluster have the same VM size. For information about available VM
            sizes for clusters using images from the Virtual Machines
            Marketplace see Sizes for Virtual Machines (Linux). Batch AI service
            supports all Azure VM sizes except STANDARD_A0 and those with
            premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2
            series).
          title: VM size.
          type: string
      required:
        - vmSize
        - userAccountSettings
    ClusterCreateParameters:
      description: Cluster creation operation.
      properties:
        properties:
          $ref: "#/components/schemas/ClusterBaseProperties"
    ClusterListResult:
      description: Values returned by the List Clusters operation.
      properties:
        nextLink:
          description: The continuation token.
          readOnly: true
          type: string
        value:
          description: The collection of returned Clusters.
          items:
            $ref: "#/components/schemas/Cluster"
          readOnly: true
          type: array
    ClusterProperties:
      description: Cluster properties.
      properties:
        allocationState:
          description: "Allocation state of the cluster. Possible values are: steady -
            Indicates that the cluster is not resizing. There are no changes to
            the number of compute nodes in the cluster in progress. A cluster
            enters this state when it is created and when no operations are
            being performed on the cluster to change the number of compute
            nodes. resizing - Indicates that the cluster is resizing; that is,
            compute nodes are being added to or removed from the cluster."
          enum:
            - steady
            - resizing
          readOnly: true
          title: Allocation state.
          type: string
          x-ms-enum:
            modelAsString: true
            name: AllocationState
        allocationStateTransitionTime:
          description: The time at which the cluster entered its current allocation state.
          format: date-time
          readOnly: true
          title: Allocation state transition time.
          type: string
        creationTime:
          description: The time when the cluster was created.
          format: date-time
          readOnly: true
          title: Creation time.
          type: string
        currentNodeCount:
          description: The number of compute nodes currently assigned to the cluster.
          format: int32
          readOnly: true
          title: Current node count.
          type: integer
        errors:
          description: Collection of errors encountered by various compute nodes during
            node setup.
          items:
            $ref: "#/components/schemas/BatchAIError"
          readOnly: true
          title: Errors.
          type: array
        nodeSetup:
          $ref: "#/components/schemas/NodeSetup"
        nodeStateCounts:
          $ref: "#/components/schemas/NodeStateCounts"
        provisioningState:
          description: "Provisioning state of the cluster. Possible value are: creating -
            Specifies that the cluster is being created. succeeded - Specifies
            that the cluster has been created successfully. failed - Specifies
            that the cluster creation has failed. deleting - Specifies that the
            cluster is being deleted."
          enum:
            - creating
            - succeeded
            - failed
            - deleting
          readOnly: true
          title: Provisioning state.
          type: string
          x-ms-enum:
            modelAsString: true
            name: ProvisioningState
          nullable: false
        provisioningStateTransitionTime:
          description: Time when the provisioning state was changed.
          format: date-time
          readOnly: true
          title: Provisioning State Transition time.
          type: string
        scaleSettings:
          $ref: "#/components/schemas/ScaleSettings"
        subnet:
          $ref: "#/components/schemas/ResourceId"
        userAccountSettings:
          $ref: "#/components/schemas/UserAccountSettings"
        virtualMachineConfiguration:
          $ref: "#/components/schemas/VirtualMachineConfiguration"
        vmPriority:
          default: dedicated
          description: VM priority of cluster nodes.
          enum:
            - dedicated
            - lowpriority
          title: VM priority.
          type: string
          x-ms-enum:
            modelAsString: false
            name: VmPriority
        vmSize:
          description: The size of the virtual machines in the cluster. All nodes in a
            cluster have the same VM size.
          title: VM size.
          type: string
    ClusterUpdateParameters:
      description: Cluster update parameters.
      properties:
        properties:
          $ref: "#/components/schemas/ClusterUpdateProperties"
    ClusterUpdateProperties:
      description: The properties of a Cluster that need to be updated.
      properties:
        scaleSettings:
          $ref: "#/components/schemas/ScaleSettings"
    ContainerSettings:
      description: Docker container settings.
      properties:
        imageSourceRegistry:
          $ref: "#/components/schemas/ImageSourceRegistry"
        shmSize:
          description: Size of /dev/shm. Please refer to docker documentation for supported
            argument formats.
          title: /dev/shm size.
          type: string
      required:
        - imageSourceRegistry
    CustomMpiSettings:
      description: Custom MPI job settings.
      properties:
        commandLine:
          description: The command line to be executed by mpi runtime on each compute node.
          title: Command line.
          type: string
        processCount:
          description: Number of processes to launch for the job execution. The default
            value for this property is equal to nodeCount property
          format: int32
          title: Process count.
          type: integer
      required:
        - commandLine
    CustomToolkitSettings:
      description: Custom tool kit job settings.
      properties:
        commandLine:
          description: The command line to execute on the master node.
          title: Command line.
          type: string
    DataDisks:
      description: Data disks settings.
      properties:
        cachingType:
          default: none
          description: Caching type for the disks. Available values are none (default),
            readonly, readwrite. Caching type can be set only for VM sizes
            supporting premium storage.
          enum:
            - none
            - readonly
            - readwrite
          title: Caching type.
          type: string
          x-ms-enum:
            modelAsString: false
            name: CachingType
        diskCount:
          description: Number of data disks attached to the File Server. If multiple disks
            attached, they will be configured in RAID level 0.
          format: int32
          readOnly: false
          title: Number of data disks.
          type: integer
        diskSizeInGB:
          description: Disk size in GB for the blank data disks.
          format: int32
          readOnly: false
          title: Disk size in GB.
          type: integer
        storageAccountType:
          description: "Type of storage account to be used on the disk. Possible values
            are: Standard_LRS or Premium_LRS. Premium storage account type can
            only be used with VM sizes supporting premium storage."
          enum:
            - Standard_LRS
            - Premium_LRS
          readOnly: false
          title: Storage account type.
          type: string
          x-ms-enum:
            modelAsString: true
            name: StorageAccountType
      required:
        - diskSizeInGB
        - diskCount
        - storageAccountType
    DeallocationOption:
      default: requeue
      description: "Actions which should be performed when compute nodes are removed from
        the cluster. Possible values are: requeue (default) - Terminate running
        jobs and requeue them so the jobs will run again. Remove compute nodes
        as soon as jobs have been terminated; terminate - Terminate running
        jobs. The jobs will not run again. Remove compute nodes as soon as jobs
        have been terminated. waitforjobcompletion - Allow currently running
        jobs to complete. Schedule no new jobs while waiting. Remove compute
        nodes when all jobs have completed."
      enum:
        - requeue
        - terminate
        - waitforjobcompletion
      title: Deallocation options.
      type: string
      x-ms-enum:
        modelAsString: true
        name: DeallocationOption
    EnvironmentVariable:
      description: An environment variable definition.
      properties:
        name:
          description: The name of the environment variable.
          title: Name.
          type: string
        value:
          description: The value of the environment variable.
          title: Value.
          type: string
      required:
        - name
        - value
    EnvironmentVariableWithSecretValue:
      description: An environment variable with secret value definition.
      properties:
        name:
          description: The name of the environment variable to store the secret value.
          title: Name.
          type: string
        value:
          description: The value of the environment variable. This value will never be
            reported back by Batch AI.
          title: Value.
          type: string
        valueSecretReference:
          $ref: "#/components/schemas/KeyVaultSecretReference"
      required:
        - name
    Experiment:
      allOf:
        - $ref: "#/components/schemas/ProxyResource"
      description: Experiment information.
      properties:
        properties:
          $ref: "#/components/schemas/ExperimentProperties"
    ExperimentListResult:
      description: Values returned by the List operation.
      properties:
        nextLink:
          description: The continuation token.
          readOnly: true
          type: string
        value:
          description: The collection of experiments.
          items:
            $ref: "#/components/schemas/Experiment"
          readOnly: true
          type: array
    ExperimentProperties:
      description: Experiment properties.
      properties:
        creationTime:
          description: Time when the Experiment was created.
          format: date-time
          readOnly: true
          title: Creation time.
          type: string
        provisioningState:
          description: The provisioned state of the experiment
          enum:
            - creating
            - deleting
            - succeeded
            - failed
          readOnly: true
          title: Provisioning state.
          type: string
          x-ms-enum:
            modelAsString: true
            name: ProvisioningState
          nullable: false
        provisioningStateTransitionTime:
          description: The time at which the experiment entered its current provisioning
            state.
          format: date-time
          readOnly: true
          title: Provisioning state transition time.
          type: string
    File:
      description: Properties of the file or directory.
      properties:
        downloadUrl:
          description: URL to download the corresponding file. The downloadUrl is not
            returned for directories.
          readOnly: true
          title: Download URL.
          type: string
        fileType:
          description: Type of the file. Possible values are file and directory.
          enum:
            - file
            - directory
          readOnly: true
          title: File type.
          type: string
          x-ms-enum:
            modelAsString: true
            name: FileType
        name:
          description: Name of the file.
          readOnly: true
          title: Name.
          type: string
        properties:
          $ref: "#/components/schemas/FileProperties"
    FileListResult:
      description: Values returned by the List operation.
      properties:
        nextLink:
          description: The continuation token.
          readOnly: true
          type: string
        value:
          description: The collection of returned job directories and files.
          items:
            $ref: "#/components/schemas/File"
          readOnly: true
          type: array
    FileProperties:
      description: File properties.
      properties:
        contentLength:
          description: The file of the size.
          format: int64
          readOnly: true
          title: Content length.
          type: integer
        lastModified:
          description: The time at which the file was last modified.
          format: date-time
          readOnly: true
          title: Last modified time.
          type: string
    FileServer:
      allOf:
        - $ref: "#/components/schemas/ProxyResource"
      description: File Server information.
      properties:
        properties:
          $ref: "#/components/schemas/FileServerProperties"
    FileServerBaseProperties:
      description: The properties of a file server.
      properties:
        dataDisks:
          $ref: "#/components/schemas/DataDisks"
        sshConfiguration:
          $ref: "#/components/schemas/SshConfiguration"
        subnet:
          $ref: "#/components/schemas/ResourceId"
        vmSize:
          description: The size of the virtual machine for the File Server. For information
            about available VM sizes from the Virtual Machines Marketplace, see
            Sizes for Virtual Machines (Linux).
          title: VM size.
          type: string
      required:
        - vmSize
        - sshConfiguration
        - dataDisks
    FileServerCreateParameters:
      description: File Server creation parameters.
      properties:
        properties:
          $ref: "#/components/schemas/FileServerBaseProperties"
    FileServerListResult:
      description: Values returned by the File Server List operation.
      properties:
        nextLink:
          description: The continuation token.
          readOnly: true
          type: string
        value:
          description: The collection of File Servers.
          items:
            $ref: "#/components/schemas/FileServer"
          type: array
    FileServerProperties:
      description: File Server properties.
      properties:
        creationTime:
          description: Time when the FileServer was created.
          format: date-time
          readOnly: true
          title: Creation time.
          type: string
        dataDisks:
          $ref: "#/components/schemas/DataDisks"
        mountSettings:
          $ref: "#/components/schemas/MountSettings"
        provisioningState:
          description: "Provisioning state of the File Server. Possible values: creating -
            The File Server is getting created; updating - The File Server
            creation has been accepted and it is getting updated; deleting - The
            user has requested that the File Server be deleted, and it is in the
            process of being deleted; failed - The File Server creation has
            failed with the specified error code. Details about the error code
            are specified in the message field; succeeded - The File Server
            creation has succeeded."
          enum:
            - creating
            - updating
            - deleting
            - succeeded
            - failed
          readOnly: true
          title: Provisioning state.
          type: string
          x-ms-enum:
            modelAsString: true
            name: FileServerProvisioningState
          nullable: false
        provisioningStateTransitionTime:
          description: Time when the provisioning state was changed.
          format: date-time
          readOnly: true
          title: Provisioning State Transition time.
          type: string
        sshConfiguration:
          $ref: "#/components/schemas/SshConfiguration"
        subnet:
          $ref: "#/components/schemas/ResourceId"
        vmSize:
          description: VM size of the File Server.
          title: VM size.
          type: string
    FileServerReference:
      description: File Server mounting configuration.
      properties:
        fileServer:
          $ref: "#/components/schemas/ResourceId"
        mountOptions:
          description: Mount options to be passed to mount command.
          title: Mount options.
          type: string
        relativeMountPath:
          description: The relative path on the compute node where the File Server will be
            mounted. Note that all cluster level file servers will be mounted
            under $AZ_BATCHAI_MOUNT_ROOT location and all job level file servers
            will be mounted under $AZ_BATCHAI_JOB_MOUNT_ROOT.
          title: Relative mount path.
          type: string
        sourceDirectory:
          description: File Server directory that needs to be mounted. If this property is
            not specified, the entire File Server will be mounted.
          title: Source directory.
          type: string
      required:
        - fileServer
        - relativeMountPath
    HorovodSettings:
      description: Specifies the settings for Horovod job.
      properties:
        commandLineArgs:
          description: Command line arguments that need to be passed to the python script.
          title: Command line arguments.
          type: string
        processCount:
          description: Number of processes to launch for the job execution. The default
            value for this property is equal to nodeCount property
          format: int32
          title: Process count.
          type: integer
        pythonInterpreterPath:
          description: The path to the Python interpreter.
          title: Python interpreter path.
          type: string
        pythonScriptFilePath:
          description: The python script to execute.
          title: Python script file path.
          type: string
      required:
        - pythonScriptFilePath
    ImageReference:
      description: The OS image reference.
      properties:
        offer:
          description: Offer of the image.
          title: Offer.
          type: string
        publisher:
          description: Publisher of the image.
          title: Publisher.
          type: string
        sku:
          description: SKU of the image.
          title: SKU.
          type: string
        version:
          description: Version of the image.
          title: Version.
          type: string
        virtualMachineImageId:
          description: The ARM resource identifier of the virtual machine image for the
            compute nodes. This is of the form
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}.
            The virtual machine image must be in the same region and
            subscription as the cluster. For information about the firewall
            settings for the Batch node agent to communicate with the Batch
            service see
            https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
            Note, you need to provide publisher, offer and sku of the base OS
            image of which the custom image has been derived from.
          title: Custom VM image resource ID.
          type: string
      required:
        - publisher
        - offer
        - sku
    ImageSourceRegistry:
      description: Information about docker image for the job.
      properties:
        credentials:
          $ref: "#/components/schemas/PrivateRegistryCredentials"
        image:
          description: The name of the image in the image repository.
          title: Image.
          type: string
        serverUrl:
          description: URL for image repository.
          title: Server URL.
          type: string
      required:
        - image
    InputDirectory:
      description: Input directory for the job.
      properties:
        id:
          description: The ID for the input directory. The job can use
            AZ_BATCHAI_INPUT_<id> environment variable to find the directory
            path, where <id> is the value of id attribute.
          title: ID.
          type: string
        path:
          description: The path to the input directory.
          title: Path.
          type: string
      required:
        - id
        - path
    Job:
      allOf:
        - $ref: "#/components/schemas/ProxyResource"
      description: Information about a Job.
      properties:
        properties:
          $ref: "#/components/schemas/JobProperties"
    JobBaseProperties:
      description: The properties of a Batch AI Job.
      properties:
        caffe2Settings:
          $ref: "#/components/schemas/Caffe2Settings"
        caffeSettings:
          $ref: "#/components/schemas/CaffeSettings"
        chainerSettings:
          $ref: "#/components/schemas/ChainerSettings"
        cluster:
          $ref: "#/components/schemas/ResourceId"
        cntkSettings:
          $ref: "#/components/schemas/CNTKsettings"
        constraints:
          description: Constraints associated with the Job.
          properties:
            maxWallClockTime:
              default: 7.00:00:00
              description: "Max time the job can run. Default value: 1 week."
              format: duration
              title: Max wall clock time.
              type: string
        containerSettings:
          $ref: "#/components/schemas/ContainerSettings"
        customMpiSettings:
          $ref: "#/components/schemas/CustomMpiSettings"
        customToolkitSettings:
          $ref: "#/components/schemas/CustomToolkitSettings"
        environmentVariables:
          description: A list of user defined environment variables which will be setup for
            the job.
          items:
            $ref: "#/components/schemas/EnvironmentVariable"
          title: Environment variables.
          type: array
        horovodSettings:
          $ref: "#/components/schemas/HorovodSettings"
        inputDirectories:
          description: A list of input directories for the job.
          items:
            $ref: "#/components/schemas/InputDirectory"
          title: Input directories.
          type: array
        jobPreparation:
          $ref: "#/components/schemas/JobPreparation"
        mountVolumes:
          $ref: "#/components/schemas/MountVolumes"
        nodeCount:
          description: Number of compute nodes to run the job on. The job will be gang
            scheduled on that many compute nodes.
          format: int32
          title: Node count.
          type: integer
        outputDirectories:
          description: A list of output directories for the job.
          items:
            $ref: "#/components/schemas/OutputDirectory"
          title: Output directories.
          type: array
        pyTorchSettings:
          $ref: "#/components/schemas/PyTorchSettings"
        schedulingPriority:
          default: normal
          description: "Scheduling priority associated with the job. Possible values: low,
            normal, high."
          enum:
            - low
            - normal
            - high
          title: Scheduling priority.
          type: string
          x-ms-enum:
            modelAsString: true
            name: JobPriority
        secrets:
          description: A list of user defined environment variables with secret values
            which will be setup for the job. Server will never report values of
            these variables back.
          items:
            $ref: "#/components/schemas/EnvironmentVariableWithSecretValue"
          title: Secrets.
          type: array
        stdOutErrPathPrefix:
          description: The path where the Batch AI service will store stdout, stderror and
            execution log of the job.
          title: Standard output path prefix.
          type: string
        tensorFlowSettings:
          $ref: "#/components/schemas/TensorFlowSettings"
      required:
        - cluster
        - nodeCount
        - stdOutErrPathPrefix
    JobCreateParameters:
      description: Job creation parameters.
      properties:
        properties:
          $ref: "#/components/schemas/JobBaseProperties"
    JobListResult:
      description: Values returned by the List operation.
      properties:
        nextLink:
          description: The continuation token.
          readOnly: true
          type: string
        value:
          description: The collection of jobs.
          items:
            $ref: "#/components/schemas/Job"
          readOnly: true
          type: array
    JobPreparation:
      description: Job preparation settings.
      properties:
        commandLine:
          description: The command line to execute. If containerSettings is specified on
            the job, this commandLine will be executed in the same container as
            job. Otherwise it will be executed on the node.
          title: Command line.
          type: string
      required:
        - commandLine
    JobProperties:
      description: Job properties.
      properties:
        caffe2Settings:
          $ref: "#/components/schemas/Caffe2Settings"
        caffeSettings:
          $ref: "#/components/schemas/CaffeSettings"
        chainerSettings:
          $ref: "#/components/schemas/ChainerSettings"
        cluster:
          $ref: "#/components/schemas/ResourceId"
        cntkSettings:
          $ref: "#/components/schemas/CNTKsettings"
        constraints:
          description: Constraints associated with the Job.
          properties:
            maxWallClockTime:
              default: 7.00:00:00
              description: "Max time the job can run. Default value: 1 week."
              format: duration
              title: Max wall clock time.
              type: string
        containerSettings:
          $ref: "#/components/schemas/ContainerSettings"
        creationTime:
          description: The creation time of the job.
          format: date-time
          readOnly: true
          title: Creation time.
          type: string
        customMpiSettings:
          $ref: "#/components/schemas/CustomMpiSettings"
        customToolkitSettings:
          $ref: "#/components/schemas/CustomToolkitSettings"
        environmentVariables:
          description: A collection of user defined environment variables to be setup for
            the job.
          items:
            $ref: "#/components/schemas/EnvironmentVariable"
          title: Environment variables.
          type: array
        executionInfo:
          description: Information about the execution of a job.
          properties:
            endTime:
              description: The time at which the job completed. This property is only
                returned if the job is in completed state.
              format: date-time
              readOnly: true
              title: End time.
              type: string
            errors:
              description: A collection of errors encountered by the service during job
                execution.
              items:
                $ref: "#/components/schemas/BatchAIError"
              readOnly: true
              title: Errors.
              type: array
            exitCode:
              description: The exit code of the job. This property is only returned if the
                job is in completed state.
              format: int32
              readOnly: true
              title: Exit code.
              type: integer
            startTime:
              description: The time at which the job started running. 'Running' corresponds
                to the running state. If the job has been restarted or retried,
                this is the most recent time at which the job started running.
                This property is present only for job that are in the running or
                completed state.
              format: date-time
              readOnly: true
              title: Start time.
              type: string
        executionState:
          description: "The current state of the job. Possible values are: queued - The job
            is queued and able to run. A job enters this state when it is
            created, or when it is awaiting a retry after a failed run. running
            - The job is running on a compute cluster. This includes job-level
            preparation such as downloading resource files or set up container
            specified on the job - it does not necessarily mean that the job
            command line has started executing. terminating - The job is
            terminated by the user, the terminate operation is in progress.
            succeeded - The job has completed running successfully and exited
            with exit code 0. failed - The job has finished unsuccessfully
            (failed with a non-zero exit code) and has exhausted its retry
            limit. A job is also marked as failed if an error occurred launching
            the job."
          enum:
            - queued
            - running
            - terminating
            - succeeded
            - failed
          readOnly: true
          title: Execution state.
          type: string
          x-ms-enum:
            modelAsString: true
            name: ExecutionState
        executionStateTransitionTime:
          description: The time at which the job entered its current execution state.
          format: date-time
          readOnly: true
          title: Execution state transition time.
          type: string
        horovodSettings:
          $ref: "#/components/schemas/HorovodSettings"
        inputDirectories:
          description: A list of input directories for the job.
          items:
            $ref: "#/components/schemas/InputDirectory"
          title: Input directories.
          type: array
        jobOutputDirectoryPathSegment:
          description: A segment of job's output directories path created by Batch AI.
            Batch AI creates job's output directories under an unique path to
            avoid conflicts between jobs. This value contains a path segment
            generated by Batch AI to make the path unique and can be used to
            find the output directory on the node or mounted filesystem.
          readOnly: true
          title: Output directory path segment.
          type: string
        jobPreparation:
          $ref: "#/components/schemas/JobPreparation"
        mountVolumes:
          $ref: "#/components/schemas/MountVolumes"
        nodeCount:
          description: The job will be gang scheduled on that many compute nodes
          format: int32
          title: Number of compute nodes to run the job on.
          type: integer
        outputDirectories:
          description: A list of output directories for the job.
          items:
            $ref: "#/components/schemas/OutputDirectory"
          title: Output directories.
          type: array
        provisioningState:
          description: The provisioned state of the Batch AI job
          enum:
            - creating
            - deleting
            - succeeded
            - failed
          readOnly: true
          title: Provisioning state.
          type: string
          x-ms-enum:
            modelAsString: true
            name: ProvisioningState
          nullable: false
        provisioningStateTransitionTime:
          description: The time at which the job entered its current provisioning state.
          format: date-time
          readOnly: true
          title: Provisioning state transition time.
          type: string
        pyTorchSettings:
          $ref: "#/components/schemas/PyTorchSettings"
        schedulingPriority:
          default: normal
          description: Scheduling priority associated with the job.
          enum:
            - low
            - normal
            - high
          title: Scheduling priority.
          type: string
          x-ms-enum:
            modelAsString: true
            name: JobPriority
        secrets:
          description: A collection of user defined environment variables with secret
            values to be setup for the job. Server will never report values of
            these variables back.
          items:
            $ref: "#/components/schemas/EnvironmentVariableWithSecretValue"
          title: Secrets.
          type: array
        stdOutErrPathPrefix:
          description: The path where the Batch AI service stores stdout, stderror and
            execution log of the job.
          title: Standard output directory path prefix.
          type: string
        tensorFlowSettings:
          $ref: "#/components/schemas/TensorFlowSettings"
        toolType:
          $ref: "#/components/schemas/ToolType"
    KeyVaultSecretReference:
      description: Key Vault Secret reference.
      properties:
        secretUrl:
          description: The URL referencing a secret in the Key Vault.
          title: Secret URL.
          type: string
        sourceVault:
          $ref: "#/components/schemas/ResourceId"
      required:
        - sourceVault
        - secretUrl
    ListUsagesResult:
      description: The List Usages operation response.
      properties:
        nextLink:
          description: The URI to fetch the next page of compute resource usage
            information. Call ListNext() with this to fetch the next page of
            compute resource usage information.
          readOnly: true
          type: string
        value:
          description: The list of compute resource usages.
          items:
            $ref: "#/components/schemas/Usage"
          readOnly: true
          type: array
    ManualScaleSettings:
      description: Manual scale settings for the cluster.
      properties:
        nodeDeallocationOption:
          $ref: "#/components/schemas/DeallocationOption"
        targetNodeCount:
          default: 0
          description: The desired number of compute nodes in the Cluster. Default is 0.
          format: int32
          title: Target node count.
          type: integer
      required:
        - targetNodeCount
    MountSettings:
      description: File Server mount Information.
      properties:
        fileServerInternalIP:
          description: Internal IP address of the File Server which can be used to access
            the File Server from within the subnet.
          title: Internal IP.
          type: string
        fileServerPublicIP:
          description: Public IP address of the File Server which can be used to SSH to the
            node from outside of the subnet.
          title: Public IP.
          type: string
        mountPoint:
          description: Path where the data disks are mounted on the File Server.
          title: Mount Point.
          type: string
    MountVolumes:
      description: Details of volumes to mount on the cluster.
      properties:
        azureBlobFileSystems:
          description: A collection of Azure Blob Containers that are to be mounted to the
            cluster nodes.
          items:
            $ref: "#/components/schemas/AzureBlobFileSystemReference"
          title: Azure Blob file systems.
          type: array
        azureFileShares:
          description: A collection of Azure File Shares that are to be mounted to the
            cluster nodes.
          items:
            $ref: "#/components/schemas/AzureFileShareReference"
          title: Azure File Shares.
          type: array
        fileServers:
          description: A collection of Batch AI File Servers that are to be mounted to the
            cluster nodes.
          items:
            $ref: "#/components/schemas/FileServerReference"
          title: File Servers.
          type: array
        unmanagedFileSystems:
          description: A collection of unmanaged file systems that are to be mounted to the
            cluster nodes.
          items:
            $ref: "#/components/schemas/UnmanagedFileSystemReference"
          title: Unmanaged file systems.
          type: array
    NameValuePair:
      description: Name-value pair.
      properties:
        name:
          description: The name in the name-value pair.
          title: Name.
          type: string
        value:
          description: The value in the name-value pair.
          title: Value.
          type: string
    NodeSetup:
      description: Node setup settings.
      properties:
        mountVolumes:
          $ref: "#/components/schemas/MountVolumes"
        performanceCountersSettings:
          $ref: "#/components/schemas/PerformanceCountersSettings"
        setupTask:
          $ref: "#/components/schemas/SetupTask"
    NodeStateCounts:
      description: Counts of various compute node states on the cluster.
      properties:
        idleNodeCount:
          description: Number of compute nodes in idle state.
          format: int32
          readOnly: true
          title: Idle node count.
          type: integer
        leavingNodeCount:
          description: Number of compute nodes which are leaving the cluster.
          format: int32
          readOnly: true
          title: Leaving node count.
          type: integer
        preparingNodeCount:
          description: Number of compute nodes which are being prepared.
          format: int32
          readOnly: true
          title: Preparing node count.
          type: integer
        runningNodeCount:
          description: Number of compute nodes which are running jobs.
          format: int32
          readOnly: true
          title: Running node count.
          type: integer
        unusableNodeCount:
          description: Number of compute nodes which are in unusable state.
          format: int32
          readOnly: true
          title: Unusable node count.
          type: integer
    Operation:
      description: Details of a REST API operation
      properties:
        display:
          description: The object that describes the operation.
          properties:
            description:
              readOnly: true
              title: The friendly name of the operation.
              type: string
            operation:
              description: "For example: read, write, delete, or listKeys/action"
              readOnly: true
              title: The operation type.
              type: string
            provider:
              readOnly: true
              title: Friendly name of the resource provider.
              type: string
            resource:
              readOnly: true
              title: The resource type on which the operation is performed.
              type: string
        name:
          description: This is of the format {provider}/{resource}/{operation}
          readOnly: true
          title: The operation name.
          type: string
        origin:
          readOnly: true
          title: The intended executor of the operation.
          type: string
        properties:
          title: Properties of the operation.
          type: object
          x-ms-client-flatten: true
      title: A REST API operation.
      type: object
    OperationListResult:
      description: Contains the list of all operations supported by BatchAI resource
        provider
      properties:
        nextLink:
          readOnly: true
          title: The URL to get the next set of operation list results if there are
            any.
          type: string
        value:
          items:
            $ref: "#/components/schemas/Operation"
          readOnly: true
          title: The list of operations supported by the resource provider.
          type: array
      title: Result of the request to list REST API operations. It contains a list of
        operations and a URL nextLink to get the next set of results.
    OutputDirectory:
      description: Output directory for the job.
      properties:
        id:
          description: The ID of the output directory. The job can use
            AZ_BATCHAI_OUTPUT_<id> environment variable to find the directory
            path, where <id> is the value of id attribute.
          title: ID.
          type: string
        pathPrefix:
          description: The prefix path where the output directory will be created. Note,
            this is an absolute path to prefix. E.g.
            $AZ_BATCHAI_MOUNT_ROOT/MyNFS/MyLogs. The full path to the output
            directory by combining pathPrefix, jobOutputDirectoryPathSegment
            (reported by get job) and pathSuffix.
          title: Path prefix.
          type: string
        pathSuffix:
          description: The suffix path where the output directory will be created. E.g.
            models. You can find the full path to the output directory by
            combining pathPrefix, jobOutputDirectoryPathSegment (reported by get
            job) and pathSuffix.
          title: Path suffix.
          type: string
      required:
        - id
        - pathPrefix
    PerformanceCountersSettings:
      description: Performance counters reporting settings.
      properties:
        appInsightsReference:
          $ref: "#/components/schemas/AppInsightsReference"
      required:
        - appInsightsReference
    PrivateRegistryCredentials:
      description: Credentials to access a container image in a private repository.
      properties:
        password:
          description: User password to login to the docker repository. One of password or
            passwordSecretReference must be specified.
          title: Password.
          type: string
        passwordSecretReference:
          $ref: "#/components/schemas/KeyVaultSecretReference"
        username:
          description: User name to login to the repository.
          title: User name.
          type: string
      required:
        - username
    ProxyResource:
      description: A definition of an Azure proxy resource.
      properties:
        id:
          description: The ID of the resource.
          readOnly: true
          type: string
        name:
          description: The name of the resource.
          readOnly: true
          type: string
        type:
          description: The type of the resource.
          readOnly: true
          type: string
      x-ms-azure-resource: true
    PyTorchSettings:
      description: pyTorch job settings.
      properties:
        commandLineArgs:
          description: Command line arguments that need to be passed to the python script.
          title: Command line arguments.
          type: string
        communicationBackend:
          description: Type of the communication backend for distributed jobs. Valid values
            are 'TCP', 'Gloo' or 'MPI'. Not required for non-distributed jobs.
          title: Communication backend.
          type: string
        processCount:
          description: Number of processes to launch for the job execution. The default
            value for this property is equal to nodeCount property
          format: int32
          title: Process count.
          type: integer
        pythonInterpreterPath:
          description: The path to the Python interpreter.
          title: Python interpreter path.
          type: string
        pythonScriptFilePath:
          description: The python script to execute.
          title: Python script file path.
          type: string
      required:
        - pythonScriptFilePath
    RemoteLoginInformation:
      description: Login details to SSH to a compute node in cluster.
      properties:
        ipAddress:
          description: Public IP address of the compute node.
          readOnly: true
          title: IP address.
          type: string
        nodeId:
          description: ID of the compute node.
          readOnly: true
          title: Node ID.
          type: string
        port:
          description: SSH port number of the node.
          format: int32
          readOnly: true
          title: Port.
          type: number
    RemoteLoginInformationListResult:
      description: Values returned by the List operation.
      properties:
        nextLink:
          description: The continuation token.
          readOnly: true
          type: string
        value:
          description: The collection of returned remote login details.
          items:
            $ref: "#/components/schemas/RemoteLoginInformation"
          readOnly: true
          type: array
    Resource:
      description: A definition of an Azure resource.
      properties:
        id:
          description: The ID of the resource
          readOnly: true
          type: string
        location:
          description: The location of the resource
          readOnly: true
          type: string
        name:
          description: The name of the resource
          readOnly: true
          type: string
        tags:
          additionalProperties:
            type: string
          description: The tags of the resource
          readOnly: true
          type: object
        type:
          description: The type of the resource
          readOnly: true
          type: string
      x-ms-azure-resource: true
    ResourceId:
      description: Represents a resource ID. For example, for a subnet, it is the resource
        URL for the subnet.
      properties:
        id:
          description: The ID of the resource
          type: string
      required:
        - id
      x-ms-azure-resource: true
    ScaleSettings:
      description: At least one of manual or autoScale settings must be specified. Only one
        of manual or autoScale settings can be specified. If autoScale settings
        are specified, the system automatically scales the cluster up and down
        (within the supplied limits) based on the pending jobs on the cluster.
      properties:
        autoScale:
          $ref: "#/components/schemas/AutoScaleSettings"
        manual:
          $ref: "#/components/schemas/ManualScaleSettings"
    SetupTask:
      description: Specifies a setup task which can be used to customize the compute nodes
        of the cluster.
      properties:
        commandLine:
          description: The command line to be executed on each cluster's node after it
            being allocated or rebooted. The command is executed in a bash
            subshell as a root.
          title: Command line.
          type: string
        environmentVariables:
          description: A collection of user defined environment variables to be set for
            setup task.
          items:
            $ref: "#/components/schemas/EnvironmentVariable"
          title: Environment variables.
          type: array
        secrets:
          description: A collection of user defined environment variables with secret
            values to be set for the setup task. Server will never report values
            of these variables back.
          items:
            $ref: "#/components/schemas/EnvironmentVariableWithSecretValue"
          title: Secrets.
          type: array
        stdOutErrPathPrefix:
          description: The prefix of a path where the Batch AI service will upload the
            stdout, stderr and execution log of the setup task.
          title: Output path prefix.
          type: string
        stdOutErrPathSuffix:
          description: A path segment appended by Batch AI to stdOutErrPathPrefix to form a
            path where stdout, stderr and execution log of the setup task will
            be uploaded. Batch AI creates the setup task output directories
            under an unique path to avoid conflicts between different clusters.
            The full path can be obtained by concatenation of
            stdOutErrPathPrefix and stdOutErrPathSuffix.
          readOnly: true
          title: Output path suffix.
          type: string
      required:
        - commandLine
        - stdOutErrPathPrefix
    SshConfiguration:
      description: SSH configuration.
      properties:
        publicIPsToAllow:
          description: List of source IP ranges to allow SSH connection from. The default
            value is '*' (all source IPs are allowed). Maximum number of IP
            ranges that can be specified is 400.
          items:
            type: string
          title: Allowed public IPs.
          type: array
        userAccountSettings:
          $ref: "#/components/schemas/UserAccountSettings"
      required:
        - userAccountSettings
    TensorFlowSettings:
      description: TensorFlow job settings.
      properties:
        masterCommandLineArgs:
          description: Command line arguments that need to be passed to the python script
            for the master task.
          title: Master command line arguments.
          type: string
        parameterServerCommandLineArgs:
          description: Command line arguments that need to be passed to the python script
            for the parameter server. Optional for single process jobs.
          title: Parameter server command line arguments.
          type: string
        parameterServerCount:
          description: The number of parameter server tasks. If specified, the value must
            be less than or equal to nodeCount. If not specified, the default
            value is equal to 1 for distributed TensorFlow training. This
            property can be specified only for distributed TensorFlow training.
          format: int32
          title: Parameter server count.
          type: integer
        pythonInterpreterPath:
          description: The path to the Python interpreter.
          title: Python interpreter path.
          type: string
        pythonScriptFilePath:
          description: The python script to execute.
          title: Python script file path.
          type: string
        workerCommandLineArgs:
          description: Command line arguments that need to be passed to the python script
            for the worker task. Optional for single process jobs.
          title: Worker command line arguments.
          type: string
        workerCount:
          description: The number of worker tasks. If specified, the value must be less
            than or equal to (nodeCount * numberOfGPUs per VM). If not
            specified, the default value is equal to nodeCount. This property
            can be specified only for distributed TensorFlow training.
          format: int32
          title: Worker count.
          type: integer
      required:
        - pythonScriptFilePath
    ToolType:
      description: The toolkit type of the job.
      enum:
        - cntk
        - tensorflow
        - caffe
        - caffe2
        - chainer
        - horovod
        - custommpi
        - custom
      title: Toolkit type.
      type: string
      x-ms-enum:
        modelAsString: true
        name: ToolType
    UnmanagedFileSystemReference:
      description: Unmanaged file system mounting configuration.
      properties:
        mountCommand:
          description: Mount command line. Note, Batch AI will append mount path to the
            command on its own.
          title: Mount command.
          type: string
        relativeMountPath:
          description: The relative path on the compute node where the unmanaged file
            system will be mounted. Note that all cluster level unmanaged file
            systems will be mounted under $AZ_BATCHAI_MOUNT_ROOT location and
            all job level unmanaged file systems will be mounted under
            $AZ_BATCHAI_JOB_MOUNT_ROOT.
          title: Relative mount path.
          type: string
      required:
        - mountCommand
        - relativeMountPath
    Usage:
      description: Describes Batch AI Resource Usage.
      properties:
        currentValue:
          description: The current usage of the resource.
          format: int32
          readOnly: true
          type: integer
        limit:
          description: The maximum permitted usage of the resource.
          format: int64
          readOnly: true
          type: integer
        name:
          $ref: "#/components/schemas/UsageName"
        unit:
          description: An enum describing the unit of usage measurement.
          enum:
            - Count
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: UsageUnit
    UsageName:
      description: The Usage Names.
      properties:
        localizedValue:
          description: The localized name of the resource.
          readOnly: true
          type: string
        value:
          description: The name of the resource.
          readOnly: true
          type: string
    UserAccountSettings:
      description: Settings for user account that gets created on each on the nodes of a
        cluster.
      properties:
        adminUserName:
          description: Name of the administrator user account which can be used to SSH to
            nodes.
          title: User name.
          type: string
        adminUserPassword:
          description: Password of the administrator user account.
          title: Password.
          type: string
        adminUserSshPublicKey:
          description: SSH public key of the administrator user account.
          title: SSH public key.
          type: string
      required:
        - adminUserName
    VirtualMachineConfiguration:
      description: VM configuration.
      properties:
        imageReference:
          $ref: "#/components/schemas/ImageReference"
    Workspace:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Batch AI Workspace information.
      properties:
        properties:
          $ref: "#/components/schemas/WorkspaceProperties"
    WorkspaceCreateParameters:
      description: Workspace creation parameters.
      properties:
        location:
          description: The region in which to create the Workspace.
          title: Location.
          type: string
        tags:
          additionalProperties:
            type: string
          description: The user specified tags associated with the Workspace.
          title: Tags.
          type: object
      required:
        - location
    WorkspaceListResult:
      description: Values returned by the List operation.
      properties:
        nextLink:
          description: The continuation token.
          readOnly: true
          type: string
        value:
          description: The collection of workspaces.
          items:
            $ref: "#/components/schemas/Workspace"
          readOnly: true
          type: array
    WorkspaceProperties:
      description: Workspace specific properties.
      properties:
        creationTime:
          description: Time when the Workspace was created.
          format: date-time
          readOnly: true
          title: Creation time.
          type: string
        provisioningState:
          description: The provisioned state of the Workspace
          enum:
            - creating
            - deleting
            - succeeded
            - failed
          readOnly: true
          title: Provisioning state.
          type: string
          x-ms-enum:
            modelAsString: true
            name: ProvisioningState
          nullable: false
        provisioningStateTransitionTime:
          description: The time at which the workspace entered its current provisioning
            state.
          format: date-time
          readOnly: true
          title: Provisioning state transition time.
          type: string
    WorkspaceUpdateParameters:
      description: Workspace update parameters.
      properties:
        tags:
          additionalProperties:
            type: string
          description: The user specified tags associated with the Workspace.
          title: Tags.
          type: object
