openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: Enables client applications to check web resources (most commonly URLs)
    against Google-generated lists of unsafe web resources. The Safe Browsing
    APIs are for non-commercial use only. If you need to use APIs to detect
    malicious URLs for commercial purposes – meaning “for sale or
    revenue-generating purposes” – please refer to the Web Risk API.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Safe Browsing
  version: v4
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - security
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: google
      url: https://safebrowsing.googleapis.com/$discovery/rest?version=v4
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: safebrowsing
externalDocs:
  url: https://developers.google.com/safe-browsing/
tags:
  - name: encodedFullHashes
  - name: encodedUpdates
  - name: fullHashes
  - name: threatHits
  - name: threatListUpdates
  - name: threatLists
  - name: threatMatches
paths:
  "/v4/encodedFullHashes/{encodedRequest}":
    get:
      description: ""
      operationId: safebrowsing.encodedFullHashes.get
      parameters:
        - description: >-
            A client ID that (hopefully) uniquely identifies the client
            implementation

            of the Safe Browsing API.
          in: query
          name: clientId
          schema:
            type: string
        - description: The version of the client implementation.
          in: query
          name: clientVersion
          schema:
            type: string
        - description: A serialized FindFullHashesRequest proto.
          in: path
          name: encodedRequest
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/FindFullHashesResponse"
      tags:
        - encodedFullHashes
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v4/encodedUpdates/{encodedRequest}":
    get:
      description: ""
      operationId: safebrowsing.encodedUpdates.get
      parameters:
        - description: >-
            A client ID that uniquely identifies the client implementation of
            the Safe

            Browsing API.
          in: query
          name: clientId
          schema:
            type: string
        - description: The version of the client implementation.
          in: query
          name: clientVersion
          schema:
            type: string
        - description: A serialized FetchThreatListUpdatesRequest proto.
          in: path
          name: encodedRequest
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/FetchThreatListUpdatesResponse"
      tags:
        - encodedUpdates
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  /v4/fullHashes:find:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Finds the full hashes that match the requested hash prefixes.
      operationId: safebrowsing.fullHashes.find
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FindFullHashesRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/FindFullHashesResponse"
      tags:
        - fullHashes
  /v4/threatHits:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Reports a Safe Browsing threat list hit to Google. Only projects with
        TRUSTED_REPORTER visibility can use this method.
      operationId: safebrowsing.threatHits.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ThreatHit"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      tags:
        - threatHits
  /v4/threatListUpdates:fetch:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Fetches the most recent threat list updates. A client can request
        updates

        for multiple lists at once.
      operationId: safebrowsing.threatListUpdates.fetch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FetchThreatListUpdatesRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/FetchThreatListUpdatesResponse"
      tags:
        - threatListUpdates
  /v4/threatLists:
    get:
      description: Lists the Safe Browsing threat lists available for download.
      operationId: safebrowsing.threatLists.list
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListThreatListsResponse"
      tags:
        - threatLists
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  /v4/threatMatches:find:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Finds the threat entries that match the Safe Browsing lists.
      operationId: safebrowsing.threatMatches.find
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FindThreatMatchesRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/FindThreatMatchesResponse"
      tags:
        - threatMatches
servers:
  - url: https://safebrowsing.googleapis.com/
components:
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
        default: json
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - "1"
          - "2"
  schemas:
    Checksum:
      description: The expected state of a client's local database.
      properties:
        sha256:
          description: >-
            The SHA256 hash of the client state; that is, of the sorted list of
            all

            hashes present in the database.
          format: byte
          type: string
      type: object
    ClientInfo:
      description: The client metadata associated with Safe Browsing API requests.
      properties:
        clientId:
          description: >-
            A client ID that (hopefully) uniquely identifies the client
            implementation

            of the Safe Browsing API.
          type: string
        clientVersion:
          description: The version of the client implementation.
          type: string
      type: object
    Constraints:
      description: The constraints for this update.
      properties:
        deviceLocation:
          description: |-
            A client's physical location, expressed as a ISO 31166-1 alpha-2
            region code.
          type: string
        language:
          description: |-
            Requests the lists for a specific language. Expects ISO 639 alpha-2
            format.
          type: string
        maxDatabaseEntries:
          description: >-
            Sets the maximum number of entries that the client is willing to
            have

            in the local database. This should be a power of 2 between 2**10 and

            2**20. If zero, no database size limit is set.
          format: int32
          type: integer
        maxUpdateEntries:
          description: >-
            The maximum size in number of entries. The update will not contain
            more

            entries than this value.  This should be a power of 2 between 2**10 and

            2**20.  If zero, no update size limit is set.
          format: int32
          type: integer
        region:
          description: >-
            Requests the list for a specific geographic location. If not set the

            server may pick that value based on the user's IP address. Expects ISO

            3166-1 alpha-2 format.
          type: string
        supportedCompressions:
          description: The compression types supported by the client.
          items:
            enum:
              - COMPRESSION_TYPE_UNSPECIFIED
              - RAW
              - RICE
            type: string
          type: array
      type: object
    Empty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated

        empty messages in your APIs. A typical example is to use it as the request

        or the response type of an API method. For instance:

            service Foo {
              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
            }

        The JSON representation for `Empty` is empty JSON object `{}`.
      properties: {}
      type: object
    FetchThreatListUpdatesRequest:
      description: >-
        Describes a Safe Browsing API update request. Clients can request
        updates for

        multiple lists in a single request.

        NOTE: Field index 2 is unused.

        NEXT: 5
      properties:
        client:
          $ref: "#/components/schemas/ClientInfo"
        listUpdateRequests:
          description: The requested threat list updates.
          items:
            $ref: "#/components/schemas/ListUpdateRequest"
          type: array
      type: object
    FetchThreatListUpdatesResponse:
      properties:
        listUpdateResponses:
          description: The list updates requested by the clients.
          items:
            $ref: "#/components/schemas/ListUpdateResponse"
          type: array
        minimumWaitDuration:
          description: >-
            The minimum duration the client must wait before issuing any update

            request. If this field is not set clients may update as soon as they want.
          format: google-duration
          type: string
      type: object
    FindFullHashesRequest:
      description: Request to return full hashes matched by the provided hash prefixes.
      properties:
        apiClient:
          $ref: "#/components/schemas/ClientInfo"
        client:
          $ref: "#/components/schemas/ClientInfo"
        clientStates:
          description: The current client states for each of the client's local threat
            lists.
          items:
            format: byte
            type: string
          type: array
        threatInfo:
          $ref: "#/components/schemas/ThreatInfo"
      type: object
    FindFullHashesResponse:
      properties:
        matches:
          description: The full hashes that matched the requested prefixes.
          items:
            $ref: "#/components/schemas/ThreatMatch"
          type: array
        minimumWaitDuration:
          description: >-
            The minimum duration the client must wait before issuing any find
            hashes

            request. If this field is not set, clients can issue a request as soon as

            they want.
          format: google-duration
          type: string
        negativeCacheDuration:
          description: >-
            For requested entities that did not match the threat list, how long
            to

            cache the response.
          format: google-duration
          type: string
      type: object
    FindThreatMatchesRequest:
      description: Request to check entries against lists.
      properties:
        client:
          $ref: "#/components/schemas/ClientInfo"
        threatInfo:
          $ref: "#/components/schemas/ThreatInfo"
      type: object
    FindThreatMatchesResponse:
      properties:
        matches:
          description: The threat list matches.
          items:
            $ref: "#/components/schemas/ThreatMatch"
          type: array
      type: object
    ListThreatListsResponse:
      properties:
        threatLists:
          description: The lists available for download by the client.
          items:
            $ref: "#/components/schemas/ThreatListDescriptor"
          type: array
      type: object
    ListUpdateRequest:
      description: A single list update request.
      properties:
        constraints:
          $ref: "#/components/schemas/Constraints"
        platformType:
          description: The type of platform at risk by entries present in the list.
          enum:
            - PLATFORM_TYPE_UNSPECIFIED
            - WINDOWS
            - LINUX
            - ANDROID
            - OSX
            - IOS
            - ANY_PLATFORM
            - ALL_PLATFORMS
            - CHROME
          type: string
        state:
          description: >-
            The current state of the client for the requested list (the
            encrypted

            client state that was received from the last successful list update).
          format: byte
          type: string
        threatEntryType:
          description: The types of entries present in the list.
          enum:
            - THREAT_ENTRY_TYPE_UNSPECIFIED
            - URL
            - EXECUTABLE
            - IP_RANGE
            - CHROME_EXTENSION
            - FILENAME
            - CERT
          type: string
        threatType:
          description: The type of threat posed by entries present in the list.
          enum:
            - THREAT_TYPE_UNSPECIFIED
            - MALWARE
            - SOCIAL_ENGINEERING
            - UNWANTED_SOFTWARE
            - POTENTIALLY_HARMFUL_APPLICATION
            - SOCIAL_ENGINEERING_INTERNAL
            - API_ABUSE
            - MALICIOUS_BINARY
            - CSD_WHITELIST
            - CSD_DOWNLOAD_WHITELIST
            - CLIENT_INCIDENT
            - CLIENT_INCIDENT_WHITELIST
            - APK_MALWARE_OFFLINE
            - SUBRESOURCE_FILTER
            - SUSPICIOUS
            - TRICK_TO_BILL
            - HIGH_CONFIDENCE_ALLOWLIST
          type: string
      type: object
    ListUpdateResponse:
      description: An update to an individual list.
      properties:
        additions:
          description: >-
            A set of entries to add to a local threat type's list. Repeated to
            allow

            for a combination of compressed and raw data to be sent in a single

            response.
          items:
            $ref: "#/components/schemas/ThreatEntrySet"
          type: array
        checksum:
          $ref: "#/components/schemas/Checksum"
        newClientState:
          description: The new client state, in encrypted format. Opaque to clients.
          format: byte
          type: string
        platformType:
          description: The platform type for which data is returned.
          enum:
            - PLATFORM_TYPE_UNSPECIFIED
            - WINDOWS
            - LINUX
            - ANDROID
            - OSX
            - IOS
            - ANY_PLATFORM
            - ALL_PLATFORMS
            - CHROME
          type: string
        removals:
          description: >-
            A set of entries to remove from a local threat type's list. In
            practice,

            this field is empty or contains exactly one ThreatEntrySet.
          items:
            $ref: "#/components/schemas/ThreatEntrySet"
          type: array
        responseType:
          description: >-
            The type of response. This may indicate that an action is required
            by the

            client when the response is received.
          enum:
            - RESPONSE_TYPE_UNSPECIFIED
            - PARTIAL_UPDATE
            - FULL_UPDATE
          type: string
        threatEntryType:
          description: The format of the threats.
          enum:
            - THREAT_ENTRY_TYPE_UNSPECIFIED
            - URL
            - EXECUTABLE
            - IP_RANGE
            - CHROME_EXTENSION
            - FILENAME
            - CERT
          type: string
        threatType:
          description: The threat type for which data is returned.
          enum:
            - THREAT_TYPE_UNSPECIFIED
            - MALWARE
            - SOCIAL_ENGINEERING
            - UNWANTED_SOFTWARE
            - POTENTIALLY_HARMFUL_APPLICATION
            - SOCIAL_ENGINEERING_INTERNAL
            - API_ABUSE
            - MALICIOUS_BINARY
            - CSD_WHITELIST
            - CSD_DOWNLOAD_WHITELIST
            - CLIENT_INCIDENT
            - CLIENT_INCIDENT_WHITELIST
            - APK_MALWARE_OFFLINE
            - SUBRESOURCE_FILTER
            - SUSPICIOUS
            - TRICK_TO_BILL
            - HIGH_CONFIDENCE_ALLOWLIST
          type: string
      type: object
    MetadataEntry:
      description: A single metadata entry.
      properties:
        key:
          description: The metadata entry key. For JSON requests, the key is base64-encoded.
          format: byte
          type: string
        value:
          description: The metadata entry value. For JSON requests, the value is
            base64-encoded.
          format: byte
          type: string
      type: object
    RawHashes:
      description: >-
        The uncompressed threat entries in hash format of a particular prefix
        length.

        Hashes can be anywhere from 4 to 32 bytes in size. A large majority are 4

        bytes, but some hashes are lengthened if they collide with the hash of a

        popular URL.


        Used for sending ThreatEntrySet to clients that do not support compression,

        or when sending non-4-byte hashes to clients that do support compression.
      properties:
        prefixSize:
          description: >-
            The number of bytes for each prefix encoded below.  This field can
            be

            anywhere from 4 (shortest prefix) to 32 (full SHA256 hash).
          format: int32
          type: integer
        rawHashes:
          description: >-
            The hashes, in binary format, concatenated into one long string.
            Hashes are

            sorted in lexicographic order. For JSON API users, hashes are

            base64-encoded.
          format: byte
          type: string
      type: object
    RawIndices:
      description: A set of raw indices to remove from a local list.
      properties:
        indices:
          description: The indices to remove from a lexicographically-sorted local list.
          items:
            format: int32
            type: integer
          type: array
      type: object
    RiceDeltaEncoding:
      description: >-
        The Rice-Golomb encoded data. Used for sending compressed 4-byte hashes
        or

        compressed removal indices.
      properties:
        encodedData:
          description: The encoded deltas that are encoded using the Golomb-Rice coder.
          format: byte
          type: string
        firstValue:
          description: >-
            The offset of the first entry in the encoded data, or, if only a
            single

            integer was encoded, that single integer's value. If the field is empty or

            missing, assume zero.
          format: int64
          type: string
        numEntries:
          description: >-
            The number of entries that are delta encoded in the encoded data. If
            only a

            single integer was encoded, this will be zero and the single value will be

            stored in `first_value`.
          format: int32
          type: integer
        riceParameter:
          description: >-
            The Golomb-Rice parameter, which is a number between 2 and 28. This
            field

            is missing (that is, zero) if `num_entries` is zero.
          format: int32
          type: integer
      type: object
    ThreatEntry:
      description: |-
        An individual threat; for example, a malicious URL or its hash
        representation. Only one of these fields should be set.
      properties:
        digest:
          description: >-
            The digest of an executable in SHA256 format. The API supports both

            binary and hex digests. For JSON requests, digests are base64-encoded.
          format: byte
          type: string
        hash:
          description: >-
            A hash prefix, consisting of the most significant 4-32 bytes of a
            SHA256

            hash. This field is in binary format. For JSON requests, hashes are

            base64-encoded.
          format: byte
          type: string
        url:
          description: A URL.
          type: string
      type: object
    ThreatEntryMetadata:
      description: >-
        The metadata associated with a specific threat entry. The client is
        expected

        to know the metadata key/value pairs associated with each threat type.
      properties:
        entries:
          description: The metadata entries.
          items:
            $ref: "#/components/schemas/MetadataEntry"
          type: array
      type: object
    ThreatEntrySet:
      description: |-
        A set of threats that should be added or removed from a client's local
        database.
      properties:
        compressionType:
          description: The compression type for the entries in this set.
          enum:
            - COMPRESSION_TYPE_UNSPECIFIED
            - RAW
            - RICE
          type: string
        rawHashes:
          $ref: "#/components/schemas/RawHashes"
        rawIndices:
          $ref: "#/components/schemas/RawIndices"
        riceHashes:
          $ref: "#/components/schemas/RiceDeltaEncoding"
        riceIndices:
          $ref: "#/components/schemas/RiceDeltaEncoding"
      type: object
    ThreatHit:
      properties:
        clientInfo:
          $ref: "#/components/schemas/ClientInfo"
        entry:
          $ref: "#/components/schemas/ThreatEntry"
        platformType:
          description: The platform type reported.
          enum:
            - PLATFORM_TYPE_UNSPECIFIED
            - WINDOWS
            - LINUX
            - ANDROID
            - OSX
            - IOS
            - ANY_PLATFORM
            - ALL_PLATFORMS
            - CHROME
          type: string
        resources:
          description: The resources related to the threat hit.
          items:
            $ref: "#/components/schemas/ThreatSource"
          type: array
        threatType:
          description: The threat type reported.
          enum:
            - THREAT_TYPE_UNSPECIFIED
            - MALWARE
            - SOCIAL_ENGINEERING
            - UNWANTED_SOFTWARE
            - POTENTIALLY_HARMFUL_APPLICATION
            - SOCIAL_ENGINEERING_INTERNAL
            - API_ABUSE
            - MALICIOUS_BINARY
            - CSD_WHITELIST
            - CSD_DOWNLOAD_WHITELIST
            - CLIENT_INCIDENT
            - CLIENT_INCIDENT_WHITELIST
            - APK_MALWARE_OFFLINE
            - SUBRESOURCE_FILTER
            - SUSPICIOUS
            - TRICK_TO_BILL
            - HIGH_CONFIDENCE_ALLOWLIST
          type: string
        userInfo:
          $ref: "#/components/schemas/UserInfo"
      type: object
    ThreatInfo:
      description: |-
        The information regarding one or more threats that a client submits when
        checking for matches in threat lists.
      properties:
        platformTypes:
          description: The platform types to be checked.
          items:
            enum:
              - PLATFORM_TYPE_UNSPECIFIED
              - WINDOWS
              - LINUX
              - ANDROID
              - OSX
              - IOS
              - ANY_PLATFORM
              - ALL_PLATFORMS
              - CHROME
            type: string
          type: array
        threatEntries:
          description: The threat entries to be checked.
          items:
            $ref: "#/components/schemas/ThreatEntry"
          type: array
        threatEntryTypes:
          description: The entry types to be checked.
          items:
            enum:
              - THREAT_ENTRY_TYPE_UNSPECIFIED
              - URL
              - EXECUTABLE
              - IP_RANGE
              - CHROME_EXTENSION
              - FILENAME
              - CERT
            type: string
          type: array
        threatTypes:
          description: The threat types to be checked.
          items:
            enum:
              - THREAT_TYPE_UNSPECIFIED
              - MALWARE
              - SOCIAL_ENGINEERING
              - UNWANTED_SOFTWARE
              - POTENTIALLY_HARMFUL_APPLICATION
              - SOCIAL_ENGINEERING_INTERNAL
              - API_ABUSE
              - MALICIOUS_BINARY
              - CSD_WHITELIST
              - CSD_DOWNLOAD_WHITELIST
              - CLIENT_INCIDENT
              - CLIENT_INCIDENT_WHITELIST
              - APK_MALWARE_OFFLINE
              - SUBRESOURCE_FILTER
              - SUSPICIOUS
              - TRICK_TO_BILL
              - HIGH_CONFIDENCE_ALLOWLIST
            type: string
          type: array
      type: object
    ThreatListDescriptor:
      description: >-
        Describes an individual threat list. A list is defined by three
        parameters:

        the type of threat posed, the type of platform targeted by the threat, and

        the type of entries in the list.
      properties:
        platformType:
          description: The platform type targeted by the list's entries.
          enum:
            - PLATFORM_TYPE_UNSPECIFIED
            - WINDOWS
            - LINUX
            - ANDROID
            - OSX
            - IOS
            - ANY_PLATFORM
            - ALL_PLATFORMS
            - CHROME
          type: string
        threatEntryType:
          description: The entry types contained in the list.
          enum:
            - THREAT_ENTRY_TYPE_UNSPECIFIED
            - URL
            - EXECUTABLE
            - IP_RANGE
            - CHROME_EXTENSION
            - FILENAME
            - CERT
          type: string
        threatType:
          description: The threat type posed by the list's entries.
          enum:
            - THREAT_TYPE_UNSPECIFIED
            - MALWARE
            - SOCIAL_ENGINEERING
            - UNWANTED_SOFTWARE
            - POTENTIALLY_HARMFUL_APPLICATION
            - SOCIAL_ENGINEERING_INTERNAL
            - API_ABUSE
            - MALICIOUS_BINARY
            - CSD_WHITELIST
            - CSD_DOWNLOAD_WHITELIST
            - CLIENT_INCIDENT
            - CLIENT_INCIDENT_WHITELIST
            - APK_MALWARE_OFFLINE
            - SUBRESOURCE_FILTER
            - SUSPICIOUS
            - TRICK_TO_BILL
            - HIGH_CONFIDENCE_ALLOWLIST
          type: string
      type: object
    ThreatMatch:
      description: A match when checking a threat entry in the Safe Browsing threat lists.
      properties:
        cacheDuration:
          description: >-
            The cache lifetime for the returned match. Clients must not cache
            this

            response for more than this duration to avoid false positives.
          format: google-duration
          type: string
        platformType:
          description: The platform type matching this threat.
          enum:
            - PLATFORM_TYPE_UNSPECIFIED
            - WINDOWS
            - LINUX
            - ANDROID
            - OSX
            - IOS
            - ANY_PLATFORM
            - ALL_PLATFORMS
            - CHROME
          type: string
        threat:
          $ref: "#/components/schemas/ThreatEntry"
        threatEntryMetadata:
          $ref: "#/components/schemas/ThreatEntryMetadata"
        threatEntryType:
          description: The threat entry type matching this threat.
          enum:
            - THREAT_ENTRY_TYPE_UNSPECIFIED
            - URL
            - EXECUTABLE
            - IP_RANGE
            - CHROME_EXTENSION
            - FILENAME
            - CERT
          type: string
        threatType:
          description: The threat type matching this threat.
          enum:
            - THREAT_TYPE_UNSPECIFIED
            - MALWARE
            - SOCIAL_ENGINEERING
            - UNWANTED_SOFTWARE
            - POTENTIALLY_HARMFUL_APPLICATION
            - SOCIAL_ENGINEERING_INTERNAL
            - API_ABUSE
            - MALICIOUS_BINARY
            - CSD_WHITELIST
            - CSD_DOWNLOAD_WHITELIST
            - CLIENT_INCIDENT
            - CLIENT_INCIDENT_WHITELIST
            - APK_MALWARE_OFFLINE
            - SUBRESOURCE_FILTER
            - SUSPICIOUS
            - TRICK_TO_BILL
            - HIGH_CONFIDENCE_ALLOWLIST
          type: string
      type: object
    ThreatSource:
      description: A single resource related to a threat hit.
      properties:
        referrer:
          description: Referrer of the resource. Only set if the referrer is available.
          type: string
        remoteIp:
          description: The remote IP of the resource in ASCII format. Either IPv4 or IPv6.
          type: string
        type:
          description: The type of source reported.
          enum:
            - THREAT_SOURCE_TYPE_UNSPECIFIED
            - MATCHING_URL
            - TAB_URL
            - TAB_REDIRECT
            - TAB_RESOURCE
          type: string
        url:
          description: The URL of the resource.
          type: string
      type: object
    UserInfo:
      description: Details about the user that encountered the threat.
      properties:
        regionCode:
          description: The UN M.49 region code associated with the user's location.
          type: string
        userId:
          description: Unique user identifier defined by the client.
          format: byte
          type: string
      type: object
