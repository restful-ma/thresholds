openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: Creates and runs virtual machines on Google Cloud Platform.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Compute Engine
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-logo:
    url: https://cloud.google.com/_static/images/new-gcp-logo.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: google
      url: https://www.googleapis.com/discovery/v1/apis/compute/v1/rest
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: compute
externalDocs:
  url: https://developers.google.com/compute/docs/reference/latest/
tags:
  - name: acceleratorTypes
  - name: addresses
  - name: autoscalers
  - name: backendBuckets
  - name: backendServices
  - name: diskTypes
  - name: disks
  - name: externalVpnGateways
  - name: firewalls
  - name: forwardingRules
  - name: globalAddresses
  - name: globalForwardingRules
  - name: globalOperations
  - name: healthChecks
  - name: httpHealthChecks
  - name: httpsHealthChecks
  - name: images
  - name: instanceGroupManagers
  - name: instanceGroups
  - name: instanceTemplates
  - name: instances
  - name: interconnectAttachments
  - name: interconnectLocations
  - name: interconnects
  - name: licenseCodes
  - name: licenses
  - name: machineTypes
  - name: networkEndpointGroups
  - name: networks
  - name: nodeGroups
  - name: nodeTemplates
  - name: nodeTypes
  - name: projects
  - name: regionAutoscalers
  - name: regionBackendServices
  - name: regionCommitments
  - name: regionDiskTypes
  - name: regionDisks
  - name: regionHealthChecks
  - name: regionInstanceGroupManagers
  - name: regionInstanceGroups
  - name: regionOperations
  - name: regionSslCertificates
  - name: regionTargetHttpProxies
  - name: regionTargetHttpsProxies
  - name: regionUrlMaps
  - name: regions
  - name: reservations
  - name: resourcePolicies
  - name: routers
  - name: routes
  - name: securityPolicies
  - name: snapshots
  - name: sslCertificates
  - name: sslPolicies
  - name: subnetworks
  - name: targetHttpProxies
  - name: targetHttpsProxies
  - name: targetInstances
  - name: targetPools
  - name: targetSslProxies
  - name: targetTcpProxies
  - name: targetVpnGateways
  - name: urlMaps
  - name: vpnGateways
  - name: vpnTunnels
  - name: zoneOperations
  - name: zones
paths:
  "/{project}":
    get:
      description: Returns the specified Project resource.
      operationId: compute.projects.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Project"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/acceleratorTypes":
    get:
      description: Retrieves an aggregated list of accelerator types.
      operationId: compute.acceleratorTypes.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AcceleratorTypeAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - acceleratorTypes
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/addresses":
    get:
      description: Retrieves an aggregated list of addresses.
      operationId: compute.addresses.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AddressAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - addresses
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/autoscalers":
    get:
      description: Retrieves an aggregated list of autoscalers.
      operationId: compute.autoscalers.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AutoscalerAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - autoscalers
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/backendServices":
    get:
      description: Retrieves the list of all BackendService resources, regional and global,
        available to the specified project.
      operationId: compute.backendServices.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Name of the project scoping this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/BackendServiceAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - backendServices
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/commitments":
    get:
      description: Retrieves an aggregated list of commitments.
      operationId: compute.regionCommitments.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CommitmentAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionCommitments
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/diskTypes":
    get:
      description: Retrieves an aggregated list of disk types.
      operationId: compute.diskTypes.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/DiskTypeAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - diskTypes
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/disks":
    get:
      description: Retrieves an aggregated list of persistent disks.
      operationId: compute.disks.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/DiskAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - disks
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/forwardingRules":
    get:
      description: Retrieves an aggregated list of forwarding rules.
      operationId: compute.forwardingRules.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ForwardingRuleAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - forwardingRules
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/healthChecks":
    get:
      description: Retrieves the list of all HealthCheck resources, regional and global,
        available to the specified project.
      operationId: compute.healthChecks.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Name of the project scoping this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/HealthChecksAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - healthChecks
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/instanceGroupManagers":
    get:
      description: Retrieves the list of managed instance groups and groups them by zone.
      operationId: compute.instanceGroupManagers.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/InstanceGroupManagerAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - instanceGroupManagers
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/instanceGroups":
    get:
      description: Retrieves the list of instance groups and sorts them by zone.
      operationId: compute.instanceGroups.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/InstanceGroupAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - instanceGroups
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/instances":
    get:
      description: Retrieves aggregated list of all of the instances in your project across
        all regions and zones.
      operationId: compute.instances.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/InstanceAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - instances
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/interconnectAttachments":
    get:
      description: Retrieves an aggregated list of interconnect attachments.
      operationId: compute.interconnectAttachments.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/InterconnectAttachmentAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - interconnectAttachments
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/machineTypes":
    get:
      description: Retrieves an aggregated list of machine types.
      operationId: compute.machineTypes.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/MachineTypeAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - machineTypes
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/networkEndpointGroups":
    get:
      description: Retrieves the list of network endpoint groups and sorts them by zone.
      operationId: compute.networkEndpointGroups.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/NetworkEndpointGroupAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - networkEndpointGroups
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/nodeGroups":
    get:
      description: "Retrieves an aggregated list of node groups. Note: use
        nodeGroups.listNodes for more details about each group."
      operationId: compute.nodeGroups.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/NodeGroupAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - nodeGroups
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/nodeTemplates":
    get:
      description: Retrieves an aggregated list of node templates.
      operationId: compute.nodeTemplates.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/NodeTemplateAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - nodeTemplates
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/nodeTypes":
    get:
      description: Retrieves an aggregated list of node types.
      operationId: compute.nodeTypes.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/NodeTypeAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - nodeTypes
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/operations":
    get:
      description: Retrieves an aggregated list of all operations.
      operationId: compute.globalOperations.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OperationAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - globalOperations
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/reservations":
    get:
      description: Retrieves an aggregated list of reservations.
      operationId: compute.reservations.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ReservationAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - reservations
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/resourcePolicies":
    get:
      description: Retrieves an aggregated list of resource policies.
      operationId: compute.resourcePolicies.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResourcePolicyAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - resourcePolicies
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/routers":
    get:
      description: Retrieves an aggregated list of routers.
      operationId: compute.routers.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/RouterAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - routers
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/sslCertificates":
    get:
      description: Retrieves the list of all SslCertificate resources, regional and global,
        available to the specified project.
      operationId: compute.sslCertificates.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Name of the project scoping this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SslCertificateAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - sslCertificates
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/subnetworks":
    get:
      description: Retrieves an aggregated list of subnetworks.
      operationId: compute.subnetworks.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SubnetworkAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - subnetworks
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/subnetworks/listUsable":
    get:
      description: Retrieves an aggregated list of all usable subnetworks in the project.
        The list contains all of the subnetworks in the project and the
        subnetworks that were shared by a Shared VPC host project.
      operationId: compute.subnetworks.listUsable
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/UsableSubnetworksAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - subnetworks
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/targetHttpProxies":
    get:
      description: Retrieves the list of all TargetHttpProxy resources, regional and
        global, available to the specified project.
      operationId: compute.targetHttpProxies.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Name of the project scoping this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TargetHttpProxyAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - targetHttpProxies
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/targetHttpsProxies":
    get:
      description: Retrieves the list of all TargetHttpsProxy resources, regional and
        global, available to the specified project.
      operationId: compute.targetHttpsProxies.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Name of the project scoping this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TargetHttpsProxyAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - targetHttpsProxies
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/targetInstances":
    get:
      description: Retrieves an aggregated list of target instances.
      operationId: compute.targetInstances.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TargetInstanceAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - targetInstances
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/targetPools":
    get:
      description: Retrieves an aggregated list of target pools.
      operationId: compute.targetPools.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TargetPoolAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - targetPools
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/targetVpnGateways":
    get:
      description: Retrieves an aggregated list of target VPN gateways.
      operationId: compute.targetVpnGateways.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TargetVpnGatewayAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - targetVpnGateways
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/urlMaps":
    get:
      description: Retrieves the list of all UrlMap resources, regional and global,
        available to the specified project.
      operationId: compute.urlMaps.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Name of the project scoping this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/UrlMapsAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - urlMaps
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/vpnGateways":
    get:
      description: Retrieves an aggregated list of VPN gateways.
      operationId: compute.vpnGateways.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/VpnGatewayAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - vpnGateways
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/aggregated/vpnTunnels":
    get:
      description: Retrieves an aggregated list of VPN tunnels.
      operationId: compute.vpnTunnels.aggregatedList
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/VpnTunnelAggregatedList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - vpnTunnels
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/disableXpnHost":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Disable this project as a shared VPC host project.
      operationId: compute.projects.disableXpnHost
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - projects
  "/{project}/disableXpnResource":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Disable a service resource (also known as service project) associated
        with this host project.
      operationId: compute.projects.disableXpnResource
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectsDisableXpnResourceRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - projects
  "/{project}/enableXpnHost":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Enable this project as a shared VPC host project.
      operationId: compute.projects.enableXpnHost
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - projects
  "/{project}/enableXpnResource":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Enable service resource (a.k.a service project) for a host project, so
        that subnets in the host project can be used by instances in the service
        project.
      operationId: compute.projects.enableXpnResource
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectsEnableXpnResourceRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - projects
  "/{project}/getXpnHost":
    get:
      description: Gets the shared VPC host project that this project links to. May be
        empty if no link exists.
      operationId: compute.projects.getXpnHost
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Project"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/getXpnResources":
    get:
      description: Gets service resources (a.k.a service project) associated with this host
        project.
      operationId: compute.projects.getXpnResources
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: order_by
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ProjectsGetXpnResources"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/addresses":
    get:
      description: Retrieves a list of global addresses.
      operationId: compute.globalAddresses.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AddressList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - globalAddresses
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates an address resource in the specified project by using the data
        included in the request.
      operationId: compute.globalAddresses.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Address"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - globalAddresses
  "/{project}/global/addresses/{address}":
    delete:
      description: Deletes the specified address resource.
      operationId: compute.globalAddresses.delete
      parameters:
        - description: Name of the address resource to delete.
          in: path
          name: address
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - globalAddresses
    get:
      description: Returns the specified address resource. Gets a list of available
        addresses by making a list() request.
      operationId: compute.globalAddresses.get
      parameters:
        - description: Name of the address resource to return.
          in: path
          name: address
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Address"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - globalAddresses
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/backendBuckets":
    get:
      description: Retrieves the list of BackendBucket resources available to the specified
        project.
      operationId: compute.backendBuckets.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/BackendBucketList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - backendBuckets
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a BackendBucket resource in the specified project using the data
        included in the request.
      operationId: compute.backendBuckets.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/BackendBucket"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - backendBuckets
  "/{project}/global/backendBuckets/{backendBucket}":
    delete:
      description: Deletes the specified BackendBucket resource.
      operationId: compute.backendBuckets.delete
      parameters:
        - description: Name of the BackendBucket resource to delete.
          in: path
          name: backendBucket
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - backendBuckets
    get:
      description: Returns the specified BackendBucket resource. Gets a list of available
        backend buckets by making a list() request.
      operationId: compute.backendBuckets.get
      parameters:
        - description: Name of the BackendBucket resource to return.
          in: path
          name: backendBucket
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/BackendBucket"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - backendBuckets
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates the specified BackendBucket resource with the data included in
        the request. This method supports PATCH semantics and uses the JSON
        merge patch format and processing rules.
      operationId: compute.backendBuckets.patch
      parameters:
        - description: Name of the BackendBucket resource to patch.
          in: path
          name: backendBucket
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/BackendBucket"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - backendBuckets
    put:
      description: Updates the specified BackendBucket resource with the data included in
        the request.
      operationId: compute.backendBuckets.update
      parameters:
        - description: Name of the BackendBucket resource to update.
          in: path
          name: backendBucket
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/BackendBucket"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - backendBuckets
  "/{project}/global/backendBuckets/{backendBucket}/addSignedUrlKey":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Adds a key for validating requests with signed URLs for this backend
        bucket.
      operationId: compute.backendBuckets.addSignedUrlKey
      parameters:
        - description: Name of the BackendBucket resource to which the Signed URL Key
            should be added. The name should conform to RFC1035.
          in: path
          name: backendBucket
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SignedUrlKey"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - backendBuckets
  "/{project}/global/backendBuckets/{backendBucket}/deleteSignedUrlKey":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Deletes a key for validating requests with signed URLs for this backend
        bucket.
      operationId: compute.backendBuckets.deleteSignedUrlKey
      parameters:
        - description: Name of the BackendBucket resource to which the Signed URL Key
            should be added. The name should conform to RFC1035.
          in: path
          name: backendBucket
          required: true
          schema:
            type: string
        - description: The name of the Signed URL Key to delete.
          in: query
          name: keyName
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - backendBuckets
  "/{project}/global/backendServices":
    get:
      description: Retrieves the list of BackendService resources available to the
        specified project.
      operationId: compute.backendServices.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/BackendServiceList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - backendServices
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a BackendService resource in the specified project using the
        data included in the request. There are several restrictions and
        guidelines to keep in mind when creating a backend service.
        Read  Restrictions and Guidelines for more information.
      operationId: compute.backendServices.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/BackendService"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - backendServices
  "/{project}/global/backendServices/{backendService}":
    delete:
      description: Deletes the specified BackendService resource.
      operationId: compute.backendServices.delete
      parameters:
        - description: Name of the BackendService resource to delete.
          in: path
          name: backendService
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - backendServices
    get:
      description: Returns the specified BackendService resource. Gets a list of available
        backend services.
      operationId: compute.backendServices.get
      parameters:
        - description: Name of the BackendService resource to return.
          in: path
          name: backendService
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/BackendService"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - backendServices
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Patches the specified BackendService resource with the data included in
        the request. There are several restrictions and guidelines to keep in
        mind when updating a backend service. Read  Restrictions and Guidelines
        for more information. This method supports PATCH semantics and uses the
        JSON merge patch format and processing rules.
      operationId: compute.backendServices.patch
      parameters:
        - description: Name of the BackendService resource to patch.
          in: path
          name: backendService
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/BackendService"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - backendServices
    put:
      description: Updates the specified BackendService resource with the data included in
        the request. There are several restrictions and guidelines to keep in
        mind when updating a backend service. Read  Restrictions and Guidelines
        for more information.
      operationId: compute.backendServices.update
      parameters:
        - description: Name of the BackendService resource to update.
          in: path
          name: backendService
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/BackendService"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - backendServices
  "/{project}/global/backendServices/{backendService}/addSignedUrlKey":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Adds a key for validating requests with signed URLs for this backend
        service.
      operationId: compute.backendServices.addSignedUrlKey
      parameters:
        - description: Name of the BackendService resource to which the Signed URL Key
            should be added. The name should conform to RFC1035.
          in: path
          name: backendService
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SignedUrlKey"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - backendServices
  "/{project}/global/backendServices/{backendService}/deleteSignedUrlKey":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Deletes a key for validating requests with signed URLs for this backend
        service.
      operationId: compute.backendServices.deleteSignedUrlKey
      parameters:
        - description: Name of the BackendService resource to which the Signed URL Key
            should be added. The name should conform to RFC1035.
          in: path
          name: backendService
          required: true
          schema:
            type: string
        - description: The name of the Signed URL Key to delete.
          in: query
          name: keyName
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - backendServices
  "/{project}/global/backendServices/{backendService}/getHealth":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Gets the most recent health check results for this BackendService.
      operationId: compute.backendServices.getHealth
      parameters:
        - description: Name of the BackendService resource to which the queried instance
            belongs.
          in: path
          name: backendService
          required: true
          schema:
            type: string
        - in: path
          name: project
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ResourceGroupReference"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/BackendServiceGroupHealth"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - backendServices
  "/{project}/global/backendServices/{backendService}/setSecurityPolicy":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the security policy for the specified backend service.
      operationId: compute.backendServices.setSecurityPolicy
      parameters:
        - description: Name of the BackendService resource to which the security policy
            should be set. The name should conform to RFC1035.
          in: path
          name: backendService
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SecurityPolicyReference"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - backendServices
  "/{project}/global/externalVpnGateways":
    get:
      description: Retrieves the list of ExternalVpnGateway available to the specified
        project.
      operationId: compute.externalVpnGateways.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ExternalVpnGatewayList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - externalVpnGateways
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a ExternalVpnGateway in the specified project using the data
        included in the request.
      operationId: compute.externalVpnGateways.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExternalVpnGateway"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - externalVpnGateways
  "/{project}/global/externalVpnGateways/{externalVpnGateway}":
    delete:
      description: Deletes the specified externalVpnGateway.
      operationId: compute.externalVpnGateways.delete
      parameters:
        - description: Name of the externalVpnGateways to delete.
          in: path
          name: externalVpnGateway
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - externalVpnGateways
    get:
      description: Returns the specified externalVpnGateway. Get a list of available
        externalVpnGateways by making a list() request.
      operationId: compute.externalVpnGateways.get
      parameters:
        - description: Name of the externalVpnGateway to return.
          in: path
          name: externalVpnGateway
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ExternalVpnGateway"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - externalVpnGateways
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/externalVpnGateways/{resource}/setLabels":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the labels on an ExternalVpnGateway. To learn more about labels,
        read the Labeling Resources documentation.
      operationId: compute.externalVpnGateways.setLabels
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/GlobalSetLabelsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - externalVpnGateways
  "/{project}/global/externalVpnGateways/{resource}/testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Returns permissions that a caller has on the specified resource.
      operationId: compute.externalVpnGateways.testIamPermissions
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/TestPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - externalVpnGateways
  "/{project}/global/firewalls":
    get:
      description: Retrieves the list of firewall rules available to the specified project.
      operationId: compute.firewalls.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/FirewallList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - firewalls
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a firewall rule in the specified project using the data included
        in the request.
      operationId: compute.firewalls.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Firewall"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - firewalls
  "/{project}/global/firewalls/{firewall}":
    delete:
      description: Deletes the specified firewall.
      operationId: compute.firewalls.delete
      parameters:
        - description: Name of the firewall rule to delete.
          in: path
          name: firewall
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - firewalls
    get:
      description: Returns the specified firewall.
      operationId: compute.firewalls.get
      parameters:
        - description: Name of the firewall rule to return.
          in: path
          name: firewall
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Firewall"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - firewalls
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates the specified firewall rule with the data included in the
        request. This method supports PATCH semantics and uses the JSON merge
        patch format and processing rules.
      operationId: compute.firewalls.patch
      parameters:
        - description: Name of the firewall rule to patch.
          in: path
          name: firewall
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Firewall"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - firewalls
    put:
      description: "Updates the specified firewall rule with the data included in the
        request. The PUT method can only update the following fields of firewall
        rule: allowed, description, sourceRanges, sourceTags, targetTags."
      operationId: compute.firewalls.update
      parameters:
        - description: Name of the firewall rule to update.
          in: path
          name: firewall
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Firewall"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - firewalls
  "/{project}/global/forwardingRules":
    get:
      description: Retrieves a list of GlobalForwardingRule resources available to the
        specified project.
      operationId: compute.globalForwardingRules.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ForwardingRuleList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - globalForwardingRules
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a GlobalForwardingRule resource in the specified project using
        the data included in the request.
      operationId: compute.globalForwardingRules.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ForwardingRule"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - globalForwardingRules
  "/{project}/global/forwardingRules/{forwardingRule}":
    delete:
      description: Deletes the specified GlobalForwardingRule resource.
      operationId: compute.globalForwardingRules.delete
      parameters:
        - description: Name of the ForwardingRule resource to delete.
          in: path
          name: forwardingRule
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - globalForwardingRules
    get:
      description: Returns the specified GlobalForwardingRule resource. Gets a list of
        available forwarding rules by making a list() request.
      operationId: compute.globalForwardingRules.get
      parameters:
        - description: Name of the ForwardingRule resource to return.
          in: path
          name: forwardingRule
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ForwardingRule"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - globalForwardingRules
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/forwardingRules/{forwardingRule}/setTarget":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Changes target URL for the GlobalForwardingRule resource. The new target
        should be of the same type as the old target.
      operationId: compute.globalForwardingRules.setTarget
      parameters:
        - description: Name of the ForwardingRule resource in which target is to be set.
          in: path
          name: forwardingRule
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/TargetReference"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - globalForwardingRules
  "/{project}/global/healthChecks":
    get:
      description: Retrieves the list of HealthCheck resources available to the specified
        project.
      operationId: compute.healthChecks.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/HealthCheckList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - healthChecks
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a HealthCheck resource in the specified project using the data
        included in the request.
      operationId: compute.healthChecks.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/HealthCheck"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - healthChecks
  "/{project}/global/healthChecks/{healthCheck}":
    delete:
      description: Deletes the specified HealthCheck resource.
      operationId: compute.healthChecks.delete
      parameters:
        - description: Name of the HealthCheck resource to delete.
          in: path
          name: healthCheck
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - healthChecks
    get:
      description: Returns the specified HealthCheck resource. Gets a list of available
        health checks by making a list() request.
      operationId: compute.healthChecks.get
      parameters:
        - description: Name of the HealthCheck resource to return.
          in: path
          name: healthCheck
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/HealthCheck"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - healthChecks
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates a HealthCheck resource in the specified project using the data
        included in the request. This method supports PATCH semantics and uses
        the JSON merge patch format and processing rules.
      operationId: compute.healthChecks.patch
      parameters:
        - description: Name of the HealthCheck resource to patch.
          in: path
          name: healthCheck
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/HealthCheck"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - healthChecks
    put:
      description: Updates a HealthCheck resource in the specified project using the data
        included in the request.
      operationId: compute.healthChecks.update
      parameters:
        - description: Name of the HealthCheck resource to update.
          in: path
          name: healthCheck
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/HealthCheck"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - healthChecks
  "/{project}/global/httpHealthChecks":
    get:
      description: Retrieves the list of HttpHealthCheck resources available to the
        specified project.
      operationId: compute.httpHealthChecks.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/HttpHealthCheckList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - httpHealthChecks
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a HttpHealthCheck resource in the specified project using the
        data included in the request.
      operationId: compute.httpHealthChecks.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/HttpHealthCheck"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - httpHealthChecks
  "/{project}/global/httpHealthChecks/{httpHealthCheck}":
    delete:
      description: Deletes the specified HttpHealthCheck resource.
      operationId: compute.httpHealthChecks.delete
      parameters:
        - description: Name of the HttpHealthCheck resource to delete.
          in: path
          name: httpHealthCheck
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - httpHealthChecks
    get:
      description: Returns the specified HttpHealthCheck resource. Gets a list of available
        HTTP health checks by making a list() request.
      operationId: compute.httpHealthChecks.get
      parameters:
        - description: Name of the HttpHealthCheck resource to return.
          in: path
          name: httpHealthCheck
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/HttpHealthCheck"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - httpHealthChecks
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates a HttpHealthCheck resource in the specified project using the
        data included in the request. This method supports PATCH semantics and
        uses the JSON merge patch format and processing rules.
      operationId: compute.httpHealthChecks.patch
      parameters:
        - description: Name of the HttpHealthCheck resource to patch.
          in: path
          name: httpHealthCheck
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/HttpHealthCheck"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - httpHealthChecks
    put:
      description: Updates a HttpHealthCheck resource in the specified project using the
        data included in the request.
      operationId: compute.httpHealthChecks.update
      parameters:
        - description: Name of the HttpHealthCheck resource to update.
          in: path
          name: httpHealthCheck
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/HttpHealthCheck"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - httpHealthChecks
  "/{project}/global/httpsHealthChecks":
    get:
      description: Retrieves the list of HttpsHealthCheck resources available to the
        specified project.
      operationId: compute.httpsHealthChecks.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/HttpsHealthCheckList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - httpsHealthChecks
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a HttpsHealthCheck resource in the specified project using the
        data included in the request.
      operationId: compute.httpsHealthChecks.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/HttpsHealthCheck"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - httpsHealthChecks
  "/{project}/global/httpsHealthChecks/{httpsHealthCheck}":
    delete:
      description: Deletes the specified HttpsHealthCheck resource.
      operationId: compute.httpsHealthChecks.delete
      parameters:
        - description: Name of the HttpsHealthCheck resource to delete.
          in: path
          name: httpsHealthCheck
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - httpsHealthChecks
    get:
      description: Returns the specified HttpsHealthCheck resource. Gets a list of
        available HTTPS health checks by making a list() request.
      operationId: compute.httpsHealthChecks.get
      parameters:
        - description: Name of the HttpsHealthCheck resource to return.
          in: path
          name: httpsHealthCheck
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/HttpsHealthCheck"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - httpsHealthChecks
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates a HttpsHealthCheck resource in the specified project using the
        data included in the request. This method supports PATCH semantics and
        uses the JSON merge patch format and processing rules.
      operationId: compute.httpsHealthChecks.patch
      parameters:
        - description: Name of the HttpsHealthCheck resource to patch.
          in: path
          name: httpsHealthCheck
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/HttpsHealthCheck"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - httpsHealthChecks
    put:
      description: Updates a HttpsHealthCheck resource in the specified project using the
        data included in the request.
      operationId: compute.httpsHealthChecks.update
      parameters:
        - description: Name of the HttpsHealthCheck resource to update.
          in: path
          name: httpsHealthCheck
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/HttpsHealthCheck"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - httpsHealthChecks
  "/{project}/global/images":
    get:
      description: Retrieves the list of custom images available to the specified project.
        Custom images are images you create that belong to your project. This
        method does not get any images that belong to other projects, including
        publicly-available images, like Debian 8. If you want to get a list of
        publicly-available images, use this method to make a request to the
        respective image project, such as debian-cloud or windows-cloud.
      operationId: compute.images.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ImageList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - images
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates an image in the specified project using the data included in the
        request.
      operationId: compute.images.insert
      parameters:
        - description: Force image creation if true.
          in: query
          name: forceCreate
          schema:
            type: boolean
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Image"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_only
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - images
  "/{project}/global/images/family/{family}":
    get:
      description: Returns the latest image that is part of an image family and is not
        deprecated.
      operationId: compute.images.getFromFamily
      parameters:
        - description: Name of the image family to search for.
          in: path
          name: family
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Image"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - images
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/images/{image}":
    delete:
      description: Deletes the specified image.
      operationId: compute.images.delete
      parameters:
        - description: Name of the image resource to delete.
          in: path
          name: image
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - images
    get:
      description: Returns the specified image. Gets a list of available images by making a
        list() request.
      operationId: compute.images.get
      parameters:
        - description: Name of the image resource to return.
          in: path
          name: image
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Image"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - images
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/images/{image}/deprecate":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: >-
        Sets the deprecation status of an image.


        If an empty request body is given, clears the deprecation status instead.
      operationId: compute.images.deprecate
      parameters:
        - description: Image name.
          in: path
          name: image
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeprecationStatus"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - images
  "/{project}/global/images/{resource}/getIamPolicy":
    get:
      description: Gets the access control policy for a resource. May be empty if no such
        policy or resource exists.
      operationId: compute.images.getIamPolicy
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - images
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/images/{resource}/setIamPolicy":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the access control policy on the specified resource. Replaces any
        existing policy.
      operationId: compute.images.setIamPolicy
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/GlobalSetPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - images
  "/{project}/global/images/{resource}/setLabels":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the labels on an image. To learn more about labels, read the
        Labeling Resources documentation.
      operationId: compute.images.setLabels
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/GlobalSetLabelsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - images
  "/{project}/global/images/{resource}/testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Returns permissions that a caller has on the specified resource.
      operationId: compute.images.testIamPermissions
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/TestPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - images
  "/{project}/global/instanceTemplates":
    get:
      description: Retrieves a list of instance templates that are contained within the
        specified project.
      operationId: compute.instanceTemplates.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/InstanceTemplateList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - instanceTemplates
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates an instance template in the specified project using the data
        that is included in the request. If you are creating a new template to
        update an existing instance group, your new instance template must use
        the same network or, if applicable, the same subnetwork as the original
        template.
      operationId: compute.instanceTemplates.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstanceTemplate"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instanceTemplates
  "/{project}/global/instanceTemplates/{instanceTemplate}":
    delete:
      description: Deletes the specified instance template. Deleting an instance template
        is permanent and cannot be undone. It is not possible to delete
        templates that are already in use by a managed instance group.
      operationId: compute.instanceTemplates.delete
      parameters:
        - description: The name of the instance template to delete.
          in: path
          name: instanceTemplate
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instanceTemplates
    get:
      description: Returns the specified instance template. Gets a list of available
        instance templates by making a list() request.
      operationId: compute.instanceTemplates.get
      parameters:
        - description: The name of the instance template.
          in: path
          name: instanceTemplate
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/InstanceTemplate"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - instanceTemplates
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/instanceTemplates/{resource}/getIamPolicy":
    get:
      description: Gets the access control policy for a resource. May be empty if no such
        policy or resource exists.
      operationId: compute.instanceTemplates.getIamPolicy
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - instanceTemplates
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/instanceTemplates/{resource}/setIamPolicy":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the access control policy on the specified resource. Replaces any
        existing policy.
      operationId: compute.instanceTemplates.setIamPolicy
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/GlobalSetPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instanceTemplates
  "/{project}/global/instanceTemplates/{resource}/testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Returns permissions that a caller has on the specified resource.
      operationId: compute.instanceTemplates.testIamPermissions
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/TestPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - instanceTemplates
  "/{project}/global/interconnectLocations":
    get:
      description: Retrieves the list of interconnect locations available to the specified
        project.
      operationId: compute.interconnectLocations.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/InterconnectLocationList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - interconnectLocations
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/interconnectLocations/{interconnectLocation}":
    get:
      description: Returns the details for the specified interconnect location. Gets a list
        of available interconnect locations by making a list() request.
      operationId: compute.interconnectLocations.get
      parameters:
        - description: Name of the interconnect location to return.
          in: path
          name: interconnectLocation
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/InterconnectLocation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - interconnectLocations
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/interconnects":
    get:
      description: Retrieves the list of interconnect available to the specified project.
      operationId: compute.interconnects.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/InterconnectList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - interconnects
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a Interconnect in the specified project using the data included
        in the request.
      operationId: compute.interconnects.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Interconnect"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - interconnects
  "/{project}/global/interconnects/{interconnect}":
    delete:
      description: Deletes the specified interconnect.
      operationId: compute.interconnects.delete
      parameters:
        - description: Name of the interconnect to delete.
          in: path
          name: interconnect
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - interconnects
    get:
      description: Returns the specified interconnect. Get a list of available
        interconnects by making a list() request.
      operationId: compute.interconnects.get
      parameters:
        - description: Name of the interconnect to return.
          in: path
          name: interconnect
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Interconnect"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - interconnects
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates the specified interconnect with the data included in the
        request. This method supports PATCH semantics and uses the JSON merge
        patch format and processing rules.
      operationId: compute.interconnects.patch
      parameters:
        - description: Name of the interconnect to update.
          in: path
          name: interconnect
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Interconnect"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - interconnects
  "/{project}/global/interconnects/{interconnect}/getDiagnostics":
    get:
      description: Returns the interconnectDiagnostics for the specified interconnect.
      operationId: compute.interconnects.getDiagnostics
      parameters:
        - description: Name of the interconnect resource to query.
          in: path
          name: interconnect
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/InterconnectsGetDiagnosticsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - interconnects
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/licenseCodes/{licenseCode}":
    get:
      description: Return a specified license code. License codes are mirrored across all
        projects that have permissions to read the License Code.
      operationId: compute.licenseCodes.get
      parameters:
        - description: Number corresponding to the License code resource to return.
          in: path
          name: licenseCode
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/LicenseCode"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - licenseCodes
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/licenseCodes/{resource}/testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Returns permissions that a caller has on the specified resource.
      operationId: compute.licenseCodes.testIamPermissions
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/TestPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - licenseCodes
  "/{project}/global/licenses":
    get:
      description: Retrieves the list of licenses available in the specified project. This
        method does not get any licenses that belong to other projects,
        including licenses attached to publicly-available images, like Debian 9.
        If you want to get a list of publicly-available licenses, use this
        method to make a request to the respective image project, such as
        debian-cloud or windows-cloud.
      operationId: compute.licenses.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/LicensesListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - licenses
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Create a License resource in the specified project.
      operationId: compute.licenses.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/License"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_only
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - licenses
  "/{project}/global/licenses/{license}":
    delete:
      description: Deletes the specified license.
      operationId: compute.licenses.delete
      parameters:
        - description: Name of the license resource to delete.
          in: path
          name: license
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - licenses
    get:
      description: Returns the specified License resource.
      operationId: compute.licenses.get
      parameters:
        - description: Name of the License resource to return.
          in: path
          name: license
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/License"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - licenses
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/licenses/{resource}/getIamPolicy":
    get:
      description: Gets the access control policy for a resource. May be empty if no such
        policy or resource exists.
      operationId: compute.licenses.getIamPolicy
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - licenses
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/licenses/{resource}/setIamPolicy":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the access control policy on the specified resource. Replaces any
        existing policy.
      operationId: compute.licenses.setIamPolicy
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/GlobalSetPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - licenses
  "/{project}/global/licenses/{resource}/testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Returns permissions that a caller has on the specified resource.
      operationId: compute.licenses.testIamPermissions
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/TestPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - licenses
  "/{project}/global/networks":
    get:
      description: Retrieves the list of networks available to the specified project.
      operationId: compute.networks.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/NetworkList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - networks
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a network in the specified project using the data included in
        the request.
      operationId: compute.networks.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Network"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - networks
  "/{project}/global/networks/{network}":
    delete:
      description: Deletes the specified network.
      operationId: compute.networks.delete
      parameters:
        - description: Name of the network to delete.
          in: path
          name: network
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - networks
    get:
      description: Returns the specified network. Gets a list of available networks by
        making a list() request.
      operationId: compute.networks.get
      parameters:
        - description: Name of the network to return.
          in: path
          name: network
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Network"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - networks
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: "Patches the specified network with the data included in the request.
        Only the following fields can be modified: routingConfig.routingMode."
      operationId: compute.networks.patch
      parameters:
        - description: Name of the network to update.
          in: path
          name: network
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Network"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - networks
  "/{project}/global/networks/{network}/addPeering":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Adds a peering to the specified network.
      operationId: compute.networks.addPeering
      parameters:
        - description: Name of the network resource to add peering to.
          in: path
          name: network
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NetworksAddPeeringRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - networks
  "/{project}/global/networks/{network}/removePeering":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Removes a peering from the specified network.
      operationId: compute.networks.removePeering
      parameters:
        - description: Name of the network resource to remove peering from.
          in: path
          name: network
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NetworksRemovePeeringRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - networks
  "/{project}/global/networks/{network}/switchToCustomMode":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Switches the network mode from auto subnet mode to custom subnet mode.
      operationId: compute.networks.switchToCustomMode
      parameters:
        - description: Name of the network to be updated.
          in: path
          name: network
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - networks
  "/{project}/global/networks/{network}/updatePeering":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: "Updates the specified network peering with the data included in the
        request Only the following fields can be modified:
        NetworkPeering.export_custom_routes, and
        NetworkPeering.import_custom_routes"
      operationId: compute.networks.updatePeering
      parameters:
        - description: Name of the network resource which the updated peering is belonging
            to.
          in: path
          name: network
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NetworksUpdatePeeringRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - networks
  "/{project}/global/operations":
    get:
      description: Retrieves a list of Operation resources contained within the specified
        project.
      operationId: compute.globalOperations.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OperationList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - globalOperations
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/operations/{operation}":
    delete:
      description: Deletes the specified Operations resource.
      operationId: compute.globalOperations.delete
      parameters:
        - description: Name of the Operations resource to delete.
          in: path
          name: operation
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - globalOperations
    get:
      description: Retrieves the specified Operations resource. Gets a list of operations
        by making a list() request.
      operationId: compute.globalOperations.get
      parameters:
        - description: Name of the Operations resource to return.
          in: path
          name: operation
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - globalOperations
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/routes":
    get:
      description: Retrieves the list of Route resources available to the specified project.
      operationId: compute.routes.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/RouteList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - routes
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a Route resource in the specified project using the data
        included in the request.
      operationId: compute.routes.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Route"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - routes
  "/{project}/global/routes/{route}":
    delete:
      description: Deletes the specified Route resource.
      operationId: compute.routes.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the Route resource to delete.
          in: path
          name: route
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - routes
    get:
      description: Returns the specified Route resource. Gets a list of available routes by
        making a list() request.
      operationId: compute.routes.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the Route resource to return.
          in: path
          name: route
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Route"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - routes
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/securityPolicies":
    get:
      description: List all the policies that have been configured for the specified
        project.
      operationId: compute.securityPolicies.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SecurityPolicyList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - securityPolicies
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a new policy in the specified project using the data included in
        the request.
      operationId: compute.securityPolicies.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SecurityPolicy"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - securityPolicies
  "/{project}/global/securityPolicies/{securityPolicy}":
    delete:
      description: Deletes the specified policy.
      operationId: compute.securityPolicies.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the security policy to delete.
          in: path
          name: securityPolicy
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - securityPolicies
    get:
      description: List all of the ordered rules present in a single specified policy.
      operationId: compute.securityPolicies.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the security policy to get.
          in: path
          name: securityPolicy
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SecurityPolicy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - securityPolicies
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Patches the specified policy with the data included in the request.
      operationId: compute.securityPolicies.patch
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the security policy to update.
          in: path
          name: securityPolicy
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SecurityPolicy"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - securityPolicies
  "/{project}/global/securityPolicies/{securityPolicy}/addRule":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Inserts a rule into a security policy.
      operationId: compute.securityPolicies.addRule
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the security policy to update.
          in: path
          name: securityPolicy
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SecurityPolicyRule"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - securityPolicies
  "/{project}/global/securityPolicies/{securityPolicy}/getRule":
    get:
      description: Gets a rule at the specified priority.
      operationId: compute.securityPolicies.getRule
      parameters:
        - description: The priority of the rule to get from the security policy.
          in: query
          name: priority
          schema:
            type: integer
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the security policy to which the queried rule belongs.
          in: path
          name: securityPolicy
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SecurityPolicyRule"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - securityPolicies
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/securityPolicies/{securityPolicy}/patchRule":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Patches a rule at the specified priority.
      operationId: compute.securityPolicies.patchRule
      parameters:
        - description: The priority of the rule to patch.
          in: query
          name: priority
          schema:
            type: integer
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the security policy to update.
          in: path
          name: securityPolicy
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SecurityPolicyRule"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - securityPolicies
  "/{project}/global/securityPolicies/{securityPolicy}/removeRule":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Deletes a rule at the specified priority.
      operationId: compute.securityPolicies.removeRule
      parameters:
        - description: The priority of the rule to remove from the security policy.
          in: query
          name: priority
          schema:
            type: integer
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the security policy to update.
          in: path
          name: securityPolicy
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - securityPolicies
  "/{project}/global/snapshots":
    get:
      description: Retrieves the list of Snapshot resources contained within the specified
        project.
      operationId: compute.snapshots.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SnapshotList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - snapshots
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/snapshots/{resource}/getIamPolicy":
    get:
      description: Gets the access control policy for a resource. May be empty if no such
        policy or resource exists.
      operationId: compute.snapshots.getIamPolicy
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - snapshots
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/snapshots/{resource}/setIamPolicy":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the access control policy on the specified resource. Replaces any
        existing policy.
      operationId: compute.snapshots.setIamPolicy
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/GlobalSetPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - snapshots
  "/{project}/global/snapshots/{resource}/setLabels":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the labels on a snapshot. To learn more about labels, read the
        Labeling Resources documentation.
      operationId: compute.snapshots.setLabels
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/GlobalSetLabelsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - snapshots
  "/{project}/global/snapshots/{resource}/testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Returns permissions that a caller has on the specified resource.
      operationId: compute.snapshots.testIamPermissions
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/TestPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - snapshots
  "/{project}/global/snapshots/{snapshot}":
    delete:
      description: >-
        Deletes the specified Snapshot resource. Keep in mind that deleting a
        single snapshot might not necessarily delete all the data on that
        snapshot. If any data on the snapshot that is marked for deletion is
        needed for subsequent snapshots, the data will be moved to the next
        corresponding snapshot.


        For more information, see Deleting snapshots.
      operationId: compute.snapshots.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the Snapshot resource to delete.
          in: path
          name: snapshot
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - snapshots
    get:
      description: Returns the specified Snapshot resource. Gets a list of available
        snapshots by making a list() request.
      operationId: compute.snapshots.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the Snapshot resource to return.
          in: path
          name: snapshot
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Snapshot"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - snapshots
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/sslCertificates":
    get:
      description: Retrieves the list of SslCertificate resources available to the
        specified project.
      operationId: compute.sslCertificates.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SslCertificateList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - sslCertificates
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a SslCertificate resource in the specified project using the
        data included in the request.
      operationId: compute.sslCertificates.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SslCertificate"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - sslCertificates
  "/{project}/global/sslCertificates/{sslCertificate}":
    delete:
      description: Deletes the specified SslCertificate resource.
      operationId: compute.sslCertificates.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the SslCertificate resource to delete.
          in: path
          name: sslCertificate
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - sslCertificates
    get:
      description: Returns the specified SslCertificate resource. Gets a list of available
        SSL certificates by making a list() request.
      operationId: compute.sslCertificates.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the SslCertificate resource to return.
          in: path
          name: sslCertificate
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SslCertificate"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - sslCertificates
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/sslPolicies":
    get:
      description: Lists all the SSL policies that have been configured for the specified
        project.
      operationId: compute.sslPolicies.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SslPoliciesList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - sslPolicies
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Returns the specified SSL policy resource. Gets a list of available SSL
        policies by making a list() request.
      operationId: compute.sslPolicies.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SslPolicy"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - sslPolicies
  "/{project}/global/sslPolicies/listAvailableFeatures":
    get:
      description: Lists all features that can be specified in the SSL policy when using
        custom profile.
      operationId: compute.sslPolicies.listAvailableFeatures
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SslPoliciesListAvailableFeaturesResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - sslPolicies
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/sslPolicies/{sslPolicy}":
    delete:
      description: Deletes the specified SSL policy. The SSL policy resource can be deleted
        only if it is not in use by any TargetHttpsProxy or TargetSslProxy
        resources.
      operationId: compute.sslPolicies.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the SSL policy to delete. The name must be 1-63 characters
            long, and comply with RFC1035.
          in: path
          name: sslPolicy
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - sslPolicies
    get:
      description: Lists all of the ordered rules present in a single specified policy.
      operationId: compute.sslPolicies.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the SSL policy to update. The name must be 1-63 characters
            long, and comply with RFC1035.
          in: path
          name: sslPolicy
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SslPolicy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - sslPolicies
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Patches the specified SSL policy with the data included in the request.
      operationId: compute.sslPolicies.patch
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the SSL policy to update. The name must be 1-63 characters
            long, and comply with RFC1035.
          in: path
          name: sslPolicy
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SslPolicy"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - sslPolicies
  "/{project}/global/targetHttpProxies":
    get:
      description: Retrieves the list of TargetHttpProxy resources available to the
        specified project.
      operationId: compute.targetHttpProxies.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TargetHttpProxyList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - targetHttpProxies
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a TargetHttpProxy resource in the specified project using the
        data included in the request.
      operationId: compute.targetHttpProxies.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/TargetHttpProxy"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetHttpProxies
  "/{project}/global/targetHttpProxies/{targetHttpProxy}":
    delete:
      description: Deletes the specified TargetHttpProxy resource.
      operationId: compute.targetHttpProxies.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the TargetHttpProxy resource to delete.
          in: path
          name: targetHttpProxy
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetHttpProxies
    get:
      description: Returns the specified TargetHttpProxy resource. Gets a list of available
        target HTTP proxies by making a list() request.
      operationId: compute.targetHttpProxies.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the TargetHttpProxy resource to return.
          in: path
          name: targetHttpProxy
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TargetHttpProxy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - targetHttpProxies
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/targetHttpsProxies":
    get:
      description: Retrieves the list of TargetHttpsProxy resources available to the
        specified project.
      operationId: compute.targetHttpsProxies.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TargetHttpsProxyList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - targetHttpsProxies
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a TargetHttpsProxy resource in the specified project using the
        data included in the request.
      operationId: compute.targetHttpsProxies.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/TargetHttpsProxy"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetHttpsProxies
  "/{project}/global/targetHttpsProxies/{targetHttpsProxy}":
    delete:
      description: Deletes the specified TargetHttpsProxy resource.
      operationId: compute.targetHttpsProxies.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the TargetHttpsProxy resource to delete.
          in: path
          name: targetHttpsProxy
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetHttpsProxies
    get:
      description: Returns the specified TargetHttpsProxy resource. Gets a list of
        available target HTTPS proxies by making a list() request.
      operationId: compute.targetHttpsProxies.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the TargetHttpsProxy resource to return.
          in: path
          name: targetHttpsProxy
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TargetHttpsProxy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - targetHttpsProxies
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/targetHttpsProxies/{targetHttpsProxy}/setQuicOverride":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the QUIC override policy for TargetHttpsProxy.
      operationId: compute.targetHttpsProxies.setQuicOverride
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the TargetHttpsProxy resource to set the QUIC override
            policy for. The name should conform to RFC1035.
          in: path
          name: targetHttpsProxy
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TargetHttpsProxiesSetQuicOverrideRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetHttpsProxies
  "/{project}/global/targetHttpsProxies/{targetHttpsProxy}/setSslPolicy":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the SSL policy for TargetHttpsProxy. The SSL policy specifies the
        server-side support for SSL features. This affects connections between
        clients and the HTTPS proxy load balancer. They do not affect the
        connection between the load balancer and the backends.
      operationId: compute.targetHttpsProxies.setSslPolicy
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the TargetHttpsProxy resource whose SSL policy is to be set.
            The name must be 1-63 characters long, and comply with RFC1035.
          in: path
          name: targetHttpsProxy
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SslPolicyReference"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetHttpsProxies
  "/{project}/global/targetSslProxies":
    get:
      description: Retrieves the list of TargetSslProxy resources available to the
        specified project.
      operationId: compute.targetSslProxies.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TargetSslProxyList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - targetSslProxies
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a TargetSslProxy resource in the specified project using the
        data included in the request.
      operationId: compute.targetSslProxies.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TargetSslProxy"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetSslProxies
  "/{project}/global/targetSslProxies/{targetSslProxy}":
    delete:
      description: Deletes the specified TargetSslProxy resource.
      operationId: compute.targetSslProxies.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the TargetSslProxy resource to delete.
          in: path
          name: targetSslProxy
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetSslProxies
    get:
      description: Returns the specified TargetSslProxy resource. Gets a list of available
        target SSL proxies by making a list() request.
      operationId: compute.targetSslProxies.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the TargetSslProxy resource to return.
          in: path
          name: targetSslProxy
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TargetSslProxy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - targetSslProxies
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/targetSslProxies/{targetSslProxy}/setBackendService":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Changes the BackendService for TargetSslProxy.
      operationId: compute.targetSslProxies.setBackendService
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the TargetSslProxy resource whose BackendService resource is
            to be set.
          in: path
          name: targetSslProxy
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TargetSslProxiesSetBackendServiceRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetSslProxies
  "/{project}/global/targetSslProxies/{targetSslProxy}/setProxyHeader":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Changes the ProxyHeaderType for TargetSslProxy.
      operationId: compute.targetSslProxies.setProxyHeader
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the TargetSslProxy resource whose ProxyHeader is to be set.
          in: path
          name: targetSslProxy
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TargetSslProxiesSetProxyHeaderRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetSslProxies
  "/{project}/global/targetSslProxies/{targetSslProxy}/setSslCertificates":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Changes SslCertificates for TargetSslProxy.
      operationId: compute.targetSslProxies.setSslCertificates
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the TargetSslProxy resource whose SslCertificate resource is
            to be set.
          in: path
          name: targetSslProxy
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TargetSslProxiesSetSslCertificatesRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetSslProxies
  "/{project}/global/targetSslProxies/{targetSslProxy}/setSslPolicy":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the SSL policy for TargetSslProxy. The SSL policy specifies the
        server-side support for SSL features. This affects connections between
        clients and the SSL proxy load balancer. They do not affect the
        connection between the load balancer and the backends.
      operationId: compute.targetSslProxies.setSslPolicy
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the TargetSslProxy resource whose SSL policy is to be set.
            The name must be 1-63 characters long, and comply with RFC1035.
          in: path
          name: targetSslProxy
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SslPolicyReference"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetSslProxies
  "/{project}/global/targetTcpProxies":
    get:
      description: Retrieves the list of TargetTcpProxy resources available to the
        specified project.
      operationId: compute.targetTcpProxies.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TargetTcpProxyList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - targetTcpProxies
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a TargetTcpProxy resource in the specified project using the
        data included in the request.
      operationId: compute.targetTcpProxies.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TargetTcpProxy"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetTcpProxies
  "/{project}/global/targetTcpProxies/{targetTcpProxy}":
    delete:
      description: Deletes the specified TargetTcpProxy resource.
      operationId: compute.targetTcpProxies.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the TargetTcpProxy resource to delete.
          in: path
          name: targetTcpProxy
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetTcpProxies
    get:
      description: Returns the specified TargetTcpProxy resource. Gets a list of available
        target TCP proxies by making a list() request.
      operationId: compute.targetTcpProxies.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the TargetTcpProxy resource to return.
          in: path
          name: targetTcpProxy
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TargetTcpProxy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - targetTcpProxies
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/targetTcpProxies/{targetTcpProxy}/setBackendService":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Changes the BackendService for TargetTcpProxy.
      operationId: compute.targetTcpProxies.setBackendService
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the TargetTcpProxy resource whose BackendService resource is
            to be set.
          in: path
          name: targetTcpProxy
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TargetTcpProxiesSetBackendServiceRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetTcpProxies
  "/{project}/global/targetTcpProxies/{targetTcpProxy}/setProxyHeader":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Changes the ProxyHeaderType for TargetTcpProxy.
      operationId: compute.targetTcpProxies.setProxyHeader
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the TargetTcpProxy resource whose ProxyHeader is to be set.
          in: path
          name: targetTcpProxy
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TargetTcpProxiesSetProxyHeaderRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetTcpProxies
  "/{project}/global/urlMaps":
    get:
      description: Retrieves the list of UrlMap resources available to the specified
        project.
      operationId: compute.urlMaps.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/UrlMapList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - urlMaps
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a UrlMap resource in the specified project using the data
        included in the request.
      operationId: compute.urlMaps.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/UrlMap"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - urlMaps
  "/{project}/global/urlMaps/{urlMap}":
    delete:
      description: Deletes the specified UrlMap resource.
      operationId: compute.urlMaps.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the UrlMap resource to delete.
          in: path
          name: urlMap
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - urlMaps
    get:
      description: Returns the specified UrlMap resource. Gets a list of available URL maps
        by making a list() request.
      operationId: compute.urlMaps.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the UrlMap resource to return.
          in: path
          name: urlMap
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/UrlMap"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - urlMaps
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Patches the specified UrlMap resource with the data included in the
        request. This method supports PATCH semantics and uses the JSON merge
        patch format and processing rules.
      operationId: compute.urlMaps.patch
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the UrlMap resource to patch.
          in: path
          name: urlMap
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/UrlMap"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - urlMaps
    put:
      description: Updates the specified UrlMap resource with the data included in the
        request.
      operationId: compute.urlMaps.update
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the UrlMap resource to update.
          in: path
          name: urlMap
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/UrlMap"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - urlMaps
  "/{project}/global/urlMaps/{urlMap}/invalidateCache":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Initiates a cache invalidation operation, invalidating the specified
        path, scoped to the specified UrlMap.
      operationId: compute.urlMaps.invalidateCache
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the UrlMap scoping this request.
          in: path
          name: urlMap
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CacheInvalidationRule"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - urlMaps
  "/{project}/global/urlMaps/{urlMap}/validate":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Runs static validation for the UrlMap. In particular, the tests of the
        provided UrlMap will be run. Calling this method does NOT create the
        UrlMap.
      operationId: compute.urlMaps.validate
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the UrlMap resource to be validated as.
          in: path
          name: urlMap
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UrlMapsValidateRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/UrlMapsValidateResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - urlMaps
  "/{project}/listXpnHosts":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Lists all shared VPC host projects visible to the user in an
        organization.
      operationId: compute.projects.listXpnHosts
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: order_by
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectsListXpnHostsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/XpnHostList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - projects
  "/{project}/moveDisk":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Moves a persistent disk from one zone to another.
      operationId: compute.projects.moveDisk
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DiskMoveRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - projects
  "/{project}/moveInstance":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Moves an instance and its attached persistent disks from one zone to
        another.
      operationId: compute.projects.moveInstance
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstanceMoveRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - projects
  "/{project}/regions":
    get:
      description: Retrieves the list of region resources available to the specified
        project.
      operationId: compute.regions.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/RegionList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regions
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/regions/{region}":
    get:
      description: Returns the specified Region resource. Gets a list of available regions
        by making a list() request.
      operationId: compute.regions.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region resource to return.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Region"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regions
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/regions/{region}/addresses":
    get:
      description: Retrieves a list of addresses contained within the specified region.
      operationId: compute.addresses.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AddressList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - addresses
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates an address resource in the specified project by using the data
        included in the request.
      operationId: compute.addresses.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Address"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - addresses
  "/{project}/regions/{region}/addresses/{address}":
    delete:
      description: Deletes the specified address resource.
      operationId: compute.addresses.delete
      parameters:
        - description: Name of the address resource to delete.
          in: path
          name: address
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - addresses
    get:
      description: Returns the specified address resource.
      operationId: compute.addresses.get
      parameters:
        - description: Name of the address resource to return.
          in: path
          name: address
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Address"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - addresses
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/regions/{region}/autoscalers":
    get:
      description: Retrieves a list of autoscalers contained within the specified region.
      operationId: compute.regionAutoscalers.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/RegionAutoscalerList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionAutoscalers
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates an autoscaler in the specified project using the data included
        in the request. This method supports PATCH semantics and uses the JSON
        merge patch format and processing rules.
      operationId: compute.regionAutoscalers.patch
      parameters:
        - description: Name of the autoscaler to patch.
          in: query
          name: autoscaler
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Autoscaler"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionAutoscalers
    post:
      description: Creates an autoscaler in the specified project using the data included
        in the request.
      operationId: compute.regionAutoscalers.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Autoscaler"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionAutoscalers
    put:
      description: Updates an autoscaler in the specified project using the data included
        in the request.
      operationId: compute.regionAutoscalers.update
      parameters:
        - description: Name of the autoscaler to update.
          in: query
          name: autoscaler
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Autoscaler"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionAutoscalers
  "/{project}/regions/{region}/autoscalers/{autoscaler}":
    delete:
      description: Deletes the specified autoscaler.
      operationId: compute.regionAutoscalers.delete
      parameters:
        - description: Name of the autoscaler to delete.
          in: path
          name: autoscaler
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionAutoscalers
    get:
      description: Returns the specified autoscaler.
      operationId: compute.regionAutoscalers.get
      parameters:
        - description: Name of the autoscaler to return.
          in: path
          name: autoscaler
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Autoscaler"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionAutoscalers
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/regions/{region}/backendServices":
    get:
      description: Retrieves the list of regional BackendService resources available to the
        specified project in the given region.
      operationId: compute.regionBackendServices.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/BackendServiceList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionBackendServices
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a regional BackendService resource in the specified project
        using the data included in the request. There are several restrictions
        and guidelines to keep in mind when creating a regional backend service.
        Read  Restrictions and Guidelines for more information.
      operationId: compute.regionBackendServices.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/BackendService"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionBackendServices
  "/{project}/regions/{region}/backendServices/{backendService}":
    delete:
      description: Deletes the specified regional BackendService resource.
      operationId: compute.regionBackendServices.delete
      parameters:
        - description: Name of the BackendService resource to delete.
          in: path
          name: backendService
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionBackendServices
    get:
      description: Returns the specified regional BackendService resource.
      operationId: compute.regionBackendServices.get
      parameters:
        - description: Name of the BackendService resource to return.
          in: path
          name: backendService
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/BackendService"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionBackendServices
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates the specified regional BackendService resource with the data
        included in the request. There are several restrictions and guidelines
        to keep in mind when updating a backend service. Read  Restrictions and
        Guidelines for more information. This method supports PATCH semantics
        and uses the JSON merge patch format and processing rules.
      operationId: compute.regionBackendServices.patch
      parameters:
        - description: Name of the BackendService resource to patch.
          in: path
          name: backendService
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/BackendService"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionBackendServices
    put:
      description: Updates the specified regional BackendService resource with the data
        included in the request. There are several restrictions and guidelines
        to keep in mind when updating a backend service. Read  Restrictions and
        Guidelines for more information.
      operationId: compute.regionBackendServices.update
      parameters:
        - description: Name of the BackendService resource to update.
          in: path
          name: backendService
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/BackendService"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionBackendServices
  "/{project}/regions/{region}/backendServices/{backendService}/getHealth":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Gets the most recent health check results for this regional
        BackendService.
      operationId: compute.regionBackendServices.getHealth
      parameters:
        - description: Name of the BackendService resource for which to get health.
          in: path
          name: backendService
          required: true
          schema:
            type: string
        - in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ResourceGroupReference"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/BackendServiceGroupHealth"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionBackendServices
  "/{project}/regions/{region}/commitments":
    get:
      description: Retrieves a list of commitments contained within the specified region.
      operationId: compute.regionCommitments.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CommitmentList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionCommitments
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a commitment in the specified project using the data included in
        the request.
      operationId: compute.regionCommitments.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Commitment"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionCommitments
  "/{project}/regions/{region}/commitments/{commitment}":
    get:
      description: Returns the specified commitment resource. Gets a list of available
        commitments by making a list() request.
      operationId: compute.regionCommitments.get
      parameters:
        - description: Name of the commitment to return.
          in: path
          name: commitment
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Commitment"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionCommitments
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/regions/{region}/diskTypes":
    get:
      description: Retrieves a list of regional disk types available to the specified
        project.
      operationId: compute.regionDiskTypes.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/RegionDiskTypeList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionDiskTypes
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/regions/{region}/diskTypes/{diskType}":
    get:
      description: Returns the specified regional disk type. Gets a list of available disk
        types by making a list() request.
      operationId: compute.regionDiskTypes.get
      parameters:
        - description: Name of the disk type to return.
          in: path
          name: diskType
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/DiskType"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionDiskTypes
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/regions/{region}/disks":
    get:
      description: Retrieves the list of persistent disks contained within the specified
        region.
      operationId: compute.regionDisks.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/DiskList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionDisks
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a persistent regional disk in the specified project using the
        data included in the request.
      operationId: compute.regionDisks.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Optional. Source image to restore onto a disk.
          in: query
          name: sourceImage
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Disk"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionDisks
  "/{project}/regions/{region}/disks/{disk}":
    delete:
      description: Deletes the specified regional persistent disk. Deleting a regional disk
        removes all the replicas of its data permanently and is irreversible.
        However, deleting a disk does not delete any snapshots previously made
        from the disk. You must separately delete snapshots.
      operationId: compute.regionDisks.delete
      parameters:
        - description: Name of the regional persistent disk to delete.
          in: path
          name: disk
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionDisks
    get:
      description: Returns a specified regional persistent disk.
      operationId: compute.regionDisks.get
      parameters:
        - description: Name of the regional persistent disk to return.
          in: path
          name: disk
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Disk"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionDisks
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/regions/{region}/disks/{disk}/addResourcePolicies":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Adds existing resource policies to a regional disk. You can only add one
        policy which will be applied to this disk for scheduling snapshot
        creation.
      operationId: compute.regionDisks.addResourcePolicies
      parameters:
        - description: The disk name for this request.
          in: path
          name: disk
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegionDisksAddResourcePoliciesRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionDisks
  "/{project}/regions/{region}/disks/{disk}/createSnapshot":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a snapshot of this regional disk.
      operationId: compute.regionDisks.createSnapshot
      parameters:
        - description: Name of the regional persistent disk to snapshot.
          in: path
          name: disk
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Snapshot"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionDisks
  "/{project}/regions/{region}/disks/{disk}/removeResourcePolicies":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Removes resource policies from a regional disk.
      operationId: compute.regionDisks.removeResourcePolicies
      parameters:
        - description: The disk name for this request.
          in: path
          name: disk
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegionDisksRemoveResourcePoliciesRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionDisks
  "/{project}/regions/{region}/disks/{disk}/resize":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Resizes the specified regional persistent disk.
      operationId: compute.regionDisks.resize
      parameters:
        - description: Name of the regional persistent disk.
          in: path
          name: disk
          required: true
          schema:
            type: string
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegionDisksResizeRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionDisks
  "/{project}/regions/{region}/disks/{resource}/setLabels":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the labels on the target regional disk.
      operationId: compute.regionDisks.setLabels
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/RegionSetLabelsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionDisks
  "/{project}/regions/{region}/disks/{resource}/testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Returns permissions that a caller has on the specified resource.
      operationId: compute.regionDisks.testIamPermissions
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/TestPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionDisks
  "/{project}/regions/{region}/forwardingRules":
    get:
      description: Retrieves a list of ForwardingRule resources available to the specified
        project and region.
      operationId: compute.forwardingRules.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ForwardingRuleList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - forwardingRules
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a ForwardingRule resource in the specified project and region
        using the data included in the request.
      operationId: compute.forwardingRules.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ForwardingRule"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - forwardingRules
  "/{project}/regions/{region}/forwardingRules/{forwardingRule}":
    delete:
      description: Deletes the specified ForwardingRule resource.
      operationId: compute.forwardingRules.delete
      parameters:
        - description: Name of the ForwardingRule resource to delete.
          in: path
          name: forwardingRule
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - forwardingRules
    get:
      description: Returns the specified ForwardingRule resource.
      operationId: compute.forwardingRules.get
      parameters:
        - description: Name of the ForwardingRule resource to return.
          in: path
          name: forwardingRule
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ForwardingRule"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - forwardingRules
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/regions/{region}/forwardingRules/{forwardingRule}/setTarget":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Changes target URL for forwarding rule. The new target should be of the
        same type as the old target.
      operationId: compute.forwardingRules.setTarget
      parameters:
        - description: Name of the ForwardingRule resource in which target is to be set.
          in: path
          name: forwardingRule
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/TargetReference"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - forwardingRules
  "/{project}/regions/{region}/healthChecks":
    get:
      description: Retrieves the list of HealthCheck resources available to the specified
        project.
      operationId: compute.regionHealthChecks.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/HealthCheckList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionHealthChecks
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a HealthCheck resource in the specified project using the data
        included in the request.
      operationId: compute.regionHealthChecks.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/HealthCheck"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionHealthChecks
  "/{project}/regions/{region}/healthChecks/{healthCheck}":
    delete:
      description: Deletes the specified HealthCheck resource.
      operationId: compute.regionHealthChecks.delete
      parameters:
        - description: Name of the HealthCheck resource to delete.
          in: path
          name: healthCheck
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionHealthChecks
    get:
      description: Returns the specified HealthCheck resource. Gets a list of available
        health checks by making a list() request.
      operationId: compute.regionHealthChecks.get
      parameters:
        - description: Name of the HealthCheck resource to return.
          in: path
          name: healthCheck
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/HealthCheck"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionHealthChecks
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates a HealthCheck resource in the specified project using the data
        included in the request. This method supports PATCH semantics and uses
        the JSON merge patch format and processing rules.
      operationId: compute.regionHealthChecks.patch
      parameters:
        - description: Name of the HealthCheck resource to patch.
          in: path
          name: healthCheck
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/HealthCheck"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionHealthChecks
    put:
      description: Updates a HealthCheck resource in the specified project using the data
        included in the request.
      operationId: compute.regionHealthChecks.update
      parameters:
        - description: Name of the HealthCheck resource to update.
          in: path
          name: healthCheck
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/HealthCheck"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionHealthChecks
  "/{project}/regions/{region}/instanceGroupManagers":
    get:
      description: Retrieves the list of managed instance groups that are contained within
        the specified region.
      operationId: compute.regionInstanceGroupManagers.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/RegionInstanceGroupManagerList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionInstanceGroupManagers
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: >-
        Creates a managed instance group using the information that you specify
        in the request. After the group is created, instances in the group are
        created using the specified instance template. This operation is marked
        as DONE when the group is created even if the instances in the group
        have not yet been created. You must separately verify the status of the
        individual instances with the listmanagedinstances method.


        A regional managed instance group can contain up to 2000 instances.
      operationId: compute.regionInstanceGroupManagers.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/InstanceGroupManager"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionInstanceGroupManagers
  "/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}":
    delete:
      description: Deletes the specified managed instance group and all of the instances in
        that group.
      operationId: compute.regionInstanceGroupManagers.delete
      parameters:
        - description: Name of the managed instance group to delete.
          in: path
          name: instanceGroupManager
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionInstanceGroupManagers
    get:
      description: Returns all of the details about the specified managed instance group.
      operationId: compute.regionInstanceGroupManagers.get
      parameters:
        - description: Name of the managed instance group to return.
          in: path
          name: instanceGroupManager
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/InstanceGroupManager"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionInstanceGroupManagers
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates a managed instance group using the information that you specify
        in the request. This operation is marked as DONE when the group is
        patched even if the instances in the group are still in the process of
        being patched. You must separately verify the status of the individual
        instances with the listmanagedinstances method. This method supports
        PATCH semantics and uses the JSON merge patch format and processing
        rules.
      operationId: compute.regionInstanceGroupManagers.patch
      parameters:
        - description: The name of the instance group manager.
          in: path
          name: instanceGroupManager
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/InstanceGroupManager"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionInstanceGroupManagers
  "/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/abandonInstances":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: >-
        Flags the specified instances to be immediately removed from the managed
        instance group. Abandoning an instance does not delete the instance, but
        it does remove the instance from any target pools that are applied by
        the managed instance group. This method reduces the targetSize of the
        managed instance group by the number of instances that you abandon. This
        operation is marked as DONE when the action is scheduled even if the
        instances have not yet been removed from the group. You must separately
        verify the status of the abandoning action with the listmanagedinstances
        method.


        If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted.


        You can specify a maximum of 1000 instances with this method per request.
      operationId: compute.regionInstanceGroupManagers.abandonInstances
      parameters:
        - description: Name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegionInstanceGroupManagersAbandonInstanc\
                esRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionInstanceGroupManagers
  "/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/deleteInstances":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: >-
        Flags the specified instances in the managed instance group to be
        immediately deleted. The instances are also removed from any target
        pools of which they were a member. This method reduces the targetSize of
        the managed instance group by the number of instances that you delete.
        The deleteInstances operation is marked DONE if the deleteInstances
        request is successful. The underlying actions take additional time. You
        must separately verify the status of the deleting action with the
        listmanagedinstances method.


        If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted.


        You can specify a maximum of 1000 instances with this method per request.
      operationId: compute.regionInstanceGroupManagers.deleteInstances
      parameters:
        - description: Name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegionInstanceGroupManagersDeleteInstance\
                sRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionInstanceGroupManagers
  "/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/listManagedInstances":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Lists the instances in the managed instance group and instances that are
        scheduled to be created. The list includes any current actions that the
        group has scheduled for its instances.
      operationId: compute.regionInstanceGroupManagers.listManagedInstances
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: The name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: order_by
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/RegionInstanceGroupManagersListInstance\
                  sResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionInstanceGroupManagers
  "/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/recreateInstances":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: >-
        Flags the specified instances in the managed instance group to be
        immediately recreated. The instances are deleted and recreated using the
        current instance template for the managed instance group. This operation
        is marked as DONE when the flag is set even if the instances have not
        yet been recreated. You must separately verify the status of the
        recreating action with the listmanagedinstances method.


        If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted.


        You can specify a maximum of 1000 instances with this method per request.
      operationId: compute.regionInstanceGroupManagers.recreateInstances
      parameters:
        - description: Name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegionInstanceGroupManagersRecreateRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionInstanceGroupManagers
  "/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/resize":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: >-
        Changes the intended size of the managed instance group. If you increase
        the size, the group creates new instances using the current instance
        template. If you decrease the size, the group deletes one or more
        instances.


        The resize operation is marked DONE if the resize request is successful. The underlying actions take additional time. You must separately verify the status of the creating or deleting actions with the listmanagedinstances method.


        If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted.
      operationId: compute.regionInstanceGroupManagers.resize
      parameters:
        - description: Name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Number of instances that should exist in this instance group manager.
          in: query
          name: size
          required: true
          schema:
            type: integer
            minimum: 0
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionInstanceGroupManagers
  "/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/setInstanceTemplate":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the instance template to use when creating new instances or
        recreating instances in this group. Existing instances are not affected.
      operationId: compute.regionInstanceGroupManagers.setInstanceTemplate
      parameters:
        - description: The name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegionInstanceGroupManagersSetTemplateReq\
                uest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionInstanceGroupManagers
  "/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/setTargetPools":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Modifies the target pools to which all new instances in this group are
        assigned. Existing instances in the group are not affected.
      operationId: compute.regionInstanceGroupManagers.setTargetPools
      parameters:
        - description: Name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegionInstanceGroupManagersSetTargetPools\
                Request"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionInstanceGroupManagers
  "/{project}/regions/{region}/instanceGroups":
    get:
      description: Retrieves the list of instance group resources contained within the
        specified region.
      operationId: compute.regionInstanceGroups.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/RegionInstanceGroupList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionInstanceGroups
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/regions/{region}/instanceGroups/{instanceGroup}":
    get:
      description: Returns the specified instance group resource.
      operationId: compute.regionInstanceGroups.get
      parameters:
        - description: Name of the instance group resource to return.
          in: path
          name: instanceGroup
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/InstanceGroup"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionInstanceGroups
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/regions/{region}/instanceGroups/{instanceGroup}/listInstances":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Lists the instances in the specified instance group and displays
        information about the named ports. Depending on the specified options,
        this method can list all instances or only the instances that are
        running.
      operationId: compute.regionInstanceGroups.listInstances
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: Name of the regional instance group for which we want to list the
            instances.
          in: path
          name: instanceGroup
          required: true
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegionInstanceGroupsListInstancesRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/RegionInstanceGroupsListInstances"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionInstanceGroups
  "/{project}/regions/{region}/instanceGroups/{instanceGroup}/setNamedPorts":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the named ports for the specified regional instance group.
      operationId: compute.regionInstanceGroups.setNamedPorts
      parameters:
        - description: The name of the regional instance group where the named ports are
            updated.
          in: path
          name: instanceGroup
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegionInstanceGroupsSetNamedPortsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionInstanceGroups
  "/{project}/regions/{region}/interconnectAttachments":
    get:
      description: Retrieves the list of interconnect attachments contained within the
        specified region.
      operationId: compute.interconnectAttachments.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/InterconnectAttachmentList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - interconnectAttachments
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates an InterconnectAttachment in the specified project using the
        data included in the request.
      operationId: compute.interconnectAttachments.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/InterconnectAttachment"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - interconnectAttachments
  "/{project}/regions/{region}/interconnectAttachments/{interconnectAttachment}":
    delete:
      description: Deletes the specified interconnect attachment.
      operationId: compute.interconnectAttachments.delete
      parameters:
        - description: Name of the interconnect attachment to delete.
          in: path
          name: interconnectAttachment
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - interconnectAttachments
    get:
      description: Returns the specified interconnect attachment.
      operationId: compute.interconnectAttachments.get
      parameters:
        - description: Name of the interconnect attachment to return.
          in: path
          name: interconnectAttachment
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/InterconnectAttachment"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - interconnectAttachments
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates the specified interconnect attachment with the data included in
        the request. This method supports PATCH semantics and uses the JSON
        merge patch format and processing rules.
      operationId: compute.interconnectAttachments.patch
      parameters:
        - description: Name of the interconnect attachment to patch.
          in: path
          name: interconnectAttachment
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/InterconnectAttachment"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - interconnectAttachments
  "/{project}/regions/{region}/nodeTemplates":
    get:
      description: Retrieves a list of node templates available to the specified project.
      operationId: compute.nodeTemplates.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/NodeTemplateList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - nodeTemplates
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a NodeTemplate resource in the specified project using the data
        included in the request.
      operationId: compute.nodeTemplates.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NodeTemplate"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - nodeTemplates
  "/{project}/regions/{region}/nodeTemplates/{nodeTemplate}":
    delete:
      description: Deletes the specified NodeTemplate resource.
      operationId: compute.nodeTemplates.delete
      parameters:
        - description: Name of the NodeTemplate resource to delete.
          in: path
          name: nodeTemplate
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - nodeTemplates
    get:
      description: Returns the specified node template. Gets a list of available node
        templates by making a list() request.
      operationId: compute.nodeTemplates.get
      parameters:
        - description: Name of the node template to return.
          in: path
          name: nodeTemplate
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/NodeTemplate"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - nodeTemplates
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/regions/{region}/nodeTemplates/{resource}/getIamPolicy":
    get:
      description: Gets the access control policy for a resource. May be empty if no such
        policy or resource exists.
      operationId: compute.nodeTemplates.getIamPolicy
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - nodeTemplates
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/regions/{region}/nodeTemplates/{resource}/setIamPolicy":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the access control policy on the specified resource. Replaces any
        existing policy.
      operationId: compute.nodeTemplates.setIamPolicy
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/RegionSetPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - nodeTemplates
  "/{project}/regions/{region}/nodeTemplates/{resource}/testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Returns permissions that a caller has on the specified resource.
      operationId: compute.nodeTemplates.testIamPermissions
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/TestPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - nodeTemplates
  "/{project}/regions/{region}/operations":
    get:
      description: Retrieves a list of Operation resources contained within the specified
        region.
      operationId: compute.regionOperations.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OperationList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionOperations
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/regions/{region}/operations/{operation}":
    delete:
      description: Deletes the specified region-specific Operations resource.
      operationId: compute.regionOperations.delete
      parameters:
        - description: Name of the Operations resource to delete.
          in: path
          name: operation
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionOperations
    get:
      description: Retrieves the specified region-specific Operations resource.
      operationId: compute.regionOperations.get
      parameters:
        - description: Name of the Operations resource to return.
          in: path
          name: operation
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionOperations
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/regions/{region}/resourcePolicies":
    get:
      description: A list all the resource policies that have been configured for the
        specified project in specified region.
      operationId: compute.resourcePolicies.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResourcePolicyList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - resourcePolicies
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a new resource policy.
      operationId: compute.resourcePolicies.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourcePolicy"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - resourcePolicies
  "/{project}/regions/{region}/resourcePolicies/{resourcePolicy}":
    delete:
      description: Deletes the specified resource policy.
      operationId: compute.resourcePolicies.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the resource policy to delete.
          in: path
          name: resourcePolicy
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - resourcePolicies
    get:
      description: Retrieves all information of the specified resource policy.
      operationId: compute.resourcePolicies.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Name of the resource policy to retrieve.
          in: path
          name: resourcePolicy
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResourcePolicy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - resourcePolicies
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/regions/{region}/resourcePolicies/{resource}/getIamPolicy":
    get:
      description: Gets the access control policy for a resource. May be empty if no such
        policy or resource exists.
      operationId: compute.resourcePolicies.getIamPolicy
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - resourcePolicies
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/regions/{region}/resourcePolicies/{resource}/setIamPolicy":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the access control policy on the specified resource. Replaces any
        existing policy.
      operationId: compute.resourcePolicies.setIamPolicy
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/RegionSetPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - resourcePolicies
  "/{project}/regions/{region}/resourcePolicies/{resource}/testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Returns permissions that a caller has on the specified resource.
      operationId: compute.resourcePolicies.testIamPermissions
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/TestPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - resourcePolicies
  "/{project}/regions/{region}/routers":
    get:
      description: Retrieves a list of Router resources available to the specified project.
      operationId: compute.routers.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/RouterList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - routers
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a Router resource in the specified project and region using the
        data included in the request.
      operationId: compute.routers.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Router"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - routers
  "/{project}/regions/{region}/routers/{router}":
    delete:
      description: Deletes the specified Router resource.
      operationId: compute.routers.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the Router resource to delete.
          in: path
          name: router
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - routers
    get:
      description: Returns the specified Router resource. Gets a list of available routers
        by making a list() request.
      operationId: compute.routers.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Name of the Router resource to return.
          in: path
          name: router
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Router"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - routers
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Patches the specified Router resource with the data included in the
        request. This method supports PATCH semantics and uses JSON merge patch
        format and processing rules.
      operationId: compute.routers.patch
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the Router resource to patch.
          in: path
          name: router
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Router"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - routers
    put:
      description: Updates the specified Router resource with the data included in the
        request. This method conforms to PUT semantics, which requests that the
        state of the target resource be created or replaced with the state
        defined by the representation enclosed in the request message payload.
      operationId: compute.routers.update
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the Router resource to update.
          in: path
          name: router
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Router"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - routers
  "/{project}/regions/{region}/routers/{router}/getNatMappingInfo":
    get:
      description: Retrieves runtime Nat mapping information of VM endpoints.
      operationId: compute.routers.getNatMappingInfo
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Name of the Router resource to query for Nat Mapping information of
            VM endpoints.
          in: path
          name: router
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/VmEndpointNatMappingsList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - routers
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/regions/{region}/routers/{router}/getRouterStatus":
    get:
      description: Retrieves runtime information of the specified router.
      operationId: compute.routers.getRouterStatus
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Name of the Router resource to query.
          in: path
          name: router
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/RouterStatusResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - routers
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/regions/{region}/routers/{router}/preview":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Preview fields auto-generated during router create and update
        operations. Calling this method does NOT create or update the router.
      operationId: compute.routers.preview
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Name of the Router resource to query.
          in: path
          name: router
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Router"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/RoutersPreviewResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - routers
  "/{project}/regions/{region}/sslCertificates":
    get:
      description: Retrieves the list of SslCertificate resources available to the
        specified project in the specified region.
      operationId: compute.regionSslCertificates.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SslCertificateList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionSslCertificates
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a SslCertificate resource in the specified project and region
        using the data included in the request
      operationId: compute.regionSslCertificates.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SslCertificate"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionSslCertificates
  "/{project}/regions/{region}/sslCertificates/{sslCertificate}":
    delete:
      description: Deletes the specified SslCertificate resource in the region.
      operationId: compute.regionSslCertificates.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the SslCertificate resource to delete.
          in: path
          name: sslCertificate
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionSslCertificates
    get:
      description: Returns the specified SslCertificate resource in the specified region.
        Get a list of available SSL certificates by making a list() request.
      operationId: compute.regionSslCertificates.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Name of the SslCertificate resource to return.
          in: path
          name: sslCertificate
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SslCertificate"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionSslCertificates
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/regions/{region}/subnetworks":
    get:
      description: Retrieves a list of subnetworks available to the specified project.
      operationId: compute.subnetworks.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SubnetworkList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - subnetworks
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a subnetwork in the specified project using the data included in
        the request.
      operationId: compute.subnetworks.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Subnetwork"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - subnetworks
  "/{project}/regions/{region}/subnetworks/{resource}/getIamPolicy":
    get:
      description: Gets the access control policy for a resource. May be empty if no such
        policy or resource exists.
      operationId: compute.subnetworks.getIamPolicy
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - subnetworks
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/regions/{region}/subnetworks/{resource}/setIamPolicy":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the access control policy on the specified resource. Replaces any
        existing policy.
      operationId: compute.subnetworks.setIamPolicy
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/RegionSetPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - subnetworks
  "/{project}/regions/{region}/subnetworks/{resource}/testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Returns permissions that a caller has on the specified resource.
      operationId: compute.subnetworks.testIamPermissions
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/TestPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - subnetworks
  "/{project}/regions/{region}/subnetworks/{subnetwork}":
    delete:
      description: Deletes the specified subnetwork.
      operationId: compute.subnetworks.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the Subnetwork resource to delete.
          in: path
          name: subnetwork
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - subnetworks
    get:
      description: Returns the specified subnetwork. Gets a list of available subnetworks
        list() request.
      operationId: compute.subnetworks.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Name of the Subnetwork resource to return.
          in: path
          name: subnetwork
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Subnetwork"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - subnetworks
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Patches the specified subnetwork with the data included in the request.
        Only certain fields can up updated with a patch request as indicated in
        the field descriptions. You must specify the current fingeprint of the
        subnetwork resource being patched.
      operationId: compute.subnetworks.patch
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the Subnetwork resource to patch.
          in: path
          name: subnetwork
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Subnetwork"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - subnetworks
  "/{project}/regions/{region}/subnetworks/{subnetwork}/expandIpCidrRange":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Expands the IP CIDR range of the subnetwork to a specified value.
      operationId: compute.subnetworks.expandIpCidrRange
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the Subnetwork resource to update.
          in: path
          name: subnetwork
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubnetworksExpandIpCidrRangeRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - subnetworks
  "/{project}/regions/{region}/subnetworks/{subnetwork}/setPrivateIpGoogleAccess":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Set whether VMs in this subnet can access Google services without
        assigning external IP addresses through Private Google Access.
      operationId: compute.subnetworks.setPrivateIpGoogleAccess
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the Subnetwork resource.
          in: path
          name: subnetwork
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubnetworksSetPrivateIpGoogleAccessRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - subnetworks
  "/{project}/regions/{region}/targetHttpProxies":
    get:
      description: Retrieves the list of TargetHttpProxy resources available to the
        specified project in the specified region.
      operationId: compute.regionTargetHttpProxies.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TargetHttpProxyList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionTargetHttpProxies
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a TargetHttpProxy resource in the specified project and region
        using the data included in the request.
      operationId: compute.regionTargetHttpProxies.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/TargetHttpProxy"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionTargetHttpProxies
  "/{project}/regions/{region}/targetHttpProxies/{targetHttpProxy}":
    delete:
      description: Deletes the specified TargetHttpProxy resource.
      operationId: compute.regionTargetHttpProxies.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the TargetHttpProxy resource to delete.
          in: path
          name: targetHttpProxy
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionTargetHttpProxies
    get:
      description: Returns the specified TargetHttpProxy resource in the specified region.
        Gets a list of available target HTTP proxies by making a list() request.
      operationId: compute.regionTargetHttpProxies.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Name of the TargetHttpProxy resource to return.
          in: path
          name: targetHttpProxy
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TargetHttpProxy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionTargetHttpProxies
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/regions/{region}/targetHttpProxies/{targetHttpProxy}/setUrlMap":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Changes the URL map for TargetHttpProxy.
      operationId: compute.regionTargetHttpProxies.setUrlMap
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the TargetHttpProxy to set a URL map for.
          in: path
          name: targetHttpProxy
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/UrlMapReference"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionTargetHttpProxies
  "/{project}/regions/{region}/targetHttpsProxies":
    get:
      description: Retrieves the list of TargetHttpsProxy resources available to the
        specified project in the specified region.
      operationId: compute.regionTargetHttpsProxies.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TargetHttpsProxyList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionTargetHttpsProxies
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a TargetHttpsProxy resource in the specified project and region
        using the data included in the request.
      operationId: compute.regionTargetHttpsProxies.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/TargetHttpsProxy"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionTargetHttpsProxies
  "/{project}/regions/{region}/targetHttpsProxies/{targetHttpsProxy}":
    delete:
      description: Deletes the specified TargetHttpsProxy resource.
      operationId: compute.regionTargetHttpsProxies.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the TargetHttpsProxy resource to delete.
          in: path
          name: targetHttpsProxy
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionTargetHttpsProxies
    get:
      description: Returns the specified TargetHttpsProxy resource in the specified region.
        Gets a list of available target HTTP proxies by making a list() request.
      operationId: compute.regionTargetHttpsProxies.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Name of the TargetHttpsProxy resource to return.
          in: path
          name: targetHttpsProxy
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TargetHttpsProxy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionTargetHttpsProxies
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/regions/{region}/targetHttpsProxies/{targetHttpsProxy}/setSslCertificates":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Replaces SslCertificates for TargetHttpsProxy.
      operationId: compute.regionTargetHttpsProxies.setSslCertificates
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the TargetHttpsProxy resource to set an SslCertificates
            resource for.
          in: path
          name: targetHttpsProxy
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegionTargetHttpsProxiesSetSslCertificate\
                sRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionTargetHttpsProxies
  "/{project}/regions/{region}/targetHttpsProxies/{targetHttpsProxy}/setUrlMap":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Changes the URL map for TargetHttpsProxy.
      operationId: compute.regionTargetHttpsProxies.setUrlMap
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the TargetHttpsProxy to set a URL map for.
          in: path
          name: targetHttpsProxy
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/UrlMapReference"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionTargetHttpsProxies
  "/{project}/regions/{region}/targetPools":
    get:
      description: Retrieves a list of target pools available to the specified project and
        region.
      operationId: compute.targetPools.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TargetPoolList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - targetPools
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a target pool in the specified project and region using the data
        included in the request.
      operationId: compute.targetPools.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TargetPool"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetPools
  "/{project}/regions/{region}/targetPools/{targetPool}":
    delete:
      description: Deletes the specified target pool.
      operationId: compute.targetPools.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the TargetPool resource to delete.
          in: path
          name: targetPool
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetPools
    get:
      description: Returns the specified target pool. Gets a list of available target pools
        by making a list() request.
      operationId: compute.targetPools.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Name of the TargetPool resource to return.
          in: path
          name: targetPool
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TargetPool"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - targetPools
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/regions/{region}/targetPools/{targetPool}/addHealthCheck":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Adds health check URLs to a target pool.
      operationId: compute.targetPools.addHealthCheck
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the target pool to add a health check to.
          in: path
          name: targetPool
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TargetPoolsAddHealthCheckRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetPools
  "/{project}/regions/{region}/targetPools/{targetPool}/addInstance":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Adds an instance to a target pool.
      operationId: compute.targetPools.addInstance
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the TargetPool resource to add instances to.
          in: path
          name: targetPool
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TargetPoolsAddInstanceRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetPools
  "/{project}/regions/{region}/targetPools/{targetPool}/getHealth":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Gets the most recent health check results for each IP for the instance
        that is referenced by the given target pool.
      operationId: compute.targetPools.getHealth
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Name of the TargetPool resource to which the queried instance
            belongs.
          in: path
          name: targetPool
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstanceReference"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TargetPoolInstanceHealth"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - targetPools
  "/{project}/regions/{region}/targetPools/{targetPool}/removeHealthCheck":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Removes health check URL from a target pool.
      operationId: compute.targetPools.removeHealthCheck
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the target pool to remove health checks from.
          in: path
          name: targetPool
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TargetPoolsRemoveHealthCheckRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetPools
  "/{project}/regions/{region}/targetPools/{targetPool}/removeInstance":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Removes instance URL from a target pool.
      operationId: compute.targetPools.removeInstance
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the TargetPool resource to remove instances from.
          in: path
          name: targetPool
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TargetPoolsRemoveInstanceRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetPools
  "/{project}/regions/{region}/targetPools/{targetPool}/setBackup":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Changes a backup target pool's configurations.
      operationId: compute.targetPools.setBackup
      parameters:
        - description: New failoverRatio value for the target pool.
          in: query
          name: failoverRatio
          schema:
            type: number
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the TargetPool resource to set a backup pool for.
          in: path
          name: targetPool
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/TargetReference"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetPools
  "/{project}/regions/{region}/targetVpnGateways":
    get:
      description: Retrieves a list of target VPN gateways available to the specified
        project and region.
      operationId: compute.targetVpnGateways.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TargetVpnGatewayList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - targetVpnGateways
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a target VPN gateway in the specified project and region using
        the data included in the request.
      operationId: compute.targetVpnGateways.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TargetVpnGateway"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetVpnGateways
  "/{project}/regions/{region}/targetVpnGateways/{targetVpnGateway}":
    delete:
      description: Deletes the specified target VPN gateway.
      operationId: compute.targetVpnGateways.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the target VPN gateway to delete.
          in: path
          name: targetVpnGateway
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetVpnGateways
    get:
      description: Returns the specified target VPN gateway. Gets a list of available
        target VPN gateways by making a list() request.
      operationId: compute.targetVpnGateways.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Name of the target VPN gateway to return.
          in: path
          name: targetVpnGateway
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TargetVpnGateway"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - targetVpnGateways
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/regions/{region}/urlMaps":
    get:
      description: Retrieves the list of UrlMap resources available to the specified
        project in the specified region.
      operationId: compute.regionUrlMaps.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/UrlMapList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionUrlMaps
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a UrlMap resource in the specified project using the data
        included in the request.
      operationId: compute.regionUrlMaps.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: "begin_interface: MixerMutationRequestBuilder Request ID to support
            idempotency."
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/UrlMap"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionUrlMaps
  "/{project}/regions/{region}/urlMaps/{urlMap}":
    delete:
      description: Deletes the specified UrlMap resource.
      operationId: compute.regionUrlMaps.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: "begin_interface: MixerMutationRequestBuilder Request ID to support
            idempotency."
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the UrlMap resource to delete.
          in: path
          name: urlMap
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionUrlMaps
    get:
      description: Returns the specified UrlMap resource. Gets a list of available URL maps
        by making a list() request.
      operationId: compute.regionUrlMaps.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Name of the UrlMap resource to return.
          in: path
          name: urlMap
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/UrlMap"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - regionUrlMaps
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Patches the specified UrlMap resource with the data included in the
        request. This method supports PATCH semantics and uses JSON merge patch
        format and processing rules.
      operationId: compute.regionUrlMaps.patch
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: "begin_interface: MixerMutationRequestBuilder Request ID to support
            idempotency."
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the UrlMap resource to patch.
          in: path
          name: urlMap
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/UrlMap"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionUrlMaps
    put:
      description: Updates the specified UrlMap resource with the data included in the
        request.
      operationId: compute.regionUrlMaps.update
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: "begin_interface: MixerMutationRequestBuilder Request ID to support
            idempotency."
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the UrlMap resource to update.
          in: path
          name: urlMap
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/UrlMap"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionUrlMaps
  "/{project}/regions/{region}/urlMaps/{urlMap}/validate":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Runs static validation for the UrlMap. In particular, the tests of the
        provided UrlMap will be run. Calling this method does NOT create the
        UrlMap.
      operationId: compute.regionUrlMaps.validate
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region scoping this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Name of the UrlMap resource to be validated as.
          in: path
          name: urlMap
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegionUrlMapsValidateRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/UrlMapsValidateResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - regionUrlMaps
  "/{project}/regions/{region}/vpnGateways":
    get:
      description: Retrieves a list of VPN gateways available to the specified project and
        region.
      operationId: compute.vpnGateways.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/VpnGatewayList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - vpnGateways
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a VPN gateway in the specified project and region using the data
        included in the request.
      operationId: compute.vpnGateways.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VpnGateway"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - vpnGateways
  "/{project}/regions/{region}/vpnGateways/{resource}/setLabels":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the labels on a VpnGateway. To learn more about labels, read the
        Labeling Resources documentation.
      operationId: compute.vpnGateways.setLabels
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/RegionSetLabelsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - vpnGateways
  "/{project}/regions/{region}/vpnGateways/{resource}/testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Returns permissions that a caller has on the specified resource.
      operationId: compute.vpnGateways.testIamPermissions
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/TestPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - vpnGateways
  "/{project}/regions/{region}/vpnGateways/{vpnGateway}":
    delete:
      description: Deletes the specified VPN gateway.
      operationId: compute.vpnGateways.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the VPN gateway to delete.
          in: path
          name: vpnGateway
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - vpnGateways
    get:
      description: Returns the specified VPN gateway. Gets a list of available VPN gateways
        by making a list() request.
      operationId: compute.vpnGateways.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Name of the VPN gateway to return.
          in: path
          name: vpnGateway
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/VpnGateway"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - vpnGateways
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/regions/{region}/vpnGateways/{vpnGateway}/getStatus":
    get:
      description: Returns the status for the specified VPN gateway.
      operationId: compute.vpnGateways.getStatus
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Name of the VPN gateway to return.
          in: path
          name: vpnGateway
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/VpnGatewaysGetStatusResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - vpnGateways
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/regions/{region}/vpnTunnels":
    get:
      description: Retrieves a list of VpnTunnel resources contained in the specified
        project and region.
      operationId: compute.vpnTunnels.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/VpnTunnelList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - vpnTunnels
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a VpnTunnel resource in the specified project and region using
        the data included in the request.
      operationId: compute.vpnTunnels.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VpnTunnel"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - vpnTunnels
  "/{project}/regions/{region}/vpnTunnels/{vpnTunnel}":
    delete:
      description: Deletes the specified VpnTunnel resource.
      operationId: compute.vpnTunnels.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the VpnTunnel resource to delete.
          in: path
          name: vpnTunnel
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - vpnTunnels
    get:
      description: Returns the specified VpnTunnel resource. Gets a list of available VPN
        tunnels by making a list() request.
      operationId: compute.vpnTunnels.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the region for this request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Name of the VpnTunnel resource to return.
          in: path
          name: vpnTunnel
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/VpnTunnel"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - vpnTunnels
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/setCommonInstanceMetadata":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets metadata common to all instances within the specified project using
        the data included in the request.
      operationId: compute.projects.setCommonInstanceMetadata
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Metadata"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - projects
  "/{project}/setDefaultNetworkTier":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the default network tier of the project. The default network tier
        is used when an address/forwardingRule/instance is created without
        specifying the network tier field.
      operationId: compute.projects.setDefaultNetworkTier
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectsSetDefaultNetworkTierRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - projects
  "/{project}/setUsageExportBucket":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Enables the usage export feature and sets the usage export bucket where
        reports are stored. If you provide an empty request body using this
        method, the usage export feature will be disabled.
      operationId: compute.projects.setUsageExportBucket
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UsageExportLocation"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.full_control
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.full_control
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_only
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_only
        - Oauth2:
            - https://www.googleapis.com/auth/devstorage.read_write
          Oauth2c:
            - https://www.googleapis.com/auth/devstorage.read_write
      tags:
        - projects
  "/{project}/targetHttpProxies/{targetHttpProxy}/setUrlMap":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Changes the URL map for TargetHttpProxy.
      operationId: compute.targetHttpProxies.setUrlMap
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the TargetHttpProxy to set a URL map for.
          in: path
          name: targetHttpProxy
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/UrlMapReference"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetHttpProxies
  "/{project}/targetHttpsProxies/{targetHttpsProxy}/setSslCertificates":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Replaces SslCertificates for TargetHttpsProxy.
      operationId: compute.targetHttpsProxies.setSslCertificates
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the TargetHttpsProxy resource to set an SslCertificates
            resource for.
          in: path
          name: targetHttpsProxy
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TargetHttpsProxiesSetSslCertificatesReque\
                st"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetHttpsProxies
  "/{project}/targetHttpsProxies/{targetHttpsProxy}/setUrlMap":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Changes the URL map for TargetHttpsProxy.
      operationId: compute.targetHttpsProxies.setUrlMap
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the TargetHttpsProxy resource whose URL map is to be set.
          in: path
          name: targetHttpsProxy
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/UrlMapReference"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetHttpsProxies
  "/{project}/zones":
    get:
      description: Retrieves the list of Zone resources available to the specified project.
      operationId: compute.zones.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ZoneList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - zones
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/zones/{zone}":
    get:
      description: Returns the specified Zone resource. Gets a list of available zones by
        making a list() request.
      operationId: compute.zones.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the zone resource to return.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Zone"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - zones
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/zones/{zone}/acceleratorTypes":
    get:
      description: Retrieves a list of accelerator types available to the specified project.
      operationId: compute.acceleratorTypes.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AcceleratorTypeList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - acceleratorTypes
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/zones/{zone}/acceleratorTypes/{acceleratorType}":
    get:
      description: Returns the specified accelerator type.
      operationId: compute.acceleratorTypes.get
      parameters:
        - description: Name of the accelerator type to return.
          in: path
          name: acceleratorType
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AcceleratorType"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - acceleratorTypes
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/zones/{zone}/autoscalers":
    get:
      description: Retrieves a list of autoscalers contained within the specified zone.
      operationId: compute.autoscalers.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AutoscalerList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - autoscalers
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates an autoscaler in the specified project using the data included
        in the request. This method supports PATCH semantics and uses the JSON
        merge patch format and processing rules.
      operationId: compute.autoscalers.patch
      parameters:
        - description: Name of the autoscaler to patch.
          in: query
          name: autoscaler
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Autoscaler"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - autoscalers
    post:
      description: Creates an autoscaler in the specified project using the data included
        in the request.
      operationId: compute.autoscalers.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Autoscaler"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - autoscalers
    put:
      description: Updates an autoscaler in the specified project using the data included
        in the request.
      operationId: compute.autoscalers.update
      parameters:
        - description: Name of the autoscaler to update.
          in: query
          name: autoscaler
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Autoscaler"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - autoscalers
  "/{project}/zones/{zone}/autoscalers/{autoscaler}":
    delete:
      description: Deletes the specified autoscaler.
      operationId: compute.autoscalers.delete
      parameters:
        - description: Name of the autoscaler to delete.
          in: path
          name: autoscaler
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - autoscalers
    get:
      description: Returns the specified autoscaler resource. Gets a list of available
        autoscalers by making a list() request.
      operationId: compute.autoscalers.get
      parameters:
        - description: Name of the autoscaler to return.
          in: path
          name: autoscaler
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Autoscaler"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - autoscalers
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/zones/{zone}/diskTypes":
    get:
      description: Retrieves a list of disk types available to the specified project.
      operationId: compute.diskTypes.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/DiskTypeList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - diskTypes
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/zones/{zone}/diskTypes/{diskType}":
    get:
      description: Returns the specified disk type. Gets a list of available disk types by
        making a list() request.
      operationId: compute.diskTypes.get
      parameters:
        - description: Name of the disk type to return.
          in: path
          name: diskType
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/DiskType"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - diskTypes
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/zones/{zone}/disks":
    get:
      description: Retrieves a list of persistent disks contained within the specified zone.
      operationId: compute.disks.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/DiskList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - disks
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a persistent disk in the specified project using the data in the
        request. You can create a disk with a sourceImage, a sourceSnapshot, or
        create an empty 500 GB data disk by omitting all properties. You can
        also create a disk that is larger than the default size by specifying
        the sizeGb property.
      operationId: compute.disks.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Optional. Source image to restore onto a disk.
          in: query
          name: sourceImage
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Disk"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - disks
  "/{project}/zones/{zone}/disks/{disk}":
    delete:
      description: Deletes the specified persistent disk. Deleting a disk removes its data
        permanently and is irreversible. However, deleting a disk does not
        delete any snapshots previously made from the disk. You must separately
        delete snapshots.
      operationId: compute.disks.delete
      parameters:
        - description: Name of the persistent disk to delete.
          in: path
          name: disk
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - disks
    get:
      description: Returns a specified persistent disk. Gets a list of available persistent
        disks by making a list() request.
      operationId: compute.disks.get
      parameters:
        - description: Name of the persistent disk to return.
          in: path
          name: disk
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Disk"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - disks
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/zones/{zone}/disks/{disk}/addResourcePolicies":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Adds existing resource policies to a disk. You can only add one policy
        which will be applied to this disk for scheduling snapshot creation.
      operationId: compute.disks.addResourcePolicies
      parameters:
        - description: The disk name for this request.
          in: path
          name: disk
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisksAddResourcePoliciesRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - disks
  "/{project}/zones/{zone}/disks/{disk}/createSnapshot":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a snapshot of a specified persistent disk.
      operationId: compute.disks.createSnapshot
      parameters:
        - description: Name of the persistent disk to snapshot.
          in: path
          name: disk
          required: true
          schema:
            type: string
        - description: "[Input Only] Specifies to create an application consistent snapshot
            by informing the OS to prepare for the snapshot process. Currently
            only supported on Windows instances using the Volume Shadow Copy
            Service (VSS)."
          in: query
          name: guestFlush
          schema:
            type: boolean
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Snapshot"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - disks
  "/{project}/zones/{zone}/disks/{disk}/removeResourcePolicies":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Removes resource policies from a disk.
      operationId: compute.disks.removeResourcePolicies
      parameters:
        - description: The disk name for this request.
          in: path
          name: disk
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisksRemoveResourcePoliciesRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - disks
  "/{project}/zones/{zone}/disks/{disk}/resize":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Resizes the specified persistent disk. You can only increase the size of
        the disk.
      operationId: compute.disks.resize
      parameters:
        - description: The name of the persistent disk.
          in: path
          name: disk
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisksResizeRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - disks
  "/{project}/zones/{zone}/disks/{resource}/getIamPolicy":
    get:
      description: Gets the access control policy for a resource. May be empty if no such
        policy or resource exists.
      operationId: compute.disks.getIamPolicy
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - disks
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/zones/{zone}/disks/{resource}/setIamPolicy":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the access control policy on the specified resource. Replaces any
        existing policy.
      operationId: compute.disks.setIamPolicy
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ZoneSetPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - disks
  "/{project}/zones/{zone}/disks/{resource}/setLabels":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the labels on a disk. To learn more about labels, read the Labeling
        Resources documentation.
      operationId: compute.disks.setLabels
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ZoneSetLabelsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - disks
  "/{project}/zones/{zone}/disks/{resource}/testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Returns permissions that a caller has on the specified resource.
      operationId: compute.disks.testIamPermissions
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/TestPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - disks
  "/{project}/zones/{zone}/instanceGroupManagers":
    get:
      description: Retrieves a list of managed instance groups that are contained within
        the specified project and zone.
      operationId: compute.instanceGroupManagers.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the zone where the managed instance group is located.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/InstanceGroupManagerList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - instanceGroupManagers
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: >-
        Creates a managed instance group using the information that you specify
        in the request. After the group is created, instances in the group are
        created using the specified instance template. This operation is marked
        as DONE when the group is created even if the instances in the group
        have not yet been created. You must separately verify the status of the
        individual instances with the listmanagedinstances method.


        A managed instance group can have up to 1000 VM instances per group. Please contact Cloud Support if you need an increase in this limit.
      operationId: compute.instanceGroupManagers.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone where you want to create the managed instance
            group.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/InstanceGroupManager"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instanceGroupManagers
  "/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}":
    delete:
      description: Deletes the specified managed instance group and all of the instances in
        that group. Note that the instance group must not belong to a backend
        service. Read  Deleting an instance group for more information.
      operationId: compute.instanceGroupManagers.delete
      parameters:
        - description: The name of the managed instance group to delete.
          in: path
          name: instanceGroupManager
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone where the managed instance group is located.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instanceGroupManagers
    get:
      description: Returns all of the details about the specified managed instance group.
        Gets a list of available managed instance groups by making a list()
        request.
      operationId: compute.instanceGroupManagers.get
      parameters:
        - description: The name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the zone where the managed instance group is located.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/InstanceGroupManager"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - instanceGroupManagers
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates a managed instance group using the information that you specify
        in the request. This operation is marked as DONE when the group is
        patched even if the instances in the group are still in the process of
        being patched. You must separately verify the status of the individual
        instances with the listManagedInstances method. This method supports
        PATCH semantics and uses the JSON merge patch format and processing
        rules.
      operationId: compute.instanceGroupManagers.patch
      parameters:
        - description: The name of the instance group manager.
          in: path
          name: instanceGroupManager
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone where you want to create the managed instance
            group.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/InstanceGroupManager"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instanceGroupManagers
  "/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/abandonInstances":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: >-
        Flags the specified instances to be removed from the managed instance
        group. Abandoning an instance does not delete the instance, but it does
        remove the instance from any target pools that are applied by the
        managed instance group. This method reduces the targetSize of the
        managed instance group by the number of instances that you abandon. This
        operation is marked as DONE when the action is scheduled even if the
        instances have not yet been removed from the group. You must separately
        verify the status of the abandoning action with the listmanagedinstances
        method.


        If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted.


        You can specify a maximum of 1000 instances with this method per request.
      operationId: compute.instanceGroupManagers.abandonInstances
      parameters:
        - description: The name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone where the managed instance group is located.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstanceGroupManagersAbandonInstancesRequ\
                est"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instanceGroupManagers
  "/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/deleteInstances":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: >-
        Flags the specified instances in the managed instance group for
        immediate deletion. The instances are also removed from any target pools
        of which they were a member. This method reduces the targetSize of the
        managed instance group by the number of instances that you delete. This
        operation is marked as DONE when the action is scheduled even if the
        instances are still being deleted. You must separately verify the status
        of the deleting action with the listmanagedinstances method.


        If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted.


        You can specify a maximum of 1000 instances with this method per request.
      operationId: compute.instanceGroupManagers.deleteInstances
      parameters:
        - description: The name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone where the managed instance group is located.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstanceGroupManagersDeleteInstancesReque\
                st"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instanceGroupManagers
  "/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/listManagedInstances":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Lists all of the instances in the managed instance group. Each instance
        in the list has a currentAction, which indicates the action that the
        managed instance group is performing on the instance. For example, if
        the group is still creating an instance, the currentAction is CREATING.
        If a previous action failed, the list displays the errors for that
        failed action.
      operationId: compute.instanceGroupManagers.listManagedInstances
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: The name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: order_by
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the zone where the managed instance group is located.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/InstanceGroupManagersListManagedInstanc\
                  esResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - instanceGroupManagers
  "/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/recreateInstances":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: >-
        Flags the specified instances in the managed instance group to be
        immediately recreated. The instances are deleted and recreated using the
        current instance template for the managed instance group. This operation
        is marked as DONE when the flag is set even if the instances have not
        yet been recreated. You must separately verify the status of the
        recreating action with the listmanagedinstances method.


        If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted.


        You can specify a maximum of 1000 instances with this method per request.
      operationId: compute.instanceGroupManagers.recreateInstances
      parameters:
        - description: The name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone where the managed instance group is located.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstanceGroupManagersRecreateInstancesReq\
                uest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instanceGroupManagers
  "/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/resize":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: >-
        Resizes the managed instance group. If you increase the size, the group
        creates new instances using the current instance template. If you
        decrease the size, the group deletes instances. The resize operation is
        marked DONE when the resize actions are scheduled even if the group has
        not yet added or deleted any instances. You must separately verify the
        status of the creating or deleting actions with the listmanagedinstances
        method.


        When resizing down, the instance group arbitrarily chooses the order in which VMs are deleted. The group takes into account some VM attributes when making the selection including:


        + The status of the VM instance. + The health of the VM instance. + The instance template version the VM is based on. + For regional managed instance groups, the location of the VM instance.


        This list is subject to change.


        If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted.
      operationId: compute.instanceGroupManagers.resize
      parameters:
        - description: The name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The number of running instances that the managed instance group
            should maintain at any given time. The group automatically adds or
            removes instances to maintain the number of instances specified by
            this parameter.
          in: query
          name: size
          required: true
          schema:
            type: integer
        - description: The name of the zone where the managed instance group is located.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instanceGroupManagers
  "/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/setInstanceTemplate":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Specifies the instance template to use when creating new instances in
        this group. The templates for existing instances in the group do not
        change unless you recreate them.
      operationId: compute.instanceGroupManagers.setInstanceTemplate
      parameters:
        - description: The name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone where the managed instance group is located.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstanceGroupManagersSetInstanceTemplateR\
                equest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instanceGroupManagers
  "/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/setTargetPools":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Modifies the target pools to which all instances in this managed
        instance group are assigned. The target pools automatically apply to all
        of the instances in the managed instance group. This operation is marked
        DONE when you make the request even if the instances have not yet been
        added to their target pools. The change might take some time to apply to
        all of the instances in the group depending on the size of the group.
      operationId: compute.instanceGroupManagers.setTargetPools
      parameters:
        - description: The name of the managed instance group.
          in: path
          name: instanceGroupManager
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone where the managed instance group is located.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstanceGroupManagersSetTargetPoolsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instanceGroupManagers
  "/{project}/zones/{zone}/instanceGroups":
    get:
      description: Retrieves the list of instance groups that are located in the specified
        project and zone.
      operationId: compute.instanceGroups.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the zone where the instance group is located.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/InstanceGroupList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - instanceGroups
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates an instance group in the specified project using the parameters
        that are included in the request.
      operationId: compute.instanceGroups.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone where you want to create the instance group.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstanceGroup"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instanceGroups
  "/{project}/zones/{zone}/instanceGroups/{instanceGroup}":
    delete:
      description: Deletes the specified instance group. The instances in the group are not
        deleted. Note that instance group must not belong to a backend service.
        Read  Deleting an instance group for more information.
      operationId: compute.instanceGroups.delete
      parameters:
        - description: The name of the instance group to delete.
          in: path
          name: instanceGroup
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone where the instance group is located.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instanceGroups
    get:
      description: Returns the specified instance group. Gets a list of available instance
        groups by making a list() request.
      operationId: compute.instanceGroups.get
      parameters:
        - description: The name of the instance group.
          in: path
          name: instanceGroup
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the zone where the instance group is located.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/InstanceGroup"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - instanceGroups
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/zones/{zone}/instanceGroups/{instanceGroup}/addInstances":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Adds a list of instances to the specified instance group. All of the
        instances in the instance group must be in the same network/subnetwork.
        Read  Adding instances for more information.
      operationId: compute.instanceGroups.addInstances
      parameters:
        - description: The name of the instance group where you are adding instances.
          in: path
          name: instanceGroup
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone where the instance group is located.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstanceGroupsAddInstancesRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instanceGroups
  "/{project}/zones/{zone}/instanceGroups/{instanceGroup}/listInstances":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Lists the instances in the specified instance group.
      operationId: compute.instanceGroups.listInstances
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: The name of the instance group from which you want to generate a
            list of included instances.
          in: path
          name: instanceGroup
          required: true
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the zone where the instance group is located.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstanceGroupsListInstancesRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/InstanceGroupsListInstances"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - instanceGroups
  "/{project}/zones/{zone}/instanceGroups/{instanceGroup}/removeInstances":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: >-
        Removes one or more instances from the specified instance group, but
        does not delete those instances.


        If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration before the VM instance is removed or deleted.
      operationId: compute.instanceGroups.removeInstances
      parameters:
        - description: The name of the instance group where the specified instances will be
            removed.
          in: path
          name: instanceGroup
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone where the instance group is located.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstanceGroupsRemoveInstancesRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instanceGroups
  "/{project}/zones/{zone}/instanceGroups/{instanceGroup}/setNamedPorts":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the named ports for the specified instance group.
      operationId: compute.instanceGroups.setNamedPorts
      parameters:
        - description: The name of the instance group where the named ports are updated.
          in: path
          name: instanceGroup
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone where the instance group is located.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstanceGroupsSetNamedPortsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instanceGroups
  "/{project}/zones/{zone}/instances":
    get:
      description: Retrieves the list of instances contained within the specified zone.
      operationId: compute.instances.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/InstanceList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - instances
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates an instance resource in the specified project using the data
        included in the request.
      operationId: compute.instances.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: >-
            Specifies instance template to create the instance.


            This field is optional. It can be a full or partial URL. For example, the following are all valid URLs to an instance template:  

            - https://www.googleapis.com/compute/v1/projects/project/global/instanceTemplates/instanceTemplate 

            - projects/project/global/instanceTemplates/instanceTemplate 

            - global/instanceTemplates/instanceTemplate
          in: query
          name: sourceInstanceTemplate
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Instance"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instances
  "/{project}/zones/{zone}/instances/{instance}":
    delete:
      description: Deletes the specified Instance resource. For more information, see
        Stopping or Deleting an Instance.
      operationId: compute.instances.delete
      parameters:
        - description: Name of the instance resource to delete.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instances
    get:
      description: Returns the specified Instance resource. Gets a list of available
        instances by making a list() request.
      operationId: compute.instances.get
      parameters:
        - description: Name of the instance resource to return.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Instance"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - instances
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/zones/{zone}/instances/{instance}/addAccessConfig":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Adds an access config to an instance's network interface.
      operationId: compute.instances.addAccessConfig
      parameters:
        - description: The instance name for this request.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: The name of the network interface to add to this instance.
          in: query
          name: networkInterface
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/AccessConfig"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instances
  "/{project}/zones/{zone}/instances/{instance}/attachDisk":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Attaches an existing Disk resource to an instance. You must first create
        the disk before you can attach it. It is not possible to create and
        attach a disk at the same time. For more information, read Adding a
        persistent disk to your instance.
      operationId: compute.instances.attachDisk
      parameters:
        - description: Whether to force attach the disk even if it's currently attached to
            another instance.
          in: query
          name: forceAttach
          schema:
            type: boolean
        - description: The instance name for this request.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttachedDisk"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instances
  "/{project}/zones/{zone}/instances/{instance}/deleteAccessConfig":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Deletes an access config from an instance's network interface.
      operationId: compute.instances.deleteAccessConfig
      parameters:
        - description: The name of the access config to delete.
          in: query
          name: accessConfig
          required: true
          schema:
            type: string
        - description: The instance name for this request.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: The name of the network interface.
          in: query
          name: networkInterface
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instances
  "/{project}/zones/{zone}/instances/{instance}/detachDisk":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Detaches a disk from an instance.
      operationId: compute.instances.detachDisk
      parameters:
        - description: The device name of the disk to detach. Make a get() request on the
            instance to view currently attached disks and device names.
          in: query
          name: deviceName
          required: true
          schema:
            type: string
        - description: Instance name for this request.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instances
  "/{project}/zones/{zone}/instances/{instance}/getGuestAttributes":
    get:
      description: Returns the specified guest attributes entry.
      operationId: compute.instances.getGuestAttributes
      parameters:
        - description: Name of the instance scoping this request.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Specifies the guest attributes path to be queried.
          in: query
          name: queryPath
          schema:
            type: string
        - description: Specifies the key for the guest attributes entry.
          in: query
          name: variableKey
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GuestAttributes"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - instances
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/zones/{zone}/instances/{instance}/getShieldedInstanceIdentity":
    get:
      description: Returns the Shielded Instance Identity of an instance
      operationId: compute.instances.getShieldedInstanceIdentity
      parameters:
        - description: Name or id of the instance scoping this request.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ShieldedInstanceIdentity"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - instances
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/zones/{zone}/instances/{instance}/referrers":
    get:
      description: Retrieves the list of referrers to instances contained within the
        specified zone. For more information, read Viewing Referrers to VM
        Instances.
      operationId: compute.instances.listReferrers
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: Name of the target instance scoping this request, or '-' if the
            request should span over all instances in the container.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/InstanceListReferrers"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - instances
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/zones/{zone}/instances/{instance}/reset":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Performs a reset on the instance. This is a hard reset the VM does not
        do a graceful shutdown. For more information, see Resetting an instance.
      operationId: compute.instances.reset
      parameters:
        - description: Name of the instance scoping this request.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instances
  "/{project}/zones/{zone}/instances/{instance}/serialPort":
    get:
      description: Returns the last 1 MB of serial port output from the specified instance.
      operationId: compute.instances.getSerialPortOutput
      parameters:
        - description: Name of the instance scoping this request.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Specifies which COM or serial port to retrieve data from.
          in: query
          name: port
          schema:
            type: integer
            minimum: 1
            maximum: 4
            default: 1
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Returns output starting from a specific byte position. Use this to
            page through output when the output is too large to return in a
            single request. For the initial request, leave this field
            unspecified. For subsequent calls, this field should be set to the
            next value returned in the previous call.
          in: query
          name: start
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SerialPortOutput"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - instances
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/zones/{zone}/instances/{instance}/setDiskAutoDelete":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the auto-delete flag for a disk attached to an instance.
      operationId: compute.instances.setDiskAutoDelete
      parameters:
        - description: Whether to auto-delete the disk when the instance is deleted.
          in: query
          name: autoDelete
          required: true
          schema:
            type: boolean
        - description: The device name of the disk to modify. Make a get() request on the
            instance to view currently attached disks and device names.
          in: query
          name: deviceName
          required: true
          schema:
            type: string
        - description: The instance name for this request.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instances
  "/{project}/zones/{zone}/instances/{instance}/setLabels":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets labels on an instance. To learn more about labels, read the
        Labeling Resources documentation.
      operationId: compute.instances.setLabels
      parameters:
        - description: Name of the instance scoping this request.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstancesSetLabelsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instances
  "/{project}/zones/{zone}/instances/{instance}/setMachineResources":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Changes the number and/or type of accelerator for a stopped instance to
        the values specified in the request.
      operationId: compute.instances.setMachineResources
      parameters:
        - description: Name of the instance scoping this request.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstancesSetMachineResourcesRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instances
  "/{project}/zones/{zone}/instances/{instance}/setMachineType":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Changes the machine type for a stopped instance to the machine type
        specified in the request.
      operationId: compute.instances.setMachineType
      parameters:
        - description: Name of the instance scoping this request.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstancesSetMachineTypeRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instances
  "/{project}/zones/{zone}/instances/{instance}/setMetadata":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets metadata for the specified instance to the data included in the
        request.
      operationId: compute.instances.setMetadata
      parameters:
        - description: Name of the instance scoping this request.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Metadata"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instances
  "/{project}/zones/{zone}/instances/{instance}/setMinCpuPlatform":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Changes the minimum CPU platform that this instance should use. This
        method can only be called on a stopped instance. For more information,
        read Specifying a Minimum CPU Platform.
      operationId: compute.instances.setMinCpuPlatform
      parameters:
        - description: Name of the instance scoping this request.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstancesSetMinCpuPlatformRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instances
  "/{project}/zones/{zone}/instances/{instance}/setScheduling":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets an instance's scheduling options.
      operationId: compute.instances.setScheduling
      parameters:
        - description: Instance name for this request.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Scheduling"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instances
  "/{project}/zones/{zone}/instances/{instance}/setServiceAccount":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the service account on the instance. For more information, read
        Changing the service account and access scopes for an instance.
      operationId: compute.instances.setServiceAccount
      parameters:
        - description: Name of the instance resource to start.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstancesSetServiceAccountRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instances
  "/{project}/zones/{zone}/instances/{instance}/setShieldedInstanceIntegrityPolicy":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Sets the Shielded Instance integrity policy for an instance. You can
        only use this method on a running instance. This method supports PATCH
        semantics and uses the JSON merge patch format and processing rules.
      operationId: compute.instances.setShieldedInstanceIntegrityPolicy
      parameters:
        - description: Name or id of the instance scoping this request.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShieldedInstanceIntegrityPolicy"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instances
  "/{project}/zones/{zone}/instances/{instance}/setTags":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets network tags for the specified instance to the data included in the
        request.
      operationId: compute.instances.setTags
      parameters:
        - description: Name of the instance scoping this request.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tags"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instances
  "/{project}/zones/{zone}/instances/{instance}/simulateMaintenanceEvent":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Simulates a maintenance event on the instance.
      operationId: compute.instances.simulateMaintenanceEvent
      parameters:
        - description: Name of the instance scoping this request.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instances
  "/{project}/zones/{zone}/instances/{instance}/start":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Starts an instance that was stopped using the instances().stop method.
        For more information, see Restart an instance.
      operationId: compute.instances.start
      parameters:
        - description: Name of the instance resource to start.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instances
  "/{project}/zones/{zone}/instances/{instance}/startWithEncryptionKey":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Starts an instance that was stopped using the instances().stop method.
        For more information, see Restart an instance.
      operationId: compute.instances.startWithEncryptionKey
      parameters:
        - description: Name of the instance resource to start.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstancesStartWithEncryptionKeyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instances
  "/{project}/zones/{zone}/instances/{instance}/stop":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Stops a running instance, shutting it down cleanly, and allows you to
        restart the instance at a later time. Stopped instances do not incur VM
        usage charges while they are stopped. However, resources that the VM is
        using, such as persistent disks and static IP addresses, will continue
        to be charged until they are deleted. For more information, see Stopping
        an instance.
      operationId: compute.instances.stop
      parameters:
        - description: Name of the instance resource to stop.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instances
  "/{project}/zones/{zone}/instances/{instance}/updateAccessConfig":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Updates the specified access config from an instance's network interface
        with the data included in the request. This method supports PATCH
        semantics and uses the JSON merge patch format and processing rules.
      operationId: compute.instances.updateAccessConfig
      parameters:
        - description: The instance name for this request.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: The name of the network interface where the access config is
            attached.
          in: query
          name: networkInterface
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/AccessConfig"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instances
  "/{project}/zones/{zone}/instances/{instance}/updateDisplayDevice":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates the Display config for a VM instance. You can only use this
        method on a stopped VM instance. This method supports PATCH semantics
        and uses the JSON merge patch format and processing rules.
      operationId: compute.instances.updateDisplayDevice
      parameters:
        - description: Name of the instance scoping this request.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisplayDevice"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instances
  "/{project}/zones/{zone}/instances/{instance}/updateNetworkInterface":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates an instance's network interface. This method follows PATCH
        semantics.
      operationId: compute.instances.updateNetworkInterface
      parameters:
        - description: The instance name for this request.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: The name of the network interface to update.
          in: query
          name: networkInterface
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NetworkInterface"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instances
  "/{project}/zones/{zone}/instances/{instance}/updateShieldedInstanceConfig":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates the Shielded Instance config for an instance. You can only use
        this method on a stopped instance. This method supports PATCH semantics
        and uses the JSON merge patch format and processing rules.
      operationId: compute.instances.updateShieldedInstanceConfig
      parameters:
        - description: Name or id of the instance scoping this request.
          in: path
          name: instance
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShieldedInstanceConfig"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instances
  "/{project}/zones/{zone}/instances/{resource}/getIamPolicy":
    get:
      description: Gets the access control policy for a resource. May be empty if no such
        policy or resource exists.
      operationId: compute.instances.getIamPolicy
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - instances
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/zones/{zone}/instances/{resource}/setDeletionProtection":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets deletion protection on the instance.
      operationId: compute.instances.setDeletionProtection
      parameters:
        - description: Whether the resource should be protected against deletion.
          in: query
          name: deletionProtection
          schema:
            type: boolean
            default: true
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instances
  "/{project}/zones/{zone}/instances/{resource}/setIamPolicy":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the access control policy on the specified resource. Replaces any
        existing policy.
      operationId: compute.instances.setIamPolicy
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ZoneSetPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - instances
  "/{project}/zones/{zone}/instances/{resource}/testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Returns permissions that a caller has on the specified resource.
      operationId: compute.instances.testIamPermissions
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/TestPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - instances
  "/{project}/zones/{zone}/machineTypes":
    get:
      description: Retrieves a list of machine types available to the specified project.
      operationId: compute.machineTypes.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/MachineTypeList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - machineTypes
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/zones/{zone}/machineTypes/{machineType}":
    get:
      description: Returns the specified machine type. Gets a list of available machine
        types by making a list() request.
      operationId: compute.machineTypes.get
      parameters:
        - description: Name of the machine type to return.
          in: path
          name: machineType
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/MachineType"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - machineTypes
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/zones/{zone}/networkEndpointGroups":
    get:
      description: Retrieves the list of network endpoint groups that are located in the
        specified project and zone.
      operationId: compute.networkEndpointGroups.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the zone where the network endpoint group is located. It
            should comply with RFC1035.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/NetworkEndpointGroupList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - networkEndpointGroups
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a network endpoint group in the specified project using the
        parameters that are included in the request.
      operationId: compute.networkEndpointGroups.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone where you want to create the network endpoint
            group. It should comply with RFC1035.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NetworkEndpointGroup"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - networkEndpointGroups
  "/{project}/zones/{zone}/networkEndpointGroups/{networkEndpointGroup}":
    delete:
      description: Deletes the specified network endpoint group. The network endpoints in
        the NEG and the VM instances they belong to are not terminated when the
        NEG is deleted. Note that the NEG cannot be deleted if there are backend
        services referencing it.
      operationId: compute.networkEndpointGroups.delete
      parameters:
        - description: The name of the network endpoint group to delete. It should comply
            with RFC1035.
          in: path
          name: networkEndpointGroup
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone where the network endpoint group is located. It
            should comply with RFC1035.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - networkEndpointGroups
    get:
      description: Returns the specified network endpoint group. Gets a list of available
        network endpoint groups by making a list() request.
      operationId: compute.networkEndpointGroups.get
      parameters:
        - description: The name of the network endpoint group. It should comply with
            RFC1035.
          in: path
          name: networkEndpointGroup
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the zone where the network endpoint group is located. It
            should comply with RFC1035.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/NetworkEndpointGroup"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - networkEndpointGroups
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/zones/{zone}/networkEndpointGroups/{networkEndpointGroup}/attachNetworkEndpoints":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Attach a list of network endpoints to the specified network endpoint
        group.
      operationId: compute.networkEndpointGroups.attachNetworkEndpoints
      parameters:
        - description: The name of the network endpoint group where you are attaching
            network endpoints to. It should comply with RFC1035.
          in: path
          name: networkEndpointGroup
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone where the network endpoint group is located. It
            should comply with RFC1035.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NetworkEndpointGroupsAttachEndpointsReque\
                st"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - networkEndpointGroups
  "/{project}/zones/{zone}/networkEndpointGroups/{networkEndpointGroup}/detachNetworkEndpoints":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Detach a list of network endpoints from the specified network endpoint
        group.
      operationId: compute.networkEndpointGroups.detachNetworkEndpoints
      parameters:
        - description: The name of the network endpoint group where you are removing
            network endpoints. It should comply with RFC1035.
          in: path
          name: networkEndpointGroup
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone where the network endpoint group is located. It
            should comply with RFC1035.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NetworkEndpointGroupsDetachEndpointsReque\
                st"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - networkEndpointGroups
  "/{project}/zones/{zone}/networkEndpointGroups/{networkEndpointGroup}/listNetworkEndpoints":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Lists the network endpoints in the specified network endpoint group.
      operationId: compute.networkEndpointGroups.listNetworkEndpoints
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: The name of the network endpoint group from which you want to
            generate a list of included network endpoints. It should comply with
            RFC1035.
          in: path
          name: networkEndpointGroup
          required: true
          schema:
            type: string
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the zone where the network endpoint group is located. It
            should comply with RFC1035.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NetworkEndpointGroupsListEndpointsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/NetworkEndpointGroupsListNetworkEndpoin\
                  ts"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - networkEndpointGroups
  "/{project}/zones/{zone}/networkEndpointGroups/{resource}/testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Returns permissions that a caller has on the specified resource.
      operationId: compute.networkEndpointGroups.testIamPermissions
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/TestPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - networkEndpointGroups
  "/{project}/zones/{zone}/nodeGroups":
    get:
      description: "Retrieves a list of node groups available to the specified project.
        Note: use nodeGroups.listNodes for more details about each group."
      operationId: compute.nodeGroups.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/NodeGroupList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - nodeGroups
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a NodeGroup resource in the specified project using the data
        included in the request.
      operationId: compute.nodeGroups.insert
      parameters:
        - description: Initial count of nodes in the node group.
          in: query
          name: initialNodeCount
          required: true
          schema:
            type: integer
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NodeGroup"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - nodeGroups
  "/{project}/zones/{zone}/nodeGroups/{nodeGroup}":
    delete:
      description: Deletes the specified NodeGroup resource.
      operationId: compute.nodeGroups.delete
      parameters:
        - description: Name of the NodeGroup resource to delete.
          in: path
          name: nodeGroup
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - nodeGroups
    get:
      description: 'Returns the specified NodeGroup. Get a list of available NodeGroups by
        making a list() request. Note: the "nodes" field should not be used. Use
        nodeGroups.listNodes instead.'
      operationId: compute.nodeGroups.get
      parameters:
        - description: Name of the node group to return.
          in: path
          name: nodeGroup
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/NodeGroup"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - nodeGroups
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/zones/{zone}/nodeGroups/{nodeGroup}/addNodes":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Adds specified number of nodes to the node group.
      operationId: compute.nodeGroups.addNodes
      parameters:
        - description: Name of the NodeGroup resource.
          in: path
          name: nodeGroup
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NodeGroupsAddNodesRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - nodeGroups
  "/{project}/zones/{zone}/nodeGroups/{nodeGroup}/deleteNodes":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Deletes specified nodes from the node group.
      operationId: compute.nodeGroups.deleteNodes
      parameters:
        - description: Name of the NodeGroup resource whose nodes will be deleted.
          in: path
          name: nodeGroup
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NodeGroupsDeleteNodesRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - nodeGroups
  "/{project}/zones/{zone}/nodeGroups/{nodeGroup}/listNodes":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Lists nodes in the node group.
      operationId: compute.nodeGroups.listNodes
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: Name of the NodeGroup resource whose nodes you want to list.
          in: path
          name: nodeGroup
          required: true
          schema:
            type: string
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/NodeGroupsListNodes"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - nodeGroups
  "/{project}/zones/{zone}/nodeGroups/{nodeGroup}/setNodeTemplate":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Updates the node template of the node group.
      operationId: compute.nodeGroups.setNodeTemplate
      parameters:
        - description: Name of the NodeGroup resource to update.
          in: path
          name: nodeGroup
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NodeGroupsSetNodeTemplateRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - nodeGroups
  "/{project}/zones/{zone}/nodeGroups/{resource}/getIamPolicy":
    get:
      description: Gets the access control policy for a resource. May be empty if no such
        policy or resource exists.
      operationId: compute.nodeGroups.getIamPolicy
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - nodeGroups
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/zones/{zone}/nodeGroups/{resource}/setIamPolicy":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the access control policy on the specified resource. Replaces any
        existing policy.
      operationId: compute.nodeGroups.setIamPolicy
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ZoneSetPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - nodeGroups
  "/{project}/zones/{zone}/nodeGroups/{resource}/testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Returns permissions that a caller has on the specified resource.
      operationId: compute.nodeGroups.testIamPermissions
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/TestPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - nodeGroups
  "/{project}/zones/{zone}/nodeTypes":
    get:
      description: Retrieves a list of node types available to the specified project.
      operationId: compute.nodeTypes.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/NodeTypeList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - nodeTypes
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/zones/{zone}/nodeTypes/{nodeType}":
    get:
      description: Returns the specified node type. Gets a list of available node types by
        making a list() request.
      operationId: compute.nodeTypes.get
      parameters:
        - description: Name of the node type to return.
          in: path
          name: nodeType
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/NodeType"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - nodeTypes
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/zones/{zone}/operations":
    get:
      description: Retrieves a list of Operation resources contained within the specified
        zone.
      operationId: compute.zoneOperations.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the zone for request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OperationList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - zoneOperations
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/zones/{zone}/operations/{operation}":
    delete:
      description: Deletes the specified zone-specific Operations resource.
      operationId: compute.zoneOperations.delete
      parameters:
        - description: Name of the Operations resource to delete.
          in: path
          name: operation
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - zoneOperations
    get:
      description: Retrieves the specified zone-specific Operations resource.
      operationId: compute.zoneOperations.get
      parameters:
        - description: Name of the Operations resource to return.
          in: path
          name: operation
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - zoneOperations
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/zones/{zone}/reservations":
    get:
      description: A list of all the reservations that have been configured for the
        specified project in specified zone.
      operationId: compute.reservations.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ReservationList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - reservations
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a new reservation. For more information, read Reserving zonal
        resources.
      operationId: compute.reservations.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Reservation"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - reservations
  "/{project}/zones/{zone}/reservations/{reservation}":
    delete:
      description: Deletes the specified reservation.
      operationId: compute.reservations.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the reservation to delete.
          in: path
          name: reservation
          required: true
          schema:
            type: string
        - description: Name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - reservations
    get:
      description: Retrieves information about the specified reservation.
      operationId: compute.reservations.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the reservation to retrieve.
          in: path
          name: reservation
          required: true
          schema:
            type: string
        - description: Name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Reservation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - reservations
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/zones/{zone}/reservations/{reservation}/resize":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Resizes the reservation (applicable to standalone reservations only).
        For more information, read Modifying reservations.
      operationId: compute.reservations.resize
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the reservation to update.
          in: path
          name: reservation
          required: true
          schema:
            type: string
        - description: Name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReservationsResizeRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - reservations
  "/{project}/zones/{zone}/reservations/{resource}/getIamPolicy":
    get:
      description: Gets the access control policy for a resource. May be empty if no such
        policy or resource exists.
      operationId: compute.reservations.getIamPolicy
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - reservations
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/zones/{zone}/reservations/{resource}/setIamPolicy":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the access control policy on the specified resource. Replaces any
        existing policy.
      operationId: compute.reservations.setIamPolicy
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ZoneSetPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - reservations
  "/{project}/zones/{zone}/reservations/{resource}/testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Returns permissions that a caller has on the specified resource.
      operationId: compute.reservations.testIamPermissions
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
        - description: The name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/TestPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - reservations
  "/{project}/zones/{zone}/targetInstances":
    get:
      description: Retrieves a list of TargetInstance resources available to the specified
        project and zone.
      operationId: compute.targetInstances.list
      parameters:
        - description: >-
            A filter expression that filters resources listed in the response.
            The expression must specify the field name, a comparison operator,
            and the value that you want to use for filtering. The value must be
            a string, a number, or a boolean. The comparison operator must be
            either =, !=, >, or <.


            For example, if you are filtering Compute Engine instances, you can exclude instances named example-instance by specifying name != example-instance.


            You can also filter nested fields. For example, you could specify scheduling.automaticRestart = false to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels.


            To filter on multiple expressions, provide each separate expression within parentheses. For example, (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake"). By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly. For example, (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true).
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests. Acceptable values are 0 to
            500, inclusive. (Default: 500)"
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the zone scoping this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TargetInstanceList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - targetInstances
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a TargetInstance resource in the specified project and zone
        using the data included in the request.
      operationId: compute.targetInstances.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the zone scoping this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TargetInstance"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetInstances
  "/{project}/zones/{zone}/targetInstances/{targetInstance}":
    delete:
      description: Deletes the specified TargetInstance resource.
      operationId: compute.targetInstances.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: >-
            An optional request ID to identify requests. Specify a unique
            request ID so that if you must retry your request, the server will
            know to ignore the request if it has already been completed.


            For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments.


            The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Name of the TargetInstance resource to delete.
          in: path
          name: targetInstance
          required: true
          schema:
            type: string
        - description: Name of the zone scoping this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
      tags:
        - targetInstances
    get:
      description: Returns the specified TargetInstance resource. Gets a list of available
        target instances by making a list() request.
      operationId: compute.targetInstances.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the TargetInstance resource to return.
          in: path
          name: targetInstance
          required: true
          schema:
            type: string
        - description: Name of the zone scoping this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TargetInstance"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/compute
          Oauth2c:
            - https://www.googleapis.com/auth/compute
        - Oauth2:
            - https://www.googleapis.com/auth/compute.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/compute.readonly
      tags:
        - targetInstances
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
servers:
  - url: https://compute.googleapis.com/compute/v1/projects
components:
  parameters:
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
        default: json
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must not
        exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string
  requestBodies:
    AccessConfig:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AccessConfig"
    TargetHttpsProxy:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TargetHttpsProxy"
    Subnetwork:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Subnetwork"
    HttpHealthCheck:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HttpHealthCheck"
    HealthCheck:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HealthCheck"
    Router:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Router"
    SslCertificate:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SslCertificate"
    InterconnectAttachment:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InterconnectAttachment"
    BackendBucket:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BackendBucket"
    SecurityPolicyRule:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SecurityPolicyRule"
    GlobalSetLabelsRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GlobalSetLabelsRequest"
    TestPermissionsRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TestPermissionsRequest"
    SignedUrlKey:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SignedUrlKey"
    Network:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Network"
    Address:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Address"
    SslPolicy:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SslPolicy"
    ZoneSetPolicyRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ZoneSetPolicyRequest"
    ForwardingRule:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ForwardingRule"
    BackendService:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BackendService"
    ResourceGroupReference:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ResourceGroupReference"
    Firewall:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Firewall"
    TargetReference:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TargetReference"
    HttpsHealthCheck:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HttpsHealthCheck"
    GlobalSetPolicyRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GlobalSetPolicyRequest"
    Interconnect:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Interconnect"
    SecurityPolicy:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SecurityPolicy"
    TargetHttpProxy:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TargetHttpProxy"
    SslPolicyReference:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SslPolicyReference"
    UrlMap:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UrlMap"
    Autoscaler:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Autoscaler"
    Disk:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Disk"
    Snapshot:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Snapshot"
    RegionSetLabelsRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RegionSetLabelsRequest"
    InstanceGroupManager:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InstanceGroupManager"
    RegionSetPolicyRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RegionSetPolicyRequest"
    UrlMapReference:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UrlMapReference"
    Metadata:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Metadata"
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/compute: View and manage your Google Compute Engine resources
            https://www.googleapis.com/auth/compute.readonly: View your Google Compute Engine resources
            https://www.googleapis.com/auth/devstorage.full_control: Manage your data and permissions in Google Cloud Storage
            https://www.googleapis.com/auth/devstorage.read_only: View your data in Google Cloud Storage
            https://www.googleapis.com/auth/devstorage.read_write: Manage your data in Google Cloud Storage
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/compute: View and manage your Google Compute Engine resources
            https://www.googleapis.com/auth/compute.readonly: View your Google Compute Engine resources
            https://www.googleapis.com/auth/devstorage.full_control: Manage your data and permissions in Google Cloud Storage
            https://www.googleapis.com/auth/devstorage.read_only: View your data in Google Cloud Storage
            https://www.googleapis.com/auth/devstorage.read_write: Manage your data in Google Cloud Storage
  schemas:
    AcceleratorConfig:
      description: A specification of the type and number of accelerator cards attached to
        the instance.
      properties:
        acceleratorCount:
          description: The number of the guest accelerator cards exposed to this instance.
          format: int32
          type: integer
        acceleratorType:
          description: "Full or partial URL of the accelerator type resource to attach to
            this instance. For example:
            projects/my-project/zones/us-central1-c/acceleratorTypes/nvidia-tes\
            la-p100 If you are creating an instance template, specify only the
            accelerator name. See GPUs on Compute Engine for a full list of
            accelerator types."
          type: string
      type: object
    AcceleratorType:
      description: >-
        Represents an Accelerator Type resource.


        Google Cloud Platform provides graphics processing units (accelerators) that you can add to VM instances to improve or accelerate performance when working with intensive workloads. For more information, read GPUs on Compute Engine. (== resource_for beta.acceleratorTypes ==) (== resource_for v1.acceleratorTypes ==)
      properties:
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        deprecated:
          $ref: "#/components/schemas/DeprecationStatus"
        description:
          description: "[Output Only] An optional textual description of the resource."
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#acceleratorType
          description: "[Output Only] The type of the resource. Always
            compute#acceleratorType for accelerator types."
          type: string
        maximumCardsPerInstance:
          description: "[Output Only] Maximum accelerator cards allowed per instance."
          format: int32
          type: integer
        name:
          description: "[Output Only] Name of the resource."
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        selfLink:
          description: "[Output Only] Server-defined fully-qualified URL for this resource."
          type: string
        zone:
          description: "[Output Only] The name of the zone where the accelerator type
            resides, such as us-central1-a. You must specify this field as part
            of the HTTP request URL. It is not settable as a field in the
            request body."
          type: string
      type: object
    AcceleratorTypeAggregatedList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/AcceleratorTypesScopedList"
          description: A list of AcceleratorTypesScopedList resources.
          type: object
        kind:
          default: compute#acceleratorTypeAggregatedList
          description: "[Output Only] Type of resource. Always
            compute#acceleratorTypeAggregatedList for aggregated lists of
            accelerator types."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    AcceleratorTypeList:
      description: Contains a list of accelerator types.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of AcceleratorType resources.
          items:
            $ref: "#/components/schemas/AcceleratorType"
          type: array
        kind:
          default: compute#acceleratorTypeList
          description: "[Output Only] Type of resource. Always compute#acceleratorTypeList
            for lists of accelerator types."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    AcceleratorTypesScopedList:
      properties:
        acceleratorTypes:
          description: "[Output Only] A list of accelerator types contained in this scope."
          items:
            $ref: "#/components/schemas/AcceleratorType"
          type: array
        warning:
          description: "[Output Only] An informational warning that appears when the
            accelerator types list is empty."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    AccessConfig:
      description: An access configuration attached to an instance's network interface.
        Only one access config per instance is supported.
      properties:
        kind:
          default: compute#accessConfig
          description: "[Output Only] Type of the resource. Always compute#accessConfig for
            access configs."
          type: string
        name:
          description: The name of this access configuration. The default and recommended
            name is External NAT, but you can use any arbitrary string, such as
            My external IP or Network Access.
          type: string
        natIP:
          description: An external IP address associated with this instance. Specify an
            unused static external IP address available to the project or leave
            this field undefined to use an IP from a shared ephemeral IP address
            pool. If you specify a static external IP address, it must live in
            the same region as the zone of the instance.
          type: string
        networkTier:
          description: >-
            This signifies the networking tier used for configuring this access
            configuration and can only take the following values: PREMIUM,
            STANDARD.


            If an AccessConfig is specified without a valid external IP address, an ephemeral IP will be created with this networkTier.


            If an AccessConfig with a valid external IP address is specified, it must match that of the networkTier associated with the Address resource owning that IP.
          enum:
            - PREMIUM
            - STANDARD
          type: string
        publicPtrDomainName:
          description: The DNS domain name for the public PTR record. You can set this
            field only if the `setPublicPtr` field is enabled.
          type: string
        setPublicPtr:
          description: Specifies whether a public DNS 'PTR' record should be created to map
            the external IP address of the instance to a DNS domain name.
          type: boolean
        type:
          default: ONE_TO_ONE_NAT
          description: The type of configuration. The default and only option is
            ONE_TO_ONE_NAT.
          enum:
            - ONE_TO_ONE_NAT
          type: string
      type: object
    Address:
      description: >-
        Represents an IP Address resource.


        An address resource represents a regional internal IP address. Regional internal IP addresses are RFC 1918 addresses that come from either a primary or secondary IP range of a subnet in a VPC network. Regional external IP addresses can be assigned to GCP VM instances, Cloud VPN gateways, regional external forwarding rules for network load balancers (in either Standard or Premium Tier), and regional external forwarding rules for HTTP(S), SSL Proxy, and TCP Proxy load balancers in Standard Tier. For more information, read IP addresses.


        A globalAddresses resource represent a global external IP address. Global external IP addresses are IPv4 or IPv6 addresses. They can only be assigned to global forwarding rules for HTTP(S), SSL Proxy, or TCP Proxy load balancers in Premium Tier. For more information, read Global resources. (== resource_for beta.addresses ==) (== resource_for v1.addresses ==) (== resource_for beta.globalAddresses ==) (== resource_for v1.globalAddresses ==)
      properties:
        address:
          description: The static IP address represented by this resource.
          type: string
        addressType:
          description: The type of address to reserve, either INTERNAL or EXTERNAL. If
            unspecified, defaults to EXTERNAL.
          enum:
            - EXTERNAL
            - INTERNAL
            - UNSPECIFIED_TYPE
          type: string
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this field when
            you create the resource.
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        ipVersion:
          description: The IP version that will be used by this address. Valid options are
            IPV4 or IPV6. This can only be specified for a global address.
          enum:
            - IPV4
            - IPV6
            - UNSPECIFIED_VERSION
          type: string
        kind:
          default: compute#address
          description: "[Output Only] Type of the resource. Always compute#address for
            addresses."
          type: string
        name:
          description: Name of the resource. Provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first
            character must be a lowercase letter, and all following characters
            (except for the last character) must be a dash, lowercase letter, or
            digit. The last character must be a lowercase letter or digit.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        network:
          description: The URL of the network in which to reserve the address. This field
            can only be used with INTERNAL type with the VPC_PEERING purpose.
          type: string
        networkTier:
          description: >-
            This signifies the networking tier used for configuring this address
            and can only take the following values: PREMIUM or STANDARD. Global
            forwarding rules can only be Premium Tier. Regional forwarding rules
            can be either Premium or Standard Tier. Standard Tier addresses
            applied to regional forwarding rules can be used with any external
            load balancer. Regional forwarding rules in Premium Tier can only be
            used with a network load balancer.


            If this field is not specified, it is assumed to be PREMIUM.
          enum:
            - PREMIUM
            - STANDARD
          type: string
        prefixLength:
          description: The prefix length if the resource reprensents an IP range.
          format: int32
          type: integer
        purpose:
          description: >-
            The purpose of this resource, which can be one of the following
            values:  

            - `GCE_ENDPOINT` for addresses that are used by VM instances, alias IP ranges, internal load balancers, and similar resources. 

            - `DNS_RESOLVER` for a DNS resolver address in a subnetwork 

            - `VPC_PEERING` for addresses that are reserved for VPC peer networks. 

            - `NAT_AUTO` for addresses that are external IP addresses automatically reserved for Cloud NAT.
          enum:
            - DNS_RESOLVER
            - GCE_ENDPOINT
            - NAT_AUTO
            - VPC_PEERING
          type: string
        region:
          description: "[Output Only] The URL of the region where the regional address
            resides. This field is not applicable to global addresses. You must
            specify this field as part of the HTTP request URL."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        status:
          description: "[Output Only] The status of the address, which can be one of
            RESERVING, RESERVED, or IN_USE. An address that is RESERVING is
            currently in the process of being reserved. A RESERVED address is
            currently reserved and available to use. An IN_USE address is
            currently being used by another resource and is not available."
          enum:
            - IN_USE
            - RESERVED
            - RESERVING
          type: string
        subnetwork:
          description: The URL of the subnetwork in which to reserve the address. If an IP
            address is specified, it must be within the subnetwork's IP range.
            This field can only be used with INTERNAL type with a GCE_ENDPOINT
            or DNS_RESOLVER purpose.
          type: string
        users:
          description: "[Output Only] The URLs of the resources that are using this
            address."
          items:
            type: string
          type: array
      type: object
    AddressAggregatedList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/AddressesScopedList"
          description: A list of AddressesScopedList resources.
          type: object
        kind:
          default: compute#addressAggregatedList
          description: "[Output Only] Type of resource. Always
            compute#addressAggregatedList for aggregated lists of addresses."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    AddressList:
      description: Contains a list of addresses.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of Address resources.
          items:
            $ref: "#/components/schemas/Address"
          type: array
        kind:
          default: compute#addressList
          description: "[Output Only] Type of resource. Always compute#addressList for
            lists of addresses."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    AddressesScopedList:
      properties:
        addresses:
          description: "[Output Only] A list of addresses contained in this scope."
          items:
            $ref: "#/components/schemas/Address"
          type: array
        warning:
          description: "[Output Only] Informational warning which replaces the list of
            addresses when the list is empty."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    AliasIpRange:
      description: An alias IP range attached to an instance's network interface.
      properties:
        ipCidrRange:
          description: The IP alias ranges to allocate for this interface. This IP CIDR
            range must belong to the specified subnetwork and cannot contain IP
            addresses reserved by system or used by other network interfaces.
            This range may be a single IP address (such as 10.2.3.4), a netmask
            (such as /24) or a CIDR-formatted string (such as 10.1.2.0/24).
          type: string
        subnetworkRangeName:
          description: The name of a subnetwork secondary IP range from which to allocate
            an IP alias range. If not specified, the primary range of the
            subnetwork is used.
          type: string
      type: object
    AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk:
      properties:
        diskSizeGb:
          description: Specifies the size of the disk in base-2 GB.
          format: int64
          type: string
        interface:
          description: Specifies the disk interface to use for attaching this disk, which
            is either SCSI or NVME. The default is SCSI. For performance
            characteristics of SCSI over NVMe, see Local SSD performance.
          enum:
            - NVME
            - SCSI
          type: string
      type: object
    AllocationSpecificSKUAllocationReservedInstanceProperties:
      description: Properties of the SKU instances being reserved.
      properties:
        guestAccelerators:
          description: Specifies accelerator type and count.
          items:
            $ref: "#/components/schemas/AcceleratorConfig"
          type: array
        localSsds:
          description: Specifies amount of local ssd to reserve with each instance. The
            type of disk is local-ssd.
          items:
            $ref: "#/components/schemas/AllocationSpecificSKUAllocationAllocatedIns\
              tancePropertiesReservedDisk"
          type: array
        machineType:
          description: Specifies type of machine (name only) which has fixed number of
            vCPUs and fixed amount of memory. This also includes specifying
            custom machine type following custom-NUMBER_OF_CPUS-AMOUNT_OF_MEMORY
            pattern.
          type: string
        minCpuPlatform:
          description: Minimum cpu platform the reservation.
          type: string
      type: object
    AllocationSpecificSKUReservation:
      description: This reservation type allows to pre allocate specific instance
        configuration.
      properties:
        count:
          description: Specifies the number of resources that are allocated.
          format: int64
          type: string
        inUseCount:
          description: "[OutputOnly] Indicates how many instances are in use."
          format: int64
          type: string
        instanceProperties:
          $ref: "#/components/schemas/AllocationSpecificSKUAllocationReservedInstan\
            ceProperties"
      type: object
    AttachedDisk:
      description: An instance-attached disk resource.
      properties:
        autoDelete:
          description: Specifies whether the disk will be auto-deleted when the instance is
            deleted (but not when the disk is detached from the instance).
          type: boolean
        boot:
          description: Indicates that this is a boot disk. The virtual machine will use the
            first partition of the disk for its root filesystem.
          type: boolean
        deviceName:
          description: >-
            Specifies a unique device name of your choice that is reflected into
            the /dev/disk/by-id/google-* tree of a Linux operating system
            running within the instance. This name can be used to reference the
            device for mounting, resizing, and so on, from within the instance.


            If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disk-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks.
          type: string
        diskEncryptionKey:
          $ref: "#/components/schemas/CustomerEncryptionKey"
        guestOsFeatures:
          description: A list of features to enable on the guest operating system.
            Applicable only for bootable images. Read  Enabling guest operating
            system features to see a list of available options.
          items:
            $ref: "#/components/schemas/GuestOsFeature"
          type: array
        index:
          description: "[Output Only] A zero-based index to this disk, where 0 is reserved
            for the boot disk. If you have many disks attached to an instance,
            each disk would have a unique index number."
          format: int32
          type: integer
        initializeParams:
          $ref: "#/components/schemas/AttachedDiskInitializeParams"
        interface:
          description: "Specifies the disk interface to use for attaching this disk, which
            is either SCSI or NVME. The default is SCSI. Persistent disks must
            always use SCSI and the request will fail if you attempt to attach a
            persistent disk in any other format than SCSI. Local SSDs can use
            either NVME or SCSI. For performance characteristics of SCSI over
            NVMe, see Local SSD performance. TODO(b/131765817): Update
            documentation when NVME is supported."
          enum:
            - NVME
            - SCSI
          type: string
        kind:
          default: compute#attachedDisk
          description: "[Output Only] Type of the resource. Always compute#attachedDisk for
            attached disks."
          type: string
        licenses:
          description: "[Output Only] Any valid publicly visible licenses."
          items:
            type: string
          type: array
        mode:
          description: The mode in which to attach this disk, either READ_WRITE or
            READ_ONLY. If not specified, the default is to attach the disk in
            READ_WRITE mode.
          enum:
            - READ_ONLY
            - READ_WRITE
          type: string
        source:
          description: >-
            Specifies a valid partial or full URL to an existing Persistent Disk
            resource. When creating a new instance, one of
            initializeParams.sourceImage or initializeParams.sourceSnapshot or
            disks.source is required except for local SSD.


            If desired, you can also attach existing non-root persistent disks using this property. This field is only applicable for persistent disks.


            Note that for InstanceTemplate, specify the disk name, not the URL for the disk.
          type: string
        type:
          description: Specifies the type of the disk, either SCRATCH or PERSISTENT. If not
            specified, the default is PERSISTENT.
          enum:
            - PERSISTENT
            - SCRATCH
          type: string
      type: object
    AttachedDiskInitializeParams:
      description: >-
        [Input Only] Specifies the parameters for a new disk that will be
        created alongside the new instance. Use initialization parameters to
        create boot disks or local SSDs attached to the new instance.


        This property is mutually exclusive with the source property; you can only define one or the other, but not both.
      properties:
        description:
          description: An optional description. Provide this property when creating the
            disk.
          type: string
        diskName:
          description: Specifies the disk name. If not specified, the default is to use the
            name of the instance. If the disk with the instance name exists
            already in the given zone/region, a new name will be automatically
            generated.
          type: string
        diskSizeGb:
          description: Specifies the size of the disk in base-2 GB. If not specified, the
            disk will be the same size as the image (usually 10GB). If
            specified, the size must be equal to or larger than 10GB.
          format: int64
          type: string
        diskType:
          description: >-
            Specifies the disk type to use to create the instance. If not
            specified, the default is pd-standard, specified using the full URL.
            For example:

            https://www.googleapis.com/compute/v1/projects/project/zones/zone/diskTypes/pd-standard



            Other values include pd-ssd and local-ssd. If you define this field, you can provide either the full or partial URL. For example, the following are valid values:  

            - https://www.googleapis.com/compute/v1/projects/project/zones/zone/diskTypes/diskType 

            - projects/project/zones/zone/diskTypes/diskType 

            - zones/zone/diskTypes/diskType  Note that for InstanceTemplate, this is the name of the disk type, not URL.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels to apply to this disk. These can be later modified by the
            disks.setLabels method. This field is only applicable for persistent
            disks.
          type: object
        resourcePolicies:
          description: Resource policies applied to this disk for automatic snapshot
            creations. Specified using the full or partial URL. For instance
            template, specify only the resource policy name.
          items:
            type: string
          type: array
        sourceImage:
          description: >-
            The source image to create this disk. When creating a new instance,
            one of initializeParams.sourceImage or
            initializeParams.sourceSnapshot or disks.source is required except
            for local SSD.


            To create a disk with one of the public operating system images, specify the image by its family name. For example, specify family/debian-9 to use the latest Debian 9 image:

            projects/debian-cloud/global/images/family/debian-9



            Alternatively, use a specific version of a public operating system image:

            projects/debian-cloud/global/images/debian-9-stretch-vYYYYMMDD



            To create a disk with a custom image that you created, specify the image name in the following format:

            global/images/my-custom-image



            You can also specify a custom image by its image family, which returns the latest version of the image in that family. Replace the image name with family/family-name:

            global/images/family/my-image-family



            If the source image is deleted later, this field will not be set.
          type: string
        sourceImageEncryptionKey:
          $ref: "#/components/schemas/CustomerEncryptionKey"
        sourceSnapshot:
          description: >-
            The source snapshot to create this disk. When creating a new
            instance, one of initializeParams.sourceSnapshot or
            initializeParams.sourceImage or disks.source is required except for
            local SSD.


            To create a disk with a snapshot that you created, specify the snapshot name in the following format:

            global/snapshots/my-backup



            If the source snapshot is deleted later, this field will not be set.
          type: string
        sourceSnapshotEncryptionKey:
          $ref: "#/components/schemas/CustomerEncryptionKey"
      type: object
    AuditConfig:
      description: >-
        Specifies the audit configuration for a service. The configuration
        determines which permission types are logged, and what identities, if
        any, are exempted from logging. An AuditConfig must have one or more
        AuditLogConfigs.


        If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted.


        Example Policy with multiple AuditConfigs:


        { "audit_configs": [ { "service": "allServices" "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE", }, { "log_type": "ADMIN_READ", } ] }, { "service": "sampleservice.googleapis.com" "audit_log_configs": [ { "log_type": "DATA_READ", }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] }


        For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: "#/components/schemas/AuditLogConfig"
          type: array
        exemptedMembers:
          description: ""
          items:
            type: string
          type: array
        service:
          description: Specifies a service that will be enabled for audit logging. For
            example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
      type: object
    AuditLogConfig:
      description: >-
        Provides the configuration for logging a type of permissions. Example:


        { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE", } ] }


        This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
      properties:
        exemptedMembers:
          description: Specifies the identities that do not cause logging for this type of
            permission. Follows the same format of [Binding.members][].
          items:
            type: string
          type: array
        ignoreChildExemptions:
          description: ""
          type: boolean
        logType:
          description: The log type that this config enables.
          enum:
            - ADMIN_READ
            - DATA_READ
            - DATA_WRITE
            - LOG_TYPE_UNSPECIFIED
          type: string
      type: object
    AuthorizationLoggingOptions:
      description: Authorization-related information used by Cloud Audit Logging.
      properties:
        permissionType:
          description: The type of the permission that was checked.
          enum:
            - ADMIN_READ
            - ADMIN_WRITE
            - DATA_READ
            - DATA_WRITE
            - PERMISSION_TYPE_UNSPECIFIED
          type: string
      type: object
    Autoscaler:
      description: >-
        Represents an Autoscaler resource.




        Use autoscalers to automatically add or delete instances from a managed instance group according to your defined autoscaling policy. For more information, read Autoscaling Groups of Instances.


        For zonal managed instance groups resource, use the autoscaler resource.


        For regional managed instance groups, use the regionAutoscalers resource. (== resource_for beta.autoscalers ==) (== resource_for v1.autoscalers ==) (== resource_for beta.regionAutoscalers ==) (== resource_for v1.regionAutoscalers ==)
      properties:
        autoscalingPolicy:
          $ref: "#/components/schemas/AutoscalingPolicy"
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#autoscaler
          description: "[Output Only] Type of the resource. Always compute#autoscaler for
            autoscalers."
          type: string
        name:
          description: Name of the resource. Provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        region:
          description: "[Output Only] URL of the region where the instance group resides
            (for autoscalers living in regional scope)."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        status:
          description: "[Output Only] The status of the autoscaler configuration."
          enum:
            - ACTIVE
            - DELETING
            - ERROR
            - PENDING
          type: string
        statusDetails:
          description: "[Output Only] Human-readable details about the current state of the
            autoscaler. Read the documentation for Commonly returned status
            messages for examples of status messages you might encounter."
          items:
            $ref: "#/components/schemas/AutoscalerStatusDetails"
          type: array
        target:
          description: URL of the managed instance group that this autoscaler will scale.
          type: string
        zone:
          description: "[Output Only] URL of the zone where the instance group resides (for
            autoscalers living in zonal scope)."
          type: string
      type: object
    AutoscalerAggregatedList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/AutoscalersScopedList"
          description: A list of AutoscalersScopedList resources.
          type: object
        kind:
          default: compute#autoscalerAggregatedList
          description: "[Output Only] Type of resource. Always
            compute#autoscalerAggregatedList for aggregated lists of
            autoscalers."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    AutoscalerList:
      description: Contains a list of Autoscaler resources.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of Autoscaler resources.
          items:
            $ref: "#/components/schemas/Autoscaler"
          type: array
        kind:
          default: compute#autoscalerList
          description: "[Output Only] Type of resource. Always compute#autoscalerList for
            lists of autoscalers."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    AutoscalerStatusDetails:
      properties:
        message:
          description: The status message.
          type: string
        type:
          description: The type of error returned.
          enum:
            - ALL_INSTANCES_UNHEALTHY
            - BACKEND_SERVICE_DOES_NOT_EXIST
            - CAPPED_AT_MAX_NUM_REPLICAS
            - CUSTOM_METRIC_DATA_POINTS_TOO_SPARSE
            - CUSTOM_METRIC_INVALID
            - MIN_EQUALS_MAX
            - MISSING_CUSTOM_METRIC_DATA_POINTS
            - MISSING_LOAD_BALANCING_DATA_POINTS
            - MORE_THAN_ONE_BACKEND_SERVICE
            - NOT_ENOUGH_QUOTA_AVAILABLE
            - REGION_RESOURCE_STOCKOUT
            - SCALING_TARGET_DOES_NOT_EXIST
            - UNKNOWN
            - UNSUPPORTED_MAX_RATE_LOAD_BALANCING_CONFIGURATION
            - ZONE_RESOURCE_STOCKOUT
          type: string
      type: object
    AutoscalersScopedList:
      properties:
        autoscalers:
          description: "[Output Only] A list of autoscalers contained in this scope."
          items:
            $ref: "#/components/schemas/Autoscaler"
          type: array
        warning:
          description: "[Output Only] Informational warning which replaces the list of
            autoscalers when the list is empty."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    AutoscalingPolicy:
      description: Cloud Autoscaler policy.
      properties:
        coolDownPeriodSec:
          description: >-
            The number of seconds that the autoscaler should wait before it
            starts collecting information from a new instance. This prevents the
            autoscaler from collecting information when the instance is
            initializing, during which the collected usage would not be
            reliable. The default time autoscaler waits is 60 seconds.


            Virtual machine initialization times might vary because of numerous factors. We recommend that you test how long an instance may take to initialize. To do this, create an instance and time the startup process.
          format: int32
          type: integer
        cpuUtilization:
          $ref: "#/components/schemas/AutoscalingPolicyCpuUtilization"
        customMetricUtilizations:
          description: Configuration parameters of autoscaling based on a custom metric.
          items:
            $ref: "#/components/schemas/AutoscalingPolicyCustomMetricUtilization"
          type: array
        loadBalancingUtilization:
          $ref: "#/components/schemas/AutoscalingPolicyLoadBalancingUtilization"
        maxNumReplicas:
          description: The maximum number of instances that the autoscaler can scale up to.
            This is required when creating or updating an autoscaler. The
            maximum number of replicas should not be lower than minimal number
            of replicas.
          format: int32
          type: integer
        minNumReplicas:
          description: The minimum number of replicas that the autoscaler can scale down
            to. This cannot be less than 0. If not provided, autoscaler will
            choose a default value depending on maximum number of instances
            allowed.
          format: int32
          type: integer
      type: object
    AutoscalingPolicyCpuUtilization:
      description: CPU utilization policy.
      properties:
        utilizationTarget:
          description: >-
            The target CPU utilization that the autoscaler should maintain. Must
            be a float value in the range (0, 1]. If not specified, the default
            is 0.6.


            If the CPU level is below the target utilization, the autoscaler scales down the number of instances until it reaches the minimum number of instances you specified or until the average CPU of your instances reaches the target utilization.


            If the average CPU is above the target utilization, the autoscaler scales up until it reaches the maximum number of instances you specified or until the average utilization reaches the target utilization.
          format: double
          type: number
      type: object
    AutoscalingPolicyCustomMetricUtilization:
      description: Custom utilization metric policy.
      properties:
        metric:
          description: >-
            The identifier (type) of the Stackdriver Monitoring metric. The
            metric cannot have negative values.


            The metric must have a value type of INT64 or DOUBLE.
          type: string
        utilizationTarget:
          description: >-
            The target value of the metric that autoscaler should maintain. This
            must be a positive value. A utilization metric scales number of
            virtual machines handling requests to increase or decrease
            proportionally to the metric.


            For example, a good metric to use as a utilization_target is compute.googleapis.com/instance/network/received_bytes_count. The autoscaler will work to keep this value constant for each of the instances.
          format: double
          type: number
        utilizationTargetType:
          description: Defines how target utilization value is expressed for a Stackdriver
            Monitoring metric. Either GAUGE, DELTA_PER_SECOND, or
            DELTA_PER_MINUTE.
          enum:
            - DELTA_PER_MINUTE
            - DELTA_PER_SECOND
            - GAUGE
          type: string
      type: object
    AutoscalingPolicyLoadBalancingUtilization:
      description: Configuration parameters of autoscaling based on load balancing.
      properties:
        utilizationTarget:
          description: Fraction of backend capacity utilization (set in HTTP(S) load
            balancing configuration) that autoscaler should maintain. Must be a
            positive float value. If not defined, the default is 0.8.
          format: double
          type: number
      type: object
    Backend:
      description: Message containing information of one individual backend.
      properties:
        balancingMode:
          description: >-
            Specifies the balancing mode for the backend.


            When choosing a balancing mode, you need to consider the loadBalancingScheme, and protocol for the backend service, as well as the type of backend (instance group or NEG).

             
            - If the load balancing mode is CONNECTION, then the load is spread based on how many concurrent connections the backend can handle.

            You can use the CONNECTION balancing mode if the protocol for the backend service is SSL, TCP, or UDP.


            If the loadBalancingScheme for the backend service is EXTERNAL (SSL Proxy and TCP Proxy load balancers), you must also specify exactly one of the following parameters: maxConnections, maxConnectionsPerInstance, or maxConnectionsPerEndpoint.


            If the loadBalancingScheme for the backend service is INTERNAL (internal TCP/UDP load balancers), you cannot specify any additional parameters.
             
            - If the load balancing mode is RATE, the load is spread based on the rate of HTTP requests per second (RPS).

            You can use the RATE balancing mode if the protocol for the backend service is HTTP or HTTPS. You must specify exactly one of the following parameters: maxRate, maxRatePerInstance, or maxRatePerEndpoint.
             
            - If the load balancing mode is UTILIZATION, the load is spread based on the CPU utilization of instances in an instance group.

            You can use the UTILIZATION balancing mode if the loadBalancingScheme of the backend service is EXTERNAL, INTERNAL_SELF_MANAGED, or INTERNAL_MANAGED and the backends are instance groups. There are no restrictions on the backend service protocol.
          enum:
            - CONNECTION
            - RATE
            - UTILIZATION
          type: string
        capacityScaler:
          description: >-
            A multiplier applied to the group's maximum servicing capacity
            (based on UTILIZATION, RATE or CONNECTION). Default value is 1,
            which means the group will serve up to 100% of its configured
            capacity (depending on balancingMode). A setting of 0 means the
            group is completely drained, offering 0% of its available Capacity.
            Valid range is [0.0,1.0].


            This cannot be used for internal load balancing.
          format: float
          type: number
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        group:
          description: >-
            The fully-qualified URL of an instance group or network endpoint
            group (NEG) resource. The type of backend that a backend service
            supports depends on the backend service's loadBalancingScheme.

             
            - When the loadBalancingScheme for the backend service is EXTERNAL, INTERNAL_SELF_MANAGED, or INTERNAL_MANAGED, the backend can be either an instance group or a NEG. The backends on the backend service must be either all instance groups or all NEGs. You cannot mix instance group and NEG backends on the same backend service. 



            - When the loadBalancingScheme for the backend service is INTERNAL, the backend must be an instance group in the same region as the backend service. NEGs are not supported.  


            You must use the fully-qualified URL (starting with https://www.googleapis.com/) to specify the instance group or NEG. Partial URLs are not supported.
          type: string
        maxConnections:
          description: >-
            Defines a maximum target for simultaneous connections for the entire
            backend (instance group or NEG). If the backend's balancingMode is
            UTILIZATION, this is an optional parameter. If the backend's
            balancingMode is CONNECTION, and backend is attached to a backend
            service whose loadBalancingScheme is EXTERNAL, you must specify
            either this parameter, maxConnectionsPerInstance, or
            maxConnectionsPerEndpoint.


            Not available if the backend's balancingMode is RATE. If the loadBalancingScheme is INTERNAL, then maxConnections is not supported, even though the backend requires a balancing mode of CONNECTION.
          format: int32
          type: integer
        maxConnectionsPerEndpoint:
          description: >-
            Defines a maximum target for simultaneous connections for an
            endpoint of a NEG. This is multiplied by the number of endpoints in
            the NEG to implicitly calculate a maximum number of target maximum
            simultaneous connections for the NEG. If the backend's balancingMode
            is CONNECTION, and the backend is attached to a backend service
            whose loadBalancingScheme is EXTERNAL, you must specify either this
            parameter, maxConnections, or maxConnectionsPerInstance.


            Not available if the backend's balancingMode is RATE. Internal TCP/UDP load balancing does not support setting maxConnectionsPerEndpoint even though its backends require a balancing mode of CONNECTION.
          format: int32
          type: integer
        maxConnectionsPerInstance:
          description: >-
            Defines a maximum target for simultaneous connections for a single
            VM in a backend instance group. This is multiplied by the number of
            instances in the instance group to implicitly calculate a target
            maximum number of simultaneous connections for the whole instance
            group. If the backend's balancingMode is UTILIZATION, this is an
            optional parameter. If the backend's balancingMode is CONNECTION,
            and backend is attached to a backend service whose
            loadBalancingScheme is EXTERNAL, you must specify either this
            parameter, maxConnections, or maxConnectionsPerEndpoint.


            Not available if the backend's balancingMode is RATE. Internal TCP/UDP load balancing does not support setting maxConnectionsPerInstance even though its backends require a balancing mode of CONNECTION.
          format: int32
          type: integer
        maxRate:
          description: >-
            The max requests per second (RPS) of the group. Can be used with
            either RATE or UTILIZATION balancing modes, but required if RATE
            mode. For RATE mode, either maxRate or maxRatePerInstance must be
            set.


            This cannot be used for internal load balancing.
          format: int32
          type: integer
        maxRatePerEndpoint:
          description: >-
            Defines a maximum target for requests per second (RPS) for an
            endpoint of a NEG. This is multiplied by the number of endpoints in
            the NEG to implicitly calculate a target maximum rate for the NEG.


            If the backend's balancingMode is RATE, you must specify either this parameter, maxRate, or maxRatePerInstance.


            Not available if the backend's balancingMode is CONNECTION.
          format: float
          type: number
        maxRatePerInstance:
          description: >-
            Defines a maximum target for requests per second (RPS) for a single
            VM in a backend instance group. This is multiplied by the number of
            instances in the instance group to implicitly calculate a target
            maximum rate for the whole instance group.


            If the backend's balancingMode is UTILIZATION, this is an optional parameter. If the backend's balancingMode is RATE, you must specify either this parameter, maxRate, or maxRatePerEndpoint.


            Not available if the backend's balancingMode is CONNECTION.
          format: float
          type: number
        maxUtilization:
          description: >-
            Defines the maximum average CPU utilization of a backend VM in an
            instance group. The valid range is [0.0, 1.0]. This is an optional
            parameter if the backend's balancingMode is UTILIZATION.


            This parameter can be used in conjunction with maxRate, maxRatePerInstance, maxConnections, or maxConnectionsPerInstance.
          format: float
          type: number
      type: object
    BackendBucket:
      description: >-
        Represents a Cloud Storage Bucket resource.


        This Cloud Storage bucket resource is referenced by a URL map of a load balancer. For more information, read Backend Buckets.
      properties:
        bucketName:
          description: Cloud Storage bucket name.
          type: string
        cdnPolicy:
          $ref: "#/components/schemas/BackendBucketCdnPolicy"
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional textual description of the resource; provided by the
            client when the resource is created.
          type: string
        enableCdn:
          description: If true, enable Cloud CDN for this BackendBucket.
          type: boolean
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          format: uint64
          type: string
        kind:
          default: compute#backendBucket
          description: Type of the resource.
          type: string
        name:
          description: Name of the resource. Provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
      type: object
    BackendBucketCdnPolicy:
      description: Message containing Cloud CDN configuration for a backend bucket.
      properties:
        signedUrlCacheMaxAgeSec:
          description: 'Maximum number of seconds the response to a signed URL request will
            be considered fresh. After this time period, the response will be
            revalidated before being served. Defaults to 1hr (3600s). When
            serving responses to signed URL requests, Cloud CDN will internally
            behave as though all responses from this backend had a
            "Cache-Control: public, max-age=[TTL]" header, regardless of any
            existing Cache-Control header. The actual headers served in
            responses will not be altered.'
          format: int64
          type: string
        signedUrlKeyNames:
          description: "[Output Only] Names of the keys for signing request URLs."
          items:
            type: string
          type: array
      type: object
    BackendBucketList:
      description: Contains a list of BackendBucket resources.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of BackendBucket resources.
          items:
            $ref: "#/components/schemas/BackendBucket"
          type: array
        kind:
          default: compute#backendBucketList
          description: Type of resource.
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    BackendService:
      description: >-
        Represents a Backend Service resource.




        Backend services must have an associated health check. Backend services also store information about session affinity. For more information, read Backend Services.


        A backendServices resource represents a global backend service. Global backend services are used for HTTP(S), SSL Proxy, TCP Proxy load balancing and Traffic Director.


        A regionBackendServices resource represents a regional backend service. Regional backend services are used for internal TCP/UDP load balancing. For more information, read Internal TCP/UDP Load balancing. (== resource_for v1.backendService ==) (== resource_for beta.backendService ==)
      properties:
        affinityCookieTtlSec:
          description: If set to 0, the cookie is non-persistent and lasts only until the
            end of the browser session (or equivalent). The maximum allowed
            value is one day (86,400).
          format: int32
          type: integer
        backends:
          description: The list of backends that serve this BackendService.
          items:
            $ref: "#/components/schemas/Backend"
          type: array
        cdnPolicy:
          $ref: "#/components/schemas/BackendServiceCdnPolicy"
        circuitBreakers:
          $ref: "#/components/schemas/CircuitBreakers"
        connectionDraining:
          $ref: "#/components/schemas/ConnectionDraining"
        consistentHash:
          $ref: "#/components/schemas/ConsistentHashLoadBalancerSettings"
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        customRequestHeaders:
          description: Headers that the HTTP/S load balancer should add to proxied requests.
          items:
            type: string
          type: array
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        enableCDN:
          description: If true, enables Cloud CDN for the backend service. Only applicable
            if the loadBalancingScheme is EXTERNAL and the protocol is HTTP or
            HTTPS.
          type: boolean
        fingerprint:
          description: >-
            Fingerprint of this resource. A hash of the contents stored in this
            object. This field is used in optimistic locking. This field will be
            ignored when inserting a BackendService. An up-to-date fingerprint
            must be provided in order to update the BackendService, otherwise
            the request will fail with error 412 conditionNotMet.


            To see the latest fingerprint, make a get() request to retrieve a BackendService.
          format: byte
          type: string
        healthChecks:
          description: >-
            The list of URLs to the HttpHealthCheck or HttpsHealthCheck resource
            for health checking this BackendService. Currently at most one
            health check can be specified, and a health check is required for
            Compute Engine backend services. A health check must not be
            specified for App Engine backend and Cloud Function backend.


            For internal load balancing, a URL to a HealthCheck resource must be specified instead.
          items:
            type: string
          type: array
        iap:
          $ref: "#/components/schemas/BackendServiceIAP"
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#backendService
          description: "[Output Only] Type of resource. Always compute#backendService for
            backend services."
          type: string
        loadBalancingScheme:
          description: Indicates whether the backend service will be used with internal or
            external load balancing. A backend service created for one type of
            load balancing cannot be used with the other. Possible values are
            INTERNAL and EXTERNAL.
          enum:
            - EXTERNAL
            - INTERNAL
            - INTERNAL_MANAGED
            - INTERNAL_SELF_MANAGED
            - INVALID_LOAD_BALANCING_SCHEME
          type: string
        localityLbPolicy:
          description: >-
            The load balancing algorithm used within the scope of the locality.
            The possible values are:  

            - ROUND_ROBIN: This is a simple policy in which each healthy backend is selected in round robin order. This is the default. 

            - LEAST_REQUEST: An O(1) algorithm which selects two random healthy hosts and picks the host which has fewer active requests. 

            - RING_HASH: The ring/modulo hash load balancer implements consistent hashing to backends. The algorithm has the property that the addition/removal of a host from a set of N hosts only affects 1/N of the requests. 

            - RANDOM: The load balancer selects a random healthy host. 

            - ORIGINAL_DESTINATION: Backend host is selected based on the client connection metadata, i.e., connections are opened to the same address as the destination address of the incoming connection before the connection was redirected to the load balancer. 

            - MAGLEV: used as a drop in replacement for the ring hash load balancer. Maglev is not as stable as ring hash but has faster table lookup build times and host selection times. For more information about Maglev, refer to https://ai.google/research/pubs/pub44824 


            This field is applicable to either:  

            - A regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED. 

            - A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED.
          enum:
            - INVALID_LB_POLICY
            - LEAST_REQUEST
            - MAGLEV
            - ORIGINAL_DESTINATION
            - RANDOM
            - RING_HASH
            - ROUND_ROBIN
          type: string
        name:
          description: Name of the resource. Provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        outlierDetection:
          $ref: "#/components/schemas/OutlierDetection"
        port:
          description: >-
            Deprecated in favor of portName. The TCP port to connect on the
            backend. The default value is 80.


            This cannot be used if the loadBalancingScheme is INTERNAL (Internal TCP/UDP Load Balancing).
          format: int32
          type: integer
        portName:
          description: >-
            A named port on a backend instance group representing the port for
            communication to the backend VMs in that group. Required when the
            loadBalancingScheme is EXTERNAL and the backends are instance
            groups. The named port must be defined on each backend instance
            group. This parameter has no meaning if the backends are NEGs.




            Must be omitted when the loadBalancingScheme is INTERNAL (Internal TCP/UDP Load Blaancing).
          type: string
        protocol:
          description: >-
            The protocol this BackendService uses to communicate with backends.


            Possible values are HTTP, HTTPS, TCP, SSL, or UDP, depending on the chosen load balancer or Traffic Director configuration. Refer to the documentation for the load balancer or for Traffic director for more information.
          enum:
            - HTTP
            - HTTP2
            - HTTPS
            - SSL
            - TCP
            - UDP
          type: string
        region:
          description: "[Output Only] URL of the region where the regional backend service
            resides. This field is not applicable to global backend services.
            You must specify this field as part of the HTTP request URL. It is
            not settable as a field in the request body."
          type: string
        securityPolicy:
          description: "[Output Only] The resource URL for the security policy associated
            with this backend service."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        sessionAffinity:
          description: >-
            Type of session affinity to use. The default is NONE. Session
            affinity is not applicable if the --protocol is UDP.


            When the loadBalancingScheme is EXTERNAL, possible values are NONE, CLIENT_IP, or GENERATED_COOKIE. You can use GENERATED_COOKIE if the protocol is HTTP or HTTPS.


            When the loadBalancingScheme is INTERNAL, possible values are NONE, CLIENT_IP, CLIENT_IP_PROTO, or CLIENT_IP_PORT_PROTO.


            When the loadBalancingScheme is INTERNAL_SELF_MANAGED, possible values are NONE, CLIENT_IP, GENERATED_COOKIE, HEADER_FIELD, or HTTP_COOKIE.
          enum:
            - CLIENT_IP
            - CLIENT_IP_PORT_PROTO
            - CLIENT_IP_PROTO
            - GENERATED_COOKIE
            - HEADER_FIELD
            - HTTP_COOKIE
            - NONE
          type: string
        timeoutSec:
          description: The backend service timeout has a different meaning depending on the
            type of load balancer. For more information read,  Backend service
            settings The default is 30 seconds.
          format: int32
          type: integer
      type: object
    BackendServiceAggregatedList:
      description: Contains a list of BackendServicesScopedList.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/BackendServicesScopedList"
          description: A list of BackendServicesScopedList resources.
          type: object
        kind:
          default: compute#backendServiceAggregatedList
          description: Type of resource.
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    BackendServiceCdnPolicy:
      description: Message containing Cloud CDN configuration for a backend service.
      properties:
        cacheKeyPolicy:
          $ref: "#/components/schemas/CacheKeyPolicy"
        signedUrlCacheMaxAgeSec:
          description: 'Maximum number of seconds the response to a signed URL request will
            be considered fresh. After this time period, the response will be
            revalidated before being served. Defaults to 1hr (3600s). When
            serving responses to signed URL requests, Cloud CDN will internally
            behave as though all responses from this backend had a
            "Cache-Control: public, max-age=[TTL]" header, regardless of any
            existing Cache-Control header. The actual headers served in
            responses will not be altered.'
          format: int64
          type: string
        signedUrlKeyNames:
          description: "[Output Only] Names of the keys for signing request URLs."
          items:
            type: string
          type: array
      type: object
    BackendServiceGroupHealth:
      properties:
        healthStatus:
          description: Health state of the backend instances or endpoints in requested
            instance or network endpoint group, determined based on configured
            health checks.
          items:
            $ref: "#/components/schemas/HealthStatus"
          type: array
        kind:
          default: compute#backendServiceGroupHealth
          description: "[Output Only] Type of resource. Always
            compute#backendServiceGroupHealth for the health of backend
            services."
          type: string
      type: object
    BackendServiceIAP:
      description: Identity-Aware Proxy
      properties:
        enabled:
          type: boolean
        oauth2ClientId:
          type: string
        oauth2ClientSecret:
          type: string
        oauth2ClientSecretSha256:
          description: "[Output Only] SHA256 hash value for the field oauth2_client_secret
            above."
          type: string
      type: object
    BackendServiceList:
      description: Contains a list of BackendService resources.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of BackendService resources.
          items:
            $ref: "#/components/schemas/BackendService"
          type: array
        kind:
          default: compute#backendServiceList
          description: "[Output Only] Type of resource. Always compute#backendServiceList
            for lists of backend services."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    BackendServiceReference:
      properties:
        backendService:
          type: string
      type: object
    BackendServicesScopedList:
      properties:
        backendServices:
          description: A list of BackendServices contained in this scope.
          items:
            $ref: "#/components/schemas/BackendService"
          type: array
        warning:
          description: Informational warning which replaces the list of backend services
            when the list is empty.
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    Binding:
      description: Associates `members` with a `role`.
      properties:
        condition:
          $ref: "#/components/schemas/Expr"
        members:
          description: >-
            Specifies the identities requesting access for a Cloud Platform
            resource. `members` can have the following values:


            * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account.


            * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account.


            * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` .




            * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`.


            * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`.




            * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`.
          items:
            type: string
          type: array
        role:
          description: Role that is assigned to `members`. For example, `roles/viewer`,
            `roles/editor`, or `roles/owner`.
          type: string
      type: object
    CacheInvalidationRule:
      properties:
        host:
          description: If set, this invalidation rule will only apply to requests with a
            Host header matching host.
          type: string
        path:
          type: string
      type: object
    CacheKeyPolicy:
      description: Message containing what to include in the cache key for a request for
        Cloud CDN.
      properties:
        includeHost:
          description: If true, requests to different hosts will be cached separately.
          type: boolean
        includeProtocol:
          description: If true, http and https requests will be cached separately.
          type: boolean
        includeQueryString:
          description: If true, include query string parameters in the cache key according
            to query_string_whitelist and query_string_blacklist. If neither is
            set, the entire query string will be included. If false, the query
            string will be excluded from the cache key entirely.
          type: boolean
        queryStringBlacklist:
          description: Names of query string parameters to exclude in cache keys. All other
            parameters will be included. Either specify query_string_whitelist
            or query_string_blacklist, not both. '&' and '=' will be percent
            encoded and not treated as delimiters.
          items:
            type: string
          type: array
        queryStringWhitelist:
          description: Names of query string parameters to include in cache keys. All other
            parameters will be excluded. Either specify query_string_whitelist
            or query_string_blacklist, not both. '&' and '=' will be percent
            encoded and not treated as delimiters.
          items:
            type: string
          type: array
      type: object
    CircuitBreakers:
      description: Settings controlling the volume of connections to a backend service.
      properties:
        maxConnections:
          description: The maximum number of connections to the backend cluster. If not
            specified, the default is 1024.
          format: int32
          type: integer
        maxPendingRequests:
          description: The maximum number of pending requests allowed to the backend
            cluster. If not specified, the default is 1024.
          format: int32
          type: integer
        maxRequests:
          description: The maximum number of parallel requests that allowed to the backend
            cluster. If not specified, the default is 1024.
          format: int32
          type: integer
        maxRequestsPerConnection:
          description: Maximum requests for a single backend connection. This parameter is
            respected by both the HTTP/1.1 and HTTP/2 implementations. If not
            specified, there is no limit. Setting this parameter to 1 will
            effectively disable keep alive.
          format: int32
          type: integer
        maxRetries:
          description: The maximum number of parallel retries allowed to the backend
            cluster. If not specified, the default is 3.
          format: int32
          type: integer
      type: object
    Commitment:
      description: >-
        Represents a regional Commitment resource.


        Creating a commitment resource means that you are purchasing a committed use contract with an explicit start and end time. You can create commitments based on vCPUs and memory usage and receive discounted rates. For full details, read Signing Up for Committed Use Discounts. (== resource_for beta.regionCommitments ==) (== resource_for v1.regionCommitments ==)
      properties:
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        endTimestamp:
          description: "[Output Only] Commitment end time in RFC3339 text format."
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#commitment
          description: "[Output Only] Type of the resource. Always compute#commitment for
            commitments."
          type: string
        name:
          description: Name of the resource. Provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        plan:
          description: The plan for this commitment, which determines duration and discount
            rate. The currently supported plans are TWELVE_MONTH (1 year), and
            THIRTY_SIX_MONTH (3 years).
          enum:
            - INVALID
            - THIRTY_SIX_MONTH
            - TWELVE_MONTH
          type: string
        region:
          description: "[Output Only] URL of the region where this commitment may be used."
          type: string
        reservations:
          description: List of reservations in this commitment.
          items:
            $ref: "#/components/schemas/Reservation"
          type: array
        resources:
          description: A list of commitment amounts for particular resources. Note that
            VCPU and MEMORY resource commitments must occur together.
          items:
            $ref: "#/components/schemas/ResourceCommitment"
          type: array
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        startTimestamp:
          description: "[Output Only] Commitment start time in RFC3339 text format."
          type: string
        status:
          description: "[Output Only] Status of the commitment with regards to eventual
            expiration (each commitment has an end date defined). One of the
            following values: NOT_YET_ACTIVE, ACTIVE, EXPIRED."
          enum:
            - ACTIVE
            - CREATING
            - EXPIRED
            - NOT_YET_ACTIVE
          type: string
        statusMessage:
          description: "[Output Only] An optional, human-readable explanation of the
            status."
          type: string
      type: object
    CommitmentAggregatedList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/CommitmentsScopedList"
          description: A list of CommitmentsScopedList resources.
          type: object
        kind:
          default: compute#commitmentAggregatedList
          description: "[Output Only] Type of resource. Always
            compute#commitmentAggregatedList for aggregated lists of
            commitments."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    CommitmentList:
      description: Contains a list of Commitment resources.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of Commitment resources.
          items:
            $ref: "#/components/schemas/Commitment"
          type: array
        kind:
          default: compute#commitmentList
          description: "[Output Only] Type of resource. Always compute#commitmentList for
            lists of commitments."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    CommitmentsScopedList:
      properties:
        commitments:
          description: "[Output Only] A list of commitments contained in this scope."
          items:
            $ref: "#/components/schemas/Commitment"
          type: array
        warning:
          description: "[Output Only] Informational warning which replaces the list of
            commitments when the list is empty."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    Condition:
      description: A condition to be met.
      properties:
        iam:
          description: Trusted attributes supplied by the IAM system.
          enum:
            - APPROVER
            - ATTRIBUTION
            - AUTHORITY
            - CREDENTIALS_TYPE
            - JUSTIFICATION_TYPE
            - NO_ATTR
            - SECURITY_REALM
          type: string
        op:
          description: An operator to apply the subject with.
          enum:
            - DISCHARGED
            - EQUALS
            - IN
            - NOT_EQUALS
            - NOT_IN
            - NO_OP
          type: string
        svc:
          description: Trusted attributes discharged by the service.
          type: string
        sys:
          description: Trusted attributes supplied by any service that owns resources and
            uses the IAM system for access control.
          enum:
            - IP
            - NAME
            - NO_ATTR
            - REGION
            - SERVICE
          type: string
        values:
          description: The objects of the condition.
          items:
            type: string
          type: array
      type: object
    ConnectionDraining:
      description: Message containing connection draining configuration.
      properties:
        drainingTimeoutSec:
          description: The amount of time in seconds to allow existing connections to
            persist while on unhealthy backend VMs. Only applicable if the
            protocol is not UDP. The valid range is [0, 3600].
          format: int32
          type: integer
      type: object
    ConsistentHashLoadBalancerSettings:
      description: This message defines settings for a consistent hash style load balancer.
      properties:
        httpCookie:
          $ref: "#/components/schemas/ConsistentHashLoadBalancerSettingsHttpCookie"
        httpHeaderName:
          description: The hash based on the value of the specified header field. This
            field is applicable if the sessionAffinity is set to HEADER_FIELD.
          type: string
        minimumRingSize:
          description: The minimum number of virtual nodes to use for the hash ring.
            Defaults to 1024. Larger ring sizes result in more granular load
            distributions. If the number of hosts in the load balancing pool is
            larger than the ring size, each host will be assigned a single
            virtual node.
          format: int64
          type: string
      type: object
    ConsistentHashLoadBalancerSettingsHttpCookie:
      description: The information about the HTTP Cookie on which the hash function is
        based for load balancing policies that use a consistent hash.
      properties:
        name:
          description: Name of the cookie.
          type: string
        path:
          description: Path to set for the cookie.
          type: string
        ttl:
          $ref: "#/components/schemas/Duration"
      type: object
    CorsPolicy:
      description: The specification for allowing client side cross-origin requests. Please
        see W3C Recommendation for Cross Origin Resource Sharing
      properties:
        allowCredentials:
          description: >-
            In response to a preflight request, setting this to true indicates
            that the actual request can include user credentials. This
            translates to the Access-Control-Allow-Credentials header.

            Default is false.
          type: boolean
        allowHeaders:
          description: Specifies the content for the Access-Control-Allow-Headers header.
          items:
            type: string
          type: array
        allowMethods:
          description: Specifies the content for the Access-Control-Allow-Methods header.
          items:
            type: string
          type: array
        allowOriginRegexes:
          description: >-
            Specifies the regualar expression patterns that match allowed
            origins. For regular expression grammar please see
            en.cppreference.com/w/cpp/regex/ecmascript 

            An origin is allowed if it matches either allow_origins or allow_origin_regex.
          items:
            type: string
          type: array
        allowOrigins:
          description: >-
            Specifies the list of origins that will be allowed to do CORS
            requests.

            An origin is allowed if it matches either allow_origins or allow_origin_regex.
          items:
            type: string
          type: array
        disabled:
          description: If true, specifies the CORS policy is disabled. The default value of
            false, which indicates that the CORS policy is in effect.
          type: boolean
        exposeHeaders:
          description: Specifies the content for the Access-Control-Expose-Headers header.
          items:
            type: string
          type: array
        maxAge:
          description: Specifies how long the results of a preflight request can be cached.
            This translates to the content for the Access-Control-Max-Age
            header.
          format: int32
          type: integer
      type: object
    CustomerEncryptionKey:
      description: Represents a customer-supplied encryption key
      properties:
        kmsKeyName:
          description: The name of the encryption key that is stored in Google Cloud KMS.
          type: string
        rawKey:
          description: Specifies a 256-bit customer-supplied encryption key, encoded in RFC
            4648 base64 to either encrypt or decrypt this resource.
          type: string
        sha256:
          description: "[Output only] The RFC 4648 base64 encoded SHA-256 hash of the
            customer-supplied encryption key that protects this resource."
          type: string
      type: object
    CustomerEncryptionKeyProtectedDisk:
      properties:
        diskEncryptionKey:
          $ref: "#/components/schemas/CustomerEncryptionKey"
        source:
          description: Specifies a valid partial or full URL to an existing Persistent Disk
            resource. This field is only applicable for persistent disks.
          type: string
      type: object
    DeprecationStatus:
      description: Deprecation status for a public resource.
      properties:
        deleted:
          description: An optional RFC3339 timestamp on or after which the state of this
            resource is intended to change to DELETED. This is only
            informational and the status will not change unless the client
            explicitly changes it.
          type: string
        deprecated:
          description: An optional RFC3339 timestamp on or after which the state of this
            resource is intended to change to DEPRECATED. This is only
            informational and the status will not change unless the client
            explicitly changes it.
          type: string
        obsolete:
          description: An optional RFC3339 timestamp on or after which the state of this
            resource is intended to change to OBSOLETE. This is only
            informational and the status will not change unless the client
            explicitly changes it.
          type: string
        replacement:
          description: The URL of the suggested replacement for a deprecated resource. The
            suggested replacement resource must be the same kind of resource as
            the deprecated resource.
          type: string
        state:
          description: The deprecation state of this resource. This can be ACTIVE,
            DEPRECATED, OBSOLETE, or DELETED. Operations which communicate the
            end of life date for an image, can use ACTIVE. Operations which
            create a new resource using a DEPRECATED resource will return
            successfully, but with a warning indicating the deprecated resource
            and recommending its replacement. Operations which use OBSOLETE or
            DELETED resources will be rejected and result in an error.
          enum:
            - ACTIVE
            - DELETED
            - DEPRECATED
            - OBSOLETE
          type: string
      type: object
    Disk:
      description: >-
        Represents a Persistent Disk resource.


        Persistent disks are required for running your VM instances. Create both boot and non-boot (data) persistent disks. For more information, read Persistent Disks. For more storage options, read Storage options.


        The disks resource represents a zonal persistent disk. For more information, read Zonal persistent disks.


        The regionDisks resource represents a regional persistent disk. For more information, read  Regional resources. (== resource_for beta.disks ==) (== resource_for v1.disks ==) (== resource_for v1.regionDisks ==) (== resource_for beta.regionDisks ==)
      properties:
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        diskEncryptionKey:
          $ref: "#/components/schemas/CustomerEncryptionKey"
        guestOsFeatures:
          description: A list of features to enable on the guest operating system.
            Applicable only for bootable images. Read  Enabling guest operating
            system features to see a list of available options.
          items:
            $ref: "#/components/schemas/GuestOsFeature"
          type: array
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#disk
          description: "[Output Only] Type of the resource. Always compute#disk for disks."
          type: string
        labelFingerprint:
          description: >-
            A fingerprint for the labels being applied to this disk, which is
            essentially a hash of the labels set used for optimistic locking.
            The fingerprint is initially generated by Compute Engine and changes
            after every request to modify or update labels. You must always
            provide an up-to-date fingerprint hash in order to update or change
            labels, otherwise the request will fail with error 412
            conditionNotMet.


            To see the latest fingerprint, make a get() request to retrieve a disk.
          format: byte
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels to apply to this disk. These can be later modified by the
            setLabels method.
          type: object
        lastAttachTimestamp:
          description: "[Output Only] Last attach timestamp in RFC3339 text format."
          type: string
        lastDetachTimestamp:
          description: "[Output Only] Last detach timestamp in RFC3339 text format."
          type: string
        licenseCodes:
          description: Integer license codes indicating which licenses are attached to this
            disk.
          items:
            format: int64
            type: string
          type: array
        licenses:
          description: A list of publicly visible licenses. Reserved for Google's use.
          items:
            type: string
          type: array
        name:
          description: Name of the resource. Provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        options:
          description: Internal use only.
          type: string
        physicalBlockSizeBytes:
          description: Physical block size of the persistent disk, in bytes. If not present
            in a request, a default value is used. Currently supported sizes are
            4096 and 16384, other sizes may be added in the future. If an
            unsupported value is requested, the error message will list the
            supported values for the caller's project.
          format: int64
          type: string
        region:
          description: "[Output Only] URL of the region where the disk resides. Only
            applicable for regional resources. You must specify this field as
            part of the HTTP request URL. It is not settable as a field in the
            request body."
          type: string
        replicaZones:
          description: URLs of the zones where the disk should be replicated to. Only
            applicable for regional resources.
          items:
            type: string
          type: array
        resourcePolicies:
          description: Resource policies applied to this disk for automatic snapshot
            creations.
          items:
            type: string
          type: array
        selfLink:
          description: "[Output Only] Server-defined fully-qualified URL for this resource."
          type: string
        sizeGb:
          description: >-
            Size of the persistent disk, specified in GB. You can specify this
            field when creating a persistent disk using the sourceImage or
            sourceSnapshot parameter, or specify it alone to create an empty
            persistent disk.


            If you specify this field along with sourceImage or sourceSnapshot, the value of sizeGb must not be less than the size of the sourceImage or the size of the snapshot. Acceptable values are 1 to 65536, inclusive.
          format: int64
          type: string
        sourceImage:
          description: >-
            The source image used to create this disk. If the source image is
            deleted, this field will not be set.


            To create a disk with one of the public operating system images, specify the image by its family name. For example, specify family/debian-9 to use the latest Debian 9 image:

            projects/debian-cloud/global/images/family/debian-9



            Alternatively, use a specific version of a public operating system image:

            projects/debian-cloud/global/images/debian-9-stretch-vYYYYMMDD



            To create a disk with a custom image that you created, specify the image name in the following format:

            global/images/my-custom-image



            You can also specify a custom image by its image family, which returns the latest version of the image in that family. Replace the image name with family/family-name:

            global/images/family/my-image-family
          type: string
        sourceImageEncryptionKey:
          $ref: "#/components/schemas/CustomerEncryptionKey"
        sourceImageId:
          description: "[Output Only] The ID value of the image used to create this disk.
            This value identifies the exact image that was used to create this
            persistent disk. For example, if you created the persistent disk
            from an image that was later deleted and recreated under the same
            name, the source image ID would identify the exact version of the
            image that was used."
          type: string
        sourceSnapshot:
          description: >-
            The source snapshot used to create this disk. You can provide this
            as a partial or full URL to the resource. For example, the following
            are valid values:  

            - https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot 

            - projects/project/global/snapshots/snapshot 

            - global/snapshots/snapshot
          type: string
        sourceSnapshotEncryptionKey:
          $ref: "#/components/schemas/CustomerEncryptionKey"
        sourceSnapshotId:
          description: "[Output Only] The unique ID of the snapshot used to create this
            disk. This value identifies the exact snapshot that was used to
            create this persistent disk. For example, if you created the
            persistent disk from a snapshot that was later deleted and recreated
            under the same name, the source snapshot ID would identify the exact
            version of the snapshot that was used."
          type: string
        status:
          description: "[Output Only] The status of disk creation. CREATING: Disk is
            provisioning. RESTORING: Source data is being copied into the disk.
            FAILED: Disk creation failed. READY: Disk is ready for use.
            DELETING: Disk is deleting."
          enum:
            - CREATING
            - DELETING
            - FAILED
            - READY
            - RESTORING
          type: string
        type:
          description: "URL of the disk type resource describing which disk type to use to
            create the disk. Provide this when creating the disk. For example:
            projects/project/zones/zone/diskTypes/pd-standard or pd-ssd"
          type: string
        users:
          description: "[Output Only] Links to the users of the disk (attached instances)
            in form: projects/project/zones/zone/instances/instance"
          items:
            type: string
          type: array
        zone:
          description: "[Output Only] URL of the zone where the disk resides. You must
            specify this field as part of the HTTP request URL. It is not
            settable as a field in the request body."
          type: string
      type: object
    DiskAggregatedList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/DisksScopedList"
          description: A list of DisksScopedList resources.
          type: object
        kind:
          default: compute#diskAggregatedList
          description: "[Output Only] Type of resource. Always compute#diskAggregatedList
            for aggregated lists of persistent disks."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    DiskInstantiationConfig:
      description: A specification of the desired way to instantiate a disk in the instance
        template when its created from a source instance.
      properties:
        autoDelete:
          description: Specifies whether the disk will be auto-deleted when the instance is
            deleted (but not when the disk is detached from the instance).
          type: boolean
        customImage:
          description: The custom source image to be used to restore this disk when
            instantiating this instance template.
          type: string
        deviceName:
          description: Specifies the device name of the disk to which the configurations
            apply to.
          type: string
        instantiateFrom:
          description: >-
            Specifies whether to include the disk and what image to use.
            Possible values are:  

            - source-image: to use the same image that was used to create the source instance's corresponding disk. Applicable to the boot disk and additional read-write disks. 

            - source-image-family: to use the same image family that was used to create the source instance's corresponding disk. Applicable to the boot disk and additional read-write disks. 

            - custom-image: to use a user-provided image url for disk creation. Applicable to the boot disk and additional read-write disks. 

            - attach-read-only: to attach a read-only disk. Applicable to read-only disks. 

            - do-not-include: to exclude a disk from the template. Applicable to additional read-write disks, local SSDs, and read-only disks.
          enum:
            - ATTACH_READ_ONLY
            - BLANK
            - CUSTOM_IMAGE
            - DEFAULT
            - DO_NOT_INCLUDE
            - SOURCE_IMAGE
            - SOURCE_IMAGE_FAMILY
          type: string
      type: object
    DiskList:
      description: A list of Disk resources.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of Disk resources.
          items:
            $ref: "#/components/schemas/Disk"
          type: array
        kind:
          default: compute#diskList
          description: "[Output Only] Type of resource. Always compute#diskList for lists
            of disks."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    DiskMoveRequest:
      properties:
        destinationZone:
          description: >-
            The URL of the destination zone to move the disk. This can be a full
            or partial URL. For example, the following are all valid URLs to a
            zone:  

            - https://www.googleapis.com/compute/v1/projects/project/zones/zone 

            - projects/project/zones/zone 

            - zones/zone
          type: string
        targetDisk:
          description: >-
            The URL of the target disk to move. This can be a full or partial
            URL. For example, the following are all valid URLs to a disk:  

            - https://www.googleapis.com/compute/v1/projects/project/zones/zone/disks/disk 

            - projects/project/zones/zone/disks/disk 

            - zones/zone/disks/disk
          type: string
      type: object
    DiskType:
      description: >-
        Represents a Disk Type resource.


        You can choose from a variety of disk types based on your needs. For more information, read Storage options.


        The diskTypes resource represents disk types for a zonal persistent disk. For more information, read Zonal persistent disks.


        The regionDiskTypes resource represents disk types for a regional persistent disk. For more information, read Regional persistent disks. (== resource_for beta.diskTypes ==) (== resource_for v1.diskTypes ==) (== resource_for v1.regionDiskTypes ==) (== resource_for beta.regionDiskTypes ==)
      properties:
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        defaultDiskSizeGb:
          description: "[Output Only] Server-defined default disk size in GB."
          format: int64
          type: string
        deprecated:
          $ref: "#/components/schemas/DeprecationStatus"
        description:
          description: "[Output Only] An optional description of this resource."
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#diskType
          description: "[Output Only] Type of the resource. Always compute#diskType for
            disk types."
          type: string
        name:
          description: "[Output Only] Name of the resource."
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        region:
          description: "[Output Only] URL of the region where the disk type resides. Only
            applicable for regional resources. You must specify this field as
            part of the HTTP request URL. It is not settable as a field in the
            request body."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        validDiskSize:
          description: '[Output Only] An optional textual description of the valid disk
            size, such as "10GB-10TB".'
          type: string
        zone:
          description: "[Output Only] URL of the zone where the disk type resides. You must
            specify this field as part of the HTTP request URL. It is not
            settable as a field in the request body."
          type: string
      type: object
    DiskTypeAggregatedList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/DiskTypesScopedList"
          description: A list of DiskTypesScopedList resources.
          type: object
        kind:
          default: compute#diskTypeAggregatedList
          description: "[Output Only] Type of resource. Always
            compute#diskTypeAggregatedList."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    DiskTypeList:
      description: Contains a list of disk types.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of DiskType resources.
          items:
            $ref: "#/components/schemas/DiskType"
          type: array
        kind:
          default: compute#diskTypeList
          description: "[Output Only] Type of resource. Always compute#diskTypeList for
            disk types."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    DiskTypesScopedList:
      properties:
        diskTypes:
          description: "[Output Only] A list of disk types contained in this scope."
          items:
            $ref: "#/components/schemas/DiskType"
          type: array
        warning:
          description: "[Output Only] Informational warning which replaces the list of disk
            types when the list is empty."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    DisksAddResourcePoliciesRequest:
      properties:
        resourcePolicies:
          description: Resource policies to be added to this disk.
          items:
            type: string
          type: array
      type: object
    DisksRemoveResourcePoliciesRequest:
      properties:
        resourcePolicies:
          description: Resource policies to be removed from this disk.
          items:
            type: string
          type: array
      type: object
    DisksResizeRequest:
      properties:
        sizeGb:
          description: The new size of the persistent disk, which is specified in GB.
          format: int64
          type: string
      type: object
    DisksScopedList:
      properties:
        disks:
          description: "[Output Only] A list of disks contained in this scope."
          items:
            $ref: "#/components/schemas/Disk"
          type: array
        warning:
          description: "[Output Only] Informational warning which replaces the list of
            disks when the list is empty."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    DisplayDevice:
      description: A set of Display Device options
      properties:
        enableDisplay:
          description: Defines whether the instance has Display enabled.
          type: boolean
      type: object
    DistributionPolicy:
      properties:
        zones:
          description: Zones where the regional managed instance group will create and
            manage instances.
          items:
            $ref: "#/components/schemas/DistributionPolicyZoneConfiguration"
          type: array
      type: object
    DistributionPolicyZoneConfiguration:
      properties:
        zone:
          description: The URL of the zone. The zone must exist in the region where the
            managed instance group is located.
          type: string
      type: object
    Duration:
      description: A Duration represents a fixed-length span of time represented as a count
        of seconds and fractions of seconds at nanosecond resolution. It is
        independent of any calendar and concepts like "day" or "month". Range is
        approximately 10,000 years.
      properties:
        nanos:
          description: Span of time that's a fraction of a second at nanosecond resolution.
            Durations less than one second are represented with a 0 `seconds`
            field and a positive `nanos` field. Must be from 0 to 999,999,999
            inclusive.
          format: int32
          type: integer
        seconds:
          description: "Span of time at a resolution of a second. Must be from 0 to
            315,576,000,000 inclusive. Note: these bounds are computed from: 60
            sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
          format: int64
          type: string
      type: object
    Expr:
      description: >-
        Represents an expression text. Example:


        title: "User account presence" description: "Determines whether the request has a user account" expression: "size(request.user) > 0"
      properties:
        description:
          description: An optional description of the expression. This is a longer text
            which describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: >-
            Textual representation of an expression in Common Expression
            Language syntax.


            The application context of the containing message determines which well-known feature set of CEL is supported.
          type: string
        location:
          description: An optional string indicating the location of the expression for
            error reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: An optional title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
      type: object
    ExternalVpnGateway:
      description: External VPN gateway is the on-premises VPN gateway(s) or another cloud
        provider?s VPN gateway that connects to your Google Cloud VPN gateway.
        To create a highly available VPN from Google Cloud to your on-premises
        side or another Cloud provider's VPN gateway, you must create a external
        VPN gateway resource in GCP, which provides the information to GCP about
        your external VPN gateway.
      properties:
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        interfaces:
          description: List of interfaces for this external VPN gateway.
          items:
            $ref: "#/components/schemas/ExternalVpnGatewayInterface"
          type: array
        kind:
          default: compute#externalVpnGateway
          description: "[Output Only] Type of the resource. Always
            compute#externalVpnGateway for externalVpnGateways."
          type: string
        labelFingerprint:
          description: >-
            A fingerprint for the labels being applied to this
            ExternalVpnGateway, which is essentially a hash of the labels set
            used for optimistic locking. The fingerprint is initially generated
            by Compute Engine and changes after every request to modify or
            update labels. You must always provide an up-to-date fingerprint
            hash in order to update or change labels, otherwise the request will
            fail with error 412 conditionNotMet.


            To see the latest fingerprint, make a get() request to retrieve an ExternalVpnGateway.
          format: byte
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels to apply to this ExternalVpnGateway resource. These can be
            later modified by the setLabels method. Each label key/value must
            comply with RFC1035. Label values may be empty.
          type: object
        name:
          description: Name of the resource. Provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        redundancyType:
          description: Indicates the user-supplied redundancy type of this external VPN
            gateway.
          enum:
            - FOUR_IPS_REDUNDANCY
            - SINGLE_IP_INTERNALLY_REDUNDANT
            - TWO_IPS_REDUNDANCY
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
      type: object
    ExternalVpnGatewayInterface:
      description: The interface for the external VPN gateway.
      properties:
        id:
          description: "The numeric ID of this interface. The allowed input values for this
            id for different redundancy types of external VPN gateway:
            SINGLE_IP_INTERNALLY_REDUNDANT - 0 TWO_IPS_REDUNDANCY - 0, 1
            FOUR_IPS_REDUNDANCY - 0, 1, 2, 3"
          format: uint32
          type: integer
        ipAddress:
          description: IP address of the interface in the external VPN gateway. Only IPv4
            is supported. This IP address can be either from your on-premise
            gateway or another Cloud provider?s VPN gateway, it cannot be an IP
            address from Google Compute Engine.
          type: string
      type: object
    ExternalVpnGatewayList:
      description: Response to the list request, and contains a list of externalVpnGateways.
      properties:
        etag:
          type: string
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of ExternalVpnGateway resources.
          items:
            $ref: "#/components/schemas/ExternalVpnGateway"
          type: array
        kind:
          default: compute#externalVpnGatewayList
          description: "[Output Only] Type of resource. Always
            compute#externalVpnGatewayList  for lists of externalVpnGateways."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    Firewall:
      description: >-
        Represents a Firewall Rule resource.


        Firewall rules allow or deny ingress traffic to, and egress traffic from your instances. For more information, read Firewall rules.
      properties:
        allowed:
          description: The list of ALLOW rules specified by this firewall. Each rule
            specifies a protocol and port-range tuple that describes a permitted
            connection.
          items:
            properties:
              IPProtocol:
                description: The IP protocol to which this rule applies. The protocol type
                  is required when creating a firewall rule. This value can
                  either be one of the following well known protocol strings
                  (tcp, udp, icmp, esp, ah, ipip, sctp) or the IP protocol
                  number.
                type: string
              ports:
                description: >-
                  An optional list of ports to which this rule applies. This
                  field is only applicable for the UDP or TCP protocol. Each
                  entry must be either an integer or a range. If not specified,
                  this rule applies to connections through any port.


                  Example inputs include: ["22"], ["80","443"], and ["12345-12349"].
                items:
                  type: string
                type: array
            type: object
          type: array
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        denied:
          description: The list of DENY rules specified by this firewall. Each rule
            specifies a protocol and port-range tuple that describes a denied
            connection.
          items:
            properties:
              IPProtocol:
                description: The IP protocol to which this rule applies. The protocol type
                  is required when creating a firewall rule. This value can
                  either be one of the following well known protocol strings
                  (tcp, udp, icmp, esp, ah, ipip, sctp) or the IP protocol
                  number.
                type: string
              ports:
                description: >-
                  An optional list of ports to which this rule applies. This
                  field is only applicable for the UDP or TCP protocol. Each
                  entry must be either an integer or a range. If not specified,
                  this rule applies to connections through any port.


                  Example inputs include: ["22"], ["80","443"], and ["12345-12349"].
                items:
                  type: string
                type: array
            type: object
          type: array
        description:
          description: An optional description of this resource. Provide this field when
            you create the resource.
          type: string
        destinationRanges:
          description: If destination ranges are specified, the firewall rule applies only
            to traffic that has destination IP address in these ranges. These
            ranges must be expressed in CIDR format. Only IPv4 is supported.
          items:
            type: string
          type: array
        direction:
          description: Direction of traffic to which this firewall applies, either
            `INGRESS` or `EGRESS`. The default is `INGRESS`. For `INGRESS`
            traffic, you cannot specify the destinationRanges field, and for
            `EGRESS` traffic, you cannot specify the sourceRanges or sourceTags
            fields.
          enum:
            - EGRESS
            - INGRESS
          type: string
        disabled:
          description: Denotes whether the firewall rule is disabled. When set to true, the
            firewall rule is not enforced and the network behaves as if it did
            not exist. If this is unspecified, the firewall rule will be
            enabled.
          type: boolean
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#firewall
          description: "[Output Only] Type of the resource. Always compute#firewall for
            firewall rules."
          type: string
        logConfig:
          $ref: "#/components/schemas/FirewallLogConfig"
        name:
          description: Name of the resource; provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?. The first
            character must be a lowercase letter, and all following characters
            (except for the last character) must be a dash, lowercase letter, or
            digit. The last character must be a lowercase letter or digit.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        network:
          description: >-
            URL of the network resource for this firewall rule. If not specified
            when creating a firewall rule, the default network is used:

            global/networks/default

            If you choose to specify this field, you can specify the network as a full or partial URL. For example, the following are all valid URLs:  

            - https://www.googleapis.com/compute/v1/projects/myproject/global/networks/my-network 

            - projects/myproject/global/networks/my-network 

            - global/networks/default
          type: string
        priority:
          description: Priority for this rule. This is an integer between `0` and `65535`,
            both inclusive. The default value is `1000`. Relative priorities
            determine which rule takes effect if multiple rules apply. Lower
            values indicate higher priority. For example, a rule with priority
            `0` has higher precedence than a rule with priority `1`. DENY rules
            take precedence over ALLOW rules if they have equal priority. Note
            that VPC networks have implied rules with a priority of `65535`. To
            avoid conflicts with the implied rules, use a priority number less
            than `65535`.
          format: int32
          type: integer
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        sourceRanges:
          description: If source ranges are specified, the firewall rule applies only to
            traffic that has a source IP address in these ranges. These ranges
            must be expressed in CIDR format. One or both of sourceRanges and
            sourceTags may be set. If both fields are set, the rule applies to
            traffic that has a source IP address within sourceRanges OR a source
            IP from a resource with a matching tag listed in the sourceTags
            field. The connection does not need to match both fields for the
            rule to apply. Only IPv4 is supported.
          items:
            type: string
          type: array
        sourceServiceAccounts:
          description: If source service accounts are specified, the firewall rules apply
            only to traffic originating from an instance with a service account
            in this list. Source service accounts cannot be used to control
            traffic to an instance's external IP address because service
            accounts are associated with an instance, not an IP address.
            sourceRanges can be set at the same time as sourceServiceAccounts.
            If both are set, the firewall applies to traffic that has a source
            IP address within the sourceRanges OR a source IP that belongs to an
            instance with service account listed in sourceServiceAccount. The
            connection does not need to match both fields for the firewall to
            apply. sourceServiceAccounts cannot be used at the same time as
            sourceTags or targetTags.
          items:
            type: string
          type: array
        sourceTags:
          description: If source tags are specified, the firewall rule applies only to
            traffic with source IPs that match the primary network interfaces of
            VM instances that have the tag and are in the same VPC network.
            Source tags cannot be used to control traffic to an instance's
            external IP address, it only applies to traffic between instances in
            the same virtual network. Because tags are associated with
            instances, not IP addresses. One or both of sourceRanges and
            sourceTags may be set. If both fields are set, the firewall applies
            to traffic that has a source IP address within sourceRanges OR a
            source IP from a resource with a matching tag listed in the
            sourceTags field. The connection does not need to match both fields
            for the firewall to apply.
          items:
            type: string
          type: array
        targetServiceAccounts:
          description: A list of service accounts indicating sets of instances located in
            the network that may make network connections as specified in
            allowed[]. targetServiceAccounts cannot be used at the same time as
            targetTags or sourceTags. If neither targetServiceAccounts nor
            targetTags are specified, the firewall rule applies to all instances
            on the specified network.
          items:
            type: string
          type: array
        targetTags:
          description: A list of tags that controls which instances the firewall rule
            applies to. If targetTags are specified, then the firewall rule
            applies only to instances in the VPC network that have one of those
            tags. If no targetTags are specified, the firewall rule applies to
            all instances on the specified network.
          items:
            type: string
          type: array
      type: object
    FirewallList:
      description: Contains a list of firewalls.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of Firewall resources.
          items:
            $ref: "#/components/schemas/Firewall"
          type: array
        kind:
          default: compute#firewallList
          description: "[Output Only] Type of resource. Always compute#firewallList for
            lists of firewalls."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    FirewallLogConfig:
      description: The available logging options for a firewall rule.
      properties:
        enable:
          description: This field denotes whether to enable logging for a particular
            firewall rule.
          type: boolean
      type: object
    FixedOrPercent:
      description: Encapsulates numeric value that can be either absolute or relative.
      properties:
        calculated:
          description: >-
            [Output Only] Absolute value of VM instances calculated based on the
            specific mode.

             
            - If the value is fixed, then the calculated value is equal to the fixed value. 

            - If the value is a percent, then the calculated value is percent/100 * targetSize. For example, the calculated value of a 80% of a managed instance group with 150 instances would be (80/100 * 150) = 120 VM instances. If there is a remainder, the number is rounded up.
          format: int32
          type: integer
        fixed:
          description: Specifies a fixed number of VM instances. This must be a positive
            integer.
          format: int32
          type: integer
        percent:
          description: Specifies a percentage of instances between 0 to 100%, inclusive.
            For example, specify 80 for 80%.
          format: int32
          type: integer
      type: object
    ForwardingRule:
      description: >-
        Represents a Forwarding Rule resource.




        A forwardingRules resource represents a regional forwarding rule.


        Regional external forwarding rules can reference any of the following resources:
         
        - A target instance 

        - A Cloud VPN Classic gateway (targetVpnGateway),  

        - A target pool for a Network Load Balancer 

        - A global target HTTP(S) proxy for an HTTP(S) load balancer using Standard Tier 

        - A target SSL proxy for a SSL Proxy load balancer using Standard Tier 

        - A target TCP proxy for a TCP Proxy load balancer using Standard Tier.  


        Regional internal forwarding rules can reference the backend service of an internal TCP/UDP load balancer.


        For regional internal forwarding rules, the following applies:  

        - If the loadBalancingScheme for the load balancer is INTERNAL, then the forwarding rule references a regional internal backend service. 

        - If the loadBalancingScheme for the load balancer is INTERNAL_MANAGED, then the forwarding rule must reference a regional target HTTP(S) proxy.  


        For more information, read Using Forwarding rules.


        A globalForwardingRules resource represents a global forwarding rule.


        Global forwarding rules are only used by load balancers that use Premium Tier. (== resource_for beta.forwardingRules ==) (== resource_for v1.forwardingRules ==) (== resource_for beta.globalForwardingRules ==) (== resource_for v1.globalForwardingRules ==) (== resource_for beta.regionForwardingRules ==) (== resource_for v1.regionForwardingRules ==)
      properties:
        IPAddress:
          description: >-
            IP address that this forwarding rule serves. When a client sends
            traffic to this IP address, the forwarding rule directs the traffic
            to the target that you specify in the forwarding rule.


            If you don't specify a reserved IP address, an ephemeral IP address is assigned. Methods for specifying an IP address:


            * IPv4 dotted decimal, as in `100.1.2.3` * Full URL, as in https://www.googleapis.com/compute/v1/projects/project_id/regions/region/addresses/address-name * Partial URL or by name, as in: * projects/project_id/regions/region/addresses/address-name * regions/region/addresses/address-name * global/addresses/address-name * address-name 


            The loadBalancingScheme and the forwarding rule's target determine the type of IP address that you can use. For detailed information, refer to [IP address specifications](/load-balancing/docs/forwarding-rule-concepts#ip_address_specifications).
          type: string
        IPProtocol:
          description: >-
            The IP protocol to which this rule applies. Valid options are TCP,
            UDP, ESP, AH, SCTP or ICMP.


            When the load balancing scheme is INTERNAL, only TCP and UDP are valid. When the load balancing scheme is INTERNAL_SELF_MANAGED, only TCPis valid.
          enum:
            - AH
            - ESP
            - ICMP
            - SCTP
            - TCP
            - UDP
          type: string
        allPorts:
          description: >-
            This field is used along with the backend_service field for internal
            load balancing or with the target field for internal TargetInstance.
            This field cannot be used with port or portRange fields.


            When the load balancing scheme is INTERNAL and protocol is TCP/UDP, specify this field to allow packets addressed to any ports will be forwarded to the backends configured with this forwarding rule.
          type: boolean
        backendService:
          description: >-
            This field is only used for INTERNAL load balancing.


            For internal load balancing, this field identifies the BackendService resource to receive the matched traffic.
          type: string
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        ipVersion:
          description: The IP Version that will be used by this forwarding rule. Valid
            options are IPV4 or IPV6. This can only be specified for an external
            global forwarding rule.
          enum:
            - IPV4
            - IPV6
            - UNSPECIFIED_VERSION
          type: string
        kind:
          default: compute#forwardingRule
          description: "[Output Only] Type of the resource. Always compute#forwardingRule
            for Forwarding Rule resources."
          type: string
        loadBalancingScheme:
          description: "This signifies what the ForwardingRule will be used for and can
            only take the following values: INTERNAL, INTERNAL_SELF_MANAGED,
            EXTERNAL. The value of INTERNAL means that this will be used for
            Internal Network Load Balancing (TCP, UDP). The value of
            INTERNAL_SELF_MANAGED means that this will be used for Internal
            Global HTTP(S) LB. The value of EXTERNAL means that this will be
            used for External Load Balancing (HTTP(S) LB, External TCP/UDP LB,
            SSL Proxy)"
          enum:
            - EXTERNAL
            - INTERNAL
            - INTERNAL_MANAGED
            - INTERNAL_SELF_MANAGED
            - INVALID
          type: string
        metadataFilters:
          description: >-
            Opaque filter criteria used by Loadbalancer to restrict routing
            configuration to a limited set xDS compliant clients. In their xDS
            requests to Loadbalancer, xDS clients present node metadata. If a
            match takes place, the relevant routing configuration is made
            available to those proxies.

            For each metadataFilter in this list, if its filterMatchCriteria is set to MATCH_ANY, at least one of the filterLabels must match the corresponding label provided in the metadata. If its filterMatchCriteria is set to MATCH_ALL, then all of its filterLabels must match with corresponding labels in the provided metadata.

            metadataFilters specified here can be overridden by those specified in the UrlMap that this ForwardingRule references.

            metadataFilters only applies to Loadbalancers that have their loadBalancingScheme set to INTERNAL_SELF_MANAGED.
          items:
            $ref: "#/components/schemas/MetadataFilter"
          type: array
        name:
          description: Name of the resource; provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        network:
          description: >-
            This field is not used for external load balancing.


            For INTERNAL and INTERNAL_SELF_MANAGED load balancing, this field identifies the network that the load balanced IP should belong to for this Forwarding Rule. If this field is not specified, the default network will be used.
          type: string
        networkTier:
          description: >-
            This signifies the networking tier used for configuring this load
            balancer and can only take the following values: PREMIUM , STANDARD.


            For regional ForwardingRule, the valid values are PREMIUM and STANDARD. For GlobalForwardingRule, the valid value is PREMIUM.


            If this field is not specified, it is assumed to be PREMIUM. If IPAddress is specified, this value must be equal to the networkTier of the Address.
          enum:
            - PREMIUM
            - STANDARD
          type: string
        portRange:
          description: |-
            This field is deprecated. See the port
            field.
          type: string
        ports:
          description: >-
            List of comma-separated ports. The forwarding rule forwards packets
            with matching destination ports. If the forwarding rule's
            loadBalancingScheme is EXTERNAL, and the forwarding rule references
            a target pool, specifying ports is optional. You can specify an
            unlimited number of ports, but they must be contiguous. If you omit
            ports, GCP forwards traffic on any port of the forwarding rule's
            protocol.


            If the forwarding rule's loadBalancingScheme is EXTERNAL, and the forwarding rule references a target HTTP proxy, target HTTPS proxy, target TCP proxy, target SSL proxy, or target VPN gateway, you must specify ports using the following constraints:

             
            - TargetHttpProxy: 80, 8080 

            - TargetHttpsProxy: 443 

            - TargetTcpProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995, 1688, 1883, 5222 

            - TargetSslProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995, 1688, 1883, 5222 

            - TargetVpnGateway: 500, 4500  


            If the forwarding rule's loadBalancingScheme is INTERNAL, you must specify ports in one of the following ways:


            * A list of up to five ports, which can be non-contiguous * Keyword ALL, which causes the forwarding rule to forward traffic on any port of the forwarding rule's protocol.


            The ports field is used along with the target field for TargetHttpProxy, TargetHttpsProxy, TargetSslProxy, TargetTcpProxy, TargetVpnGateway, TargetPool, TargetInstance.


            Applicable only when IPProtocol is TCP, UDP, or SCTP. Forwarding rules with the same [IPAddress, IPProtocol] pair must have disjoint port ranges.
          items:
            type: string
          type: array
        region:
          description: "[Output Only] URL of the region where the regional forwarding rule
            resides. This field is not applicable to global forwarding rules.
            You must specify this field as part of the HTTP request URL. It is
            not settable as a field in the request body."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        serviceLabel:
          description: >-
            An optional prefix to the service name for this Forwarding Rule. If
            specified, the prefix is the first label of the fully qualified
            service name.


            The label must be 1-63 characters long, and comply with RFC1035. Specifically, the label must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.


            This field is only used for internal load balancing.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        serviceName:
          description: >-
            [Output Only] The internal fully qualified service name for this
            Forwarding Rule.


            This field is only used for internal load balancing.
          type: string
        subnetwork:
          description: >-
            This field is only used for INTERNAL load balancing.


            For internal load balancing, this field identifies the subnetwork that the load balanced IP should belong to for this Forwarding Rule.


            If the network specified is in auto subnet mode, this field is optional. However, if the network is in custom subnet mode, a subnetwork must be specified.
          type: string
        target:
          description: The URL of the target resource to receive the matched traffic. For
            regional forwarding rules, this target must live in the same region
            as the forwarding rule. For global forwarding rules, this target
            must be a global load balancing resource. The forwarded traffic must
            be of a type appropriate to the target object. For
            INTERNAL_SELF_MANAGED load balancing, only HTTP and HTTPS targets
            are valid.
          type: string
      type: object
    ForwardingRuleAggregatedList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/ForwardingRulesScopedList"
          description: A list of ForwardingRulesScopedList resources.
          type: object
        kind:
          default: compute#forwardingRuleAggregatedList
          description: "[Output Only] Type of resource. Always
            compute#forwardingRuleAggregatedList for lists of forwarding rules."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    ForwardingRuleList:
      description: Contains a list of ForwardingRule resources.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of ForwardingRule resources.
          items:
            $ref: "#/components/schemas/ForwardingRule"
          type: array
        kind:
          default: compute#forwardingRuleList
          description: Type of resource.
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    ForwardingRuleReference:
      properties:
        forwardingRule:
          type: string
      type: object
    ForwardingRulesScopedList:
      properties:
        forwardingRules:
          description: A list of forwarding rules contained in this scope.
          items:
            $ref: "#/components/schemas/ForwardingRule"
          type: array
        warning:
          description: Informational warning which replaces the list of forwarding rules
            when the list is empty.
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    GlobalSetLabelsRequest:
      properties:
        labelFingerprint:
          description: The fingerprint of the previous set of labels for this resource,
            used to detect conflicts. The fingerprint is initially generated by
            Compute Engine and changes after every request to modify or update
            labels. You must always provide an up-to-date fingerprint hash when
            updating or changing labels, otherwise the request will fail with
            error 412 conditionNotMet. Make a get() request to the resource to
            get the latest fingerprint.
          format: byte
          type: string
        labels:
          additionalProperties:
            type: string
          description: 'A list of labels to apply for this resource. Each label key & value
            must comply with RFC1035. Specifically, the name must be 1-63
            characters long and match the regular expression
            `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be
            a lowercase letter, and all following characters must be a dash,
            lowercase letter, or digit, except the last character, which cannot
            be a dash. For example, "webserver-frontend": "images". A label
            value can also be empty (e.g. "my-label": "").'
          type: object
      type: object
    GlobalSetPolicyRequest:
      properties:
        bindings:
          description: Flatten Policy to create a backward compatible wire-format.
            Deprecated. Use 'policy' to specify bindings.
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        etag:
          description: Flatten Policy to create a backward compatible wire-format.
            Deprecated. Use 'policy' to specify the etag.
          format: byte
          type: string
        policy:
          $ref: "#/components/schemas/Policy"
      type: object
    GuestAttributes:
      description: A guest attributes entry.
      properties:
        kind:
          default: compute#guestAttributes
          description: "[Output Only] Type of the resource. Always compute#guestAttributes
            for guest attributes entry."
          type: string
        queryPath:
          description: The path to be queried. This can be the default namespace ('/') or a
            nested namespace ('//') or a specified key ('//')
          type: string
        queryValue:
          $ref: "#/components/schemas/GuestAttributesValue"
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        variableKey:
          description: The key to search for.
          type: string
        variableValue:
          description: "[Output Only] The value found for the requested key."
          type: string
      type: object
    GuestAttributesEntry:
      description: A guest attributes namespace/key/value entry.
      properties:
        key:
          description: Key for the guest attribute entry.
          type: string
        namespace:
          description: Namespace for the guest attribute entry.
          type: string
        value:
          description: Value for the guest attribute entry.
          type: string
      type: object
    GuestAttributesValue:
      description: Array of guest attribute namespace/key/value tuples.
      properties:
        items:
          items:
            $ref: "#/components/schemas/GuestAttributesEntry"
          type: array
      type: object
    GuestOsFeature:
      description: Guest OS features.
      properties:
        type:
          description: The ID of a supported feature. Read  Enabling guest operating system
            features to see a list of available options.
          enum:
            - FEATURE_TYPE_UNSPECIFIED
            - MULTI_IP_SUBNET
            - SECURE_BOOT
            - UEFI_COMPATIBLE
            - VIRTIO_SCSI_MULTIQUEUE
            - WINDOWS
          type: string
      type: object
    HTTP2HealthCheck:
      properties:
        host:
          description: The value of the host header in the HTTP/2 health check request. If
            left empty (default value), the IP on behalf of which this health
            check is performed will be used.
          type: string
        port:
          description: The TCP port number for the health check request. The default value
            is 443. Valid values are 1 through 65535.
          format: int32
          type: integer
        portName:
          description: Port name as defined in InstanceGroup#NamedPort#name. If both port
            and port_name are defined, port takes precedence.
          type: string
        portSpecification:
          description: >-
            Specifies how port is selected for health checking, can be one of
            following values:

            USE_FIXED_PORT: The port number in

            port

            is used for health checking.

            USE_NAMED_PORT: The

            portName

            is used for health checking.

            USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.



            If not specified, HTTP2 health check follows behavior specified in

            port

            and

            portName

            fields.
          enum:
            - USE_FIXED_PORT
            - USE_NAMED_PORT
            - USE_SERVING_PORT
          type: string
        proxyHeader:
          description: Specifies the type of proxy header to append before sending data to
            the backend, either NONE or PROXY_V1. The default is NONE.
          enum:
            - NONE
            - PROXY_V1
          type: string
        requestPath:
          description: The request path of the HTTP/2 health check request. The default
            value is /.
          type: string
        response:
          description: The string to match anywhere in the first 1024 bytes of the response
            body. If left empty (the default value), the status code determines
            health. The response data can only be ASCII.
          type: string
      type: object
    HTTPHealthCheck:
      properties:
        host:
          description: The value of the host header in the HTTP health check request. If
            left empty (default value), the IP on behalf of which this health
            check is performed will be used.
          type: string
        port:
          description: The TCP port number for the health check request. The default value
            is 80. Valid values are 1 through 65535.
          format: int32
          type: integer
        portName:
          description: Port name as defined in InstanceGroup#NamedPort#name. If both port
            and port_name are defined, port takes precedence.
          type: string
        portSpecification:
          description: >-
            Specifies how port is selected for health checking, can be one of
            following values:

            USE_FIXED_PORT: The port number in

            port

            is used for health checking.

            USE_NAMED_PORT: The

            portName

            is used for health checking.

            USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.



            If not specified, HTTP health check follows behavior specified in

            port

            and

            portName

            fields.
          enum:
            - USE_FIXED_PORT
            - USE_NAMED_PORT
            - USE_SERVING_PORT
          type: string
        proxyHeader:
          description: Specifies the type of proxy header to append before sending data to
            the backend, either NONE or PROXY_V1. The default is NONE.
          enum:
            - NONE
            - PROXY_V1
          type: string
        requestPath:
          description: The request path of the HTTP health check request. The default value
            is /.
          type: string
        response:
          description: The string to match anywhere in the first 1024 bytes of the response
            body. If left empty (the default value), the status code determines
            health. The response data can only be ASCII.
          type: string
      type: object
    HTTPSHealthCheck:
      properties:
        host:
          description: The value of the host header in the HTTPS health check request. If
            left empty (default value), the IP on behalf of which this health
            check is performed will be used.
          type: string
        port:
          description: The TCP port number for the health check request. The default value
            is 443. Valid values are 1 through 65535.
          format: int32
          type: integer
        portName:
          description: Port name as defined in InstanceGroup#NamedPort#name. If both port
            and port_name are defined, port takes precedence.
          type: string
        portSpecification:
          description: >-
            Specifies how port is selected for health checking, can be one of
            following values:

            USE_FIXED_PORT: The port number in

            port

            is used for health checking.

            USE_NAMED_PORT: The

            portName

            is used for health checking.

            USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.



            If not specified, HTTPS health check follows behavior specified in

            port

            and

            portName

            fields.
          enum:
            - USE_FIXED_PORT
            - USE_NAMED_PORT
            - USE_SERVING_PORT
          type: string
        proxyHeader:
          description: Specifies the type of proxy header to append before sending data to
            the backend, either NONE or PROXY_V1. The default is NONE.
          enum:
            - NONE
            - PROXY_V1
          type: string
        requestPath:
          description: The request path of the HTTPS health check request. The default
            value is /.
          type: string
        response:
          description: The string to match anywhere in the first 1024 bytes of the response
            body. If left empty (the default value), the status code determines
            health. The response data can only be ASCII.
          type: string
      type: object
    HealthCheck:
      description: >-
        Represents a Health Check resource.


        Health checks are used for most GCP load balancers and managed instance group auto-healing. For more information, read Health Check Concepts.


        To perform health checks on network load balancers, you must use either httpHealthChecks or httpsHealthChecks.
      properties:
        checkIntervalSec:
          description: How often (in seconds) to send a health check. The default value is
            5 seconds.
          format: int32
          type: integer
        creationTimestamp:
          description: "[Output Only] Creation timestamp in 3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        healthyThreshold:
          description: A so-far unhealthy instance will be marked healthy after this many
            consecutive successes. The default value is 2.
          format: int32
          type: integer
        http2HealthCheck:
          $ref: "#/components/schemas/HTTP2HealthCheck"
        httpHealthCheck:
          $ref: "#/components/schemas/HTTPHealthCheck"
        httpsHealthCheck:
          $ref: "#/components/schemas/HTTPSHealthCheck"
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#healthCheck
          description: Type of the resource.
          type: string
        name:
          description: Name of the resource. Provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        region:
          description: "[Output Only] Region where the health check resides. Not applicable
            to global health checks."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        sslHealthCheck:
          $ref: "#/components/schemas/SSLHealthCheck"
        tcpHealthCheck:
          $ref: "#/components/schemas/TCPHealthCheck"
        timeoutSec:
          description: How long (in seconds) to wait before claiming failure. The default
            value is 5 seconds. It is invalid for timeoutSec to have greater
            value than checkIntervalSec.
          format: int32
          type: integer
        type:
          description: Specifies the type of the healthCheck, either TCP, SSL, HTTP, HTTPS
            or HTTP2. If not specified, the default is TCP. Exactly one of the
            protocol-specific health check field must be specified, which must
            match type field.
          enum:
            - HTTP
            - HTTP2
            - HTTPS
            - INVALID
            - SSL
            - TCP
          type: string
        unhealthyThreshold:
          description: A so-far healthy instance will be marked unhealthy after this many
            consecutive failures. The default value is 2.
          format: int32
          type: integer
      type: object
    HealthCheckList:
      description: Contains a list of HealthCheck resources.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of HealthCheck resources.
          items:
            $ref: "#/components/schemas/HealthCheck"
          type: array
        kind:
          default: compute#healthCheckList
          description: Type of resource.
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    HealthCheckReference:
      description: >-
        A full or valid partial URL to a health check. For example, the
        following are valid URLs:  

        - https://www.googleapis.com/compute/beta/projects/project-id/global/httpHealthChecks/health-check 

        - projects/project-id/global/httpHealthChecks/health-check 

        - global/httpHealthChecks/health-check
      properties:
        healthCheck:
          type: string
      type: object
    HealthChecksAggregatedList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/HealthChecksScopedList"
          description: A list of HealthChecksScopedList resources.
          type: object
        kind:
          default: compute#healthChecksAggregatedList
          description: Type of resource.
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    HealthChecksScopedList:
      properties:
        healthChecks:
          description: A list of HealthChecks contained in this scope.
          items:
            $ref: "#/components/schemas/HealthCheck"
          type: array
        warning:
          description: Informational warning which replaces the list of backend services
            when the list is empty.
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    HealthStatus:
      properties:
        healthState:
          description: Health state of the instance.
          enum:
            - HEALTHY
            - UNHEALTHY
          type: string
        instance:
          description: URL of the instance resource.
          type: string
        ipAddress:
          description: The IP address represented by this resource.
          type: string
        port:
          description: The port on the instance.
          format: int32
          type: integer
      type: object
    HealthStatusForNetworkEndpoint:
      properties:
        backendService:
          $ref: "#/components/schemas/BackendServiceReference"
        forwardingRule:
          $ref: "#/components/schemas/ForwardingRuleReference"
        healthCheck:
          $ref: "#/components/schemas/HealthCheckReference"
        healthState:
          description: Health state of the network endpoint determined based on the health
            checks configured.
          enum:
            - DRAINING
            - HEALTHY
            - UNHEALTHY
            - UNKNOWN
          type: string
      type: object
    HostRule:
      description: UrlMaps A host-matching rule for a URL. If matched, will use the named
        PathMatcher to select the BackendService.
      properties:
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        hosts:
          description: The list of host patterns to match. They must be valid hostnames,
            except * will match any string of ([a-z0-9-.]*). In that case, *
            must be the first character and must be followed in the pattern by
            either - or ..
          items:
            type: string
          type: array
        pathMatcher:
          description: The name of the PathMatcher to use to match the path portion of the
            URL if the hostRule matches the URL's host portion.
          type: string
      type: object
    HttpFaultAbort:
      description: Specification for how requests are aborted as part of fault injection.
      properties:
        httpStatus:
          description: |-
            The HTTP status code used to abort the request.
            The value must be between 200 and 599 inclusive.
          format: uint32
          type: integer
        percentage:
          description: >-
            The percentage of traffic (connections/operations/requests) which
            will be aborted as part of fault injection.

            The value must be between 0.0 and 100.0 inclusive.
          format: double
          type: number
      type: object
    HttpFaultDelay:
      description: Specifies the delay introduced by Loadbalancer before forwarding the
        request to the backend service as part of fault injection.
      properties:
        fixedDelay:
          $ref: "#/components/schemas/Duration"
        percentage:
          description: >-
            The percentage of traffic (connections/operations/requests) on which
            delay will be introduced as part of fault injection.

            The value must be between 0.0 and 100.0 inclusive.
          format: double
          type: number
      type: object
    HttpFaultInjection:
      description: The specification for fault injection introduced into traffic to test
        the resiliency of clients to backend service failure. As part of fault
        injection, when clients send requests to a backend service, delays can
        be introduced by Loadbalancer on a percentage of requests before sending
        those request to the backend service. Similarly requests from clients
        can be aborted by the Loadbalancer for a percentage of requests.
      properties:
        abort:
          $ref: "#/components/schemas/HttpFaultAbort"
        delay:
          $ref: "#/components/schemas/HttpFaultDelay"
      type: object
    HttpHeaderAction:
      description: The request and response header transformations that take effect before
        the request is passed along to the selected backendService.
      properties:
        requestHeadersToAdd:
          description: Headers to add to a matching request prior to forwarding the request
            to the backendService.
          items:
            $ref: "#/components/schemas/HttpHeaderOption"
          type: array
        requestHeadersToRemove:
          description: A list of header names for headers that need to be removed from the
            request prior to forwarding the request to the backendService.
          items:
            type: string
          type: array
        responseHeadersToAdd:
          description: Headers to add the response prior to sending the response back to
            the client.
          items:
            $ref: "#/components/schemas/HttpHeaderOption"
          type: array
        responseHeadersToRemove:
          description: A list of header names for headers that need to be removed from the
            response prior to sending the response back to the client.
          items:
            type: string
          type: array
      type: object
    HttpHeaderMatch:
      description: matchRule criteria for request header matches.
      properties:
        exactMatch:
          description: >-
            The value should exactly match contents of exactMatch.

            Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
          type: string
        headerName:
          description: >-
            The name of the HTTP header to match.

            For matching against the HTTP request's authority, use a headerMatch with the header name ":authority".

            For matching a request's method, use the headerName ":method".
          type: string
        invertMatch:
          description: >-
            If set to false, the headerMatch is considered a match if the match
            criteria above are met. If set to true, the headerMatch is
            considered a match if the match criteria above are NOT met.

            The default setting is false.
          type: boolean
        prefixMatch:
          description: >-
            The value of the header must start with the contents of prefixMatch.

            Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
          type: string
        presentMatch:
          description: >-
            A header with the contents of headerName must exist. The match takes
            place whether or not the request's header has a value or not.

            Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
          type: boolean
        rangeMatch:
          $ref: "#/components/schemas/Int64RangeMatch"
        regexMatch:
          description: >-
            The value of the header must match the regualar expression specified
            in regexMatch. For regular expression grammar, please
            see:  en.cppreference.com/w/cpp/regex/ecmascript 

            For matching against a port specified in the HTTP request, use a headerMatch with headerName set to PORT and a regular expression that satisfies the RFC2616 Host header's port specifier.

            Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
          type: string
        suffixMatch:
          description: >-
            The value of the header must end with the contents of suffixMatch.

            Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.
          type: string
      type: object
    HttpHeaderOption:
      description: Specification determining how headers are added to requests or responses.
      properties:
        headerName:
          description: The name of the header.
          type: string
        headerValue:
          description: The value of the header to add.
          type: string
        replace:
          description: >-
            If false, headerValue is appended to any values that already exist
            for the header. If true, headerValue is set for the header,
            discarding any values that were set for that header.

            The default value is false.
          type: boolean
      type: object
    HttpHealthCheck:
      description: >-
        Represents a legacy HTTP Health Check resource.


        Legacy health checks are required by network load balancers. For more information, read Health Check Concepts.
      properties:
        checkIntervalSec:
          description: How often (in seconds) to send a health check. The default value is
            5 seconds.
          format: int32
          type: integer
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        healthyThreshold:
          description: A so-far unhealthy instance will be marked healthy after this many
            consecutive successes. The default value is 2.
          format: int32
          type: integer
        host:
          description: The value of the host header in the HTTP health check request. If
            left empty (default value), the public IP on behalf of which this
            health check is performed will be used.
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#httpHealthCheck
          description: "[Output Only] Type of the resource. Always compute#httpHealthCheck
            for HTTP health checks."
          type: string
        name:
          description: Name of the resource. Provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        port:
          description: The TCP port number for the HTTP health check request. The default
            value is 80.
          format: int32
          type: integer
        requestPath:
          description: The request path of the HTTP health check request. The default value
            is /. This field does not support query parameters.
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        timeoutSec:
          description: How long (in seconds) to wait before claiming failure. The default
            value is 5 seconds. It is invalid for timeoutSec to have greater
            value than checkIntervalSec.
          format: int32
          type: integer
        unhealthyThreshold:
          description: A so-far healthy instance will be marked unhealthy after this many
            consecutive failures. The default value is 2.
          format: int32
          type: integer
      type: object
    HttpHealthCheckList:
      description: Contains a list of HttpHealthCheck resources.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of HttpHealthCheck resources.
          items:
            $ref: "#/components/schemas/HttpHealthCheck"
          type: array
        kind:
          default: compute#httpHealthCheckList
          description: Type of resource.
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    HttpQueryParameterMatch:
      description: HttpRouteRuleMatch criteria for a request's query parameter.
      properties:
        exactMatch:
          description: >-
            The queryParameterMatch matches if the value of the parameter
            exactly matches the contents of exactMatch.

            Only one of presentMatch, exactMatch and regexMatch must be set.
          type: string
        name:
          description: The name of the query parameter to match. The query parameter must
            exist in the request, in the absence of which the request match
            fails.
          type: string
        presentMatch:
          description: >-
            Specifies that the queryParameterMatch matches if the request
            contains the query parameter, irrespective of whether the parameter
            has a value or not.

            Only one of presentMatch, exactMatch and regexMatch must be set.
          type: boolean
        regexMatch:
          description: >-
            The queryParameterMatch matches if the value of the parameter
            matches the regular expression specified by regexMatch. For the
            regular expression grammar, please see
            en.cppreference.com/w/cpp/regex/ecmascript 

            Only one of presentMatch, exactMatch and regexMatch must be set.
          type: string
      type: object
    HttpRedirectAction:
      description: Specifies settings for an HTTP redirect.
      properties:
        hostRedirect:
          description: >-
            The host that will be used in the redirect response instead of the
            one that was supplied in the request.

            The value must be between 1 and 255 characters.
          type: string
        httpsRedirect:
          description: >-
            If set to true, the URL scheme in the redirected request is set to
            https. If set to false, the URL scheme of the redirected request
            will remain the same as that of the request.

            This must only be set for UrlMaps used in TargetHttpProxys. Setting this true for TargetHttpsProxy is not permitted.

            The default is set to false.
          type: boolean
        pathRedirect:
          description: >-
            The path that will be used in the redirect response instead of the
            one that was supplied in the request.

            Only one of pathRedirect or prefixRedirect must be specified.

            The value must be between 1 and 1024 characters.
          type: string
        prefixRedirect:
          description: The prefix that replaces the prefixMatch specified in the
            HttpRouteRuleMatch, retaining the remaining portion of the URL
            before redirecting the request.
          type: string
        redirectResponseCode:
          description: >-
            The HTTP Status code to use for this RedirectAction.

            Supported values are:  

            - MOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to 301. 

            - FOUND, which corresponds to 302. 

            - SEE_OTHER which corresponds to 303. 

            - TEMPORARY_REDIRECT, which corresponds to 307. In this case, the request method will be retained. 

            - PERMANENT_REDIRECT, which corresponds to 308. In this case, the request method will be retained.
          enum:
            - FOUND
            - MOVED_PERMANENTLY_DEFAULT
            - PERMANENT_REDIRECT
            - SEE_OTHER
            - TEMPORARY_REDIRECT
          type: string
        stripQuery:
          description: >-
            If set to true, any accompanying query portion of the original URL
            is removed prior to redirecting the request. If set to false, the
            query portion of the original URL is retained.

            The default is set to false.
          type: boolean
      type: object
    HttpRetryPolicy:
      description: The retry policy associates with HttpRouteRule
      properties:
        numRetries:
          description: Specifies the allowed number retries. This number must be > 0.
          format: uint32
          type: integer
        perTryTimeout:
          $ref: "#/components/schemas/Duration"
        retryConditions:
          description: >-
            Specfies one or more conditions when this retry rule applies. Valid
            values are:  

            - 5xx: Loadbalancer will attempt a retry if the backend service responds with any 5xx response code, or if the backend service does not respond at all, example: disconnects, reset, read timeout, connection failure, and refused streams. 

            - gateway-error: Similar to 5xx, but only applies to response codes 502, 503 or 504.

            - 

            - connect-failure: Loadbalancer will retry on failures connecting to backend services, for example due to connection timeouts. 

            - retriable-4xx: Loadbalancer will retry for retriable 4xx response codes. Currently the only retriable error supported is 409. 

            - refused-stream:Loadbalancer will retry if the backend service resets the stream with a REFUSED_STREAM error code. This reset type indicates that it is safe to retry. 

            - cancelledLoadbalancer will retry if the gRPC status code in the response header is set to cancelled 

            - deadline-exceeded: Loadbalancer will retry if the gRPC status code in the response header is set to deadline-exceeded 

            - resource-exhausted: Loadbalancer will retry if the gRPC status code in the response header is set to resource-exhausted 

            - unavailable: Loadbalancer will retry if the gRPC status code in the response header is set to unavailable
          items:
            type: string
          type: array
      type: object
    HttpRouteAction:
      properties:
        corsPolicy:
          $ref: "#/components/schemas/CorsPolicy"
        faultInjectionPolicy:
          $ref: "#/components/schemas/HttpFaultInjection"
        requestMirrorPolicy:
          $ref: "#/components/schemas/RequestMirrorPolicy"
        retryPolicy:
          $ref: "#/components/schemas/HttpRetryPolicy"
        timeout:
          $ref: "#/components/schemas/Duration"
        urlRewrite:
          $ref: "#/components/schemas/UrlRewrite"
        weightedBackendServices:
          description: >-
            A list of weighted backend services to send traffic to when a route
            match occurs. The weights determine the fraction of traffic that
            flows to their corresponding backend service. If all traffic needs
            to go to a single backend service, there must be
            one  weightedBackendService with weight set to a non 0 number.

            Once a backendService is identified and before forwarding the request to the backend service, advanced routing actions like Url rewrites and header transformations are applied depending on additional settings specified in this HttpRouteAction.
          items:
            $ref: "#/components/schemas/WeightedBackendService"
          type: array
      type: object
    HttpRouteRule:
      description: An HttpRouteRule specifies how to match an HTTP request and the
        corresponding routing action that load balancing proxies will perform.
      properties:
        headerAction:
          $ref: "#/components/schemas/HttpHeaderAction"
        matchRules:
          items:
            $ref: "#/components/schemas/HttpRouteRuleMatch"
          type: array
        routeAction:
          $ref: "#/components/schemas/HttpRouteAction"
        service:
          description: >-
            The full or partial URL of the backend service resource to which
            traffic is directed if this rule is matched. If routeAction is
            additionally specified, advanced routing actions like URL Rewrites,
            etc. take effect prior to sending the request to the backend.
            However, if service is specified, routeAction cannot contain any
            weightedBackendService s. Conversely, if routeAction specifies
            any  weightedBackendServices, service must not be specified.

            Only one of urlRedirect, service or routeAction.weightedBackendService must be set.
          type: string
        urlRedirect:
          $ref: "#/components/schemas/HttpRedirectAction"
      type: object
    HttpRouteRuleMatch:
      description: HttpRouteRuleMatch specifies a set of criteria for matching requests to
        an HttpRouteRule. All specified criteria must be satisfied for a match
        to occur.
      properties:
        fullPathMatch:
          description: >-
            For satifying the matchRule condition, the path of the request must
            exactly match the value specified in fullPathMatch after removing
            any query parameters and anchor that may be part of the original
            URL.

            FullPathMatch must be between 1 and 1024 characters.

            Only one of prefixMatch, fullPathMatch or regexMatch must be specified.
          type: string
        headerMatches:
          description: Specifies a list of header match criteria, all of which must match
            corresponding headers in the request.
          items:
            $ref: "#/components/schemas/HttpHeaderMatch"
          type: array
        ignoreCase:
          description: >-
            Specifies that prefixMatch and fullPathMatch matches are case
            sensitive.

            The default value is false.

            caseSensitive must not be used with regexMatch.
          type: boolean
        metadataFilters:
          description: >-
            Opaque filter criteria used by Loadbalancer to restrict routing
            configuration to a limited set xDS compliant clients. In their xDS
            requests to Loadbalancer, xDS clients present node metadata. If a
            match takes place, the relevant routing configuration is made
            available to those proxies.

            For each metadataFilter in this list, if its filterMatchCriteria is set to MATCH_ANY, at least one of the filterLabels must match the corresponding label provided in the metadata. If its filterMatchCriteria is set to MATCH_ALL, then all of its filterLabels must match with corresponding labels in the provided metadata.

            metadataFilters specified here can be overrides those specified in ForwardingRule that refers to this UrlMap.

            metadataFilters only applies to Loadbalancers that have their loadBalancingScheme set to INTERNAL_SELF_MANAGED.
          items:
            $ref: "#/components/schemas/MetadataFilter"
          type: array
        prefixMatch:
          description: >-
            For satifying the matchRule condition, the request's path must begin
            with the specified prefixMatch. prefixMatch must begin with a /.

            The value must be between 1 and 1024 characters.

            Only one of prefixMatch, fullPathMatch or regexMatch must be specified.
          type: string
        queryParameterMatches:
          description: Specifies a list of query parameter match criteria, all of which
            must match corresponding query parameters in the request.
          items:
            $ref: "#/components/schemas/HttpQueryParameterMatch"
          type: array
        regexMatch:
          description: >-
            For satifying the matchRule condition, the path of the request must
            satisfy the regular expression specified in regexMatch after
            removing any query parameters and anchor supplied with the original
            URL. For regular expression grammar please see
            en.cppreference.com/w/cpp/regex/ecmascript 

            Only one of prefixMatch, fullPathMatch or regexMatch must be specified.
          type: string
      type: object
    HttpsHealthCheck:
      description: >-
        Represents a legacy HTTPS Health Check resource.


        Legacy health checks are required by network load balancers. For more information, read Health Check Concepts.
      properties:
        checkIntervalSec:
          description: How often (in seconds) to send a health check. The default value is
            5 seconds.
          format: int32
          type: integer
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        healthyThreshold:
          description: A so-far unhealthy instance will be marked healthy after this many
            consecutive successes. The default value is 2.
          format: int32
          type: integer
        host:
          description: The value of the host header in the HTTPS health check request. If
            left empty (default value), the public IP on behalf of which this
            health check is performed will be used.
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#httpsHealthCheck
          description: Type of the resource.
          type: string
        name:
          description: Name of the resource. Provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        port:
          description: The TCP port number for the HTTPS health check request. The default
            value is 443.
          format: int32
          type: integer
        requestPath:
          description: The request path of the HTTPS health check request. The default
            value is "/".
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        timeoutSec:
          description: How long (in seconds) to wait before claiming failure. The default
            value is 5 seconds. It is invalid for timeoutSec to have a greater
            value than checkIntervalSec.
          format: int32
          type: integer
        unhealthyThreshold:
          description: A so-far healthy instance will be marked unhealthy after this many
            consecutive failures. The default value is 2.
          format: int32
          type: integer
      type: object
    HttpsHealthCheckList:
      description: Contains a list of HttpsHealthCheck resources.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of HttpsHealthCheck resources.
          items:
            $ref: "#/components/schemas/HttpsHealthCheck"
          type: array
        kind:
          default: compute#httpsHealthCheckList
          description: Type of resource.
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    Image:
      description: >-
        Represents an Image resource.


        You can use images to create boot disks for your VM instances. For more information, read Images. (== resource_for beta.images ==) (== resource_for v1.images ==)
      properties:
        archiveSizeBytes:
          description: Size of the image tar.gz archive stored in Google Cloud Storage (in
            bytes).
          format: int64
          type: string
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        deprecated:
          $ref: "#/components/schemas/DeprecationStatus"
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        diskSizeGb:
          description: Size of the image when restored onto a persistent disk (in GB).
          format: int64
          type: string
        family:
          description: The name of the image family to which this image belongs. You can
            create disks by specifying an image family instead of a specific
            image name. The image family always returns its latest image that is
            not deprecated. The name of the image family must comply with
            RFC1035.
          type: string
        guestOsFeatures:
          description: A list of features to enable on the guest operating system.
            Applicable only for bootable images. Read  Enabling guest operating
            system features to see a list of available options.
          items:
            $ref: "#/components/schemas/GuestOsFeature"
          type: array
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        imageEncryptionKey:
          $ref: "#/components/schemas/CustomerEncryptionKey"
        kind:
          default: compute#image
          description: "[Output Only] Type of the resource. Always compute#image for
            images."
          type: string
        labelFingerprint:
          description: >-
            A fingerprint for the labels being applied to this image, which is
            essentially a hash of the labels used for optimistic locking. The
            fingerprint is initially generated by Compute Engine and changes
            after every request to modify or update labels. You must always
            provide an up-to-date fingerprint hash in order to update or change
            labels, otherwise the request will fail with error 412
            conditionNotMet.


            To see the latest fingerprint, make a get() request to retrieve an image.
          format: byte
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels to apply to this image. These can be later modified by the
            setLabels method.
          type: object
        licenseCodes:
          description: Integer license codes indicating which licenses are attached to this
            image.
          items:
            format: int64
            type: string
          type: array
        licenses:
          description: Any applicable license URI.
          items:
            type: string
          type: array
        name:
          description: Name of the resource; provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        rawDisk:
          description: The parameters of the raw disk image.
          properties:
            containerType:
              description: The format used to encode and transmit the block device, which
                should be TAR. This is just a container and transmission format
                and not a runtime format. Provided by the client when the disk
                image is created.
              enum:
                - TAR
              type: string
            sha1Checksum:
              description: "[Deprecated] This field is deprecated. An optional SHA1
                checksum of the disk image before unpackaging provided by the
                client when the disk image is created."
              pattern: "[a-f0-9]{40}"
              type: string
            source:
              description: The full Google Cloud Storage URL where the disk image is
                stored. You must provide either this property or the sourceDisk
                property but not both.
              type: string
          type: object
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        sourceDisk:
          description: >-
            URL of the source disk used to create this image. This can be a full
            or valid partial URL. You must provide either this property or the
            rawDisk.source property but not both to create an image. For
            example, the following are valid values:  

            - https://www.googleapis.com/compute/v1/projects/project/zones/zone/disks/disk 

            - projects/project/zones/zone/disks/disk 

            - zones/zone/disks/disk
          type: string
        sourceDiskEncryptionKey:
          $ref: "#/components/schemas/CustomerEncryptionKey"
        sourceDiskId:
          description: "[Output Only] The ID value of the disk used to create this image.
            This value may be used to determine whether the image was taken from
            the current or a previous instance of a given disk name."
          type: string
        sourceImage:
          description: >-
            URL of the source image used to create this image. This can be a
            full or valid partial URL. You must provide exactly one of:  

            - this property, or  

            - the rawDisk.source property, or  

            - the sourceDisk property   in order to create an image.
          type: string
        sourceImageEncryptionKey:
          $ref: "#/components/schemas/CustomerEncryptionKey"
        sourceImageId:
          description: "[Output Only] The ID value of the image used to create this image.
            This value may be used to determine whether the image was taken from
            the current or a previous instance of a given image name."
          type: string
        sourceSnapshot:
          description: >-
            URL of the source snapshot used to create this image. This can be a
            full or valid partial URL. You must provide exactly one of:  

            - this property, or  

            - the sourceImage property, or  

            - the rawDisk.source property, or  

            - the sourceDisk property   in order to create an image.
          type: string
        sourceSnapshotEncryptionKey:
          $ref: "#/components/schemas/CustomerEncryptionKey"
        sourceSnapshotId:
          description: "[Output Only] The ID value of the snapshot used to create this
            image. This value may be used to determine whether the snapshot was
            taken from the current or a previous instance of a given snapshot
            name."
          type: string
        sourceType:
          default: RAW
          description: The type of the image used to create this disk. The default and only
            value is RAW
          enum:
            - RAW
          type: string
        status:
          description: "[Output Only] The status of the image. An image can be used to
            create other resources, such as instances, only after the image has
            been successfully created and the status is set to READY. Possible
            values are FAILED, PENDING, or READY."
          enum:
            - DELETING
            - FAILED
            - PENDING
            - READY
          type: string
      type: object
    ImageList:
      description: Contains a list of images.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of Image resources.
          items:
            $ref: "#/components/schemas/Image"
          type: array
        kind:
          default: compute#imageList
          description: Type of resource.
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    Instance:
      description: >-
        Represents an Instance resource.


        An instance is a virtual machine that is hosted on Google Cloud Platform. For more information, read Virtual Machine Instances. (== resource_for beta.instances ==) (== resource_for v1.instances ==)
      properties:
        canIpForward:
          description: Allows this instance to send and receive packets with non-matching
            destination or source IPs. This is required if you plan to use this
            instance to forward routes. For more information, see Enabling IP
            Forwarding.
          type: boolean
        cpuPlatform:
          description: "[Output Only] The CPU platform used by this instance."
          type: string
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        deletionProtection:
          description: Whether the resource should be protected against deletion.
          type: boolean
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        disks:
          description: Array of disks associated with this instance. Persistent disks must
            be created before you can assign them.
          items:
            $ref: "#/components/schemas/AttachedDisk"
          type: array
        displayDevice:
          $ref: "#/components/schemas/DisplayDevice"
        guestAccelerators:
          description: A list of the type and count of accelerator cards attached to the
            instance.
          items:
            $ref: "#/components/schemas/AcceleratorConfig"
          type: array
        hostname:
          description: Specifies the hostname of the instance. The specified hostname must
            be RFC1035 compliant. If hostname is not specified, the default
            hostname is [INSTANCE_NAME].c.[PROJECT_ID].internal when using the
            global DNS, and [INSTANCE_NAME].[ZONE].c.[PROJECT_ID].internal when
            using zonal DNS.
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#instance
          description: "[Output Only] Type of the resource. Always compute#instance for
            instances."
          type: string
        labelFingerprint:
          description: >-
            A fingerprint for this request, which is essentially a hash of the
            label's contents and used for optimistic locking. The fingerprint is
            initially generated by Compute Engine and changes after every
            request to modify or update labels. You must always provide an
            up-to-date fingerprint hash in order to update or change labels.


            To see the latest fingerprint, make get() request to the instance.
          format: byte
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels to apply to this instance. These can be later modified by the
            setLabels method.
          type: object
        machineType:
          description: >-
            Full or partial URL of the machine type resource to use for this
            instance, in the format: zones/zone/machineTypes/machine-type. This
            is provided by the client when the instance is created. For example,
            the following is a valid partial url to a predefined machine type:

            zones/us-central1-f/machineTypes/n1-standard-1



            To create a custom machine type, provide a URL to a machine type in the following format, where CPUS is 1 or an even number up to 32 (2, 4, 6, ... 24, etc), and MEMORY is the total memory for this instance. Memory must be a multiple of 256 MB and must be supplied in MB (e.g. 5 GB of memory is 5120 MB):

            zones/zone/machineTypes/custom-CPUS-MEMORY



            For example: zones/us-central1-f/machineTypes/custom-4-5120 


            For a full list of restrictions, read the Specifications for custom machine types.
          type: string
        metadata:
          $ref: "#/components/schemas/Metadata"
        minCpuPlatform:
          description: 'Specifies a minimum CPU platform for the VM instance. Applicable
            values are the friendly names of CPU platforms, such as
            minCpuPlatform: "Intel Haswell" or minCpuPlatform: "Intel Sandy
            Bridge".'
          type: string
        name:
          description: The name of the resource, provided by the client when initially
            creating the resource. The resource name must be 1-63 characters
            long, and comply with RFC1035. Specifically, the name must be 1-63
            characters long and match the regular expression
            `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be
            a lowercase letter, and all following characters must be a dash,
            lowercase letter, or digit, except the last character, which cannot
            be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        networkInterfaces:
          description: An array of network configurations for this instance. These specify
            how interfaces are configured to interact with other network
            services, such as connecting to the internet. Multiple interfaces
            are supported per instance.
          items:
            $ref: "#/components/schemas/NetworkInterface"
          type: array
        reservationAffinity:
          $ref: "#/components/schemas/ReservationAffinity"
        scheduling:
          $ref: "#/components/schemas/Scheduling"
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        serviceAccounts:
          description: >-
            A list of service accounts, with their specified scopes, authorized
            for this instance. Only one service account per VM instance is
            supported.


            Service accounts generate access tokens that can be accessed through the metadata server and used to authenticate applications on the instance. See Service Accounts for more information.
          items:
            $ref: "#/components/schemas/ServiceAccount"
          type: array
        shieldedInstanceConfig:
          $ref: "#/components/schemas/ShieldedInstanceConfig"
        shieldedInstanceIntegrityPolicy:
          $ref: "#/components/schemas/ShieldedInstanceIntegrityPolicy"
        startRestricted:
          description: "[Output Only] Whether a VM has been restricted for start because
            Compute Engine has detected suspicious activity."
          type: boolean
        status:
          description: "[Output Only] The status of the instance. One of the following
            values: PROVISIONING, STAGING, RUNNING, STOPPING, STOPPED,
            SUSPENDING, SUSPENDED, and TERMINATED."
          enum:
            - PROVISIONING
            - REPAIRING
            - RUNNING
            - STAGING
            - STOPPED
            - STOPPING
            - SUSPENDED
            - SUSPENDING
            - TERMINATED
          type: string
        statusMessage:
          description: "[Output Only] An optional, human-readable explanation of the
            status."
          type: string
        tags:
          $ref: "#/components/schemas/Tags"
        zone:
          description: "[Output Only] URL of the zone where the instance resides. You must
            specify this field as part of the HTTP request URL. It is not
            settable as a field in the request body."
          type: string
      type: object
    InstanceAggregatedList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/InstancesScopedList"
          description: An object that contains a list of instances scoped by zone.
          type: object
        kind:
          default: compute#instanceAggregatedList
          description: "[Output Only] Type of resource. Always
            compute#instanceAggregatedList for aggregated lists of Instance
            resources."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    InstanceGroup:
      description: >-
        Represents an unmanaged Instance Group resource.


        Use unmanaged instance groups if you need to apply load balancing to groups of heterogeneous instances or if you need to manage the instances yourself. For more information, read  Instance groups.


        For zonal unmanaged Instance Group, use instanceGroups resource.


        For regional unmanaged Instance Group, use regionInstanceGroups resource. (== resource_for beta.instanceGroups ==) (== resource_for v1.instanceGroups ==) (== resource_for beta.regionInstanceGroups ==) (== resource_for v1.regionInstanceGroups ==)
      properties:
        creationTimestamp:
          description: "[Output Only] The creation timestamp for this instance group in
            RFC3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        fingerprint:
          description: "[Output Only] The fingerprint of the named ports. The system uses
            this fingerprint to detect conflicts when multiple users change the
            named ports concurrently."
          format: byte
          type: string
        id:
          description: "[Output Only] A unique identifier for this instance group,
            generated by the server."
          format: uint64
          type: string
        kind:
          default: compute#instanceGroup
          description: "[Output Only] The resource type, which is always
            compute#instanceGroup for instance groups."
          type: string
        name:
          description: The name of the instance group. The name must be 1-63 characters
            long, and comply with RFC1035.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        namedPorts:
          description: >-
            Assigns a name to a port number. For example: {name: "http", port:
            80}


            This allows the system to reference ports by the assigned name instead of a port number. Named ports can also contain multiple ports. For example: [{name: "http", port: 80},{name: "http", port: 8080}] 


            Named ports apply to all instances in this instance group.
          items:
            $ref: "#/components/schemas/NamedPort"
          type: array
        network:
          description: The URL of the network to which all instances in the instance group
            belong.
          type: string
        region:
          description: "[Output Only] The URL of the region where the instance group is
            located (for regional resources)."
          type: string
        selfLink:
          description: "[Output Only] The URL for this instance group. The server generates
            this URL."
          type: string
        size:
          description: "[Output Only] The total number of instances in the instance group."
          format: int32
          type: integer
        subnetwork:
          description: "[Output Only] The URL of the subnetwork to which all instances in
            the instance group belong."
          type: string
        zone:
          description: "[Output Only] The URL of the zone where the instance group is
            located (for zonal resources)."
          type: string
      type: object
    InstanceGroupAggregatedList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/InstanceGroupsScopedList"
          description: A list of InstanceGroupsScopedList resources.
          type: object
        kind:
          default: compute#instanceGroupAggregatedList
          description: "[Output Only] The resource type, which is always
            compute#instanceGroupAggregatedList for aggregated lists of instance
            groups."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    InstanceGroupList:
      description: A list of InstanceGroup resources.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of InstanceGroup resources.
          items:
            $ref: "#/components/schemas/InstanceGroup"
          type: array
        kind:
          default: compute#instanceGroupList
          description: "[Output Only] The resource type, which is always
            compute#instanceGroupList for instance group lists."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    InstanceGroupManager:
      description: >-
        Represents a Managed Instance Group resource.


        An instance group is a collection of VM instances that you can manage as a single entity. For more information, read Instance groups.


        For zonal Managed Instance Group, use the instanceGroupManagers resource.


        For regional Managed Instance Group, use the regionInstanceGroupManagers resource. (== resource_for beta.instanceGroupManagers ==) (== resource_for v1.instanceGroupManagers ==) (== resource_for beta.regionInstanceGroupManagers ==) (== resource_for v1.regionInstanceGroupManagers ==)
      properties:
        autoHealingPolicies:
          description: The autohealing policy for this managed instance group. You can
            specify only one value.
          items:
            $ref: "#/components/schemas/InstanceGroupManagerAutoHealingPolicy"
          type: array
        baseInstanceName:
          description: The base instance name to use for instances in this group. The value
            must be 1-58 characters long. Instances are named by appending a
            hyphen and a random four-character string to the base instance name.
            The base instance name must comply with RFC1035.
          pattern: "[a-z][-a-z0-9]{0,57}"
          type: string
        creationTimestamp:
          description: "[Output Only] The creation timestamp for this managed instance
            group in RFC3339 text format."
          type: string
        currentActions:
          $ref: "#/components/schemas/InstanceGroupManagerActionsSummary"
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        distributionPolicy:
          $ref: "#/components/schemas/DistributionPolicy"
        fingerprint:
          description: >-
            Fingerprint of this resource. This field may be used in optimistic
            locking. It will be ignored when inserting an InstanceGroupManager.
            An up-to-date fingerprint must be provided in order to update the
            InstanceGroupManager, otherwise the request will fail with error 412
            conditionNotMet.


            To see the latest fingerprint, make a get() request to retrieve an InstanceGroupManager.
          format: byte
          type: string
        id:
          description: "[Output Only] A unique identifier for this resource type. The
            server generates this identifier."
          format: uint64
          type: string
        instanceGroup:
          description: "[Output Only] The URL of the Instance Group resource."
          type: string
        instanceTemplate:
          description: The URL of the instance template that is specified for this managed
            instance group. The group uses this template to create all new
            instances in the managed instance group.
          type: string
        kind:
          default: compute#instanceGroupManager
          description: "[Output Only] The resource type, which is always
            compute#instanceGroupManager for managed instance groups."
          type: string
        name:
          description: The name of the managed instance group. The name must be 1-63
            characters long, and comply with RFC1035.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        namedPorts:
          description: Named ports configured for the Instance Groups complementary to this
            Instance Group Manager.
          items:
            $ref: "#/components/schemas/NamedPort"
          type: array
        region:
          description: "[Output Only] The URL of the region where the managed instance
            group resides (for regional resources)."
          type: string
        selfLink:
          description: "[Output Only] The URL for this managed instance group. The server
            defines this URL."
          type: string
        status:
          $ref: "#/components/schemas/InstanceGroupManagerStatus"
        targetPools:
          description: The URLs for all TargetPool resources to which instances in the
            instanceGroup field are added. The target pools automatically apply
            to all of the instances in the managed instance group.
          items:
            type: string
          type: array
        targetSize:
          description: The target number of running instances for this managed instance
            group. Deleting or abandoning instances reduces this number.
            Resizing the group changes this number.
          format: int32
          type: integer
        updatePolicy:
          $ref: "#/components/schemas/InstanceGroupManagerUpdatePolicy"
        versions:
          description: >-
            Specifies the instance templates used by this managed instance group
            to create instances.


            Each version is defined by an instanceTemplate and a name. Every version can appear at most once per instance group. This field overrides the top-level instanceTemplate field. Read more about the relationships between these fields. Exactly one version must leave the targetSize field unset. That version will be applied to all remaining instances. For more information, read about canary updates.
          items:
            $ref: "#/components/schemas/InstanceGroupManagerVersion"
          type: array
        zone:
          description: "[Output Only] The URL of the zone where the managed instance group
            is located (for zonal resources)."
          type: string
      type: object
    InstanceGroupManagerActionsSummary:
      properties:
        abandoning:
          description: "[Output Only] The total number of instances in the managed instance
            group that are scheduled to be abandoned. Abandoning an instance
            removes it from the managed instance group without deleting it."
          format: int32
          type: integer
        creating:
          description: >-
            [Output Only] The number of instances in the managed instance group
            that are scheduled to be created or are currently being created. If
            the group fails to create any of these instances, it tries again
            until it creates the instance successfully.


            If you have disabled creation retries, this field will not be populated; instead, the creatingWithoutRetries field will be populated.
          format: int32
          type: integer
        creatingWithoutRetries:
          description: "[Output Only] The number of instances that the managed instance
            group will attempt to create. The group attempts to create each
            instance only once. If the group fails to create any of these
            instances, it decreases the group's targetSize value accordingly."
          format: int32
          type: integer
        deleting:
          description: "[Output Only] The number of instances in the managed instance group
            that are scheduled to be deleted or are currently being deleted."
          format: int32
          type: integer
        none:
          description: "[Output Only] The number of instances in the managed instance group
            that are running and have no scheduled actions."
          format: int32
          type: integer
        recreating:
          description: "[Output Only] The number of instances in the managed instance group
            that are scheduled to be recreated or are currently being being
            recreated. Recreating an instance deletes the existing root
            persistent disk and creates a new disk from the image that is
            defined in the instance template."
          format: int32
          type: integer
        refreshing:
          description: "[Output Only] The number of instances in the managed instance group
            that are being reconfigured with properties that do not require a
            restart or a recreate action. For example, setting or removing
            target pools for the instance."
          format: int32
          type: integer
        restarting:
          description: "[Output Only] The number of instances in the managed instance group
            that are scheduled to be restarted or are currently being
            restarted."
          format: int32
          type: integer
        verifying:
          description: "[Output Only] The number of instances in the managed instance group
            that are being verified. See the managedInstances[].currentAction
            property in the listManagedInstances method documentation."
          format: int32
          type: integer
      type: object
    InstanceGroupManagerAggregatedList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/InstanceGroupManagersScopedList"
          description: A list of InstanceGroupManagersScopedList resources.
          type: object
        kind:
          default: compute#instanceGroupManagerAggregatedList
          description: "[Output Only] The resource type, which is always
            compute#instanceGroupManagerAggregatedList for an aggregated list of
            managed instance groups."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    InstanceGroupManagerAutoHealingPolicy:
      description: ""
      properties:
        healthCheck:
          description: The URL for the health check that signals autohealing.
          type: string
        initialDelaySec:
          description: The number of seconds that the managed instance group waits before
            it applies autohealing policies to new instances or recently
            recreated instances. This initial delay allows instances to
            initialize and run their startup scripts before the instance group
            determines that they are UNHEALTHY. This prevents the managed
            instance group from recreating its instances prematurely. This value
            must be from range [0, 3600].
          format: int32
          type: integer
      type: object
    InstanceGroupManagerList:
      description: "[Output Only] A list of managed instance groups."
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of InstanceGroupManager resources.
          items:
            $ref: "#/components/schemas/InstanceGroupManager"
          type: array
        kind:
          default: compute#instanceGroupManagerList
          description: "[Output Only] The resource type, which is always
            compute#instanceGroupManagerList for a list of managed instance
            groups."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    InstanceGroupManagerStatus:
      properties:
        isStable:
          description: "[Output Only] A bit indicating whether the managed instance group
            is in a stable state. A stable state means that: none of the
            instances in the managed instance group is currently undergoing any
            type of change (for example, creation, restart, or deletion); no
            future changes are scheduled for instances in the managed instance
            group; and the managed instance group itself is not being modified."
          type: boolean
      type: object
    InstanceGroupManagerUpdatePolicy:
      properties:
        maxSurge:
          $ref: "#/components/schemas/FixedOrPercent"
        maxUnavailable:
          $ref: "#/components/schemas/FixedOrPercent"
        minimalAction:
          description: Minimal action to be taken on an instance. You can specify either
            RESTART to restart existing instances or REPLACE to delete and
            create new instances from the target template. If you specify a
            RESTART, the Updater will attempt to perform that action only.
            However, if the Updater determines that the minimal action you
            specify is not enough to perform the update, it might perform a more
            disruptive action.
          enum:
            - REPLACE
            - RESTART
          type: string
        type:
          description: The type of update process. You can specify either PROACTIVE so that
            the instance group manager proactively executes actions in order to
            bring instances to their target versions or OPPORTUNISTIC so that no
            action is proactively executed but the update will be performed as
            part of other actions (for example, resizes or recreateInstances
            calls).
          enum:
            - OPPORTUNISTIC
            - PROACTIVE
          type: string
      type: object
    InstanceGroupManagerVersion:
      properties:
        instanceTemplate:
          description: The URL of the instance template that is specified for this managed
            instance group. The group uses this template to create new instances
            in the managed instance group until the `targetSize` for this
            version is reached.
          type: string
        name:
          description: Name of the version. Unique among all versions in the scope of this
            managed instance group.
          type: string
        targetSize:
          $ref: "#/components/schemas/FixedOrPercent"
      type: object
    InstanceGroupManagersAbandonInstancesRequest:
      properties:
        instances:
          description: The URLs of one or more instances to abandon. This can be a full URL
            or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
          items:
            type: string
          type: array
      type: object
    InstanceGroupManagersDeleteInstancesRequest:
      properties:
        instances:
          description: The URLs of one or more instances to delete. This can be a full URL
            or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
          items:
            type: string
          type: array
      type: object
    InstanceGroupManagersListManagedInstancesResponse:
      properties:
        managedInstances:
          description: "[Output Only] The list of instances in the managed instance group."
          items:
            $ref: "#/components/schemas/ManagedInstance"
          type: array
      type: object
    InstanceGroupManagersRecreateInstancesRequest:
      properties:
        instances:
          description: The URLs of one or more instances to recreate. This can be a full
            URL or a partial URL, such as
            zones/[ZONE]/instances/[INSTANCE_NAME].
          items:
            type: string
          type: array
      type: object
    InstanceGroupManagersScopedList:
      properties:
        instanceGroupManagers:
          description: "[Output Only] The list of managed instance groups that are
            contained in the specified project and zone."
          items:
            $ref: "#/components/schemas/InstanceGroupManager"
          type: array
        warning:
          description: "[Output Only] The warning that replaces the list of managed
            instance groups when the list is empty."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    InstanceGroupManagersSetInstanceTemplateRequest:
      properties:
        instanceTemplate:
          description: The URL of the instance template that is specified for this managed
            instance group. The group uses this template to create all new
            instances in the managed instance group.
          type: string
      type: object
    InstanceGroupManagersSetTargetPoolsRequest:
      properties:
        fingerprint:
          description: The fingerprint of the target pools information. Use this optional
            property to prevent conflicts when multiple users change the target
            pools settings concurrently. Obtain the fingerprint with the
            instanceGroupManagers.get method. Then, include the fingerprint in
            your request to ensure that you do not overwrite changes that were
            applied from another concurrent request.
          format: byte
          type: string
        targetPools:
          description: The list of target pool URLs that instances in this managed instance
            group belong to. The managed instance group applies these target
            pools to all of the instances in the group. Existing instances and
            new instances in the group all receive these target pool settings.
          items:
            type: string
          type: array
      type: object
    InstanceGroupsAddInstancesRequest:
      properties:
        instances:
          description: The list of instances to add to the instance group.
          items:
            $ref: "#/components/schemas/InstanceReference"
          type: array
      type: object
    InstanceGroupsListInstances:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of InstanceWithNamedPorts resources.
          items:
            $ref: "#/components/schemas/InstanceWithNamedPorts"
          type: array
        kind:
          default: compute#instanceGroupsListInstances
          description: "[Output Only] The resource type, which is always
            compute#instanceGroupsListInstances for the list of instances in the
            specified instance group."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    InstanceGroupsListInstancesRequest:
      properties:
        instanceState:
          description: A filter for the state of the instances in the instance group. Valid
            options are ALL or RUNNING. If you do not specify this parameter the
            list includes all instances regardless of their state.
          enum:
            - ALL
            - RUNNING
          type: string
      type: object
    InstanceGroupsRemoveInstancesRequest:
      properties:
        instances:
          description: The list of instances to remove from the instance group.
          items:
            $ref: "#/components/schemas/InstanceReference"
          type: array
      type: object
    InstanceGroupsScopedList:
      properties:
        instanceGroups:
          description: "[Output Only] The list of instance groups that are contained in
            this scope."
          items:
            $ref: "#/components/schemas/InstanceGroup"
          type: array
        warning:
          description: "[Output Only] An informational warning that replaces the list of
            instance groups when the list is empty."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    InstanceGroupsSetNamedPortsRequest:
      properties:
        fingerprint:
          description: The fingerprint of the named ports information for this instance
            group. Use this optional property to prevent conflicts when multiple
            users change the named ports settings concurrently. Obtain the
            fingerprint with the instanceGroups.get method. Then, include the
            fingerprint in your request to ensure that you do not overwrite
            changes that were applied from another concurrent request. A request
            with an incorrect fingerprint will fail with error 412
            conditionNotMet.
          format: byte
          type: string
        namedPorts:
          description: The list of named ports to set for this instance group.
          items:
            $ref: "#/components/schemas/NamedPort"
          type: array
      type: object
    InstanceList:
      description: Contains a list of instances.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of Instance resources.
          items:
            $ref: "#/components/schemas/Instance"
          type: array
        kind:
          default: compute#instanceList
          description: "[Output Only] Type of resource. Always compute#instanceList for
            lists of Instance resources."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    InstanceListReferrers:
      description: Contains a list of instance referrers.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of Reference resources.
          items:
            $ref: "#/components/schemas/Reference"
          type: array
        kind:
          default: compute#instanceListReferrers
          description: "[Output Only] Type of resource. Always
            compute#instanceListReferrers for lists of Instance referrers."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    InstanceMoveRequest:
      properties:
        destinationZone:
          description: >-
            The URL of the destination zone to move the instance. This can be a
            full or partial URL. For example, the following are all valid URLs
            to a zone:  

            - https://www.googleapis.com/compute/v1/projects/project/zones/zone 

            - projects/project/zones/zone 

            - zones/zone
          type: string
        targetInstance:
          description: >-
            The URL of the target instance to move. This can be a full or
            partial URL. For example, the following are all valid URLs to an
            instance:  

            - https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance 

            - projects/project/zones/zone/instances/instance 

            - zones/zone/instances/instance
          type: string
      type: object
    InstanceProperties:
      description: ""
      properties:
        canIpForward:
          description: Enables instances created based on this template to send packets
            with source IP addresses other than their own and receive packets
            with destination IP addresses other than their own. If these
            instances will be used as an IP gateway or it will be set as the
            next-hop in a Route resource, specify true. If unsure, leave this
            set to false. See the Enable IP forwarding documentation for more
            information.
          type: boolean
        description:
          description: An optional text description for the instances that are created from
            this instance template.
          type: string
        disks:
          description: An array of disks that are associated with the instances that are
            created from this template.
          items:
            $ref: "#/components/schemas/AttachedDisk"
          type: array
        guestAccelerators:
          description: A list of guest accelerator cards' type and count to use for
            instances created from the instance template.
          items:
            $ref: "#/components/schemas/AcceleratorConfig"
          type: array
        labels:
          additionalProperties:
            type: string
          description: Labels to apply to instances that are created from this template.
          type: object
        machineType:
          description: The machine type to use for instances that are created from this
            template.
          type: string
        metadata:
          $ref: "#/components/schemas/Metadata"
        minCpuPlatform:
          description: 'Minimum cpu/platform to be used by this instance. The instance may
            be scheduled on the specified or newer cpu/platform. Applicable
            values are the friendly names of CPU platforms, such as
            minCpuPlatform: "Intel Haswell" or minCpuPlatform: "Intel Sandy
            Bridge". For more information, read Specifying a Minimum CPU
            Platform.'
          type: string
        networkInterfaces:
          description: An array of network access configurations for this interface.
          items:
            $ref: "#/components/schemas/NetworkInterface"
          type: array
        reservationAffinity:
          $ref: "#/components/schemas/ReservationAffinity"
        scheduling:
          $ref: "#/components/schemas/Scheduling"
        serviceAccounts:
          description: A list of service accounts with specified scopes. Access tokens for
            these service accounts are available to the instances that are
            created from this template. Use metadata queries to obtain the
            access tokens for these instances.
          items:
            $ref: "#/components/schemas/ServiceAccount"
          type: array
        shieldedInstanceConfig:
          $ref: "#/components/schemas/ShieldedInstanceConfig"
        tags:
          $ref: "#/components/schemas/Tags"
      type: object
    InstanceReference:
      properties:
        instance:
          description: The URL for a specific instance.
          type: string
      type: object
    InstanceTemplate:
      description: >-
        Represents an Instance Template resource.


        You can use instance templates to create VM instances and managed instance groups. For more information, read Instance Templates. (== resource_for beta.instanceTemplates ==) (== resource_for v1.instanceTemplates ==)
      properties:
        creationTimestamp:
          description: "[Output Only] The creation timestamp for this instance template in
            RFC3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        id:
          description: "[Output Only] A unique identifier for this instance template. The
            server defines this identifier."
          format: uint64
          type: string
        kind:
          default: compute#instanceTemplate
          description: "[Output Only] The resource type, which is always
            compute#instanceTemplate for instance templates."
          type: string
        name:
          description: Name of the resource; provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        properties:
          $ref: "#/components/schemas/InstanceProperties"
        selfLink:
          description: "[Output Only] The URL for this instance template. The server
            defines this URL."
          type: string
        sourceInstance:
          description: >-
            The source instance used to create the template. You can provide
            this as a partial or full URL to the resource. For example, the
            following are valid values:  

            - https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance 

            - projects/project/zones/zone/instances/instance
          type: string
        sourceInstanceParams:
          $ref: "#/components/schemas/SourceInstanceParams"
      type: object
    InstanceTemplateList:
      description: A list of instance templates.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of InstanceTemplate resources.
          items:
            $ref: "#/components/schemas/InstanceTemplate"
          type: array
        kind:
          default: compute#instanceTemplateList
          description: "[Output Only] The resource type, which is always
            compute#instanceTemplatesListResponse for instance template lists."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    InstanceWithNamedPorts:
      properties:
        instance:
          description: "[Output Only] The URL of the instance."
          type: string
        namedPorts:
          description: "[Output Only] The named ports that belong to this instance group."
          items:
            $ref: "#/components/schemas/NamedPort"
          type: array
        status:
          description: "[Output Only] The status of the instance."
          enum:
            - PROVISIONING
            - REPAIRING
            - RUNNING
            - STAGING
            - STOPPED
            - STOPPING
            - SUSPENDED
            - SUSPENDING
            - TERMINATED
          type: string
      type: object
    InstancesScopedList:
      properties:
        instances:
          description: "[Output Only] A list of instances contained in this scope."
          items:
            $ref: "#/components/schemas/Instance"
          type: array
        warning:
          description: "[Output Only] Informational warning which replaces the list of
            instances when the list is empty."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    InstancesSetLabelsRequest:
      properties:
        labelFingerprint:
          description: Fingerprint of the previous set of labels for this resource, used to
            prevent conflicts. Provide the latest fingerprint value when making
            a request to add or change labels.
          format: byte
          type: string
        labels:
          additionalProperties:
            type: string
          type: object
      type: object
    InstancesSetMachineResourcesRequest:
      properties:
        guestAccelerators:
          description: A list of the type and count of accelerator cards attached to the
            instance.
          items:
            $ref: "#/components/schemas/AcceleratorConfig"
          type: array
      type: object
    InstancesSetMachineTypeRequest:
      properties:
        machineType:
          description: "Full or partial URL of the machine type resource. See Machine Types
            for a full list of machine types. For example:
            zones/us-central1-f/machineTypes/n1-standard-1"
          type: string
      type: object
    InstancesSetMinCpuPlatformRequest:
      properties:
        minCpuPlatform:
          description: Minimum cpu/platform this instance should be started at.
          type: string
      type: object
    InstancesSetServiceAccountRequest:
      properties:
        email:
          description: Email address of the service account.
          type: string
        scopes:
          description: The list of scopes to be made available for this service account.
          items:
            type: string
          type: array
      type: object
    InstancesStartWithEncryptionKeyRequest:
      properties:
        disks:
          description: >-
            Array of disks associated with this instance that are protected with
            a customer-supplied encryption key.


            In order to start the instance, the disk url and its corresponding key must be provided.


            If the disk is not protected with a customer-supplied encryption key it should not be specified.
          items:
            $ref: "#/components/schemas/CustomerEncryptionKeyProtectedDisk"
          type: array
      type: object
    Int64RangeMatch:
      description: HttpRouteRuleMatch criteria for field values that must stay within the
        specified integer range.
      properties:
        rangeEnd:
          description: The end of the range (exclusive) in signed long integer format.
          format: int64
          type: string
        rangeStart:
          description: The start of the range (inclusive) in signed long integer format.
          format: int64
          type: string
      type: object
    Interconnect:
      description: >-
        Represents an Interconnect resource.


        An Interconnect resource is a dedicated connection between the GCP network and your on-premises network. For more information, read the  Dedicated Interconnect Overview. (== resource_for v1.interconnects ==) (== resource_for beta.interconnects ==)
      properties:
        adminEnabled:
          description: Administrative status of the interconnect. When this is set to true,
            the Interconnect is functional and can carry traffic. When set to
            false, no packets can be carried over the interconnect and no BGP
            routes are exchanged over it. By default, the status is set to true.
          type: boolean
        circuitInfos:
          description: "[Output Only] A list of CircuitInfo objects, that describe the
            individual circuits in this LAG."
          items:
            $ref: "#/components/schemas/InterconnectCircuitInfo"
          type: array
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        customerName:
          description: Customer name, to put in the Letter of Authorization as the party
            authorized to request a crossconnect.
          type: string
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        expectedOutages:
          description: "[Output Only] A list of outages expected for this Interconnect."
          items:
            $ref: "#/components/schemas/InterconnectOutageNotification"
          type: array
        googleIpAddress:
          description: "[Output Only] IP address configured on the Google side of the
            Interconnect link. This can be used only for ping tests."
          type: string
        googleReferenceId:
          description: "[Output Only] Google reference ID to be used when raising support
            tickets with Google or otherwise to debug backend connectivity
            issues."
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        interconnectAttachments:
          description: "[Output Only] A list of the URLs of all InterconnectAttachments
            configured to use this Interconnect."
          items:
            type: string
          type: array
        interconnectType:
          description: >-
            Type of interconnect, which can take one of the following values: 

            - PARTNER: A partner-managed interconnection shared between customers though a partner. 

            - DEDICATED: A dedicated physical interconnection with the customer. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED.
          enum:
            - DEDICATED
            - IT_PRIVATE
            - PARTNER
          type: string
        kind:
          default: compute#interconnect
          description: "[Output Only] Type of the resource. Always compute#interconnect for
            interconnects."
          type: string
        linkType:
          description: >-
            Type of link requested, which can take one of the following values: 

            - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics 

            - LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics. Note that this field indicates the speed of each of the links in the bundle, not the speed of the entire bundle.
          enum:
            - LINK_TYPE_ETHERNET_100G_LR
            - LINK_TYPE_ETHERNET_10G_LR
          type: string
        location:
          description: URL of the InterconnectLocation object that represents where this
            connection is to be provisioned.
          type: string
        name:
          description: Name of the resource. Provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        nocContactEmail:
          description: Email address to contact the customer NOC for operations and
            maintenance notifications regarding this Interconnect. If specified,
            this will be used for notifications in addition to all other forms
            described, such as Stackdriver logs alerting and Cloud
            Notifications.
          type: string
        operationalStatus:
          description: >-
            [Output Only] The current status of this Interconnect's
            functionality, which can take one of the following values: 

            - OS_ACTIVE: A valid Interconnect, which is turned up and is ready to use. Attachments may be provisioned on this Interconnect. 

            - OS_UNPROVISIONED: An Interconnect that has not completed turnup. No attachments may be provisioned on this Interconnect. 

            - OS_UNDER_MAINTENANCE: An Interconnect that is undergoing internal maintenance. No attachments may be provisioned or updated on this Interconnect.
          enum:
            - OS_ACTIVE
            - OS_UNPROVISIONED
          type: string
        peerIpAddress:
          description: "[Output Only] IP address configured on the customer side of the
            Interconnect link. The customer should configure this IP address
            during turnup when prompted by Google NOC. This can be used only for
            ping tests."
          type: string
        provisionedLinkCount:
          description: "[Output Only] Number of links actually provisioned in this
            interconnect."
          format: int32
          type: integer
        requestedLinkCount:
          description: Target number of physical links in the link bundle, as requested by
            the customer.
          format: int32
          type: integer
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        state:
          description: >-
            [Output Only] The current state of Interconnect functionality, which
            can take one of the following values: 

            - ACTIVE: The Interconnect is valid, turned up and ready to use. Attachments may be provisioned on this Interconnect. 

            - UNPROVISIONED: The Interconnect has not completed turnup. No attachments may be provisioned on this Interconnect. 

            - UNDER_MAINTENANCE: The Interconnect is undergoing internal maintenance. No attachments may be provisioned or updated on this Interconnect.
          enum:
            - ACTIVE
            - UNPROVISIONED
          type: string
      type: object
    InterconnectAttachment:
      description: >-
        Represents an Interconnect Attachment (VLAN) resource.


        You can use Interconnect attachments (VLANS) to connect your Virtual Private Cloud networks to your on-premises networks through an Interconnect. For more information, read  Creating VLAN Attachments. (== resource_for beta.interconnectAttachments ==) (== resource_for v1.interconnectAttachments ==)
      properties:
        adminEnabled:
          description: Determines whether this Attachment will carry packets. Not present
            for PARTNER_PROVIDER.
          type: boolean
        bandwidth:
          description: >-
            Provisioned bandwidth capacity for the interconnect attachment. For
            attachments of type DEDICATED, the user can set the bandwidth. For
            attachments of type PARTNER, the Google Partner that is operating
            the interconnect must set the bandwidth. Output only for PARTNER
            type, mutable for PARTNER_PROVIDER and DEDICATED, and can take one
            of the following values: 

            - BPS_50M: 50 Mbit/s 

            - BPS_100M: 100 Mbit/s 

            - BPS_200M: 200 Mbit/s 

            - BPS_300M: 300 Mbit/s 

            - BPS_400M: 400 Mbit/s 

            - BPS_500M: 500 Mbit/s 

            - BPS_1G: 1 Gbit/s 

            - BPS_2G: 2 Gbit/s 

            - BPS_5G: 5 Gbit/s 

            - BPS_10G: 10 Gbit/s 

            - BPS_20G: 20 Gbit/s 

            - BPS_50G: 50 Gbit/s
          enum:
            - BPS_100M
            - BPS_10G
            - BPS_1G
            - BPS_200M
            - BPS_20G
            - BPS_2G
            - BPS_300M
            - BPS_400M
            - BPS_500M
            - BPS_50G
            - BPS_50M
            - BPS_5G
          type: string
        candidateSubnets:
          description: Up to 16 candidate prefixes that can be used to restrict the
            allocation of cloudRouterIpAddress and customerRouterIpAddress for
            this attachment. All prefixes must be within link-local address
            space (169.254.0.0/16) and must be /29 or shorter (/28, /27, etc).
            Google will attempt to select an unused /29 from the supplied
            candidate prefix(es). The request will fail if all possible /29s are
            in use on Google?s edge. If not supplied, Google will randomly
            select an unused /29 from all of link-local space.
          items:
            type: string
          type: array
        cloudRouterIpAddress:
          description: "[Output Only] IPv4 address + prefix length to be configured on
            Cloud Router Interface for this interconnect attachment."
          type: string
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        customerRouterIpAddress:
          description: "[Output Only] IPv4 address + prefix length to be configured on the
            customer router subinterface for this interconnect attachment."
          type: string
        description:
          description: An optional description of this resource.
          type: string
        edgeAvailabilityDomain:
          description: >-
            Desired availability domain for the attachment. Only available for
            type PARTNER, at creation time, and can take one of the following
            values: 

            - AVAILABILITY_DOMAIN_ANY 

            - AVAILABILITY_DOMAIN_1 

            - AVAILABILITY_DOMAIN_2 For improved reliability, customers should configure a pair of attachments, one per availability domain. The selected availability domain will be provided to the Partner via the pairing key, so that the provisioned circuit will lie in the specified domain. If not specified, the value will default to AVAILABILITY_DOMAIN_ANY.
          enum:
            - AVAILABILITY_DOMAIN_1
            - AVAILABILITY_DOMAIN_2
            - AVAILABILITY_DOMAIN_ANY
          type: string
        googleReferenceId:
          description: "[Output Only] Google reference ID, to be used when raising support
            tickets with Google or otherwise to debug backend connectivity
            issues. [Deprecated] This field is not used."
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        interconnect:
          description: URL of the underlying Interconnect object that this attachment's
            traffic will traverse through.
          type: string
        kind:
          default: compute#interconnectAttachment
          description: "[Output Only] Type of the resource. Always
            compute#interconnectAttachment for interconnect attachments."
          type: string
        name:
          description: Name of the resource. Provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        operationalStatus:
          description: >-
            [Output Only] The current status of whether or not this interconnect
            attachment is functional, which can take one of the following
            values: 

            - OS_ACTIVE: The attachment has been turned up and is ready to use. 

            - OS_UNPROVISIONED: The attachment is not ready to use yet, because turnup is not complete.
          enum:
            - OS_ACTIVE
            - OS_UNPROVISIONED
          type: string
        pairingKey:
          description: '[Output only for type PARTNER. Input only for PARTNER_PROVIDER. Not
            present for DEDICATED]. The opaque identifier of an PARTNER
            attachment used to initiate provisioning with a selected partner. Of
            the form "XXXXX/region/domain"'
          type: string
        partnerAsn:
          description: Optional BGP ASN for the router supplied by a Layer 3 Partner if
            they configured BGP on behalf of the customer. Output only for
            PARTNER type, input only for PARTNER_PROVIDER, not available for
            DEDICATED.
          format: int64
          type: string
        partnerMetadata:
          $ref: "#/components/schemas/InterconnectAttachmentPartnerMetadata"
        privateInterconnectInfo:
          $ref: "#/components/schemas/InterconnectAttachmentPrivateInfo"
        region:
          description: "[Output Only] URL of the region where the regional interconnect
            attachment resides. You must specify this field as part of the HTTP
            request URL. It is not settable as a field in the request body."
          type: string
        router:
          description: URL of the Cloud Router to be used for dynamic routing. This router
            must be in the same region as this InterconnectAttachment. The
            InterconnectAttachment will automatically connect the Interconnect
            to the network & region within which the Cloud Router is configured.
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        state:
          description: >-
            [Output Only] The current state of this attachment's functionality.
            Enum values ACTIVE and UNPROVISIONED are shared by
            DEDICATED/PRIVATE, PARTNER, and PARTNER_PROVIDER interconnect
            attachments, while enum values PENDING_PARTNER,
            PARTNER_REQUEST_RECEIVED, and PENDING_CUSTOMER are used for only
            PARTNER and PARTNER_PROVIDER interconnect attachments. This state
            can take one of the following values: 

            - ACTIVE: The attachment has been turned up and is ready to use. 

            - UNPROVISIONED: The attachment is not ready to use yet, because turnup is not complete. 

            - PENDING_PARTNER: A newly-created PARTNER attachment that has not yet been configured on the Partner side. 

            - PARTNER_REQUEST_RECEIVED: A PARTNER attachment is in the process of provisioning after a PARTNER_PROVIDER attachment was created that references it. 

            - PENDING_CUSTOMER: A PARTNER or PARTNER_PROVIDER attachment that is waiting for a customer to activate it. 

            - DEFUNCT: The attachment was deleted externally and is no longer functional. This could be because the associated Interconnect was removed, or because the other side of a Partner attachment was deleted.
          enum:
            - ACTIVE
            - DEFUNCT
            - PARTNER_REQUEST_RECEIVED
            - PENDING_CUSTOMER
            - PENDING_PARTNER
            - STATE_UNSPECIFIED
            - UNPROVISIONED
          type: string
        type:
          description: >-
            The type of interconnect attachment this is, which can take one of
            the following values: 

            - DEDICATED: an attachment to a Dedicated Interconnect. 

            - PARTNER: an attachment to a Partner Interconnect, created by the customer. 

            - PARTNER_PROVIDER: an attachment to a Partner Interconnect, created by the partner.
          enum:
            - DEDICATED
            - PARTNER
            - PARTNER_PROVIDER
          type: string
        vlanTag8021q:
          description: The IEEE 802.1Q VLAN tag for this attachment, in the range 2-4094.
            Only specified at creation time.
          format: int32
          type: integer
      type: object
    InterconnectAttachmentAggregatedList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/InterconnectAttachmentsScopedList"
          description: A list of InterconnectAttachmentsScopedList resources.
          type: object
        kind:
          default: compute#interconnectAttachmentAggregatedList
          description: "[Output Only] Type of resource. Always
            compute#interconnectAttachmentAggregatedList for aggregated lists of
            interconnect attachments."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    InterconnectAttachmentList:
      description: Response to the list request, and contains a list of interconnect
        attachments.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of InterconnectAttachment resources.
          items:
            $ref: "#/components/schemas/InterconnectAttachment"
          type: array
        kind:
          default: compute#interconnectAttachmentList
          description: "[Output Only] Type of resource. Always
            compute#interconnectAttachmentList for lists of interconnect
            attachments."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    InterconnectAttachmentPartnerMetadata:
      description: Informational metadata about Partner attachments from Partners to
        display to customers. These fields are propagated from PARTNER_PROVIDER
        attachments to their corresponding PARTNER attachments.
      properties:
        interconnectName:
          description: Plain text name of the Interconnect this attachment is connected to,
            as displayed in the Partner?s portal. For instance "Chicago 1". This
            value may be validated to match approved Partner values.
          type: string
        partnerName:
          description: Plain text name of the Partner providing this attachment. This value
            may be validated to match approved Partner values.
          type: string
        portalUrl:
          description: URL of the Partner?s portal for this Attachment. Partners may
            customise this to be a deep link to the specific resource on the
            Partner portal. This value may be validated to match approved
            Partner values.
          type: string
      type: object
    InterconnectAttachmentPrivateInfo:
      description: Information for an interconnect attachment when this belongs to an
        interconnect of type DEDICATED.
      properties:
        tag8021q:
          description: "[Output Only] 802.1q encapsulation tag to be used for traffic
            between Google and the customer, going to and from this network and
            region."
          format: uint32
          type: integer
      type: object
    InterconnectAttachmentsScopedList:
      properties:
        interconnectAttachments:
          description: A list of interconnect attachments contained in this scope.
          items:
            $ref: "#/components/schemas/InterconnectAttachment"
          type: array
        warning:
          description: Informational warning which replaces the list of addresses when the
            list is empty.
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    InterconnectCircuitInfo:
      description: "Describes a single physical circuit between the Customer and Google.
        CircuitInfo objects are created by Google, so all fields are output
        only. Next id: 4"
      properties:
        customerDemarcId:
          description: Customer-side demarc ID for this circuit.
          type: string
        googleCircuitId:
          description: Google-assigned unique ID for this circuit. Assigned at circuit
            turn-up.
          type: string
        googleDemarcId:
          description: Google-side demarc ID for this circuit. Assigned at circuit turn-up
            and provided by Google to the customer in the LOA.
          type: string
      type: object
    InterconnectDiagnostics:
      description: Diagnostics information about interconnect, contains detailed and
        current technical information about Google?s side of the connection.
      properties:
        arpCaches:
          description: A list of InterconnectDiagnostics.ARPEntry objects, describing
            individual neighbors currently seen by the Google router in the ARP
            cache for the Interconnect. This will be empty when the Interconnect
            is not bundled.
          items:
            $ref: "#/components/schemas/InterconnectDiagnosticsARPEntry"
          type: array
        links:
          description: A list of InterconnectDiagnostics.LinkStatus objects, describing the
            status for each link on the Interconnect.
          items:
            $ref: "#/components/schemas/InterconnectDiagnosticsLinkStatus"
          type: array
        macAddress:
          description: The MAC address of the Interconnect's bundle interface.
          type: string
      type: object
    InterconnectDiagnosticsARPEntry:
      description: Describing the ARP neighbor entries seen on this link
      properties:
        ipAddress:
          description: The IP address of this ARP neighbor.
          type: string
        macAddress:
          description: The MAC address of this ARP neighbor.
          type: string
      type: object
    InterconnectDiagnosticsLinkLACPStatus:
      properties:
        googleSystemId:
          description: System ID of the port on Google?s side of the LACP exchange.
          type: string
        neighborSystemId:
          description: System ID of the port on the neighbor?s side of the LACP exchange.
          type: string
        state:
          description: >-
            The state of a LACP link, which can take one of the following
            values: 

            - ACTIVE: The link is configured and active within the bundle. 

            - DETACHED: The link is not configured within the bundle. This means that the rest of the object should be empty.
          enum:
            - ACTIVE
            - DETACHED
          type: string
      type: object
    InterconnectDiagnosticsLinkOpticalPower:
      properties:
        state:
          description: >-
            The status of the current value when compared to the warning and
            alarm levels for the receiving or transmitting transceiver. Possible
            states include:  

            - OK: The value has not crossed a warning threshold. 

            - LOW_WARNING: The value has crossed below the low warning threshold. 

            - HIGH_WARNING: The value has crossed above the high warning threshold. 

            - LOW_ALARM: The value has crossed below the low alarm threshold. 

            - HIGH_ALARM: The value has crossed above the high alarm threshold.
          enum:
            - HIGH_ALARM
            - HIGH_WARNING
            - LOW_ALARM
            - LOW_WARNING
            - OK
          type: string
        value:
          description: Value of the current receiving or transmitting optical power, read
            in dBm. Take a known good optical value, give it a 10% margin and
            trigger warnings relative to that value. In general, a -7dBm warning
            and a -11dBm alarm are good optical value estimates for most links.
          format: float
          type: number
      type: object
    InterconnectDiagnosticsLinkStatus:
      properties:
        arpCaches:
          description: A list of InterconnectDiagnostics.ARPEntry objects, describing the
            ARP neighbor entries seen on this link. This will be empty if the
            link is bundled
          items:
            $ref: "#/components/schemas/InterconnectDiagnosticsARPEntry"
          type: array
        circuitId:
          description: The unique ID for this link assigned during turn up by Google.
          type: string
        googleDemarc:
          description: The Demarc address assigned by Google and provided in the LoA.
          type: string
        lacpStatus:
          $ref: "#/components/schemas/InterconnectDiagnosticsLinkLACPStatus"
        receivingOpticalPower:
          $ref: "#/components/schemas/InterconnectDiagnosticsLinkOpticalPower"
        transmittingOpticalPower:
          $ref: "#/components/schemas/InterconnectDiagnosticsLinkOpticalPower"
      type: object
    InterconnectList:
      description: Response to the list request, and contains a list of interconnects.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of Interconnect resources.
          items:
            $ref: "#/components/schemas/Interconnect"
          type: array
        kind:
          default: compute#interconnectList
          description: "[Output Only] Type of resource. Always compute#interconnectList for
            lists of interconnects."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    InterconnectLocation:
      description: >-
        Represents an Interconnect Attachment (VLAN) Location resource.


        You can use this resource to find location details about an Interconnect attachment (VLAN). For more information about interconnect attachments, read  Creating VLAN Attachments.
      properties:
        address:
          description: "[Output Only] The postal address of the Point of Presence, each
            line in the address is separated by a newline character."
          type: string
        availabilityZone:
          description: '[Output Only] Availability zone for this InterconnectLocation.
            Within a metropolitan area (metro), maintenance will not be
            simultaneously scheduled in more than one availability zone.
            Example: "zone1" or "zone2".'
          type: string
        city:
          description: '[Output Only] Metropolitan area designator that indicates which
            city an interconnect is located. For example: "Chicago, IL",
            "Amsterdam, Netherlands".'
          type: string
        continent:
          description: >-
            [Output Only] Continent for this location, which can take one of the
            following values: 

            - AFRICA 

            - ASIA_PAC 

            - EUROPE 

            - NORTH_AMERICA 

            - SOUTH_AMERICA
          enum:
            - AFRICA
            - ASIA_PAC
            - C_AFRICA
            - C_ASIA_PAC
            - C_EUROPE
            - C_NORTH_AMERICA
            - C_SOUTH_AMERICA
            - EUROPE
            - NORTH_AMERICA
            - SOUTH_AMERICA
          type: string
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: "[Output Only] An optional description of the resource."
          type: string
        facilityProvider:
          description: "[Output Only] The name of the provider for this facility (e.g.,
            EQUINIX)."
          type: string
        facilityProviderFacilityId:
          description: "[Output Only] A provider-assigned Identifier for this facility
            (e.g., Ashburn-DC1)."
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#interconnectLocation
          description: "[Output Only] Type of the resource. Always
            compute#interconnectLocation for interconnect locations."
          type: string
        name:
          description: "[Output Only] Name of the resource."
          type: string
        peeringdbFacilityId:
          description: "[Output Only] The peeringdb identifier for this facility
            (corresponding with a netfac type in peeringdb)."
          type: string
        regionInfos:
          description: "[Output Only] A list of InterconnectLocation.RegionInfo objects,
            that describe parameters pertaining to the relation between this
            InterconnectLocation and various Google Cloud regions."
          items:
            $ref: "#/components/schemas/InterconnectLocationRegionInfo"
          type: array
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        status:
          description: >-
            [Output Only] The status of this InterconnectLocation, which can
            take one of the following values: 

            - CLOSED: The InterconnectLocation is closed and is unavailable for provisioning new Interconnects. 

            - AVAILABLE: The InterconnectLocation is available for provisioning new Interconnects.
          enum:
            - AVAILABLE
            - CLOSED
          type: string
      type: object
    InterconnectLocationList:
      description: Response to the list request, and contains a list of interconnect
        locations.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of InterconnectLocation resources.
          items:
            $ref: "#/components/schemas/InterconnectLocation"
          type: array
        kind:
          default: compute#interconnectLocationList
          description: "[Output Only] Type of resource. Always
            compute#interconnectLocationList for lists of interconnect
            locations."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    InterconnectLocationRegionInfo:
      description: Information about any potential InterconnectAttachments between an
        Interconnect at a specific InterconnectLocation, and a specific Cloud
        Region.
      properties:
        expectedRttMs:
          description: Expected round-trip time in milliseconds, from this
            InterconnectLocation to a VM in this region.
          format: int64
          type: string
        locationPresence:
          description: Identifies the network presence of this location.
          enum:
            - GLOBAL
            - LOCAL_REGION
            - LP_GLOBAL
            - LP_LOCAL_REGION
          type: string
        region:
          description: URL for the region of this location.
          type: string
      type: object
    InterconnectOutageNotification:
      description: "Description of a planned outage on this Interconnect. Next id: 9"
      properties:
        affectedCircuits:
          description: If issue_type is IT_PARTIAL_OUTAGE, a list of the Google-side
            circuit IDs that will be affected.
          items:
            type: string
          type: array
        description:
          description: A description about the purpose of the outage.
          type: string
        endTime:
          description: Scheduled end time for the outage (milliseconds since Unix epoch).
          format: int64
          type: string
        issueType:
          description: >-
            Form this outage is expected to take, which can take one of the
            following values: 

            - OUTAGE: The Interconnect may be completely out of service for some or all of the specified window. 

            - PARTIAL_OUTAGE: Some circuits comprising the Interconnect as a whole should remain up, but with reduced bandwidth. Note that the versions of this enum prefixed with "IT_" have been deprecated in favor of the unprefixed values.
          enum:
            - IT_OUTAGE
            - IT_PARTIAL_OUTAGE
            - OUTAGE
            - PARTIAL_OUTAGE
          type: string
        name:
          description: Unique identifier for this outage notification.
          type: string
        source:
          description: >-
            The party that generated this notification, which can take the
            following value: 

            - GOOGLE: this notification as generated by Google. Note that the value of NSRC_GOOGLE has been deprecated in favor of GOOGLE.
          enum:
            - GOOGLE
            - NSRC_GOOGLE
          type: string
        startTime:
          description: Scheduled start time for the outage (milliseconds since Unix epoch).
          format: int64
          type: string
        state:
          description: >-
            State of this notification, which can take one of the following
            values: 

            - ACTIVE: This outage notification is active. The event could be in the past, present, or future. See start_time and end_time for scheduling. 

            - CANCELLED: The outage associated with this notification was cancelled before the outage was due to start. Note that the versions of this enum prefixed with "NS_" have been deprecated in favor of the unprefixed values.
          enum:
            - ACTIVE
            - CANCELLED
            - COMPLETED
            - NS_ACTIVE
            - NS_CANCELED
          type: string
      type: object
    InterconnectsGetDiagnosticsResponse:
      description: Response for the InterconnectsGetDiagnosticsRequest.
      properties:
        result:
          $ref: "#/components/schemas/InterconnectDiagnostics"
      type: object
    License:
      description: A license resource.
      properties:
        chargesUseFee:
          description: "[Output Only] Deprecated. This field no longer reflects whether a
            license charges a usage fee."
          type: boolean
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional textual description of the resource; provided by the
            client when the resource is created.
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#license
          description: "[Output Only] Type of resource. Always compute#license for
            licenses."
          type: string
        licenseCode:
          description: "[Output Only] The unique code used to attach this license to
            images, snapshots, and disks."
          format: uint64
          type: string
        name:
          description: Name of the resource. The name must be 1-63 characters long and
            comply with RFC1035.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        resourceRequirements:
          $ref: "#/components/schemas/LicenseResourceRequirements"
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        transferable:
          description: If false, licenses will not be copied from the source resource when
            creating an image from a disk, disk from snapshot, or snapshot from
            disk.
          type: boolean
      type: object
    LicenseCode:
      properties:
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: "[Output Only] Description of this License Code."
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#licenseCode
          description: "[Output Only] Type of resource. Always compute#licenseCode for
            licenses."
          type: string
        licenseAlias:
          description: "[Output Only] URL and description aliases of Licenses with the same
            License Code."
          items:
            $ref: "#/components/schemas/LicenseCodeLicenseAlias"
          type: array
        name:
          description: "[Output Only] Name of the resource. The name is 1-20 characters
            long and must be a valid 64 bit integer."
          pattern: "[0-9]{0,20}?"
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        state:
          description: "[Output Only] Current state of this License Code."
          enum:
            - DISABLED
            - ENABLED
            - RESTRICTED
            - STATE_UNSPECIFIED
            - TERMINATED
          type: string
        transferable:
          description: "[Output Only] If true, the license will remain attached when
            creating images or snapshots from disks. Otherwise, the license is
            not transferred."
          type: boolean
      type: object
    LicenseCodeLicenseAlias:
      properties:
        description:
          description: "[Output Only] Description of this License Code."
          type: string
        selfLink:
          description: "[Output Only] URL of license corresponding to this License Code."
          type: string
      type: object
    LicenseResourceRequirements:
      properties:
        minGuestCpuCount:
          description: Minimum number of guest cpus required to use the Instance. Enforced
            at Instance creation and Instance start.
          format: int32
          type: integer
        minMemoryMb:
          description: Minimum memory required to use the Instance. Enforced at Instance
            creation and Instance start.
          format: int32
          type: integer
      type: object
    LicensesListResponse:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of License resources.
          items:
            $ref: "#/components/schemas/License"
          type: array
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    LogConfig:
      description: Specifies what kind of log the caller must write
      properties:
        cloudAudit:
          $ref: "#/components/schemas/LogConfigCloudAuditOptions"
        counter:
          $ref: "#/components/schemas/LogConfigCounterOptions"
        dataAccess:
          $ref: "#/components/schemas/LogConfigDataAccessOptions"
      type: object
    LogConfigCloudAuditOptions:
      description: Write a Cloud Audit log
      properties:
        authorizationLoggingOptions:
          $ref: "#/components/schemas/AuthorizationLoggingOptions"
        logName:
          description: The log_name to populate in the Cloud Audit Record.
          enum:
            - ADMIN_ACTIVITY
            - DATA_ACCESS
            - UNSPECIFIED_LOG_NAME
          type: string
      type: object
    LogConfigCounterOptions:
      description: >-
        Increment a streamz counter with the specified metric and field names.


        Metric names should start with a '/', generally be lowercase-only, and end in "_count". Field names should not contain an initial slash. The actual exported metric names will have "/iam/policy" prepended.


        Field names correspond to IAM request parameters and field values are their respective values.


        Supported field names: - "authority", which is "[token]" if IAMContext.token is present, otherwise the value of IAMContext.authority_selector if present, and otherwise a representation of IAMContext.principal; or - "iam_principal", a representation of IAMContext.principal even if a token or authority selector is present; or - "" (empty string), resulting in a counter with no fields.


        Examples: counter { metric: "/debug_access_count" field: "iam_principal" } ==> increment counter /iam/policy/backend_debug_access_count {iam_principal=[value of IAMContext.principal]}


        At this time we do not support multiple field names (though this may be supported in the future).
      properties:
        field:
          description: The field value to attribute.
          type: string
        metric:
          description: The metric to update.
          type: string
      type: object
    LogConfigDataAccessOptions:
      description: Write a Data Access (Gin) log
      properties:
        logMode:
          description: Whether Gin logging should happen in a fail-closed manner at the
            caller. This is relevant only in the LocalIAM implementation, for
            now.
          enum:
            - LOG_FAIL_CLOSED
            - LOG_MODE_UNSPECIFIED
          type: string
      type: object
    MachineType:
      description: >-
        Represents a Machine Type resource.


        You can use specific machine types for your VM instances based on performance and pricing requirements. For more information, read Machine Types. (== resource_for v1.machineTypes ==) (== resource_for beta.machineTypes ==)
      properties:
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        deprecated:
          $ref: "#/components/schemas/DeprecationStatus"
        description:
          description: "[Output Only] An optional textual description of the resource."
          type: string
        guestCpus:
          description: "[Output Only] The number of virtual CPUs that are available to the
            instance."
          format: int32
          type: integer
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        imageSpaceGb:
          description: "[Deprecated] This property is deprecated and will never be
            populated with any relevant values."
          format: int32
          type: integer
        isSharedCpu:
          description: "[Output Only] Whether this machine type has a shared CPU. See
            Shared-core machine types for more information."
          type: boolean
        kind:
          default: compute#machineType
          description: "[Output Only] The type of the resource. Always compute#machineType
            for machine types."
          type: string
        maximumPersistentDisks:
          description: "[Output Only] Maximum persistent disks allowed."
          format: int32
          type: integer
        maximumPersistentDisksSizeGb:
          description: "[Output Only] Maximum total persistent disks size (GB) allowed."
          format: int64
          type: string
        memoryMb:
          description: "[Output Only] The amount of physical memory available to the
            instance, defined in MB."
          format: int32
          type: integer
        name:
          description: "[Output Only] Name of the resource."
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        scratchDisks:
          description: "[Output Only] A list of extended scratch disks assigned to the
            instance."
          items:
            properties:
              diskGb:
                description: Size of the scratch disk, defined in GB.
                format: int32
                type: integer
            type: object
          type: array
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        zone:
          description: "[Output Only] The name of the zone where the machine type resides,
            such as us-central1-a."
          type: string
      type: object
    MachineTypeAggregatedList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/MachineTypesScopedList"
          description: A list of MachineTypesScopedList resources.
          type: object
        kind:
          default: compute#machineTypeAggregatedList
          description: "[Output Only] Type of resource. Always
            compute#machineTypeAggregatedList for aggregated lists of machine
            types."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    MachineTypeList:
      description: Contains a list of machine types.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of MachineType resources.
          items:
            $ref: "#/components/schemas/MachineType"
          type: array
        kind:
          default: compute#machineTypeList
          description: "[Output Only] Type of resource. Always compute#machineTypeList for
            lists of machine types."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    MachineTypesScopedList:
      properties:
        machineTypes:
          description: "[Output Only] A list of machine types contained in this scope."
          items:
            $ref: "#/components/schemas/MachineType"
          type: array
        warning:
          description: "[Output Only] An informational warning that appears when the
            machine types list is empty."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    ManagedInstance:
      description: A Managed Instance resource.
      properties:
        currentAction:
          description: >-
            [Output Only] The current action that the managed instance group has
            scheduled for the instance. Possible values: 

            - NONE The instance is running, and the managed instance group does not have any scheduled actions for this instance. 

            - CREATING The managed instance group is creating this instance. If the group fails to create this instance, it will try again until it is successful. 

            - CREATING_WITHOUT_RETRIES The managed instance group is attempting to create this instance only once. If the group fails to create this instance, it does not try again and the group's targetSize value is decreased instead. 

            - RECREATING The managed instance group is recreating this instance. 

            - DELETING The managed instance group is permanently deleting this instance. 

            - ABANDONING The managed instance group is abandoning this instance. The instance will be removed from the instance group and from any target pools that are associated with this group. 

            - RESTARTING The managed instance group is restarting the instance. 

            - REFRESHING The managed instance group is applying configuration changes to the instance without stopping it. For example, the group can update the target pool list for an instance without stopping that instance. 

            - VERIFYING The managed instance group has created the instance and it is in the process of being verified.
          enum:
            - ABANDONING
            - CREATING
            - CREATING_WITHOUT_RETRIES
            - DELETING
            - NONE
            - RECREATING
            - REFRESHING
            - RESTARTING
            - VERIFYING
          type: string
        id:
          description: "[Output only] The unique identifier for this resource. This field
            is empty when instance does not exist."
          format: uint64
          type: string
        instance:
          description: "[Output Only] The URL of the instance. The URL can exist even if
            the instance has not yet been created."
          type: string
        instanceStatus:
          description: "[Output Only] The status of the instance. This field is empty when
            the instance does not exist."
          enum:
            - PROVISIONING
            - REPAIRING
            - RUNNING
            - STAGING
            - STOPPED
            - STOPPING
            - SUSPENDED
            - SUSPENDING
            - TERMINATED
          type: string
        lastAttempt:
          $ref: "#/components/schemas/ManagedInstanceLastAttempt"
        version:
          $ref: "#/components/schemas/ManagedInstanceVersion"
      type: object
    ManagedInstanceLastAttempt:
      properties:
        errors:
          description: "[Output Only] Encountered errors during the last attempt to create
            or delete the instance."
          properties:
            errors:
              description: "[Output Only] The array of errors encountered while processing
                this operation."
              items:
                properties:
                  code:
                    description: "[Output Only] The error type identifier for this error."
                    type: string
                  location:
                    description: "[Output Only] Indicates the field in the request that
                      caused the error. This property is optional."
                    type: string
                  message:
                    description: "[Output Only] An optional, human-readable error message."
                    type: string
                type: object
              type: array
          type: object
      type: object
    ManagedInstanceVersion:
      properties:
        instanceTemplate:
          description: "[Output Only] The intended template of the instance. This field is
            empty when current_action is one of { DELETING, ABANDONING }."
          type: string
        name:
          description: "[Output Only] Name of the version."
          type: string
      type: object
    Metadata:
      description: A metadata key/value entry.
      properties:
        fingerprint:
          description: >-
            Specifies a fingerprint for this request, which is essentially a
            hash of the metadata's contents and used for optimistic locking. The
            fingerprint is initially generated by Compute Engine and changes
            after every request to modify or update metadata. You must always
            provide an up-to-date fingerprint hash in order to update or change
            metadata, otherwise the request will fail with error 412
            conditionNotMet.


            To see the latest fingerprint, make a get() request to retrieve the resource.
          format: byte
          type: string
        items:
          description: Array of key/value pairs. The total size of all keys and values must
            be less than 512 KB.
          items:
            properties:
              key:
                description: "Key for the metadata entry. Keys must conform to the
                  following regexp: [a-zA-Z0-9-_]+, and be less than 128 bytes
                  in length. This is reflected as part of a URL in the metadata
                  server. Additionally, to avoid ambiguity, keys must not
                  conflict with any other metadata keys for the project."
                pattern: "[a-zA-Z0-9-_]{1,128}"
                type: string
              value:
                description: Value for the metadata entry. These are free-form strings, and
                  only have meaning as interpreted by the image running in the
                  instance. The only restriction placed on values is that their
                  size must be less than or equal to 262144 bytes (256 KiB).
                type: string
            type: object
          type: array
        kind:
          default: compute#metadata
          description: "[Output Only] Type of the resource. Always compute#metadata for
            metadata."
          type: string
      type: object
    MetadataFilter:
      description: >-
        Opaque filter criteria used by loadbalancers to restrict routing
        configuration to a limited set of loadbalancing proxies. Proxies and
        sidecars involved in loadbalancing would typically present metadata to
        the loadbalancers which need to match criteria specified here. If a
        match takes place, the relevant routing configuration is made available
        to those proxies.

        For each metadataFilter in this list, if its filterMatchCriteria is set to MATCH_ANY, at least one of the filterLabels must match the corresponding label provided in the metadata. If its filterMatchCriteria is set to MATCH_ALL, then all of its filterLabels must match with corresponding labels in the provided metadata.

        An example for using metadataFilters would be: if loadbalancing involves  Envoys, they will only receive routing configuration when values in metadataFilters match values supplied in <a href="https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/core/base.proto#envoy-api-msg-core-node" Node metadata of their XDS requests to loadbalancers.
      properties:
        filterLabels:
          description: >-
            The list of label value pairs that must match labels in the provided
            metadata based on filterMatchCriteria 

            This list must not be empty and can have at the most 64 entries.
          items:
            $ref: "#/components/schemas/MetadataFilterLabelMatch"
          type: array
        filterMatchCriteria:
          description: >-
            Specifies how individual filterLabel matches within the list of
            filterLabels contribute towards the overall metadataFilter match.

            Supported values are:  

            - MATCH_ANY: At least one of the filterLabels must have a matching label in the provided metadata. 

            - MATCH_ALL: All filterLabels must have matching labels in the provided metadata.
          enum:
            - MATCH_ALL
            - MATCH_ANY
            - NOT_SET
          type: string
      type: object
    MetadataFilterLabelMatch:
      description: MetadataFilter label name value pairs that are expected to match
        corresponding labels presented as metadata to the loadbalancer.
      properties:
        name:
          description: >-
            Name of metadata label.

            The name can have a maximum length of 1024 characters and must be at least 1 character long.
          type: string
        value:
          description: |-
            The value of the label must match the specified value.
            value can have a maximum length of 1024 characters.
          type: string
      type: object
    NamedPort:
      description: "The named port. For example: ."
      properties:
        name:
          description: The name for this named port. The name must be 1-63 characters long,
            and comply with RFC1035.
          type: string
        port:
          description: The port number, which can be a value between 1 and 65535.
          format: int32
          type: integer
      type: object
    Network:
      description: >-
        Represents a VPC Network resource.


        Networks connect resources to each other and to the internet. For more information, read Virtual Private Cloud (VPC) Network. (== resource_for v1.networks ==) (== resource_for beta.networks ==)
      properties:
        IPv4Range:
          description: "Deprecated in favor of subnet mode networks. The range of internal
            addresses that are legal on this network. This range is a CIDR
            specification, for example: 192.168.0.0/16. Provided by the client
            when the network is created."
          pattern: "[0-9]{1,3}(?:\\.[0-9]{1,3}){3}/[0-9]{1,2}"
          type: string
        autoCreateSubnetworks:
          description: >-
            When set to true, the VPC network is created in "auto" mode. When
            set to false, the VPC network is created in "custom" mode.


            An auto mode VPC network starts with one subnet per region. Each subnet has a predetermined range as described in Auto mode VPC network IP ranges.
          type: boolean
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this field when
            you create the resource.
          type: string
        gatewayIPv4:
          description: "[Output Only] The gateway address for default routing out of the
            network, selected by GCP."
          pattern: "[0-9]{1,3}(?:\\.[0-9]{1,3}){3}"
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#network
          description: "[Output Only] Type of the resource. Always compute#network for
            networks."
          type: string
        name:
          description: Name of the resource. Provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?. The first
            character must be a lowercase letter, and all following characters
            (except for the last character) must be a dash, lowercase letter, or
            digit. The last character must be a lowercase letter or digit.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        peerings:
          description: "[Output Only] A list of network peerings for the resource."
          items:
            $ref: "#/components/schemas/NetworkPeering"
          type: array
        routingConfig:
          $ref: "#/components/schemas/NetworkRoutingConfig"
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        subnetworks:
          description: "[Output Only] Server-defined fully-qualified URLs for all
            subnetworks in this VPC network."
          items:
            type: string
          type: array
      type: object
    NetworkEndpoint:
      description: The network endpoint.
      properties:
        instance:
          description: >-
            The name for a specific VM instance that the IP address belongs to.
            This is required for network endpoints of type GCE_VM_IP_PORT. The
            instance must be in the same zone of network endpoint group.


            The name must be 1-63 characters long, and comply with RFC1035.
          type: string
        ipAddress:
          description: Optional IPv4 address of network endpoint. The IP address must
            belong to a VM in Compute Engine (either the primary IP or as part
            of an aliased IP range). If the IP address is not specified, then
            the primary IP address for the VM instance in the network that the
            network endpoint group belongs to will be used.
          type: string
        port:
          description: Optional port number of network endpoint. If not specified and the
            NetworkEndpointGroup.network_endpoint_type is GCE_IP_PORT, the
            defaultPort for the network endpoint group will be used.
          format: int32
          type: integer
      type: object
    NetworkEndpointGroup:
      description: Represents a collection of network endpoints.
      properties:
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        defaultPort:
          description: The default port used if the port number is not specified in the
            network endpoint.
          format: int32
          type: integer
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#networkEndpointGroup
          description: "[Output Only] Type of the resource. Always
            compute#networkEndpointGroup for network endpoint group."
          type: string
        name:
          description: Name of the resource; provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          type: string
        network:
          description: The URL of the network to which all network endpoints in the NEG
            belong. Uses "default" project network if unspecified.
          type: string
        networkEndpointType:
          description: Type of network endpoints in this network endpoint group. Currently
            the only supported value is GCE_VM_IP_PORT.
          enum:
            - GCE_VM_IP_PORT
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        size:
          description: "[Output only] Number of network endpoints in the network endpoint
            group."
          format: int32
          type: integer
        subnetwork:
          description: Optional URL of the subnetwork to which all network endpoints in the
            NEG belong.
          type: string
        zone:
          description: "[Output Only] The URL of the zone where the network endpoint group
            is located."
          type: string
      type: object
    NetworkEndpointGroupAggregatedList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/NetworkEndpointGroupsScopedList"
          description: A list of NetworkEndpointGroupsScopedList resources.
          type: object
        kind:
          default: compute#networkEndpointGroupAggregatedList
          description: "[Output Only] The resource type, which is always
            compute#networkEndpointGroupAggregatedList for aggregated lists of
            network endpoint groups."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    NetworkEndpointGroupList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of NetworkEndpointGroup resources.
          items:
            $ref: "#/components/schemas/NetworkEndpointGroup"
          type: array
        kind:
          default: compute#networkEndpointGroupList
          description: "[Output Only] The resource type, which is always
            compute#networkEndpointGroupList for network endpoint group lists."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    NetworkEndpointGroupsAttachEndpointsRequest:
      properties:
        networkEndpoints:
          description: The list of network endpoints to be attached.
          items:
            $ref: "#/components/schemas/NetworkEndpoint"
          type: array
      type: object
    NetworkEndpointGroupsDetachEndpointsRequest:
      properties:
        networkEndpoints:
          description: The list of network endpoints to be detached.
          items:
            $ref: "#/components/schemas/NetworkEndpoint"
          type: array
      type: object
    NetworkEndpointGroupsListEndpointsRequest:
      properties:
        healthStatus:
          description: Optional query parameter for showing the health status of each
            network endpoint. Valid options are SKIP or SHOW. If you don't
            specifiy this parameter, the health status of network endpoints will
            not be provided.
          enum:
            - SHOW
            - SKIP
          type: string
      type: object
    NetworkEndpointGroupsListNetworkEndpoints:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of NetworkEndpointWithHealthStatus resources.
          items:
            $ref: "#/components/schemas/NetworkEndpointWithHealthStatus"
          type: array
        kind:
          default: compute#networkEndpointGroupsListNetworkEndpoints
          description: "[Output Only] The resource type, which is always
            compute#networkEndpointGroupsListNetworkEndpoints for the list of
            network endpoints in the specified network endpoint group."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    NetworkEndpointGroupsScopedList:
      properties:
        networkEndpointGroups:
          description: "[Output Only] The list of network endpoint groups that are
            contained in this scope."
          items:
            $ref: "#/components/schemas/NetworkEndpointGroup"
          type: array
        warning:
          description: "[Output Only] An informational warning that replaces the list of
            network endpoint groups when the list is empty."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    NetworkEndpointWithHealthStatus:
      properties:
        healths:
          description: "[Output only] The health status of network endpoint;"
          items:
            $ref: "#/components/schemas/HealthStatusForNetworkEndpoint"
          type: array
        networkEndpoint:
          $ref: "#/components/schemas/NetworkEndpoint"
      type: object
    NetworkInterface:
      description: A network interface resource attached to an instance.
      properties:
        accessConfigs:
          description: An array of configurations for this interface. Currently, only one
            access config, ONE_TO_ONE_NAT, is supported. If there are no
            accessConfigs specified, then this instance will have no external
            internet access.
          items:
            $ref: "#/components/schemas/AccessConfig"
          type: array
        aliasIpRanges:
          description: An array of alias IP ranges for this network interface. You can only
            specify this field for network interfaces in VPC networks.
          items:
            $ref: "#/components/schemas/AliasIpRange"
          type: array
        fingerprint:
          description: Fingerprint hash of contents stored in this network interface. This
            field will be ignored when inserting an Instance or adding a
            NetworkInterface. An up-to-date fingerprint must be provided in
            order to update the NetworkInterface, otherwise the request will
            fail with error 412 conditionNotMet.
          format: byte
          type: string
        kind:
          default: compute#networkInterface
          description: "[Output Only] Type of the resource. Always compute#networkInterface
            for network interfaces."
          type: string
        name:
          description: "[Output Only] The name of the network interface, which is generated
            by the server. For network devices, these are eth0, eth1, etc."
          type: string
        network:
          description: >-
            URL of the network resource for this instance. When creating an
            instance, if neither the network nor the subnetwork is specified,
            the default network global/networks/default is used; if the network
            is not specified but the subnetwork is specified, the network is
            inferred.


            If you specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs:  

            - https://www.googleapis.com/compute/v1/projects/project/global/networks/network 

            - projects/project/global/networks/network 

            - global/networks/default
          type: string
        networkIP:
          description: An IPv4 internal IP address to assign to the instance for this
            network interface. If not specified by the user, an unused internal
            IP is assigned by the system.
          type: string
        subnetwork:
          description: >-
            The URL of the Subnetwork resource for this instance. If the network
            resource is in legacy mode, do not specify this field. If the
            network is in auto subnet mode, specifying the subnetwork is
            optional. If the network is in custom subnet mode, specifying the
            subnetwork is required. If you specify this field, you can specify
            the subnetwork as a full or partial URL. For example, the following
            are all valid URLs:  

            - https://www.googleapis.com/compute/v1/projects/project/regions/region/subnetworks/subnetwork 

            - regions/region/subnetworks/subnetwork
          type: string
      type: object
    NetworkList:
      description: Contains a list of networks.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of Network resources.
          items:
            $ref: "#/components/schemas/Network"
          type: array
        kind:
          default: compute#networkList
          description: "[Output Only] Type of resource. Always compute#networkList for
            lists of networks."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    NetworkPeering:
      description: A network peering attached to a network resource. The message includes
        the peering name, peer network, peering state, and a flag indicating
        whether Google Compute Engine should automatically create routes for the
        peering.
      properties:
        autoCreateRoutes:
          description: This field will be deprecated soon. Use the exchange_subnet_routes
            field instead. Indicates whether full mesh connectivity is created
            and managed automatically between peered networks. Currently this
            field should always be true since Google Compute Engine will
            automatically create and manage subnetwork routes between two
            networks when peering state is ACTIVE.
          type: boolean
        exchangeSubnetRoutes:
          description: Indicates whether full mesh connectivity is created and managed
            automatically between peered networks. Currently this field should
            always be true since Google Compute Engine will automatically create
            and manage subnetwork routes between two networks when peering state
            is ACTIVE.
          type: boolean
        exportCustomRoutes:
          description: Whether to export the custom routes to peer network.
          type: boolean
        importCustomRoutes:
          description: Whether to import the custom routes from peer network.
          type: boolean
        name:
          description: Name of this peering. Provided by the client when the peering is
            created. The name must comply with RFC1035. Specifically, the name
            must be 1-63 characters long and match regular expression
            `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a
            lowercase letter, and all the following characters must be a dash,
            lowercase letter, or digit, except the last character, which cannot
            be a dash.
          type: string
        network:
          description: The URL of the peer network. It can be either full URL or partial
            URL. The peer network may belong to a different project. If the
            partial URL does not contain project, it is assumed that the peer
            network is in the same project as the current network.
          type: string
        state:
          description: "[Output Only] State for the peering, either `ACTIVE` or `INACTIVE`.
            The peering is `ACTIVE` when there's a matching configuration in the
            peer network."
          enum:
            - ACTIVE
            - INACTIVE
          type: string
        stateDetails:
          description: "[Output Only] Details about the current state of the peering."
          type: string
      type: object
    NetworkRoutingConfig:
      description: A routing configuration attached to a network resource. The message
        includes the list of routers associated with the network, and a flag
        indicating the type of routing behavior to enforce network-wide.
      properties:
        routingMode:
          description: The network-wide routing mode to use. If set to REGIONAL, this
            network's Cloud Routers will only advertise routes with subnets of
            this network in the same region as the router. If set to GLOBAL,
            this network's Cloud Routers will advertise routes with all subnets
            of this network, across regions.
          enum:
            - GLOBAL
            - REGIONAL
          type: string
      type: object
    NetworksAddPeeringRequest:
      properties:
        autoCreateRoutes:
          description: This field will be deprecated soon. Use exchange_subnet_routes in
            network_peering instead. Indicates whether full mesh connectivity is
            created and managed automatically between peered networks. Currently
            this field should always be true since Google Compute Engine will
            automatically create and manage subnetwork routes between two
            networks when peering state is ACTIVE.
          type: boolean
        name:
          description: Name of the peering, which should conform to RFC1035.
          type: string
        networkPeering:
          $ref: "#/components/schemas/NetworkPeering"
        peerNetwork:
          description: URL of the peer network. It can be either full URL or partial URL.
            The peer network may belong to a different project. If the partial
            URL does not contain project, it is assumed that the peer network is
            in the same project as the current network.
          type: string
      type: object
    NetworksRemovePeeringRequest:
      properties:
        name:
          description: Name of the peering, which should conform to RFC1035.
          type: string
      type: object
    NetworksUpdatePeeringRequest:
      properties:
        networkPeering:
          $ref: "#/components/schemas/NetworkPeering"
      type: object
    NodeGroup:
      description: >-
        Represent a sole-tenant Node Group resource.


        A sole-tenant node is a physical server that is dedicated to hosting VM instances only for your specific project. Use sole-tenant nodes to keep your instances physically separated from instances in other projects, or to group your instances together on the same host hardware. For more information, read Sole-tenant nodes. (== resource_for beta.nodeGroups ==) (== resource_for v1.nodeGroups ==) NextID: 15
      properties:
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#nodeGroup
          description: "[Output Only] The type of the resource. Always compute#nodeGroup
            for node group."
          type: string
        name:
          description: The name of the resource, provided by the client when initially
            creating the resource. The resource name must be 1-63 characters
            long, and comply with RFC1035. Specifically, the name must be 1-63
            characters long and match the regular expression
            `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be
            a lowercase letter, and all following characters must be a dash,
            lowercase letter, or digit, except the last character, which cannot
            be a dash.
          type: string
        nodeTemplate:
          description: The URL of the node template to which this node group belongs.
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        size:
          description: "[Output Only] The total number of nodes in the node group."
          format: int32
          type: integer
        status:
          enum:
            - CREATING
            - DELETING
            - INVALID
            - READY
          type: string
        zone:
          description: "[Output Only] The name of the zone where the node group resides,
            such as us-central1-a."
          type: string
      type: object
    NodeGroupAggregatedList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/NodeGroupsScopedList"
          description: A list of NodeGroupsScopedList resources.
          type: object
        kind:
          default: compute#nodeGroupAggregatedList
          description: "[Output Only] Type of resource.Always
            compute#nodeGroupAggregatedList for aggregated lists of node
            groups."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    NodeGroupList:
      description: Contains a list of nodeGroups.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of NodeGroup resources.
          items:
            $ref: "#/components/schemas/NodeGroup"
          type: array
        kind:
          default: compute#nodeGroupList
          description: "[Output Only] Type of resource.Always compute#nodeGroupList for
            lists of node groups."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    NodeGroupNode:
      properties:
        instances:
          description: Instances scheduled on this node.
          items:
            type: string
          type: array
        name:
          description: The name of the node.
          type: string
        nodeType:
          description: The type of this node.
          type: string
        serverBinding:
          $ref: "#/components/schemas/ServerBinding"
        status:
          enum:
            - CREATING
            - DELETING
            - INVALID
            - READY
            - REPAIRING
          type: string
      type: object
    NodeGroupsAddNodesRequest:
      properties:
        additionalNodeCount:
          description: Count of additional nodes to be added to the node group.
          format: int32
          type: integer
      type: object
    NodeGroupsDeleteNodesRequest:
      properties:
        nodes:
          description: Names of the nodes to delete.
          items:
            type: string
          type: array
      type: object
    NodeGroupsListNodes:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of Node resources.
          items:
            $ref: "#/components/schemas/NodeGroupNode"
          type: array
        kind:
          default: compute#nodeGroupsListNodes
          description: "[Output Only] The resource type, which is always
            compute.nodeGroupsListNodes for the list of nodes in the specified
            node group."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    NodeGroupsScopedList:
      properties:
        nodeGroups:
          description: "[Output Only] A list of node groups contained in this scope."
          items:
            $ref: "#/components/schemas/NodeGroup"
          type: array
        warning:
          description: "[Output Only] An informational warning that appears when the
            nodeGroup list is empty."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    NodeGroupsSetNodeTemplateRequest:
      properties:
        nodeTemplate:
          description: Full or partial URL of the node template resource to be updated for
            this node group.
          type: string
      type: object
    NodeTemplate:
      description: >-
        Represent a sole-tenant Node Template resource.


        You can use a template to define properties for nodes in a node group. For more information, read Creating node groups and instances. (== resource_for beta.nodeTemplates ==) (== resource_for v1.nodeTemplates ==) (== NextID: 16 ==)
      properties:
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#nodeTemplate
          description: "[Output Only] The type of the resource. Always compute#nodeTemplate
            for node templates."
          type: string
        name:
          description: The name of the resource, provided by the client when initially
            creating the resource. The resource name must be 1-63 characters
            long, and comply with RFC1035. Specifically, the name must be 1-63
            characters long and match the regular expression
            `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be
            a lowercase letter, and all following characters must be a dash,
            lowercase letter, or digit, except the last character, which cannot
            be a dash.
          type: string
        nodeAffinityLabels:
          additionalProperties:
            type: string
          description: Labels to use for node affinity, which will be used in instance
            scheduling.
          type: object
        nodeType:
          description: The node type to use for nodes group that are created from this
            template.
          type: string
        nodeTypeFlexibility:
          $ref: "#/components/schemas/NodeTemplateNodeTypeFlexibility"
        region:
          description: "[Output Only] The name of the region where the node template
            resides, such as us-central1."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        serverBinding:
          $ref: "#/components/schemas/ServerBinding"
        status:
          description: "[Output Only] The status of the node template. One of the following
            values: CREATING, READY, and DELETING."
          enum:
            - CREATING
            - DELETING
            - INVALID
            - READY
          type: string
        statusMessage:
          description: "[Output Only] An optional, human-readable explanation of the
            status."
          type: string
      type: object
    NodeTemplateAggregatedList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/NodeTemplatesScopedList"
          description: A list of NodeTemplatesScopedList resources.
          type: object
        kind:
          default: compute#nodeTemplateAggregatedList
          description: "[Output Only] Type of resource.Always
            compute#nodeTemplateAggregatedList for aggregated lists of node
            templates."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    NodeTemplateList:
      description: Contains a list of node templates.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of NodeTemplate resources.
          items:
            $ref: "#/components/schemas/NodeTemplate"
          type: array
        kind:
          default: compute#nodeTemplateList
          description: "[Output Only] Type of resource.Always compute#nodeTemplateList for
            lists of node templates."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    NodeTemplateNodeTypeFlexibility:
      properties:
        cpus:
          type: string
        localSsd:
          type: string
        memory:
          type: string
      type: object
    NodeTemplatesScopedList:
      properties:
        nodeTemplates:
          description: "[Output Only] A list of node templates contained in this scope."
          items:
            $ref: "#/components/schemas/NodeTemplate"
          type: array
        warning:
          description: "[Output Only] An informational warning that appears when the node
            templates list is empty."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    NodeType:
      description: >-
        Represent a sole-tenant Node Type resource.


        Each node within a node group must have a node type. A node type specifies the total amount of cores and memory for that node. Currently, the only available node type is n1-node-96-624 node type that has 96 vCPUs and 624 GB of memory, available in multiple zones. For more information read Node types. (== resource_for beta.nodeTypes ==) (== resource_for v1.nodeTypes ==)
      properties:
        cpuPlatform:
          description: "[Output Only] The CPU platform used by this node type."
          type: string
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        deprecated:
          $ref: "#/components/schemas/DeprecationStatus"
        description:
          description: "[Output Only] An optional textual description of the resource."
          type: string
        guestCpus:
          description: "[Output Only] The number of virtual CPUs that are available to the
            node type."
          format: int32
          type: integer
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#nodeType
          description: "[Output Only] The type of the resource. Always compute#nodeType for
            node types."
          type: string
        localSsdGb:
          description: "[Output Only] Local SSD available to the node type, defined in GB."
          format: int32
          type: integer
        memoryMb:
          description: "[Output Only] The amount of physical memory available to the node
            type, defined in MB."
          format: int32
          type: integer
        name:
          description: "[Output Only] Name of the resource."
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        zone:
          description: "[Output Only] The name of the zone where the node type resides,
            such as us-central1-a."
          type: string
      type: object
    NodeTypeAggregatedList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/NodeTypesScopedList"
          description: A list of NodeTypesScopedList resources.
          type: object
        kind:
          default: compute#nodeTypeAggregatedList
          description: "[Output Only] Type of resource.Always
            compute#nodeTypeAggregatedList for aggregated lists of node types."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    NodeTypeList:
      description: Contains a list of node types.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of NodeType resources.
          items:
            $ref: "#/components/schemas/NodeType"
          type: array
        kind:
          default: compute#nodeTypeList
          description: "[Output Only] Type of resource.Always compute#nodeTypeList for
            lists of node types."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    NodeTypesScopedList:
      properties:
        nodeTypes:
          description: "[Output Only] A list of node types contained in this scope."
          items:
            $ref: "#/components/schemas/NodeType"
          type: array
        warning:
          description: "[Output Only] An informational warning that appears when the node
            types list is empty."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    Operation:
      description: >-
        Represents an Operation resource.


        You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses.


        Operations can be global, regional or zonal.  

        - For global operations, use the globalOperations resource. 

        - For regional operations, use the regionOperations resource. 

        - For zonal operations, use the zonalOperations resource.  


        For more information, read  Global, Regional, and Zonal Resources. (== resource_for v1.globalOperations ==) (== resource_for beta.globalOperations ==) (== resource_for v1.regionOperations ==) (== resource_for beta.regionOperations ==) (== resource_for v1.zoneOperations ==) (== resource_for beta.zoneOperations ==)
      properties:
        clientOperationId:
          description: "[Output Only] The value of `requestId` if you provided it in the
            request. Not present otherwise."
          type: string
        creationTimestamp:
          description: "[Deprecated] This field is deprecated."
          type: string
        description:
          description: "[Output Only] A textual description of the operation, which is set
            when the operation is created."
          type: string
        endTime:
          description: "[Output Only] The time that this operation was completed. This
            value is in RFC3339 text format."
          type: string
        error:
          description: "[Output Only] If errors are generated during processing of the
            operation, this field will be populated."
          properties:
            errors:
              description: "[Output Only] The array of errors encountered while processing
                this operation."
              items:
                properties:
                  code:
                    description: "[Output Only] The error type identifier for this error."
                    type: string
                  location:
                    description: "[Output Only] Indicates the field in the request that
                      caused the error. This property is optional."
                    type: string
                  message:
                    description: "[Output Only] An optional, human-readable error message."
                    type: string
                type: object
              type: array
          type: object
        httpErrorMessage:
          description: "[Output Only] If the operation fails, this field contains the HTTP
            error message that was returned, such as NOT FOUND."
          type: string
        httpErrorStatusCode:
          description: "[Output Only] If the operation fails, this field contains the HTTP
            error status code that was returned. For example, a 404 means the
            resource was not found."
          format: int32
          type: integer
        id:
          description: "[Output Only] The unique identifier for the operation. This
            identifier is defined by the server."
          format: uint64
          type: string
        insertTime:
          description: "[Output Only] The time that this operation was requested. This
            value is in RFC3339 text format."
          type: string
        kind:
          default: compute#operation
          description: "[Output Only] Type of the resource. Always compute#operation for
            Operation resources."
          type: string
        name:
          description: "[Output Only] Name of the operation."
          type: string
        operationType:
          description: "[Output Only] The type of operation, such as insert, update, or
            delete, and so on."
          type: string
        progress:
          description: "[Output Only] An optional progress indicator that ranges from 0 to
            100. There is no requirement that this be linear or support any
            granularity of operations. This should not be used to guess when the
            operation will be complete. This number should monotonically
            increase as the operation progresses."
          format: int32
          type: integer
        region:
          description: "[Output Only] The URL of the region where the operation resides.
            Only applicable when performing regional operations."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        startTime:
          description: "[Output Only] The time that this operation was started by the
            server. This value is in RFC3339 text format."
          type: string
        status:
          description: "[Output Only] The status of the operation, which can be one of the
            following: PENDING, RUNNING, or DONE."
          enum:
            - DONE
            - PENDING
            - RUNNING
          type: string
        statusMessage:
          description: "[Output Only] An optional textual description of the current status
            of the operation."
          type: string
        targetId:
          description: "[Output Only] The unique target ID, which identifies a specific
            incarnation of the target resource."
          format: uint64
          type: string
        targetLink:
          description: "[Output Only] The URL of the resource that the operation modifies.
            For operations related to creating a snapshot, this points to the
            persistent disk that the snapshot was created from."
          type: string
        user:
          description: "[Output Only] User who requested the operation, for example:
            user@example.com."
          type: string
        warnings:
          description: "[Output Only] If warning messages are generated during processing
            of the operation, this field will be populated."
          items:
            properties:
              code:
                description: "[Output Only] A warning code, if applicable. For example,
                  Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                  results in the response."
                enum:
                  - CLEANUP_FAILED
                  - DEPRECATED_RESOURCE_USED
                  - DEPRECATED_TYPE_USED
                  - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                  - EXPERIMENTAL_TYPE_USED
                  - EXTERNAL_API_WARNING
                  - FIELD_VALUE_OVERRIDEN
                  - INJECTED_KERNELS_DEPRECATED
                  - MISSING_TYPE_DEPENDENCY
                  - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                  - NEXT_HOP_CANNOT_IP_FORWARD
                  - NEXT_HOP_INSTANCE_NOT_FOUND
                  - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                  - NEXT_HOP_NOT_RUNNING
                  - NOT_CRITICAL_ERROR
                  - NO_RESULTS_ON_PAGE
                  - REQUIRED_TOS_AGREEMENT
                  - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                  - RESOURCE_NOT_DELETED
                  - SCHEMA_VALIDATION_IGNORED
                  - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                  - UNDECLARED_PROPERTIES
                  - UNREACHABLE
                type: string
              data:
                description: >-
                  [Output Only] Metadata about this warning in key: value
                  format. For example:

                  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
                items:
                  properties:
                    key:
                      description: "[Output Only] A key that provides more detail on the
                        warning being returned. For example, for warnings where
                        there are no results in a list request for a particular
                        zone, this key might be scope and the key value might be
                        the zone name. Other examples might be a key indicating
                        a deprecated resource and a suggested replacement, or a
                        warning about invalid network settings (for example, if
                        an instance attempts to perform IP forwarding but is not
                        enabled for IP forwarding)."
                      type: string
                    value:
                      description: "[Output Only] A warning data value corresponding to the
                        key."
                      type: string
                  type: object
                type: array
              message:
                description: "[Output Only] A human-readable description of the warning
                  code."
                type: string
            type: object
          type: array
        zone:
          description: "[Output Only] The URL of the zone where the operation resides. Only
            applicable when performing per-zone operations."
          type: string
      type: object
    OperationAggregatedList:
      properties:
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/OperationsScopedList"
          description: "[Output Only] A map of scoped operation lists."
          type: object
        kind:
          default: compute#operationAggregatedList
          description: "[Output Only] Type of resource. Always
            compute#operationAggregatedList for aggregated lists of operations."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    OperationList:
      description: Contains a list of Operation resources.
      properties:
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          type: string
        items:
          description: "[Output Only] A list of Operation resources."
          items:
            $ref: "#/components/schemas/Operation"
          type: array
        kind:
          default: compute#operationList
          description: "[Output Only] Type of resource. Always compute#operations for
            Operations resource."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    OperationsScopedList:
      properties:
        operations:
          description: "[Output Only] A list of operations contained in this scope."
          items:
            $ref: "#/components/schemas/Operation"
          type: array
        warning:
          description: "[Output Only] Informational warning which replaces the list of
            operations when the list is empty."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    OutlierDetection:
      description: Settings controlling eviction of unhealthy hosts from the load balancing
        pool.
      properties:
        baseEjectionTime:
          $ref: "#/components/schemas/Duration"
        consecutiveErrors:
          description: Number of errors before a host is ejected from the connection pool.
            When the backend host is accessed over HTTP, a 5xx return code
            qualifies as an error. Defaults to 5.
          format: int32
          type: integer
        consecutiveGatewayFailure:
          description: The number of consecutive gateway failures (502, 503, 504 status or
            connection errors that are mapped to one of those status codes)
            before a consecutive gateway failure ejection occurs. Defaults to 5.
          format: int32
          type: integer
        enforcingConsecutiveErrors:
          description: The percentage chance that a host will be actually ejected when an
            outlier status is detected through consecutive 5xx. This setting can
            be used to disable ejection or to ramp it up slowly. Defaults to
            100.
          format: int32
          type: integer
        enforcingConsecutiveGatewayFailure:
          description: The percentage chance that a host will be actually ejected when an
            outlier status is detected through consecutive gateway failures.
            This setting can be used to disable ejection or to ramp it up
            slowly. Defaults to 0.
          format: int32
          type: integer
        enforcingSuccessRate:
          description: The percentage chance that a host will be actually ejected when an
            outlier status is detected through success rate statistics. This
            setting can be used to disable ejection or to ramp it up slowly.
            Defaults to 100.
          format: int32
          type: integer
        interval:
          $ref: "#/components/schemas/Duration"
        maxEjectionPercent:
          description: Maximum percentage of hosts in the load balancing pool for the
            backend service that can be ejected. Defaults to 10%.
          format: int32
          type: integer
        successRateMinimumHosts:
          description: The number of hosts in a cluster that must have enough request
            volume to detect success rate outliers. If the number of hosts is
            less than this setting, outlier detection via success rate
            statistics is not performed for any host in the cluster. Defaults to
            5.
          format: int32
          type: integer
        successRateRequestVolume:
          description: The minimum number of total requests that must be collected in one
            interval (as defined by the interval duration above) to include this
            host in success rate based outlier detection. If the volume is lower
            than this setting, outlier detection via success rate statistics is
            not performed for that host. Defaults to 100.
          format: int32
          type: integer
        successRateStdevFactor:
          description: "This factor is used to determine the ejection threshold for success
            rate outlier ejection. The ejection threshold is the difference
            between the mean success rate, and the product of this factor and
            the standard deviation of the mean success rate: mean - (stdev *
            success_rate_stdev_factor). This factor is divided by a thousand to
            get a double. That is, if the desired factor is 1.9, the runtime
            value should be 1900. Defaults to 1900."
          format: int32
          type: integer
      type: object
    PathMatcher:
      description: A matcher for the path portion of the URL. The BackendService from the
        longest-matched rule will serve the URL. If no rule was matched, the
        default service will be used.
      properties:
        defaultRouteAction:
          $ref: "#/components/schemas/HttpRouteAction"
        defaultService:
          description: >-
            The full or partial URL to the BackendService resource. This will be
            used if none of the pathRules or routeRules defined by this
            PathMatcher are matched. For example, the following are all valid
            URLs to a BackendService resource:  

            - https://www.googleapis.com/compute/v1/projects/project/global/backendServices/backendService 

            - compute/v1/projects/project/global/backendServices/backendService 

            - global/backendServices/backendService  If defaultRouteAction is additionally specified, advanced routing actions like URL Rewrites, etc. take effect prior to sending the request to the backend. However, if defaultService is specified, defaultRouteAction cannot contain any weightedBackendServices. Conversely, if defaultRouteAction specifies any weightedBackendServices, defaultService must not be specified.

            Only one of defaultService, defaultUrlRedirect  or defaultRouteAction.weightedBackendService must be set.

            Authorization requires one or more of the following Google IAM permissions on the specified resource default_service:  

            - compute.backendBuckets.use 

            - compute.backendServices.use
          type: string
        defaultUrlRedirect:
          $ref: "#/components/schemas/HttpRedirectAction"
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        headerAction:
          $ref: "#/components/schemas/HttpHeaderAction"
        name:
          description: The name to which this PathMatcher is referred by the HostRule.
          type: string
        pathRules:
          description: >-
            The list of path rules. Use this list instead of routeRules when
            routing based on simple path matching is all that's required. The
            order by which path rules are specified does not matter. Matches are
            always done on the longest-path-first basis.

            For example: a pathRule with a path /a/b/c/* will match before /a/b/* irrespective of the order in which those paths appear in this list.

            Within a given pathMatcher, only one of pathRules or routeRules must be set.
          items:
            $ref: "#/components/schemas/PathRule"
          type: array
        routeRules:
          description: >-
            The list of ordered HTTP route rules. Use this list instead of
            pathRules when advanced route matching and routing actions are
            desired. The order of specifying routeRules matters: the first rule
            that matches will cause its specified routing action to take effect.

            Within a given pathMatcher, only one of pathRules or routeRules must be set.

            routeRules are not supported in UrlMaps intended for External Load balancers.
          items:
            $ref: "#/components/schemas/HttpRouteRule"
          type: array
      type: object
    PathRule:
      description: A path-matching rule for a URL. If matched, will use the specified
        BackendService to handle the traffic arriving at this URL.
      properties:
        paths:
          description: "The list of path patterns to match. Each must start with / and the
            only place a * is allowed is at the end following a /. The string
            fed to the path matcher does not include any text after the first ?
            or #, and those chars are not allowed here."
          items:
            type: string
          type: array
        routeAction:
          $ref: "#/components/schemas/HttpRouteAction"
        service:
          description: >-
            The full or partial URL of the backend service resource to which
            traffic is directed if this rule is matched. If routeAction is
            additionally specified, advanced routing actions like URL Rewrites,
            etc. take effect prior to sending the request to the backend.
            However, if service is specified, routeAction cannot contain any
            weightedBackendService s. Conversely, if routeAction specifies
            any  weightedBackendServices, service must not be specified.

            Only one of urlRedirect, service or routeAction.weightedBackendService must be set.
          type: string
        urlRedirect:
          $ref: "#/components/schemas/HttpRedirectAction"
      type: object
    Policy:
      description: >-
        Defines an Identity and Access Management (IAM) policy. It is used to
        specify access control policies for Cloud Platform resources.




        A `Policy` consists of a list of `bindings`. A `binding` binds a list of `members` to a `role`, where the members can be user accounts, Google groups, Google domains, and service accounts. A `role` is a named list of permissions defined by IAM.


        **JSON Example**


        { "bindings": [ { "role": "roles/owner", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-other-app@appspot.gserviceaccount.com" ] }, { "role": "roles/viewer", "members": ["user:sean@example.com"] } ] }


        **YAML Example**


        bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-other-app@appspot.gserviceaccount.com role: roles/owner - members: - user:sean@example.com role: roles/viewer




        For a description of IAM and its features, see the [IAM developer's guide](https://cloud.google.com/iam/docs).
      properties:
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: "#/components/schemas/AuditConfig"
          type: array
        bindings:
          description: Associates a list of `members` to a `role`. `bindings` with no
            members will result in an error.
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each
            other. It is strongly suggested that systems make use of the `etag`
            in the read-modify-write cycle to perform policy updates in order to
            avoid race conditions: An `etag` is returned in the response to
            `getIamPolicy`, and systems are expected to put that etag in the
            request to `setIamPolicy` to ensure that their change will be
            applied to the same version of the policy.


            If no `etag` is provided in the call to `setIamPolicy`, then the existing policy is overwritten.
          format: byte
          type: string
        iamOwned:
          description: ""
          type: boolean
        rules:
          description: "If more than one rule is specified, the rules are applied in the
            following manner: - All matching LOG rules are always applied. - If
            any DENY/DENY_WITH_LOG rule matches, permission is denied. Logging
            will be applied if one or more matching rule requires logging. -
            Otherwise, if any ALLOW/ALLOW_WITH_LOG rule matches, permission is
            granted. Logging will be applied if one or more matching rule
            requires logging. - Otherwise, if no rule applies, permission is
            denied."
          items:
            $ref: "#/components/schemas/Rule"
          type: array
        version:
          description: >-
            Specifies the format of the policy.


            Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.


            Policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset.
          format: int32
          type: integer
      type: object
    Project:
      description: >-
        Represents a Project resource.


        A project is used to organize resources in a Google Cloud Platform environment. For more information, read about the  Resource Hierarchy. (== resource_for v1.projects ==) (== resource_for beta.projects ==)
      properties:
        commonInstanceMetadata:
          $ref: "#/components/schemas/Metadata"
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        defaultNetworkTier:
          description: "This signifies the default network tier used for configuring
            resources of the project and can only take the following values:
            PREMIUM, STANDARD. Initially the default network tier is PREMIUM."
          enum:
            - PREMIUM
            - STANDARD
          type: string
        defaultServiceAccount:
          description: "[Output Only] Default service account used by VMs running in this
            project."
          type: string
        description:
          description: An optional textual description of the resource.
          type: string
        enabledFeatures:
          description: Restricted features enabled for use on this project.
          items:
            type: string
          type: array
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server. This is not the project ID, and
            is just a unique ID used by Compute Engine to identify resources."
          format: uint64
          type: string
        kind:
          default: compute#project
          description: "[Output Only] Type of the resource. Always compute#project for
            projects."
          type: string
        name:
          description: "The project ID. For example: my-example-project. Use the project ID
            to make requests to Compute Engine."
          type: string
        quotas:
          description: "[Output Only] Quotas assigned to this project."
          items:
            $ref: "#/components/schemas/Quota"
          type: array
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        usageExportLocation:
          $ref: "#/components/schemas/UsageExportLocation"
        xpnProjectStatus:
          description: "[Output Only] The role this project has in a shared VPC
            configuration. Currently only HOST projects are differentiated."
          enum:
            - HOST
            - UNSPECIFIED_XPN_PROJECT_STATUS
          type: string
      type: object
    ProjectsDisableXpnResourceRequest:
      properties:
        xpnResource:
          $ref: "#/components/schemas/XpnResourceId"
      type: object
    ProjectsEnableXpnResourceRequest:
      properties:
        xpnResource:
          $ref: "#/components/schemas/XpnResourceId"
      type: object
    ProjectsGetXpnResources:
      properties:
        kind:
          default: compute#projectsGetXpnResources
          description: "[Output Only] Type of resource. Always
            compute#projectsGetXpnResources for lists of service resources
            (a.k.a service projects)"
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        resources:
          description: Service resources (a.k.a service projects) attached to this project
            as their shared VPC host.
          items:
            $ref: "#/components/schemas/XpnResourceId"
          type: array
      type: object
    ProjectsListXpnHostsRequest:
      properties:
        organization:
          description: Optional organization ID managed by Cloud Resource Manager, for
            which to list shared VPC host projects. If not specified, the
            organization will be inferred from the project.
          type: string
      type: object
    ProjectsSetDefaultNetworkTierRequest:
      properties:
        networkTier:
          description: Default network tier to be set.
          enum:
            - PREMIUM
            - STANDARD
          type: string
      type: object
    Quota:
      description: A quotas entry.
      properties:
        limit:
          description: "[Output Only] Quota limit for this metric."
          format: double
          type: number
        metric:
          description: "[Output Only] Name of the quota metric."
          enum:
            - AUTOSCALERS
            - BACKEND_BUCKETS
            - BACKEND_SERVICES
            - C2_CPUS
            - COMMITMENTS
            - COMMITTED_C2_CPUS
            - COMMITTED_CPUS
            - COMMITTED_LOCAL_SSD_TOTAL_GB
            - COMMITTED_N2_CPUS
            - COMMITTED_NVIDIA_K80_GPUS
            - COMMITTED_NVIDIA_P100_GPUS
            - COMMITTED_NVIDIA_P4_GPUS
            - COMMITTED_NVIDIA_T4_GPUS
            - COMMITTED_NVIDIA_V100_GPUS
            - CPUS
            - CPUS_ALL_REGIONS
            - DISKS_TOTAL_GB
            - EXTERNAL_VPN_GATEWAYS
            - FIREWALLS
            - FORWARDING_RULES
            - GLOBAL_INTERNAL_ADDRESSES
            - GPUS_ALL_REGIONS
            - HEALTH_CHECKS
            - IMAGES
            - INSTANCES
            - INSTANCE_GROUPS
            - INSTANCE_GROUP_MANAGERS
            - INSTANCE_TEMPLATES
            - INTERCONNECTS
            - INTERCONNECT_ATTACHMENTS_PER_REGION
            - INTERCONNECT_ATTACHMENTS_TOTAL_MBPS
            - INTERNAL_ADDRESSES
            - IN_USE_ADDRESSES
            - IN_USE_BACKUP_SCHEDULES
            - IN_USE_SNAPSHOT_SCHEDULES
            - LOCAL_SSD_TOTAL_GB
            - N2_CPUS
            - NETWORKS
            - NETWORK_ENDPOINT_GROUPS
            - NVIDIA_K80_GPUS
            - NVIDIA_P100_GPUS
            - NVIDIA_P100_VWS_GPUS
            - NVIDIA_P4_GPUS
            - NVIDIA_P4_VWS_GPUS
            - NVIDIA_T4_GPUS
            - NVIDIA_T4_VWS_GPUS
            - NVIDIA_V100_GPUS
            - PREEMPTIBLE_CPUS
            - PREEMPTIBLE_LOCAL_SSD_GB
            - PREEMPTIBLE_NVIDIA_K80_GPUS
            - PREEMPTIBLE_NVIDIA_P100_GPUS
            - PREEMPTIBLE_NVIDIA_P100_VWS_GPUS
            - PREEMPTIBLE_NVIDIA_P4_GPUS
            - PREEMPTIBLE_NVIDIA_P4_VWS_GPUS
            - PREEMPTIBLE_NVIDIA_T4_GPUS
            - PREEMPTIBLE_NVIDIA_T4_VWS_GPUS
            - PREEMPTIBLE_NVIDIA_V100_GPUS
            - REGIONAL_AUTOSCALERS
            - REGIONAL_INSTANCE_GROUP_MANAGERS
            - RESERVATIONS
            - RESOURCE_POLICIES
            - ROUTERS
            - ROUTES
            - SECURITY_POLICIES
            - SECURITY_POLICY_RULES
            - SNAPSHOTS
            - SSD_TOTAL_GB
            - SSL_CERTIFICATES
            - STATIC_ADDRESSES
            - SUBNETWORKS
            - TARGET_HTTPS_PROXIES
            - TARGET_HTTP_PROXIES
            - TARGET_INSTANCES
            - TARGET_POOLS
            - TARGET_SSL_PROXIES
            - TARGET_TCP_PROXIES
            - TARGET_VPN_GATEWAYS
            - URL_MAPS
            - VPN_GATEWAYS
            - VPN_TUNNELS
          type: string
        owner:
          description: "[Output Only] Owning resource. This is the resource on which this
            quota is applied."
          type: string
        usage:
          description: "[Output Only] Current usage of this metric."
          format: double
          type: number
      type: object
    Reference:
      description: Represents a reference to a resource.
      properties:
        kind:
          default: compute#reference
          description: "[Output Only] Type of the resource. Always compute#reference for
            references."
          type: string
        referenceType:
          description: >-
            A description of the reference type with no implied semantics.
            Possible values include:  

            - MEMBER_OF
          type: string
        referrer:
          description: URL of the resource which refers to the target.
          type: string
        target:
          description: URL of the resource to which this reference points.
          type: string
      type: object
    Region:
      description: >-
        Represents a Region resource.


        A region is a geographical area where a resource is located. For more information, read Regions and Zones. (== resource_for beta.regions ==) (== resource_for v1.regions ==)
      properties:
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        deprecated:
          $ref: "#/components/schemas/DeprecationStatus"
        description:
          description: "[Output Only] Textual description of the resource."
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#region
          description: "[Output Only] Type of the resource. Always compute#region for
            regions."
          type: string
        name:
          description: "[Output Only] Name of the resource."
          type: string
        quotas:
          description: "[Output Only] Quotas assigned to this region."
          items:
            $ref: "#/components/schemas/Quota"
          type: array
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        status:
          description: "[Output Only] Status of the region, either UP or DOWN."
          enum:
            - DOWN
            - UP
          type: string
        zones:
          description: "[Output Only] A list of zones available in this region, in the form
            of resource URLs."
          items:
            type: string
          type: array
      type: object
    RegionAutoscalerList:
      description: Contains a list of autoscalers.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of Autoscaler resources.
          items:
            $ref: "#/components/schemas/Autoscaler"
          type: array
        kind:
          default: compute#regionAutoscalerList
          description: Type of resource.
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    RegionDiskTypeList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of DiskType resources.
          items:
            $ref: "#/components/schemas/DiskType"
          type: array
        kind:
          default: compute#regionDiskTypeList
          description: "[Output Only] Type of resource. Always compute#regionDiskTypeList
            for region disk types."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    RegionDisksAddResourcePoliciesRequest:
      properties:
        resourcePolicies:
          description: Resource policies to be added to this disk.
          items:
            type: string
          type: array
      type: object
    RegionDisksRemoveResourcePoliciesRequest:
      properties:
        resourcePolicies:
          description: Resource policies to be removed from this disk.
          items:
            type: string
          type: array
      type: object
    RegionDisksResizeRequest:
      properties:
        sizeGb:
          description: The new size of the regional persistent disk, which is specified in
            GB.
          format: int64
          type: string
      type: object
    RegionInstanceGroupList:
      description: Contains a list of InstanceGroup resources.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of InstanceGroup resources.
          items:
            $ref: "#/components/schemas/InstanceGroup"
          type: array
        kind:
          default: compute#regionInstanceGroupList
          description: The resource type.
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    RegionInstanceGroupManagerList:
      description: Contains a list of managed instance groups.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of InstanceGroupManager resources.
          items:
            $ref: "#/components/schemas/InstanceGroupManager"
          type: array
        kind:
          default: compute#regionInstanceGroupManagerList
          description: "[Output Only] The resource type, which is always
            compute#instanceGroupManagerList for a list of managed instance
            groups that exist in th regional scope."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    RegionInstanceGroupManagersAbandonInstancesRequest:
      properties:
        instances:
          description: The URLs of one or more instances to abandon. This can be a full URL
            or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
          items:
            type: string
          type: array
      type: object
    RegionInstanceGroupManagersDeleteInstancesRequest:
      properties:
        instances:
          description: The URLs of one or more instances to delete. This can be a full URL
            or a partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
          items:
            type: string
          type: array
      type: object
    RegionInstanceGroupManagersListInstancesResponse:
      properties:
        managedInstances:
          description: A list of managed instances.
          items:
            $ref: "#/components/schemas/ManagedInstance"
          type: array
      type: object
    RegionInstanceGroupManagersRecreateRequest:
      properties:
        instances:
          description: The URLs of one or more instances to recreate. This can be a full
            URL or a partial URL, such as
            zones/[ZONE]/instances/[INSTANCE_NAME].
          items:
            type: string
          type: array
      type: object
    RegionInstanceGroupManagersSetTargetPoolsRequest:
      properties:
        fingerprint:
          description: Fingerprint of the target pools information, which is a hash of the
            contents. This field is used for optimistic locking when you update
            the target pool entries. This field is optional.
          format: byte
          type: string
        targetPools:
          description: The URL of all TargetPool resources to which instances in the
            instanceGroup field are added. The target pools automatically apply
            to all of the instances in the managed instance group.
          items:
            type: string
          type: array
      type: object
    RegionInstanceGroupManagersSetTemplateRequest:
      properties:
        instanceTemplate:
          description: URL of the InstanceTemplate resource from which all new instances
            will be created.
          type: string
      type: object
    RegionInstanceGroupsListInstances:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of InstanceWithNamedPorts resources.
          items:
            $ref: "#/components/schemas/InstanceWithNamedPorts"
          type: array
        kind:
          default: compute#regionInstanceGroupsListInstances
          description: The resource type.
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    RegionInstanceGroupsListInstancesRequest:
      properties:
        instanceState:
          description: "Instances in which state should be returned. Valid options are:
            'ALL', 'RUNNING'. By default, it lists all instances."
          enum:
            - ALL
            - RUNNING
          type: string
        portName:
          description: Name of port user is interested in. It is optional. If it is set,
            only information about this ports will be returned. If it is not
            set, all the named ports will be returned. Always lists all
            instances.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
      type: object
    RegionInstanceGroupsSetNamedPortsRequest:
      properties:
        fingerprint:
          description: The fingerprint of the named ports information for this instance
            group. Use this optional property to prevent conflicts when multiple
            users change the named ports settings concurrently. Obtain the
            fingerprint with the instanceGroups.get method. Then, include the
            fingerprint in your request to ensure that you do not overwrite
            changes that were applied from another concurrent request.
          format: byte
          type: string
        namedPorts:
          description: The list of named ports to set for this instance group.
          items:
            $ref: "#/components/schemas/NamedPort"
          type: array
      type: object
    RegionList:
      description: Contains a list of region resources.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of Region resources.
          items:
            $ref: "#/components/schemas/Region"
          type: array
        kind:
          default: compute#regionList
          description: "[Output Only] Type of resource. Always compute#regionList for lists
            of regions."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    RegionSetLabelsRequest:
      properties:
        labelFingerprint:
          description: The fingerprint of the previous set of labels for this resource,
            used to detect conflicts. The fingerprint is initially generated by
            Compute Engine and changes after every request to modify or update
            labels. You must always provide an up-to-date fingerprint hash in
            order to update or change labels. Make a get() request to the
            resource to get the latest fingerprint.
          format: byte
          type: string
        labels:
          additionalProperties:
            type: string
          description: The labels to set for this resource.
          type: object
      type: object
    RegionSetPolicyRequest:
      properties:
        bindings:
          description: Flatten Policy to create a backwacd compatible wire-format.
            Deprecated. Use 'policy' to specify bindings.
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        etag:
          description: Flatten Policy to create a backward compatible wire-format.
            Deprecated. Use 'policy' to specify the etag.
          format: byte
          type: string
        policy:
          $ref: "#/components/schemas/Policy"
      type: object
    RegionTargetHttpsProxiesSetSslCertificatesRequest:
      properties:
        sslCertificates:
          description: New set of SslCertificate resources to associate with this
            TargetHttpsProxy resource. Currently exactly one SslCertificate
            resource must be specified.
          items:
            type: string
          type: array
      type: object
    RegionUrlMapsValidateRequest:
      properties:
        resource:
          $ref: "#/components/schemas/UrlMap"
      type: object
    RequestMirrorPolicy:
      description: A policy that specifies how requests intended for the route's backends
        are shadowed to a separate mirrored backend service. Loadbalancer does
        not wait for responses from the shadow service. Prior to sending traffic
        to the shadow service, the host / authority header is suffixed with
        -shadow.
      properties:
        backendService:
          description: The full or partial URL to the BackendService resource being
            mirrored to.
          type: string
      type: object
    Reservation:
      description: Represents a reservation resource. A reservation ensures that capacity
        is held in a specific zone even if the reserved VMs are not running. For
        more information, read  Reserving zonal resources. (== resource_for
        beta.reservations ==) (== resource_for v1.reservations ==)
      properties:
        commitment:
          description: "[OutputOnly] Full or partial URL to a parent commitment. This field
            displays for reservations that are tied to a commitment."
          type: string
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#reservation
          description: "[Output Only] Type of the resource. Always compute#reservations for
            reservations."
          type: string
        name:
          description: The name of the resource, provided by the client when initially
            creating the resource. The resource name must be 1-63 characters
            long, and comply with RFC1035. Specifically, the name must be 1-63
            characters long and match the regular expression
            `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be
            a lowercase letter, and all following characters must be a dash,
            lowercase letter, or digit, except the last character, which cannot
            be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        selfLink:
          description: "[Output Only] Server-defined fully-qualified URL for this resource."
          type: string
        specificReservation:
          $ref: "#/components/schemas/AllocationSpecificSKUReservation"
        specificReservationRequired:
          description: Indicates whether the reservation can be consumed by VMs with
            affinity for "any" reservation. If the field is set, then only VMs
            that target the reservation by name can consume from this
            reservation.
          type: boolean
        status:
          description: "[Output Only] The status of the reservation."
          enum:
            - CREATING
            - DELETING
            - INVALID
            - READY
            - UPDATING
          type: string
        zone:
          description: Zone in which the reservation resides. A zone must be provided if
            the reservation is created within a commitment.
          type: string
      type: object
    ReservationAffinity:
      description: Specifies the reservations that this instance can consume from.
      properties:
        consumeReservationType:
          description: "Specifies the type of reservation from which this instance can
            consume resources: ANY_RESERVATION (default), SPECIFIC_RESERVATION,
            or NO_RESERVATION. See  Consuming reserved instances for examples."
          enum:
            - ANY_RESERVATION
            - NO_RESERVATION
            - SPECIFIC_RESERVATION
            - UNSPECIFIED
          type: string
        key:
          description: Corresponds to the label key of a reservation resource. To target a
            SPECIFIC_RESERVATION by name, specify
            googleapis.com/reservation-name as the key and specify the name of
            your reservation as its value.
          type: string
        values:
          description: Corresponds to the label values of a reservation resource.
          items:
            type: string
          type: array
      type: object
    ReservationAggregatedList:
      description: Contains a list of reservations.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/ReservationsScopedList"
          description: A list of Allocation resources.
          type: object
        kind:
          default: compute#reservationAggregatedList
          description: Type of resource.
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    ReservationList:
      properties:
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          type: string
        items:
          description: "[Output Only] A list of Allocation resources."
          items:
            $ref: "#/components/schemas/Reservation"
          type: array
        kind:
          default: compute#reservationList
          description: "[Output Only] Type of resource.Always compute#reservationsList for
            listsof reservations"
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    ReservationsResizeRequest:
      properties:
        specificSkuCount:
          description: Number of allocated resources can be resized with minimum = 1 and
            maximum = 1000.
          format: int64
          type: string
      type: object
    ReservationsScopedList:
      properties:
        reservations:
          description: A list of reservations contained in this scope.
          items:
            $ref: "#/components/schemas/Reservation"
          type: array
        warning:
          description: Informational warning which replaces the list of reservations when
            the list is empty.
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    ResourceCommitment:
      description: Commitment for a particular resource (a Commitment is composed of one or
        more of these).
      properties:
        acceleratorType:
          description: Name of the accelerator type resource. Applicable only when the type
            is ACCELERATOR.
          type: string
        amount:
          description: The amount of the resource purchased (in a type-dependent unit, such
            as bytes). For vCPUs, this can just be an integer. For memory, this
            must be provided in MB. Memory must be a multiple of 256 MB, with up
            to 6.5GB of memory per every vCPU.
          format: int64
          type: string
        type:
          description: Type of resource for which this commitment applies. Possible values
            are VCPU and MEMORY
          enum:
            - ACCELERATOR
            - LOCAL_SSD
            - MEMORY
            - UNSPECIFIED
            - VCPU
          type: string
      type: object
    ResourceGroupReference:
      properties:
        group:
          description: A URI referencing one of the instance groups or network endpoint
            groups listed in the backend service.
          type: string
      type: object
    ResourcePoliciesScopedList:
      properties:
        resourcePolicies:
          description: A list of resourcePolicies contained in this scope.
          items:
            $ref: "#/components/schemas/ResourcePolicy"
          type: array
        warning:
          description: Informational warning which replaces the list of resourcePolicies
            when the list is empty.
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    ResourcePolicy:
      properties:
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#resourcePolicy
          description: "[Output Only] Type of the resource. Always
            compute#resource_policies for resource policies."
          type: string
        name:
          description: The name of the resource, provided by the client when initially
            creating the resource. The resource name must be 1-63 characters
            long, and comply with RFC1035. Specifically, the name must be 1-63
            characters long and match the regular expression
            `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be
            a lowercase letter, and all following characters must be a dash,
            lowercase letter, or digit, except the last character, which cannot
            be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        region:
          type: string
        selfLink:
          description: "[Output Only] Server-defined fully-qualified URL for this resource."
          type: string
        snapshotSchedulePolicy:
          $ref: "#/components/schemas/ResourcePolicySnapshotSchedulePolicy"
        status:
          description: "[Output Only] The status of resource policy creation."
          enum:
            - CREATING
            - DELETING
            - INVALID
            - READY
          type: string
      type: object
    ResourcePolicyAggregatedList:
      description: Contains a list of resourcePolicies.
      properties:
        etag:
          type: string
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/ResourcePoliciesScopedList"
          description: A list of ResourcePolicy resources.
          type: object
        kind:
          default: compute#resourcePolicyAggregatedList
          description: Type of resource.
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    ResourcePolicyDailyCycle:
      description: Time window specified for daily operations.
      properties:
        daysInCycle:
          description: Defines a schedule that runs every nth day of the month.
          format: int32
          type: integer
        duration:
          description: "[Output only] A predetermined duration for the window,
            automatically chosen to be the smallest possible in the given
            scenario."
          type: string
        startTime:
          description: Start time of the window. This must be in UTC format that resolves
            to one of 00:00, 04:00, 08:00, 12:00, 16:00, or 20:00. For example,
            both 13:00-5 and 08:00 are valid.
          type: string
      type: object
    ResourcePolicyHourlyCycle:
      description: Time window specified for hourly operations.
      properties:
        duration:
          description: "[Output only] Duration of the time window, automatically chosen to
            be smallest possible in the given scenario."
          type: string
        hoursInCycle:
          description: Allows to define schedule that runs every nth hour.
          format: int32
          type: integer
        startTime:
          description: 'Time within the window to start the operations. It must be in
            format "HH:MM", where HH : [00-23] and MM : [00-00] GMT.'
          type: string
      type: object
    ResourcePolicyList:
      properties:
        etag:
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          type: string
        items:
          description: "[Output Only] A list of ResourcePolicy resources."
          items:
            $ref: "#/components/schemas/ResourcePolicy"
          type: array
        kind:
          default: compute#resourcePolicyList
          description: "[Output Only] Type of resource.Always compute#resourcePoliciesList
            for listsof resourcePolicies"
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    ResourcePolicySnapshotSchedulePolicy:
      description: A snapshot schedule policy specifies when and how frequently snapshots
        are to be created for the target disk. Also specifies how many and how
        long these scheduled snapshots should be retained.
      properties:
        retentionPolicy:
          $ref: "#/components/schemas/ResourcePolicySnapshotSchedulePolicyRetention\
            Policy"
        schedule:
          $ref: "#/components/schemas/ResourcePolicySnapshotSchedulePolicySchedule"
        snapshotProperties:
          $ref: "#/components/schemas/ResourcePolicySnapshotSchedulePolicySnapshotP\
            roperties"
      type: object
    ResourcePolicySnapshotSchedulePolicyRetentionPolicy:
      description: Policy for retention of scheduled snapshots.
      properties:
        maxRetentionDays:
          description: Maximum age of the snapshot that is allowed to be kept.
          format: int32
          type: integer
        onSourceDiskDelete:
          description: Specifies the behavior to apply to scheduled snapshots when the
            source disk is deleted.
          enum:
            - APPLY_RETENTION_POLICY
            - KEEP_AUTO_SNAPSHOTS
            - UNSPECIFIED_ON_SOURCE_DISK_DELETE
          type: string
      type: object
    ResourcePolicySnapshotSchedulePolicySchedule:
      description: A schedule for disks where the schedueled operations are performed.
      properties:
        dailySchedule:
          $ref: "#/components/schemas/ResourcePolicyDailyCycle"
        hourlySchedule:
          $ref: "#/components/schemas/ResourcePolicyHourlyCycle"
        weeklySchedule:
          $ref: "#/components/schemas/ResourcePolicyWeeklyCycle"
      type: object
    ResourcePolicySnapshotSchedulePolicySnapshotProperties:
      description: Specified snapshot properties for scheduled snapshots created by this
        policy.
      properties:
        guestFlush:
          description: Indication to perform a ?guest aware? snapshot.
          type: boolean
        labels:
          additionalProperties:
            type: string
          description: Labels to apply to scheduled snapshots. These can be later modified
            by the setLabels method. Label values may be empty.
          type: object
        storageLocations:
          description: Cloud Storage bucket storage location of the auto snapshot (regional
            or multi-regional).
          items:
            type: string
          type: array
      type: object
    ResourcePolicyWeeklyCycle:
      description: Time window specified for weekly operations.
      properties:
        dayOfWeeks:
          description: Up to 7 intervals/windows, one for each day of the week.
          items:
            $ref: "#/components/schemas/ResourcePolicyWeeklyCycleDayOfWeek"
          type: array
      type: object
    ResourcePolicyWeeklyCycleDayOfWeek:
      properties:
        day:
          description: Allows to define schedule that runs specified day of the week.
          enum:
            - FRIDAY
            - INVALID
            - MONDAY
            - SATURDAY
            - SUNDAY
            - THURSDAY
            - TUESDAY
            - WEDNESDAY
          type: string
        duration:
          description: "[Output only] Duration of the time window, automatically chosen to
            be smallest possible in the given scenario."
          type: string
        startTime:
          description: 'Time within the window to start the operations. It must be in
            format "HH:MM", where HH : [00-23] and MM : [00-00] GMT.'
          type: string
      type: object
    Route:
      description: >-
        Represents a Route resource.


        A route defines a path from VM instances in the VPC network to a specific destination. This destination can be inside or outside the VPC network. For more information, read the Routes overview. (== resource_for beta.routes ==) (== resource_for v1.routes ==)
      properties:
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this field when
            you create the resource.
          type: string
        destRange:
          description: The destination range of outgoing packets that this route applies
            to. Only IPv4 is supported.
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#route
          description: "[Output Only] Type of this resource. Always compute#routes for
            Route resources."
          type: string
        name:
          description: Name of the resource. Provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first
            character must be a lowercase letter, and all following characters
            (except for the last character) must be a dash, lowercase letter, or
            digit. The last character must be a lowercase letter or digit.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        network:
          description: Fully-qualified URL of the network that this route applies to.
          type: string
        nextHopGateway:
          description: "The URL to a gateway that should handle matching packets. You can
            only specify the internet gateway using a full or partial valid
            URL:  projects/project/global/gateways/default-internet-gateway"
          type: string
        nextHopInstance:
          description: >-
            The URL to an instance that should handle matching packets. You can
            specify this as a full or partial URL. For example:

            https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/
          type: string
        nextHopIp:
          description: The network IP address of an instance that should handle matching
            packets. Only IPv4 is supported.
          type: string
        nextHopNetwork:
          description: The URL of the local network if it should handle matching packets.
          type: string
        nextHopPeering:
          description: "[Output Only] The network peering name that should handle matching
            packets, which should conform to RFC1035."
          type: string
        nextHopVpnTunnel:
          description: The URL to a VpnTunnel that should handle matching packets.
          type: string
        priority:
          description: The priority of this route. Priority is used to break ties in cases
            where there is more than one matching route of equal prefix length.
            In cases where multiple routes have equal prefix length, the one
            with the lowest-numbered priority value wins. The default value is
            `1000`. The priority value must be from `0` to `65535`, inclusive.
          format: uint32
          type: integer
        selfLink:
          description: "[Output Only] Server-defined fully-qualified URL for this resource."
          type: string
        tags:
          description: A list of instance tags to which this route applies.
          items:
            type: string
          type: array
        warnings:
          description: "[Output Only] If potential misconfigurations are detected for this
            route, this field will be populated with warning messages."
          items:
            properties:
              code:
                description: "[Output Only] A warning code, if applicable. For example,
                  Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                  results in the response."
                enum:
                  - CLEANUP_FAILED
                  - DEPRECATED_RESOURCE_USED
                  - DEPRECATED_TYPE_USED
                  - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                  - EXPERIMENTAL_TYPE_USED
                  - EXTERNAL_API_WARNING
                  - FIELD_VALUE_OVERRIDEN
                  - INJECTED_KERNELS_DEPRECATED
                  - MISSING_TYPE_DEPENDENCY
                  - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                  - NEXT_HOP_CANNOT_IP_FORWARD
                  - NEXT_HOP_INSTANCE_NOT_FOUND
                  - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                  - NEXT_HOP_NOT_RUNNING
                  - NOT_CRITICAL_ERROR
                  - NO_RESULTS_ON_PAGE
                  - REQUIRED_TOS_AGREEMENT
                  - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                  - RESOURCE_NOT_DELETED
                  - SCHEMA_VALIDATION_IGNORED
                  - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                  - UNDECLARED_PROPERTIES
                  - UNREACHABLE
                type: string
              data:
                description: >-
                  [Output Only] Metadata about this warning in key: value
                  format. For example:

                  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
                items:
                  properties:
                    key:
                      description: "[Output Only] A key that provides more detail on the
                        warning being returned. For example, for warnings where
                        there are no results in a list request for a particular
                        zone, this key might be scope and the key value might be
                        the zone name. Other examples might be a key indicating
                        a deprecated resource and a suggested replacement, or a
                        warning about invalid network settings (for example, if
                        an instance attempts to perform IP forwarding but is not
                        enabled for IP forwarding)."
                      type: string
                    value:
                      description: "[Output Only] A warning data value corresponding to the
                        key."
                      type: string
                  type: object
                type: array
              message:
                description: "[Output Only] A human-readable description of the warning
                  code."
                type: string
            type: object
          type: array
      type: object
    RouteList:
      description: Contains a list of Route resources.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of Route resources.
          items:
            $ref: "#/components/schemas/Route"
          type: array
        kind:
          default: compute#routeList
          description: Type of resource.
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    Router:
      description: >-
        Represents a Cloud Router resource.


        For more information about Cloud Router, read the the Cloud Router overview.
      properties:
        bgp:
          $ref: "#/components/schemas/RouterBgp"
        bgpPeers:
          description: BGP information that must be configured into the routing stack to
            establish BGP peering. This information must specify the peer ASN
            and either the interface name, IP address, or peer IP address.
            Please refer to RFC4273.
          items:
            $ref: "#/components/schemas/RouterBgpPeer"
          type: array
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        interfaces:
          description: Router interfaces. Each interface requires either one linked
            resource, (for example, linkedVpnTunnel), or IP address and IP
            address range (for example, ipRange), or both.
          items:
            $ref: "#/components/schemas/RouterInterface"
          type: array
        kind:
          default: compute#router
          description: "[Output Only] Type of resource. Always compute#router for routers."
          type: string
        name:
          description: Name of the resource. Provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        nats:
          description: A list of NAT services created in this router.
          items:
            $ref: "#/components/schemas/RouterNat"
          type: array
        network:
          description: URI of the network to which this router belongs.
          type: string
        region:
          description: "[Output Only] URI of the region where the router resides. You must
            specify this field as part of the HTTP request URL. It is not
            settable as a field in the request body."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
      type: object
    RouterAdvertisedIpRange:
      description: Description-tagged IP ranges for the router to advertise.
      properties:
        description:
          description: User-specified description for the IP range.
          type: string
        range:
          description: The IP range to advertise. The value must be a CIDR-formatted string.
          type: string
      type: object
    RouterAggregatedList:
      description: Contains a list of routers.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/RoutersScopedList"
          description: A list of Router resources.
          type: object
        kind:
          default: compute#routerAggregatedList
          description: Type of resource.
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    RouterBgp:
      properties:
        advertiseMode:
          description: User-specified flag to indicate which mode to use for advertisement.
            The options are DEFAULT or CUSTOM.
          enum:
            - CUSTOM
            - DEFAULT
          type: string
        advertisedGroups:
          description: User-specified list of prefix groups to advertise in custom mode.
            This field can only be populated if advertise_mode is CUSTOM and is
            advertised to all peers of the router. These groups will be
            advertised in addition to any specified prefixes. Leave this field
            blank to advertise no custom groups.
          items:
            enum:
              - ALL_SUBNETS
            type: string
          type: array
        advertisedIpRanges:
          description: User-specified list of individual IP ranges to advertise in custom
            mode. This field can only be populated if advertise_mode is CUSTOM
            and is advertised to all peers of the router. These IP ranges will
            be advertised in addition to any specified groups. Leave this field
            blank to advertise no custom IP ranges.
          items:
            $ref: "#/components/schemas/RouterAdvertisedIpRange"
          type: array
        asn:
          description: Local BGP Autonomous System Number (ASN). Must be an RFC6996 private
            ASN, either 16-bit or 32-bit. The value will be fixed for this
            router resource. All VPN tunnels that link to this router will have
            the same local ASN.
          format: uint32
          type: integer
      type: object
    RouterBgpPeer:
      properties:
        advertiseMode:
          description: User-specified flag to indicate which mode to use for advertisement.
          enum:
            - CUSTOM
            - DEFAULT
          type: string
        advertisedGroups:
          description: >-
            User-specified list of prefix groups to advertise in custom mode,
            which can take one of the following options: 

            - ALL_SUBNETS: Advertises all available subnets, including peer VPC subnets. 

            - ALL_VPC_SUBNETS: Advertises the router's own VPC subnets. 

            - ALL_PEER_VPC_SUBNETS: Advertises peer subnets of the router's VPC network. Note that this field can only be populated if advertise_mode is CUSTOM and overrides the list defined for the router (in the "bgp" message). These groups are advertised in addition to any specified prefixes. Leave this field blank to advertise no custom groups.
          items:
            enum:
              - ALL_SUBNETS
            type: string
          type: array
        advertisedIpRanges:
          description: User-specified list of individual IP ranges to advertise in custom
            mode. This field can only be populated if advertise_mode is CUSTOM
            and overrides the list defined for the router (in the "bgp"
            message). These IP ranges are advertised in addition to any
            specified groups. Leave this field blank to advertise no custom IP
            ranges.
          items:
            $ref: "#/components/schemas/RouterAdvertisedIpRange"
          type: array
        advertisedRoutePriority:
          description: The priority of routes advertised to this BGP peer. Where there is
            more than one matching route of maximum length, the routes with the
            lowest priority value win.
          format: uint32
          type: integer
        interfaceName:
          description: Name of the interface the BGP peer is associated with.
          type: string
        ipAddress:
          description: IP address of the interface inside Google Cloud Platform. Only IPv4
            is supported.
          type: string
        managementType:
          description: >-
            [Output Only] The resource that configures and manages this BGP
            peer. 

            - MANAGED_BY_USER is the default value and can be managed by you or other users 

            - MANAGED_BY_ATTACHMENT is a BGP peer that is configured and managed by Cloud Interconnect, specifically by an InterconnectAttachment of type PARTNER. Google automatically creates, updates, and deletes this type of BGP peer when the PARTNER InterconnectAttachment is created, updated, or deleted.
          enum:
            - MANAGED_BY_ATTACHMENT
            - MANAGED_BY_USER
          type: string
        name:
          description: Name of this BGP peer. The name must be 1-63 characters long, and
            comply with RFC1035. Specifically, the name must be 1-63 characters
            long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`
            which means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        peerAsn:
          description: Peer BGP Autonomous System Number (ASN). Each BGP interface may use
            a different value.
          format: uint32
          type: integer
        peerIpAddress:
          description: IP address of the BGP interface outside Google Cloud Platform. Only
            IPv4 is supported.
          type: string
      type: object
    RouterInterface:
      properties:
        ipRange:
          description: "IP address and range of the interface. The IP range must be in the
            RFC3927 link-local IP address space. The value must be a
            CIDR-formatted string, for example: 169.254.0.1/30. NOTE: Do not
            truncate the address as it represents the IP address of the
            interface."
          type: string
        linkedInterconnectAttachment:
          description: URI of the linked Interconnect attachment. It must be in the same
            region as the router. Each interface can have one linked resource,
            which can be either be a VPN tunnel or an Interconnect attachment.
          type: string
        linkedVpnTunnel:
          description: URI of the linked VPN tunnel, which must be in the same region as
            the router. Each interface can have one linked resource, which can
            be either a VPN tunnel or an Interconnect attachment.
          type: string
        managementType:
          description: >-
            [Output Only] The resource that configures and manages this
            interface. 

            - MANAGED_BY_USER is the default value and can be managed directly by users. 

            - MANAGED_BY_ATTACHMENT is an interface that is configured and managed by Cloud Interconnect, specifically, by an InterconnectAttachment of type PARTNER. Google automatically creates, updates, and deletes this type of interface when the PARTNER InterconnectAttachment is created, updated, or deleted.
          enum:
            - MANAGED_BY_ATTACHMENT
            - MANAGED_BY_USER
          type: string
        name:
          description: Name of this interface entry. The name must be 1-63 characters long,
            and comply with RFC1035. Specifically, the name must be 1-63
            characters long and match the regular expression
            `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be
            a lowercase letter, and all following characters must be a dash,
            lowercase letter, or digit, except the last character, which cannot
            be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
      type: object
    RouterList:
      description: Contains a list of Router resources.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of Router resources.
          items:
            $ref: "#/components/schemas/Router"
          type: array
        kind:
          default: compute#routerList
          description: "[Output Only] Type of resource. Always compute#router for routers."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    RouterNat:
      description: Represents a Nat resource. It enables the VMs within the specified
        subnetworks to access Internet without external IP addresses. It
        specifies a list of subnetworks (and the ranges within) that want to use
        NAT. Customers can also provide the external IPs that would be used for
        NAT. GCP would auto-allocate ephemeral IPs if no external IPs are
        provided.
      properties:
        icmpIdleTimeoutSec:
          description: Timeout (in seconds) for ICMP connections. Defaults to 30s if not
            set.
          format: int32
          type: integer
        logConfig:
          $ref: "#/components/schemas/RouterNatLogConfig"
        minPortsPerVm:
          description: Minimum number of ports allocated to a VM from this NAT config. If
            not set, a default number of ports is allocated to a VM. This is
            rounded up to the nearest power of 2. For example, if the value of
            this field is 50, at least 64 ports are allocated to a VM.
          format: int32
          type: integer
        name:
          description: Unique name of this Nat service. The name must be 1-63 characters
            long and comply with RFC1035.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        natIpAllocateOption:
          description: >-
            Specify the NatIpAllocateOption, which can take one of the following
            values: 

            - MANUAL_ONLY: Uses only Nat IP addresses provided by customers. When there are not enough specified Nat IPs, the Nat service fails for new VMs. 

            - AUTO_ONLY: Nat IPs are allocated by Google Cloud Platform; customers can't specify any Nat IPs. When choosing AUTO_ONLY, then nat_ip should be empty.
          enum:
            - AUTO_ONLY
            - MANUAL_ONLY
          type: string
        natIps:
          description: A list of URLs of the IP resources used for this Nat service. These
            IP addresses must be valid static external IP addresses assigned to
            the project.
          items:
            type: string
          type: array
        sourceSubnetworkIpRangesToNat:
          description: >-
            Specify the Nat option, which can take one of the following values: 

            - ALL_SUBNETWORKS_ALL_IP_RANGES: All of the IP ranges in every Subnetwork are allowed to Nat. 

            - ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES: All of the primary IP ranges in every Subnetwork are allowed to Nat. 

            - LIST_OF_SUBNETWORKS: A list of Subnetworks are allowed to Nat (specified in the field subnetwork below) The default is SUBNETWORK_IP_RANGE_TO_NAT_OPTION_UNSPECIFIED. Note that if this field contains ALL_SUBNETWORKS_ALL_IP_RANGES or ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES, then there should not be any other Router.Nat section in any Router for this network in this region.
          enum:
            - ALL_SUBNETWORKS_ALL_IP_RANGES
            - ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES
            - LIST_OF_SUBNETWORKS
          type: string
        subnetworks:
          description: A list of Subnetwork resources whose traffic should be translated by
            NAT Gateway. It is used only when LIST_OF_SUBNETWORKS is selected
            for the SubnetworkIpRangeToNatOption above.
          items:
            $ref: "#/components/schemas/RouterNatSubnetworkToNat"
          type: array
        tcpEstablishedIdleTimeoutSec:
          description: Timeout (in seconds) for TCP established connections. Defaults to
            1200s if not set.
          format: int32
          type: integer
        tcpTransitoryIdleTimeoutSec:
          description: Timeout (in seconds) for TCP transitory connections. Defaults to 30s
            if not set.
          format: int32
          type: integer
        udpIdleTimeoutSec:
          description: Timeout (in seconds) for UDP connections. Defaults to 30s if not set.
          format: int32
          type: integer
      type: object
    RouterNatLogConfig:
      description: Configuration of logging on a NAT.
      properties:
        enable:
          description: Indicates whether or not to export logs. This is false by default.
          type: boolean
        filter:
          description: Specifies the desired filtering of logs on this NAT. If unspecified,
            logs are exported for all connections handled by this NAT.
          enum:
            - ALL
            - ERRORS_ONLY
            - TRANSLATIONS_ONLY
          type: string
      type: object
    RouterNatSubnetworkToNat:
      description: Defines the IP ranges that want to use NAT for a subnetwork.
      properties:
        name:
          description: URL for the subnetwork resource that will use NAT.
          type: string
        secondaryIpRangeNames:
          description: A list of the secondary ranges of the Subnetwork that are allowed to
            use NAT. This can be populated only if "LIST_OF_SECONDARY_IP_RANGES"
            is one of the values in source_ip_ranges_to_nat.
          items:
            type: string
          type: array
        sourceIpRangesToNat:
          description: 'Specify the options for NAT ranges in the Subnetwork. All options
            of a single value are valid except NAT_IP_RANGE_OPTION_UNSPECIFIED.
            The only valid option with multiple values is: ["PRIMARY_IP_RANGE",
            "LIST_OF_SECONDARY_IP_RANGES"] Default: [ALL_IP_RANGES]'
          items:
            enum:
              - ALL_IP_RANGES
              - LIST_OF_SECONDARY_IP_RANGES
              - PRIMARY_IP_RANGE
            type: string
          type: array
      type: object
    RouterStatus:
      properties:
        bestRoutes:
          description: Best routes for this router's network.
          items:
            $ref: "#/components/schemas/Route"
          type: array
        bestRoutesForRouter:
          description: Best routes learned by this router.
          items:
            $ref: "#/components/schemas/Route"
          type: array
        bgpPeerStatus:
          items:
            $ref: "#/components/schemas/RouterStatusBgpPeerStatus"
          type: array
        natStatus:
          items:
            $ref: "#/components/schemas/RouterStatusNatStatus"
          type: array
        network:
          description: URI of the network to which this router belongs.
          type: string
      type: object
    RouterStatusBgpPeerStatus:
      properties:
        advertisedRoutes:
          description: Routes that were advertised to the remote BGP peer
          items:
            $ref: "#/components/schemas/Route"
          type: array
        ipAddress:
          description: IP address of the local BGP interface.
          type: string
        linkedVpnTunnel:
          description: URL of the VPN tunnel that this BGP peer controls.
          type: string
        name:
          description: Name of this BGP peer. Unique within the Routers resource.
          type: string
        numLearnedRoutes:
          description: Number of routes learned from the remote BGP Peer.
          format: uint32
          type: integer
        peerIpAddress:
          description: IP address of the remote BGP interface.
          type: string
        state:
          description: BGP state as specified in RFC1771.
          type: string
        status:
          description: "Status of the BGP peer: {UP, DOWN}"
          enum:
            - DOWN
            - UNKNOWN
            - UP
          type: string
        uptime:
          description: "Time this session has been up. Format: 14 years, 51 weeks, 6 days,
            23 hours, 59 minutes, 59 seconds"
          type: string
        uptimeSeconds:
          description: "Time this session has been up, in seconds. Format: 145"
          type: string
      type: object
    RouterStatusNatStatus:
      description: "Status of a NAT contained in this router. Next tag: 9"
      properties:
        autoAllocatedNatIps:
          description: 'A list of IPs auto-allocated for NAT. Example: ["1.1.1.1",
            "129.2.16.89"]'
          items:
            type: string
          type: array
        minExtraNatIpsNeeded:
          description: The number of extra IPs to allocate. This will be greater than 0
            only if user-specified IPs are NOT enough to allow all configured
            VMs to use NAT. This value is meaningful only when auto-allocation
            of NAT IPs is *not* used.
          format: int32
          type: integer
        name:
          description: Unique name of this NAT.
          type: string
        numVmEndpointsWithNatMappings:
          description: Number of VM endpoints (i.e., Nics) that can use NAT.
          format: int32
          type: integer
        userAllocatedNatIpResources:
          description: A list of fully qualified URLs of reserved IP address resources.
          items:
            type: string
          type: array
        userAllocatedNatIps:
          description: A list of IPs user-allocated for NAT. They will be raw IP strings
            like "179.12.26.133".
          items:
            type: string
          type: array
      type: object
    RouterStatusResponse:
      properties:
        kind:
          default: compute#routerStatusResponse
          description: Type of resource.
          type: string
        result:
          $ref: "#/components/schemas/RouterStatus"
      type: object
    RoutersPreviewResponse:
      properties:
        resource:
          $ref: "#/components/schemas/Router"
      type: object
    RoutersScopedList:
      properties:
        routers:
          description: A list of routers contained in this scope.
          items:
            $ref: "#/components/schemas/Router"
          type: array
        warning:
          description: Informational warning which replaces the list of routers when the
            list is empty.
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    Rule:
      description: A rule to be applied in a Policy.
      properties:
        action:
          description: Required
          enum:
            - ALLOW
            - ALLOW_WITH_LOG
            - DENY
            - DENY_WITH_LOG
            - LOG
            - NO_ACTION
          type: string
        conditions:
          description: Additional restrictions that must be met. All conditions must pass
            for the rule to match.
          items:
            $ref: "#/components/schemas/Condition"
          type: array
        description:
          description: Human-readable description of the rule.
          type: string
        ins:
          description: If one or more 'in' clauses are specified, the rule matches if the
            PRINCIPAL/AUTHORITY_SELECTOR is in at least one of these entries.
          items:
            type: string
          type: array
        logConfigs:
          description: The config returned to callers of tech.iam.IAM.CheckPolicy for any
            entries that match the LOG action.
          items:
            $ref: "#/components/schemas/LogConfig"
          type: array
        notIns:
          description: If one or more 'not_in' clauses are specified, the rule matches if
            the PRINCIPAL/AUTHORITY_SELECTOR is in none of the entries.
          items:
            type: string
          type: array
        permissions:
          description: A permission is a string of form '..' (e.g.,
            'storage.buckets.list'). A value of '*' matches all permissions, and
            a verb part of '*' (e.g., 'storage.buckets.*') matches all verbs.
          items:
            type: string
          type: array
      type: object
    SSLHealthCheck:
      properties:
        port:
          description: The TCP port number for the health check request. The default value
            is 443. Valid values are 1 through 65535.
          format: int32
          type: integer
        portName:
          description: Port name as defined in InstanceGroup#NamedPort#name. If both port
            and port_name are defined, port takes precedence.
          type: string
        portSpecification:
          description: >-
            Specifies how port is selected for health checking, can be one of
            following values:

            USE_FIXED_PORT: The port number in

            port

            is used for health checking.

            USE_NAMED_PORT: The

            portName

            is used for health checking.

            USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.



            If not specified, SSL health check follows behavior specified in

            port

            and

            portName

            fields.
          enum:
            - USE_FIXED_PORT
            - USE_NAMED_PORT
            - USE_SERVING_PORT
          type: string
        proxyHeader:
          description: Specifies the type of proxy header to append before sending data to
            the backend, either NONE or PROXY_V1. The default is NONE.
          enum:
            - NONE
            - PROXY_V1
          type: string
        request:
          description: The application data to send once the SSL connection has been
            established (default value is empty). If both request and response
            are empty, the connection establishment alone will indicate health.
            The request data can only be ASCII.
          type: string
        response:
          description: The bytes to match against the beginning of the response data. If
            left empty (the default value), any response will indicate health.
            The response data can only be ASCII.
          type: string
      type: object
    Scheduling:
      description: "Sets the scheduling options for an Instance. NextID: 9"
      properties:
        automaticRestart:
          description: >-
            Specifies whether the instance should be automatically restarted if
            it is terminated by Compute Engine (not terminated by a user). You
            can only set the automatic restart option for standard instances.
            Preemptible instances cannot be automatically restarted.


            By default, this is set to true so an instance is automatically restarted if it is terminated by Compute Engine.
          type: boolean
        nodeAffinities:
          description: A set of node affinity and anti-affinity configurations. Refer to
            Configuring node affinity for more information.
          items:
            $ref: "#/components/schemas/SchedulingNodeAffinity"
          type: array
        onHostMaintenance:
          description: Defines the maintenance behavior for this instance. For standard
            instances, the default behavior is MIGRATE. For preemptible
            instances, the default and only possible behavior is TERMINATE. For
            more information, see Setting Instance Scheduling Options.
          enum:
            - MIGRATE
            - TERMINATE
          type: string
        preemptible:
          description: Defines whether the instance is preemptible. This can only be set
            during instance creation, it cannot be set or changed after the
            instance has been created.
          type: boolean
      type: object
    SchedulingNodeAffinity:
      description: "Node Affinity: the configuration of desired nodes onto which this
        Instance could be scheduled."
      properties:
        key:
          description: Corresponds to the label key of Node resource.
          type: string
        operator:
          description: Defines the operation of node selection. Valid operators are IN for
            affinity and NOT_IN for anti-affinity.
          enum:
            - IN
            - NOT_IN
            - OPERATOR_UNSPECIFIED
          type: string
        values:
          description: Corresponds to the label values of Node resource.
          items:
            type: string
          type: array
      type: object
    SecurityPolicy:
      description: >-
        Represents a Cloud Armor Security Policy resource.


        Only external backend services that use load balancers can reference a Security Policy. For more information, read  Cloud Armor Security Policy Concepts. (== resource_for v1.securityPolicies ==) (== resource_for beta.securityPolicies ==)
      properties:
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        fingerprint:
          description: >-
            Specifies a fingerprint for this resource, which is essentially a
            hash of the metadata's contents and used for optimistic locking. The
            fingerprint is initially generated by Compute Engine and changes
            after every request to modify or update metadata. You must always
            provide an up-to-date fingerprint hash in order to update or change
            metadata, otherwise the request will fail with error 412
            conditionNotMet.


            To see the latest fingerprint, make get() request to the security policy.
          format: byte
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#securityPolicy
          description: "[Output only] Type of the resource. Always
            compute#securityPolicyfor security policies"
          type: string
        name:
          description: Name of the resource. Provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        rules:
          description: A list of rules that belong to this policy. There must always be a
            default rule (rule with priority 2147483647 and match "*"). If no
            rules are provided when creating a security policy, a default rule
            with action "allow" will be added.
          items:
            $ref: "#/components/schemas/SecurityPolicyRule"
          type: array
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
      type: object
    SecurityPolicyList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of SecurityPolicy resources.
          items:
            $ref: "#/components/schemas/SecurityPolicy"
          type: array
        kind:
          default: compute#securityPolicyList
          description: "[Output Only] Type of resource. Always compute#securityPolicyList
            for listsof securityPolicies"
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    SecurityPolicyReference:
      properties:
        securityPolicy:
          type: string
      type: object
    SecurityPolicyRule:
      description: Represents a rule that describes one or more match conditions along with
        the action to be taken when traffic matches this condition (allow or
        deny).
      properties:
        action:
          description: The Action to preform when the client connection triggers the rule.
            Can currently be either "allow" or "deny()" where valid values for
            status are 403, 404, and 502.
          type: string
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        kind:
          default: compute#securityPolicyRule
          description: "[Output only] Type of the resource. Always
            compute#securityPolicyRule for security policy rules"
          type: string
        match:
          $ref: "#/components/schemas/SecurityPolicyRuleMatcher"
        preview:
          description: If set to true, the specified action is not enforced.
          type: boolean
        priority:
          description: An integer indicating the priority of a rule in the list. The
            priority must be a positive value between 0 and 2147483647. Rules
            are evaluated from highest to lowest priority where 0 is the highest
            priority and 2147483647 is the lowest prority.
          format: int32
          type: integer
      type: object
    SecurityPolicyRuleMatcher:
      description: Represents a match condition that incoming traffic is evaluated against.
        Exactly one field must be specified.
      properties:
        config:
          $ref: "#/components/schemas/SecurityPolicyRuleMatcherConfig"
        versionedExpr:
          description: "Preconfigured versioned expression. If this field is specified,
            config must also be specified. Available preconfigured expressions
            along with their requirements are: SRC_IPS_V1 - must specify the
            corresponding src_ip_range field in config."
          enum:
            - SRC_IPS_V1
          type: string
      type: object
    SecurityPolicyRuleMatcherConfig:
      properties:
        srcIpRanges:
          description: CIDR IP address range.
          items:
            type: string
          type: array
      type: object
    SerialPortOutput:
      description: An instance's serial console output.
      properties:
        contents:
          description: "[Output Only] The contents of the console output."
          type: string
        kind:
          default: compute#serialPortOutput
          description: "[Output Only] Type of the resource. Always compute#serialPortOutput
            for serial port output."
          type: string
        next:
          description: "[Output Only] The position of the next byte of content from the
            serial console output. Use this value in the next request as the
            start parameter."
          format: int64
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        start:
          description: The starting byte position of the output that was returned. This
            should match the start parameter sent with the request. If the
            serial console output exceeds the size of the buffer, older output
            will be overwritten by newer content and the start values will be
            mismatched.
          format: int64
          type: string
      type: object
    ServerBinding:
      properties:
        type:
          enum:
            - RESTART_NODE_ON_ANY_SERVER
            - RESTART_NODE_ON_MINIMAL_SERVERS
            - SERVER_BINDING_TYPE_UNSPECIFIED
          type: string
      type: object
    ServiceAccount:
      description: A service account.
      properties:
        email:
          description: Email address of the service account.
          type: string
        scopes:
          description: The list of scopes to be made available for this service account.
          items:
            type: string
          type: array
      type: object
    ShieldedInstanceConfig:
      description: A set of Shielded Instance options.
      properties:
        enableIntegrityMonitoring:
          description: Defines whether the instance has integrity monitoring enabled.
          type: boolean
        enableSecureBoot:
          description: Defines whether the instance has Secure Boot enabled.
          type: boolean
        enableVtpm:
          description: Defines whether the instance has the vTPM enabled.
          type: boolean
      type: object
    ShieldedInstanceIdentity:
      description: A shielded Instance identity entry.
      properties:
        encryptionKey:
          $ref: "#/components/schemas/ShieldedInstanceIdentityEntry"
        kind:
          default: compute#shieldedInstanceIdentity
          description: "[Output Only] Type of the resource. Always
            compute#shieldedInstanceIdentity for shielded Instance identity
            entry."
          type: string
        signingKey:
          $ref: "#/components/schemas/ShieldedInstanceIdentityEntry"
      type: object
    ShieldedInstanceIdentityEntry:
      description: A Shielded Instance Identity Entry.
      properties:
        ekCert:
          description: A PEM-encoded X.509 certificate. This field can be empty.
          type: string
        ekPub:
          description: A PEM-encoded public key.
          type: string
      type: object
    ShieldedInstanceIntegrityPolicy:
      description: The policy describes the baseline against which Instance boot integrity
        is measured.
      properties:
        updateAutoLearnPolicy:
          description: Updates the integrity policy baseline using the measurements from
            the VM instance's most recent boot.
          type: boolean
      type: object
    SignedUrlKey:
      description: Represents a customer-supplied Signing Key used by Cloud CDN Signed URLs
      properties:
        keyName:
          description: Name of the key. The name must be 1-63 characters long, and comply
            with RFC1035. Specifically, the name must be 1-63 characters long
            and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        keyValue:
          description: 128-bit key value used for signing the URL. The key value must be a
            valid RFC 4648 Section 5 base64url encoded string.
          type: string
      type: object
    Snapshot:
      description: >-
        Represents a Persistent Disk Snapshot resource.


        You can use snapshots to back up data on a regular interval. For more information, read  Creating persistent disk snapshots. (== resource_for beta.snapshots ==) (== resource_for v1.snapshots ==)
      properties:
        autoCreated:
          description: "[Output Only] Set to true if snapshots are automatically by
            applying resource policy on the target disk."
          type: boolean
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        diskSizeGb:
          description: "[Output Only] Size of the snapshot, specified in GB."
          format: int64
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#snapshot
          description: "[Output Only] Type of the resource. Always compute#snapshot for
            Snapshot resources."
          type: string
        labelFingerprint:
          description: >-
            A fingerprint for the labels being applied to this snapshot, which
            is essentially a hash of the labels set used for optimistic locking.
            The fingerprint is initially generated by Compute Engine and changes
            after every request to modify or update labels. You must always
            provide an up-to-date fingerprint hash in order to update or change
            labels, otherwise the request will fail with error 412
            conditionNotMet.


            To see the latest fingerprint, make a get() request to retrieve a snapshot.
          format: byte
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels to apply to this snapshot. These can be later modified by the
            setLabels method. Label values may be empty.
          type: object
        licenseCodes:
          description: "[Output Only] Integer license codes indicating which licenses are
            attached to this snapshot."
          items:
            format: int64
            type: string
          type: array
        licenses:
          description: "[Output Only] A list of public visible licenses that apply to this
            snapshot. This can be because the original image had licenses
            attached (such as a Windows image)."
          items:
            type: string
          type: array
        name:
          description: Name of the resource; provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        snapshotEncryptionKey:
          $ref: "#/components/schemas/CustomerEncryptionKey"
        sourceDisk:
          description: "[Output Only] The source disk used to create this snapshot."
          type: string
        sourceDiskEncryptionKey:
          $ref: "#/components/schemas/CustomerEncryptionKey"
        sourceDiskId:
          description: "[Output Only] The ID value of the disk used to create this
            snapshot. This value may be used to determine whether the snapshot
            was taken from the current or a previous instance of a given disk
            name."
          type: string
        status:
          description: "[Output Only] The status of the snapshot. This can be CREATING,
            DELETING, FAILED, READY, or UPLOADING."
          enum:
            - CREATING
            - DELETING
            - FAILED
            - READY
            - UPLOADING
          type: string
        storageBytes:
          description: "[Output Only] A size of the storage used by the snapshot. As
            snapshots share storage, this number is expected to change with
            snapshot creation/deletion."
          format: int64
          type: string
        storageBytesStatus:
          description: "[Output Only] An indicator whether storageBytes is in a stable
            state or it is being adjusted as a result of shared storage
            reallocation. This status can either be UPDATING, meaning the size
            of the snapshot is being updated, or UP_TO_DATE, meaning the size of
            the snapshot is up-to-date."
          enum:
            - UPDATING
            - UP_TO_DATE
          type: string
        storageLocations:
          description: Cloud Storage bucket storage location of the snapshot (regional or
            multi-regional).
          items:
            type: string
          type: array
      type: object
    SnapshotList:
      description: Contains a list of Snapshot resources.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of Snapshot resources.
          items:
            $ref: "#/components/schemas/Snapshot"
          type: array
        kind:
          default: compute#snapshotList
          description: Type of resource.
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    SourceInstanceParams:
      description: A specification of the parameters to use when creating the instance
        template from a source instance.
      properties:
        diskConfigs:
          description: "Attached disks configuration. If not provided, defaults are
            applied: For boot disk and any other R/W disks, new custom images
            will be created from each disk. For read-only disks, they will be
            attached in read-only mode. Local SSD disks will be created as blank
            volumes."
          items:
            $ref: "#/components/schemas/DiskInstantiationConfig"
          type: array
      type: object
    SslCertificate:
      description: >-
        Represents an SSL Certificate resource.


        This SSL certificate resource also contains a private key. You can use SSL keys and certificates to secure connections to a load balancer. For more information, read  Creating and Using SSL Certificates. (== resource_for beta.sslCertificates ==) (== resource_for v1.sslCertificates ==)
      properties:
        certificate:
          description: A local certificate file. The certificate must be in PEM format. The
            certificate chain must be no greater than 5 certs long. The chain
            must include at least one intermediate cert.
          type: string
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#sslCertificate
          description: "[Output Only] Type of the resource. Always compute#sslCertificate
            for SSL certificates."
          type: string
        name:
          description: Name of the resource. Provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        privateKey:
          description: A write-only private key in PEM format. Only insert requests will
            include this field.
          type: string
        region:
          description: "[Output Only] URL of the region where the regional SSL Certificate
            resides. This field is not applicable to global SSL Certificate."
          type: string
        selfLink:
          description: "[Output only] Server-defined URL for the resource."
          type: string
      type: object
    SslCertificateAggregatedList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/SslCertificatesScopedList"
          description: A list of SslCertificatesScopedList resources.
          type: object
        kind:
          default: compute#sslCertificateAggregatedList
          description: "[Output Only] Type of resource. Always
            compute#sslCertificateAggregatedList for lists of SSL Certificates."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    SslCertificateList:
      description: Contains a list of SslCertificate resources.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of SslCertificate resources.
          items:
            $ref: "#/components/schemas/SslCertificate"
          type: array
        kind:
          default: compute#sslCertificateList
          description: Type of resource.
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    SslCertificatesScopedList:
      properties:
        sslCertificates:
          description: List of SslCertificates contained in this scope.
          items:
            $ref: "#/components/schemas/SslCertificate"
          type: array
        warning:
          description: Informational warning which replaces the list of backend services
            when the list is empty.
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    SslPoliciesList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of SslPolicy resources.
          items:
            $ref: "#/components/schemas/SslPolicy"
          type: array
        kind:
          default: compute#sslPoliciesList
          description: "[Output Only] Type of the resource. Always compute#sslPoliciesList
            for lists of sslPolicies."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    SslPoliciesListAvailableFeaturesResponse:
      properties:
        features:
          items:
            type: string
          type: array
      type: object
    SslPolicy:
      description: >-
        Represents a Cloud Armor Security Policy resource.


        Only external backend services used by HTTP or HTTPS load balancers can reference a Security Policy. For more information, read read  Cloud Armor Security Policy Concepts. (== resource_for beta.sslPolicies ==) (== resource_for v1.sslPolicies ==)
      properties:
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        customFeatures:
          description: >-
            A list of features enabled when the selected profile is CUSTOM. The

            - method returns the set of features that can be specified in this list. This field must be empty if the profile is not CUSTOM.
          items:
            type: string
          type: array
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        enabledFeatures:
          description: "[Output Only] The list of features enabled in the SSL policy."
          items:
            type: string
          type: array
        fingerprint:
          description: >-
            Fingerprint of this resource. A hash of the contents stored in this
            object. This field is used in optimistic locking. This field will be
            ignored when inserting a SslPolicy. An up-to-date fingerprint must
            be provided in order to update the SslPolicy, otherwise the request
            will fail with error 412 conditionNotMet.


            To see the latest fingerprint, make a get() request to retrieve an SslPolicy.
          format: byte
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#sslPolicy
          description: "[Output only] Type of the resource. Always compute#sslPolicyfor SSL
            policies."
          type: string
        minTlsVersion:
          description: The minimum version of SSL protocol that can be used by the clients
            to establish a connection with the load balancer. This can be one of
            TLS_1_0, TLS_1_1, TLS_1_2.
          enum:
            - TLS_1_0
            - TLS_1_1
            - TLS_1_2
          type: string
        name:
          description: Name of the resource. The name must be 1-63 characters long, and
            comply with RFC1035. Specifically, the name must be 1-63 characters
            long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`
            which means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        profile:
          description: Profile specifies the set of SSL features that can be used by the
            load balancer when negotiating SSL with clients. This can be one of
            COMPATIBLE, MODERN, RESTRICTED, or CUSTOM. If using CUSTOM, the set
            of SSL features to enable must be specified in the customFeatures
            field.
          enum:
            - COMPATIBLE
            - CUSTOM
            - MODERN
            - RESTRICTED
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        warnings:
          description: "[Output Only] If potential misconfigurations are detected for this
            SSL policy, this field will be populated with warning messages."
          items:
            properties:
              code:
                description: "[Output Only] A warning code, if applicable. For example,
                  Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                  results in the response."
                enum:
                  - CLEANUP_FAILED
                  - DEPRECATED_RESOURCE_USED
                  - DEPRECATED_TYPE_USED
                  - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                  - EXPERIMENTAL_TYPE_USED
                  - EXTERNAL_API_WARNING
                  - FIELD_VALUE_OVERRIDEN
                  - INJECTED_KERNELS_DEPRECATED
                  - MISSING_TYPE_DEPENDENCY
                  - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                  - NEXT_HOP_CANNOT_IP_FORWARD
                  - NEXT_HOP_INSTANCE_NOT_FOUND
                  - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                  - NEXT_HOP_NOT_RUNNING
                  - NOT_CRITICAL_ERROR
                  - NO_RESULTS_ON_PAGE
                  - REQUIRED_TOS_AGREEMENT
                  - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                  - RESOURCE_NOT_DELETED
                  - SCHEMA_VALIDATION_IGNORED
                  - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                  - UNDECLARED_PROPERTIES
                  - UNREACHABLE
                type: string
              data:
                description: >-
                  [Output Only] Metadata about this warning in key: value
                  format. For example:

                  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
                items:
                  properties:
                    key:
                      description: "[Output Only] A key that provides more detail on the
                        warning being returned. For example, for warnings where
                        there are no results in a list request for a particular
                        zone, this key might be scope and the key value might be
                        the zone name. Other examples might be a key indicating
                        a deprecated resource and a suggested replacement, or a
                        warning about invalid network settings (for example, if
                        an instance attempts to perform IP forwarding but is not
                        enabled for IP forwarding)."
                      type: string
                    value:
                      description: "[Output Only] A warning data value corresponding to the
                        key."
                      type: string
                  type: object
                type: array
              message:
                description: "[Output Only] A human-readable description of the warning
                  code."
                type: string
            type: object
          type: array
      type: object
    SslPolicyReference:
      properties:
        sslPolicy:
          description: URL of the SSL policy resource. Set this to empty string to clear
            any existing SSL policy associated with the target proxy resource.
          type: string
      type: object
    Subnetwork:
      description: >-
        Represents a Subnetwork resource.


        A subnetwork (also known as a subnet) is a logical partition of a Virtual Private Cloud network with one primary IP range and zero or more secondary IP ranges. For more information, read  Virtual Private Cloud (VPC) Network. (== resource_for beta.subnetworks ==) (== resource_for v1.subnetworks ==)
      properties:
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource. This field can be set only at resource
            creation time.
          type: string
        enableFlowLogs:
          description: Whether to enable flow logging for this subnetwork. If this field is
            not explicitly set, it will not appear in get listings. If not set
            the default behavior is to disable flow logging.
          type: boolean
        fingerprint:
          description: >-
            Fingerprint of this resource. A hash of the contents stored in this
            object. This field is used in optimistic locking. This field will be
            ignored when inserting a Subnetwork. An up-to-date fingerprint must
            be provided in order to update the Subnetwork, otherwise the request
            will fail with error 412 conditionNotMet.


            To see the latest fingerprint, make a get() request to retrieve a Subnetwork.
          format: byte
          type: string
        gatewayAddress:
          description: "[Output Only] The gateway address for default routes to reach
            destination addresses outside this subnetwork."
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        ipCidrRange:
          description: The range of internal addresses that are owned by this subnetwork.
            Provide this property when you create the subnetwork. For example,
            10.0.0.0/8 or 192.168.0.0/16. Ranges must be unique and
            non-overlapping within a network. Only IPv4 is supported. This field
            can be set only at resource creation time.
          type: string
        kind:
          default: compute#subnetwork
          description: "[Output Only] Type of the resource. Always compute#subnetwork for
            Subnetwork resources."
          type: string
        logConfig:
          $ref: "#/components/schemas/SubnetworkLogConfig"
        name:
          description: The name of the resource, provided by the client when initially
            creating the resource. The name must be 1-63 characters long, and
            comply with RFC1035. Specifically, the name must be 1-63 characters
            long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`
            which means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        network:
          description: The URL of the network to which this subnetwork belongs, provided by
            the client when initially creating the subnetwork. Only networks
            that are in the distributed mode can have subnetworks. This field
            can be set only at resource creation time.
          type: string
        privateIpGoogleAccess:
          description: Whether the VMs in this subnet can access Google services without
            assigned external IP addresses. This field can be both set at
            resource creation time and updated using setPrivateIpGoogleAccess.
          type: boolean
        purpose:
          description: The purpose of the resource. This field can be either
            PRIVATE_RFC_1918 or INTERNAL_HTTPS_LOAD_BALANCER. A subnetwork with
            purpose set to INTERNAL_HTTPS_LOAD_BALANCER is a user-created
            subnetwork that is reserved for Internal HTTP(S) Load Balancing. If
            unspecified, the purpose defaults to PRIVATE_RFC_1918.
          enum:
            - INTERNAL_HTTPS_LOAD_BALANCER
            - PRIVATE
            - PRIVATE_RFC_1918
          type: string
        region:
          description: URL of the region where the Subnetwork resides. This field can be
            set only at resource creation time.
          type: string
        role:
          description: The role of subnetwork. Currenly, this field is only used when
            purpose = INTERNAL_HTTPS_LOAD_BALANCER. The value can be set to
            ACTIVE or BACKUP. An ACTIVE subnetwork is one that is currently
            being used for Internal HTTP(S) Load Balancing. A BACKUP subnetwork
            is one that is ready to be promoted to ACTIVE or is currently
            draining. This field can be updated with a patch request.
          enum:
            - ACTIVE
            - BACKUP
          type: string
        secondaryIpRanges:
          description: An array of configurations for secondary IP ranges for VM instances
            contained in this subnetwork. The primary IP of such VM must belong
            to the primary ipCidrRange of the subnetwork. The alias IPs may
            belong to either primary or secondary ranges. This field can be
            updated with a patch request.
          items:
            $ref: "#/components/schemas/SubnetworkSecondaryRange"
          type: array
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        state:
          description: "[Output Only] The state of the subnetwork, which can be one of
            READY or DRAINING. A subnetwork that is READY is ready to be used.
            The state of DRAINING is only applicable to subnetworks that have
            the purpose set to INTERNAL_HTTPS_LOAD_BALANCER and indicates that
            connections to the load balancer are being drained. A subnetwork
            that is draining cannot be used or modified until it reaches a
            status of READY."
          enum:
            - DRAINING
            - READY
          type: string
      type: object
    SubnetworkAggregatedList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/SubnetworksScopedList"
          description: A list of SubnetworksScopedList resources.
          type: object
        kind:
          default: compute#subnetworkAggregatedList
          description: "[Output Only] Type of resource. Always
            compute#subnetworkAggregatedList for aggregated lists of
            subnetworks."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    SubnetworkList:
      description: Contains a list of Subnetwork resources.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of Subnetwork resources.
          items:
            $ref: "#/components/schemas/Subnetwork"
          type: array
        kind:
          default: compute#subnetworkList
          description: "[Output Only] Type of resource. Always compute#subnetworkList for
            lists of subnetworks."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    SubnetworkLogConfig:
      description: The available logging options for this subnetwork.
      properties:
        aggregationInterval:
          description: Can only be specified if VPC flow logging for this subnetwork is
            enabled. Toggles the aggregation interval for collecting flow logs.
            Increasing the interval time will reduce the amount of generated
            flow logs for long lasting connections. Default is an interval of 5
            seconds per connection.
          enum:
            - INTERVAL_10_MIN
            - INTERVAL_15_MIN
            - INTERVAL_1_MIN
            - INTERVAL_30_SEC
            - INTERVAL_5_MIN
            - INTERVAL_5_SEC
          type: string
        enable:
          description: Whether to enable flow logging for this subnetwork. If this field is
            not explicitly set, it will not appear in get listings. If not set
            the default behavior is to disable flow logging.
          type: boolean
        flowSampling:
          description: Can only be specified if VPC flow logging for this subnetwork is
            enabled. The value of the field must be in [0, 1]. Set the sampling
            rate of VPC flow logs within the subnetwork where 1.0 means all
            collected logs are reported and 0.0 means no logs are reported.
            Default is 0.5, which means half of all collected logs are reported.
          format: float
          type: number
        metadata:
          description: Can only be specified if VPC flow logs for this subnetwork is
            enabled. Configures whether all, none or a subset of metadata fields
            should be added to the reported VPC flow logs. Default is
            INCLUDE_ALL_METADATA.
          enum:
            - EXCLUDE_ALL_METADATA
            - INCLUDE_ALL_METADATA
          type: string
      type: object
    SubnetworkSecondaryRange:
      description: Represents a secondary IP range of a subnetwork.
      properties:
        ipCidrRange:
          description: The range of IP addresses belonging to this subnetwork secondary
            range. Provide this property when you create the subnetwork. Ranges
            must be unique and non-overlapping with all primary and secondary IP
            ranges within a network. Only IPv4 is supported.
          type: string
        rangeName:
          description: The name associated with this subnetwork secondary range, used when
            adding an alias IP range to a VM instance. The name must be 1-63
            characters long, and comply with RFC1035. The name must be unique
            within the subnetwork.
          type: string
      type: object
    SubnetworksExpandIpCidrRangeRequest:
      properties:
        ipCidrRange:
          description: The IP (in CIDR format or netmask) of internal addresses that are
            legal on this Subnetwork. This range should be disjoint from other
            subnetworks within this network. This range can only be larger than
            (i.e. a superset of) the range previously defined before the update.
          type: string
      type: object
    SubnetworksScopedList:
      properties:
        subnetworks:
          description: A list of subnetworks contained in this scope.
          items:
            $ref: "#/components/schemas/Subnetwork"
          type: array
        warning:
          description: An informational warning that appears when the list of addresses is
            empty.
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    SubnetworksSetPrivateIpGoogleAccessRequest:
      properties:
        privateIpGoogleAccess:
          type: boolean
      type: object
    TCPHealthCheck:
      properties:
        port:
          description: The TCP port number for the health check request. The default value
            is 80. Valid values are 1 through 65535.
          format: int32
          type: integer
        portName:
          description: Port name as defined in InstanceGroup#NamedPort#name. If both port
            and port_name are defined, port takes precedence.
          type: string
        portSpecification:
          description: >-
            Specifies how port is selected for health checking, can be one of
            following values:

            USE_FIXED_PORT: The port number in

            port

            is used for health checking.

            USE_NAMED_PORT: The

            portName

            is used for health checking.

            USE_SERVING_PORT: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.



            If not specified, TCP health check follows behavior specified in

            port

            and

            portName

            fields.
          enum:
            - USE_FIXED_PORT
            - USE_NAMED_PORT
            - USE_SERVING_PORT
          type: string
        proxyHeader:
          description: Specifies the type of proxy header to append before sending data to
            the backend, either NONE or PROXY_V1. The default is NONE.
          enum:
            - NONE
            - PROXY_V1
          type: string
        request:
          description: The application data to send once the TCP connection has been
            established (default value is empty). If both request and response
            are empty, the connection establishment alone will indicate health.
            The request data can only be ASCII.
          type: string
        response:
          description: The bytes to match against the beginning of the response data. If
            left empty (the default value), any response will indicate health.
            The response data can only be ASCII.
          type: string
      type: object
    Tags:
      description: A set of instance tags.
      properties:
        fingerprint:
          description: >-
            Specifies a fingerprint for this request, which is essentially a
            hash of the tags' contents and used for optimistic locking. The
            fingerprint is initially generated by Compute Engine and changes
            after every request to modify or update tags. You must always
            provide an up-to-date fingerprint hash in order to update or change
            tags.


            To see the latest fingerprint, make get() request to the instance.
          format: byte
          type: string
        items:
          description: An array of tags. Each tag must be 1-63 characters long, and comply
            with RFC1035.
          items:
            type: string
          type: array
      type: object
    TargetHttpProxiesScopedList:
      properties:
        targetHttpProxies:
          description: A list of TargetHttpProxies contained in this scope.
          items:
            $ref: "#/components/schemas/TargetHttpProxy"
          type: array
        warning:
          description: Informational warning which replaces the list of backend services
            when the list is empty.
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    TargetHttpProxy:
      description: >-
        Represents a Target HTTP Proxy resource.


        A target HTTP proxy is a component of certain types of load balancers. Global forwarding rules reference a target HTTP proxy, and the target proxy then references a URL map. For more information, read Using Target Proxies. (== resource_for beta.targetHttpProxies ==) (== resource_for v1.targetHttpProxies ==)
      properties:
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#targetHttpProxy
          description: "[Output Only] Type of resource. Always compute#targetHttpProxy for
            target HTTP proxies."
          type: string
        name:
          description: Name of the resource. Provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        region:
          description: "[Output Only] URL of the region where the regional Target HTTP
            Proxy resides. This field is not applicable to global Target HTTP
            Proxies."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        urlMap:
          description: URL to the UrlMap resource that defines the mapping from URL to the
            BackendService.
          type: string
      type: object
    TargetHttpProxyAggregatedList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/TargetHttpProxiesScopedList"
          description: A list of TargetHttpProxiesScopedList resources.
          type: object
        kind:
          default: compute#targetHttpProxyAggregatedList
          description: "[Output Only] Type of resource. Always
            compute#targetHttpProxyAggregatedList for lists of Target HTTP
            Proxies."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
      type: object
    TargetHttpProxyList:
      description: A list of TargetHttpProxy resources.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of TargetHttpProxy resources.
          items:
            $ref: "#/components/schemas/TargetHttpProxy"
          type: array
        kind:
          default: compute#targetHttpProxyList
          description: Type of resource. Always compute#targetHttpProxyList for lists of
            target HTTP proxies.
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    TargetHttpsProxiesScopedList:
      properties:
        targetHttpsProxies:
          description: A list of TargetHttpsProxies contained in this scope.
          items:
            $ref: "#/components/schemas/TargetHttpsProxy"
          type: array
        warning:
          description: Informational warning which replaces the list of backend services
            when the list is empty.
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    TargetHttpsProxiesSetQuicOverrideRequest:
      properties:
        quicOverride:
          description: QUIC policy for the TargetHttpsProxy resource.
          enum:
            - DISABLE
            - ENABLE
            - NONE
          type: string
      type: object
    TargetHttpsProxiesSetSslCertificatesRequest:
      properties:
        sslCertificates:
          description: New set of SslCertificate resources to associate with this
            TargetHttpsProxy resource. Currently exactly one SslCertificate
            resource must be specified.
          items:
            type: string
          type: array
      type: object
    TargetHttpsProxy:
      description: >-
        Represents a Target HTTPS Proxy resource.


        A target HTTPS proxy is a component of certain types of load balancers. Global forwarding rules reference a target HTTPS proxy, and the target proxy then references a URL map. For more information, read Using Target Proxies. (== resource_for beta.targetHttpsProxies ==) (== resource_for v1.targetHttpsProxies ==)
      properties:
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#targetHttpsProxy
          description: "[Output Only] Type of resource. Always compute#targetHttpsProxy for
            target HTTPS proxies."
          type: string
        name:
          description: Name of the resource. Provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        quicOverride:
          description: Specifies the QUIC override policy for this TargetHttpsProxy
            resource. This determines whether the load balancer will attempt to
            negotiate QUIC with clients or not. Can specify one of NONE, ENABLE,
            or DISABLE. Specify ENABLE to always enable QUIC, Enables QUIC when
            set to ENABLE, and disables QUIC when set to DISABLE. If NONE is
            specified, uses the QUIC policy with no user overrides, which is
            equivalent to DISABLE. Not specifying this field is equivalent to
            specifying NONE.
          enum:
            - DISABLE
            - ENABLE
            - NONE
          type: string
        region:
          description: "[Output Only] URL of the region where the regional TargetHttpsProxy
            resides. This field is not applicable to global TargetHttpsProxies."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        sslCertificates:
          description: URLs to SslCertificate resources that are used to authenticate
            connections between users and the load balancer. At least one SSL
            certificate must be specified. Currently, you may specify up to 15
            SSL certificates.
          items:
            type: string
          type: array
        sslPolicy:
          description: URL of SslPolicy resource that will be associated with the
            TargetHttpsProxy resource. If not set, the TargetHttpsProxy resource
            will not have any SSL policy configured.
          type: string
        urlMap:
          description: >-
            A fully-qualified or valid partial URL to the UrlMap resource that
            defines the mapping from URL to the BackendService. For example, the
            following are all valid URLs for specifying a URL map:  

            - https://www.googleapis.compute/v1/projects/project/global/urlMaps/url-map 

            - projects/project/global/urlMaps/url-map 

            - global/urlMaps/url-map
          type: string
      type: object
    TargetHttpsProxyAggregatedList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/TargetHttpsProxiesScopedList"
          description: A list of TargetHttpsProxiesScopedList resources.
          type: object
        kind:
          default: compute#targetHttpsProxyAggregatedList
          description: "[Output Only] Type of resource. Always
            compute#targetHttpsProxyAggregatedList for lists of Target HTTP
            Proxies."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    TargetHttpsProxyList:
      description: Contains a list of TargetHttpsProxy resources.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of TargetHttpsProxy resources.
          items:
            $ref: "#/components/schemas/TargetHttpsProxy"
          type: array
        kind:
          default: compute#targetHttpsProxyList
          description: Type of resource. Always compute#targetHttpsProxyList for lists of
            target HTTPS proxies.
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    TargetInstance:
      description: >-
        Represents a Target Instance resource.


        You can use a target instance to handle traffic for one or more forwarding rules, which is ideal for forwarding protocol traffic that is managed by a single source. For example, ESP, AH, TCP, or UDP. For more information, read Target instances. (== resource_for beta.targetInstances ==) (== resource_for v1.targetInstances ==)
      properties:
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        instance:
          description: >-
            A URL to the virtual machine instance that handles traffic for this
            target instance. When creating a target instance, you can provide
            the fully-qualified URL or a valid partial URL to the desired
            virtual machine. For example, the following are all valid URLs: 

            - https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance 

            - projects/project/zones/zone/instances/instance 

            - zones/zone/instances/instance
          type: string
        kind:
          default: compute#targetInstance
          description: "[Output Only] The type of the resource. Always
            compute#targetInstance for target instances."
          type: string
        name:
          description: Name of the resource. Provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        natPolicy:
          description: NAT option controlling how IPs are NAT'ed to the instance. Currently
            only NO_NAT (default value) is supported.
          enum:
            - NO_NAT
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        zone:
          description: "[Output Only] URL of the zone where the target instance resides.
            You must specify this field as part of the HTTP request URL. It is
            not settable as a field in the request body."
          type: string
      type: object
    TargetInstanceAggregatedList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/TargetInstancesScopedList"
          description: A list of TargetInstance resources.
          type: object
        kind:
          default: compute#targetInstanceAggregatedList
          description: Type of resource.
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    TargetInstanceList:
      description: Contains a list of TargetInstance resources.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of TargetInstance resources.
          items:
            $ref: "#/components/schemas/TargetInstance"
          type: array
        kind:
          default: compute#targetInstanceList
          description: Type of resource.
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    TargetInstancesScopedList:
      properties:
        targetInstances:
          description: A list of target instances contained in this scope.
          items:
            $ref: "#/components/schemas/TargetInstance"
          type: array
        warning:
          description: Informational warning which replaces the list of addresses when the
            list is empty.
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    TargetPool:
      description: >-
        Represents a Target Pool resource.


        Target pools are used for network TCP/UDP load balancing. A target pool references member instances, an associated legacy HttpHealthCheck resource, and, optionally, a backup target pool. For more information, read Using target pools. (== resource_for beta.targetPools ==) (== resource_for v1.targetPools ==)
      properties:
        backupPool:
          description: >-
            This field is applicable only when the containing target pool is
            serving a forwarding rule as the primary pool, and its failoverRatio
            field is properly set to a value between [0, 1].


            backupPool and failoverRatio together define the fallback behavior of the primary target pool: if the ratio of the healthy instances in the primary pool is at or below failoverRatio, traffic arriving at the load-balanced IP will be directed to the backup pool.


            In case where failoverRatio and backupPool are not set, or all the instances in the backup pool are unhealthy, the traffic will be directed back to the primary pool in the "force" mode, where traffic will be spread to the healthy instances with the best effort, or to all instances when no instance is healthy.
          type: string
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        failoverRatio:
          description: >-
            This field is applicable only when the containing target pool is
            serving a forwarding rule as the primary pool (i.e., not as a backup
            pool to some other target pool). The value of the field must be in
            [0, 1].


            If set, backupPool must also be set. They together define the fallback behavior of the primary target pool: if the ratio of the healthy instances in the primary pool is at or below this number, traffic arriving at the load-balanced IP will be directed to the backup pool.


            In case where failoverRatio is not set or all the instances in the backup pool are unhealthy, the traffic will be directed back to the primary pool in the "force" mode, where traffic will be spread to the healthy instances with the best effort, or to all instances when no instance is healthy.
          format: float
          type: number
        healthChecks:
          description: The URL of the HttpHealthCheck resource. A member instance in this
            pool is considered healthy if and only if the health checks pass. An
            empty list means all member instances will be considered healthy at
            all times. Only HttpHealthChecks are supported. Only one health
            check may be specified.
          items:
            type: string
          type: array
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        instances:
          description: A list of resource URLs to the virtual machine instances serving
            this pool. They must live in zones contained in the same region as
            this pool.
          items:
            type: string
          type: array
        kind:
          default: compute#targetPool
          description: "[Output Only] Type of the resource. Always compute#targetPool for
            target pools."
          type: string
        name:
          description: Name of the resource. Provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        region:
          description: "[Output Only] URL of the region where the target pool resides."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        sessionAffinity:
          description: >-
            Session affinity option, must be one of the following values:

            NONE: Connections from the same client IP may go to any instance in the pool.

            CLIENT_IP: Connections from the same client IP will go to the same instance in the pool while that instance remains healthy.

            CLIENT_IP_PROTO: Connections from the same client IP with the same IP protocol will go to the same instance in the pool while that instance remains healthy.
          enum:
            - CLIENT_IP
            - CLIENT_IP_PORT_PROTO
            - CLIENT_IP_PROTO
            - GENERATED_COOKIE
            - HEADER_FIELD
            - HTTP_COOKIE
            - NONE
          type: string
      type: object
    TargetPoolAggregatedList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/TargetPoolsScopedList"
          description: A list of TargetPool resources.
          type: object
        kind:
          default: compute#targetPoolAggregatedList
          description: "[Output Only] Type of resource. Always
            compute#targetPoolAggregatedList for aggregated lists of target
            pools."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    TargetPoolInstanceHealth:
      properties:
        healthStatus:
          items:
            $ref: "#/components/schemas/HealthStatus"
          type: array
        kind:
          default: compute#targetPoolInstanceHealth
          description: "[Output Only] Type of resource. Always
            compute#targetPoolInstanceHealth when checking the health of an
            instance."
          type: string
      type: object
    TargetPoolList:
      description: Contains a list of TargetPool resources.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of TargetPool resources.
          items:
            $ref: "#/components/schemas/TargetPool"
          type: array
        kind:
          default: compute#targetPoolList
          description: "[Output Only] Type of resource. Always compute#targetPoolList for
            lists of target pools."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    TargetPoolsAddHealthCheckRequest:
      properties:
        healthChecks:
          description: The HttpHealthCheck to add to the target pool.
          items:
            $ref: "#/components/schemas/HealthCheckReference"
          type: array
      type: object
    TargetPoolsAddInstanceRequest:
      properties:
        instances:
          description: >-
            A full or partial URL to an instance to add to this target pool.
            This can be a full or partial URL. For example, the following are
            valid URLs:  

            - https://www.googleapis.com/compute/v1/projects/project-id/zones/zone/instances/instance-name 

            - projects/project-id/zones/zone/instances/instance-name 

            - zones/zone/instances/instance-name
          items:
            $ref: "#/components/schemas/InstanceReference"
          type: array
      type: object
    TargetPoolsRemoveHealthCheckRequest:
      properties:
        healthChecks:
          description: >-
            Health check URL to be removed. This can be a full or valid partial
            URL. For example, the following are valid URLs:  

            - https://www.googleapis.com/compute/beta/projects/project/global/httpHealthChecks/health-check 

            - projects/project/global/httpHealthChecks/health-check 

            - global/httpHealthChecks/health-check
          items:
            $ref: "#/components/schemas/HealthCheckReference"
          type: array
      type: object
    TargetPoolsRemoveInstanceRequest:
      properties:
        instances:
          description: URLs of the instances to be removed from target pool.
          items:
            $ref: "#/components/schemas/InstanceReference"
          type: array
      type: object
    TargetPoolsScopedList:
      properties:
        targetPools:
          description: A list of target pools contained in this scope.
          items:
            $ref: "#/components/schemas/TargetPool"
          type: array
        warning:
          description: Informational warning which replaces the list of addresses when the
            list is empty.
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    TargetReference:
      properties:
        target:
          type: string
      type: object
    TargetSslProxiesSetBackendServiceRequest:
      properties:
        service:
          description: The URL of the new BackendService resource for the targetSslProxy.
          type: string
      type: object
    TargetSslProxiesSetProxyHeaderRequest:
      properties:
        proxyHeader:
          description: The new type of proxy header to append before sending data to the
            backend. NONE or PROXY_V1 are allowed.
          enum:
            - NONE
            - PROXY_V1
          type: string
      type: object
    TargetSslProxiesSetSslCertificatesRequest:
      properties:
        sslCertificates:
          description: New set of URLs to SslCertificate resources to associate with this
            TargetSslProxy. Currently exactly one ssl certificate must be
            specified.
          items:
            type: string
          type: array
      type: object
    TargetSslProxy:
      description: >-
        Represents a Target SSL Proxy resource.


        A target SSL proxy is a component of a SSL Proxy load balancer. Global forwarding rules reference a target SSL proxy, and the target proxy then references an external backend service. For more information, read Using Target Proxies. (== resource_for beta.targetSslProxies ==) (== resource_for v1.targetSslProxies ==)
      properties:
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#targetSslProxy
          description: "[Output Only] Type of the resource. Always compute#targetSslProxy
            for target SSL proxies."
          type: string
        name:
          description: Name of the resource. Provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        proxyHeader:
          description: Specifies the type of proxy header to append before sending data to
            the backend, either NONE or PROXY_V1. The default is NONE.
          enum:
            - NONE
            - PROXY_V1
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        service:
          description: URL to the BackendService resource.
          type: string
        sslCertificates:
          description: URLs to SslCertificate resources that are used to authenticate
            connections to Backends. At least one SSL certificate must be
            specified. Currently, you may specify up to 15 SSL certificates.
          items:
            type: string
          type: array
        sslPolicy:
          description: URL of SslPolicy resource that will be associated with the
            TargetSslProxy resource. If not set, the TargetSslProxy resource
            will not have any SSL policy configured.
          type: string
      type: object
    TargetSslProxyList:
      description: Contains a list of TargetSslProxy resources.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of TargetSslProxy resources.
          items:
            $ref: "#/components/schemas/TargetSslProxy"
          type: array
        kind:
          default: compute#targetSslProxyList
          description: Type of resource.
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    TargetTcpProxiesSetBackendServiceRequest:
      properties:
        service:
          description: The URL of the new BackendService resource for the targetTcpProxy.
          type: string
      type: object
    TargetTcpProxiesSetProxyHeaderRequest:
      properties:
        proxyHeader:
          description: The new type of proxy header to append before sending data to the
            backend. NONE or PROXY_V1 are allowed.
          enum:
            - NONE
            - PROXY_V1
          type: string
      type: object
    TargetTcpProxy:
      description: >-
        Represents a Target TCP Proxy resource.


        A target TCP proxy is a component of a TCP Proxy load balancer. Global forwarding rules reference target TCP proxy, and the target proxy then references an external backend service. For more information, read TCP Proxy Load Balancing Concepts. (== resource_for beta.targetTcpProxies ==) (== resource_for v1.targetTcpProxies ==)
      properties:
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#targetTcpProxy
          description: "[Output Only] Type of the resource. Always compute#targetTcpProxy
            for target TCP proxies."
          type: string
        name:
          description: Name of the resource. Provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        proxyHeader:
          description: Specifies the type of proxy header to append before sending data to
            the backend, either NONE or PROXY_V1. The default is NONE.
          enum:
            - NONE
            - PROXY_V1
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        service:
          description: URL to the BackendService resource.
          type: string
      type: object
    TargetTcpProxyList:
      description: Contains a list of TargetTcpProxy resources.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of TargetTcpProxy resources.
          items:
            $ref: "#/components/schemas/TargetTcpProxy"
          type: array
        kind:
          default: compute#targetTcpProxyList
          description: Type of resource.
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    TargetVpnGateway:
      description: >-
        Represents a Target VPN Gateway resource.


        The target VPN gateway resource represents a Classic Cloud VPN gateway. For more information, read the the Cloud VPN Overview. (== resource_for beta.targetVpnGateways ==) (== resource_for v1.targetVpnGateways ==)
      properties:
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        forwardingRules:
          description: "[Output Only] A list of URLs to the ForwardingRule resources.
            ForwardingRules are created using compute.forwardingRules.insert and
            associated with a VPN gateway."
          items:
            type: string
          type: array
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#targetVpnGateway
          description: "[Output Only] Type of resource. Always compute#targetVpnGateway for
            target VPN gateways."
          type: string
        name:
          description: Name of the resource. Provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        network:
          description: URL of the network to which this VPN gateway is attached. Provided
            by the client when the VPN gateway is created.
          type: string
        region:
          description: "[Output Only] URL of the region where the target VPN gateway
            resides. You must specify this field as part of the HTTP request
            URL. It is not settable as a field in the request body."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        status:
          description: "[Output Only] The status of the VPN gateway, which can be one of
            the following: CREATING, READY, FAILED, or DELETING."
          enum:
            - CREATING
            - DELETING
            - FAILED
            - READY
          type: string
        tunnels:
          description: "[Output Only] A list of URLs to VpnTunnel resources. VpnTunnels are
            created using the compute.vpntunnels.insert method and associated
            with a VPN gateway."
          items:
            type: string
          type: array
      type: object
    TargetVpnGatewayAggregatedList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/TargetVpnGatewaysScopedList"
          description: A list of TargetVpnGateway resources.
          type: object
        kind:
          default: compute#targetVpnGatewayAggregatedList
          description: "[Output Only] Type of resource. Always compute#targetVpnGateway for
            target VPN gateways."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    TargetVpnGatewayList:
      description: Contains a list of TargetVpnGateway resources.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of TargetVpnGateway resources.
          items:
            $ref: "#/components/schemas/TargetVpnGateway"
          type: array
        kind:
          default: compute#targetVpnGatewayList
          description: "[Output Only] Type of resource. Always compute#targetVpnGateway for
            target VPN gateways."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    TargetVpnGatewaysScopedList:
      properties:
        targetVpnGateways:
          description: "[Output Only] A list of target VPN gateways contained in this
            scope."
          items:
            $ref: "#/components/schemas/TargetVpnGateway"
          type: array
        warning:
          description: "[Output Only] Informational warning which replaces the list of
            addresses when the list is empty."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    TestFailure:
      properties:
        actualService:
          type: string
        expectedService:
          type: string
        host:
          type: string
        path:
          type: string
      type: object
    TestPermissionsRequest:
      properties:
        permissions:
          description: The set of permissions to check for the 'resource'. Permissions with
            wildcards (such as '*' or 'storage.*') are not allowed.
          items:
            type: string
          type: array
      type: object
    TestPermissionsResponse:
      properties:
        permissions:
          description: A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          items:
            type: string
          type: array
      type: object
    UrlMap:
      description: >-
        Represents a URL Map resource.


        A URL map resource is a component of certain types of load balancers. This resource defines mappings from host names and URL paths to either a backend service or a backend bucket.


        To use this resource, the backend service must have a loadBalancingScheme of either EXTERNAL, INTERNAL_SELF_MANAGED, or INTERNAL_MANAGED For more information, read URL Map Concepts.
      properties:
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        defaultRouteAction:
          $ref: "#/components/schemas/HttpRouteAction"
        defaultService:
          description: >-
            The full or partial URL of the defaultService resource to which
            traffic is directed if none of the hostRules match. If
            defaultRouteAction is additionally specified, advanced routing
            actions like URL Rewrites, etc. take effect prior to sending the
            request to the backend. However, if defaultService is specified,
            defaultRouteAction cannot contain any weightedBackendServices.
            Conversely, if routeAction specifies any weightedBackendServices,
            service must not be specified.

            Only one of defaultService, defaultUrlRedirect  or defaultRouteAction.weightedBackendService must be set.
          type: string
        defaultUrlRedirect:
          $ref: "#/components/schemas/HttpRedirectAction"
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        fingerprint:
          description: >-
            Fingerprint of this resource. A hash of the contents stored in this
            object. This field is used in optimistic locking. This field will be
            ignored when inserting a UrlMap. An up-to-date fingerprint must be
            provided in order to update the UrlMap, otherwise the request will
            fail with error 412 conditionNotMet.


            To see the latest fingerprint, make a get() request to retrieve a UrlMap.
          format: byte
          type: string
        headerAction:
          $ref: "#/components/schemas/HttpHeaderAction"
        hostRules:
          description: The list of HostRules to use against the URL.
          items:
            $ref: "#/components/schemas/HostRule"
          type: array
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#urlMap
          description: "[Output Only] Type of the resource. Always compute#urlMaps for url
            maps."
          type: string
        name:
          description: Name of the resource. Provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        pathMatchers:
          description: The list of named PathMatchers to use against the URL.
          items:
            $ref: "#/components/schemas/PathMatcher"
          type: array
        region:
          description: "[Output Only] URL of the region where the regional URL map resides.
            This field is not applicable to global URL maps. You must specify
            this field as part of the HTTP request URL. It is not settable as a
            field in the request body."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        tests:
          description: The list of expected URL mapping tests. Request to update this
            UrlMap will succeed only if all of the test cases pass. You can
            specify a maximum of 100 tests per UrlMap.
          items:
            $ref: "#/components/schemas/UrlMapTest"
          type: array
      type: object
    UrlMapList:
      description: Contains a list of UrlMap resources.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of UrlMap resources.
          items:
            $ref: "#/components/schemas/UrlMap"
          type: array
        kind:
          default: compute#urlMapList
          description: Type of resource.
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    UrlMapReference:
      properties:
        urlMap:
          type: string
      type: object
    UrlMapTest:
      description: Message for the expected URL mappings.
      properties:
        description:
          description: Description of this test case.
          type: string
        host:
          description: Host portion of the URL.
          type: string
        path:
          description: Path portion of the URL.
          type: string
        service:
          description: Expected BackendService resource the given URL should be mapped to.
          type: string
      type: object
    UrlMapValidationResult:
      description: Message representing the validation result for a UrlMap.
      properties:
        loadErrors:
          items:
            type: string
          type: array
        loadSucceeded:
          description: Whether the given UrlMap can be successfully loaded. If false,
            'loadErrors' indicates the reasons.
          type: boolean
        testFailures:
          items:
            $ref: "#/components/schemas/TestFailure"
          type: array
        testPassed:
          description: If successfully loaded, this field indicates whether the test
            passed. If false, 'testFailures's indicate the reason of failure.
          type: boolean
      type: object
    UrlMapsAggregatedList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/UrlMapsScopedList"
          description: A list of UrlMapsScopedList resources.
          type: object
        kind:
          default: compute#urlMapsAggregatedList
          description: Type of resource.
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    UrlMapsScopedList:
      properties:
        urlMaps:
          description: A list of UrlMaps contained in this scope.
          items:
            $ref: "#/components/schemas/UrlMap"
          type: array
        warning:
          description: Informational warning which replaces the list of backend services
            when the list is empty.
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    UrlMapsValidateRequest:
      properties:
        resource:
          $ref: "#/components/schemas/UrlMap"
      type: object
    UrlMapsValidateResponse:
      properties:
        result:
          $ref: "#/components/schemas/UrlMapValidationResult"
      type: object
    UrlRewrite:
      description: The spec for modifying the path before sending the request to the
        matched backend service.
      properties:
        hostRewrite:
          description: >-
            Prior to forwarding the request to the selected service, the
            request's host header is replaced with contents of hostRewrite.

            The value must be between 1 and 255 characters.
          type: string
        pathPrefixRewrite:
          description: >-
            Prior to forwarding the request to the selected backend service, the
            matching portion of the request's path is replaced by
            pathPrefixRewrite.

            The value must be between 1 and 1024 characters.
          type: string
      type: object
    UsableSubnetwork:
      description: Subnetwork which the current user has compute.subnetworks.use permission
        on.
      properties:
        ipCidrRange:
          description: The range of internal addresses that are owned by this subnetwork.
          type: string
        network:
          description: Network URL.
          type: string
        secondaryIpRanges:
          description: Secondary IP ranges.
          items:
            $ref: "#/components/schemas/UsableSubnetworkSecondaryRange"
          type: array
        subnetwork:
          description: Subnetwork URL.
          type: string
      type: object
    UsableSubnetworkSecondaryRange:
      description: Secondary IP range of a usable subnetwork.
      properties:
        ipCidrRange:
          description: The range of IP addresses belonging to this subnetwork secondary
            range.
          type: string
        rangeName:
          description: The name associated with this subnetwork secondary range, used when
            adding an alias IP range to a VM instance. The name must be 1-63
            characters long, and comply with RFC1035. The name must be unique
            within the subnetwork.
          type: string
      type: object
    UsableSubnetworksAggregatedList:
      properties:
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          type: string
        items:
          description: "[Output] A list of usable subnetwork URLs."
          items:
            $ref: "#/components/schemas/UsableSubnetwork"
          type: array
        kind:
          default: compute#usableSubnetworksAggregatedList
          description: "[Output Only] Type of resource. Always
            compute#usableSubnetworksAggregatedList for aggregated lists of
            usable subnetworks."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    UsageExportLocation:
      description: The location in Cloud Storage and naming method of the daily usage
        report. Contains bucket_name and report_name prefix.
      properties:
        bucketName:
          description: The name of an existing bucket in Cloud Storage where the usage
            report object is stored. The Google Service Account is granted write
            access to this bucket. This can either be the bucket name by itself,
            such as example-bucket, or the bucket name with gs:// or
            https://storage.googleapis.com/ in front of it, such as
            gs://example-bucket.
          type: string
        reportNamePrefix:
          description: An optional prefix for the name of the usage report object stored in
            bucketName. If not supplied, defaults to usage. The report is stored
            as a CSV file named report_name_prefix_gce_YYYYMMDD.csv where
            YYYYMMDD is the day of the usage according to Pacific Time. If you
            supply a prefix, it should conform to Cloud Storage object naming
            conventions.
          type: string
      type: object
    VmEndpointNatMappings:
      description: Contain information of Nat mapping for a VM endpoint (i.e., NIC).
      properties:
        instanceName:
          description: Name of the VM instance which the endpoint belongs to
          type: string
        interfaceNatMappings:
          items:
            $ref: "#/components/schemas/VmEndpointNatMappingsInterfaceNatMappings"
          type: array
      type: object
    VmEndpointNatMappingsInterfaceNatMappings:
      description: Contain information of Nat mapping for an interface of this endpoint.
      properties:
        natIpPortRanges:
          description: 'A list of all IP:port-range mappings assigned to this interface.
            These ranges are inclusive, that is, both the first and the last
            ports can be used for NAT. Example: ["2.2.2.2:12345-12355",
            "1.1.1.1:2234-2234"].'
          items:
            type: string
          type: array
        numTotalNatPorts:
          description: Total number of ports across all NAT IPs allocated to this
            interface. It equals to the aggregated port number in the field
            nat_ip_port_ranges.
          format: int32
          type: integer
        sourceAliasIpRange:
          description: 'Alias IP range for this interface endpoint. It will be a private
            (RFC 1918) IP range. Examples: "10.33.4.55/32", or
            "192.168.5.0/24".'
          type: string
        sourceVirtualIp:
          description: Primary IP of the VM for this NIC.
          type: string
      type: object
    VmEndpointNatMappingsList:
      description: Contains a list of VmEndpointNatMappings.
      properties:
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          type: string
        kind:
          default: compute#vmEndpointNatMappingsList
          description: "[Output Only] Type of resource. Always
            compute#vmEndpointNatMappingsList for lists of Nat mappings of VM
            endpoints."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        result:
          description: "[Output Only] A list of Nat mapping information of VM endpoints."
          items:
            $ref: "#/components/schemas/VmEndpointNatMappings"
          type: array
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    VpnGateway:
      description: Represents a VPN gateway resource.
      properties:
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#vpnGateway
          description: "[Output Only] Type of resource. Always compute#vpnGateway for VPN
            gateways."
          type: string
        labelFingerprint:
          description: >-
            A fingerprint for the labels being applied to this VpnGateway, which
            is essentially a hash of the labels set used for optimistic locking.
            The fingerprint is initially generated by Compute Engine and changes
            after every request to modify or update labels. You must always
            provide an up-to-date fingerprint hash in order to update or change
            labels, otherwise the request will fail with error 412
            conditionNotMet.


            To see the latest fingerprint, make a get() request to retrieve an VpnGateway.
          format: byte
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels to apply to this VpnGateway resource. These can be later
            modified by the setLabels method. Each label key/value must comply
            with RFC1035. Label values may be empty.
          type: object
        name:
          description: Name of the resource. Provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        network:
          description: URL of the network to which this VPN gateway is attached. Provided
            by the client when the VPN gateway is created.
          type: string
        region:
          description: "[Output Only] URL of the region where the VPN gateway resides."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        vpnInterfaces:
          description: "[Output Only] A list of interfaces on this VPN gateway."
          items:
            $ref: "#/components/schemas/VpnGatewayVpnGatewayInterface"
          type: array
      type: object
    VpnGatewayAggregatedList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/VpnGatewaysScopedList"
          description: A list of VpnGateway resources.
          type: object
        kind:
          default: compute#vpnGatewayAggregatedList
          description: "[Output Only] Type of resource. Always compute#vpnGateway for VPN
            gateways."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    VpnGatewayList:
      description: Contains a list of VpnGateway resources.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of VpnGateway resources.
          items:
            $ref: "#/components/schemas/VpnGateway"
          type: array
        kind:
          default: compute#vpnGatewayList
          description: "[Output Only] Type of resource. Always compute#vpnGateway for VPN
            gateways."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    VpnGatewayStatus:
      properties:
        vpnConnections:
          description: List of VPN connection for this VpnGateway.
          items:
            $ref: "#/components/schemas/VpnGatewayStatusVpnConnection"
          type: array
      type: object
    VpnGatewayStatusHighAvailabilityRequirementState:
      description: Describes the high availability requirement state for the VPN connection
        between this Cloud VPN gateway and a peer gateway.
      properties:
        state:
          description: Indicates the high availability requirement state for the VPN
            connection. Valid values are CONNECTION_REDUNDANCY_MET,
            CONNECTION_REDUNDANCY_NOT_MET.
          enum:
            - CONNECTION_REDUNDANCY_MET
            - CONNECTION_REDUNDANCY_NOT_MET
          type: string
        unsatisfiedReason:
          description: Indicates the reason why the VPN connection does not meet the high
            availability redundancy criteria/requirement. Valid values is
            INCOMPLETE_TUNNELS_COVERAGE.
          enum:
            - INCOMPLETE_TUNNELS_COVERAGE
          type: string
      type: object
    VpnGatewayStatusTunnel:
      description: Contains some information about a VPN tunnel.
      properties:
        localGatewayInterface:
          description: The VPN gateway interface this VPN tunnel is associated with.
          format: uint32
          type: integer
        peerGatewayInterface:
          description: The peer gateway interface this VPN tunnel is connected to, the peer
            gateway could either be an external VPN gateway or GCP VPN gateway.
          format: uint32
          type: integer
        tunnelUrl:
          description: URL reference to the VPN tunnel.
          type: string
      type: object
    VpnGatewayStatusVpnConnection:
      description: A VPN connection contains all VPN tunnels connected from this VpnGateway
        to the same peer gateway. The peer gateway could either be a external
        VPN gateway or GCP VPN gateway.
      properties:
        peerExternalGateway:
          description: URL reference to the peer external VPN gateways to which the VPN
            tunnels in this VPN connection are connected. This field is mutually
            exclusive with peer_gcp_gateway.
          type: string
        peerGcpGateway:
          description: URL reference to the peer side VPN gateways to which the VPN tunnels
            in this VPN connection are connected. This field is mutually
            exclusive with peer_gcp_gateway.
          type: string
        state:
          $ref: "#/components/schemas/VpnGatewayStatusHighAvailabilityRequirementSt\
            ate"
        tunnels:
          description: List of VPN tunnels that are in this VPN connection.
          items:
            $ref: "#/components/schemas/VpnGatewayStatusTunnel"
          type: array
      type: object
    VpnGatewayVpnGatewayInterface:
      description: A VPN gateway interface.
      properties:
        id:
          description: The numeric ID of this VPN gateway interface.
          format: uint32
          type: integer
        ipAddress:
          description: The external IP address for this VPN gateway interface.
          type: string
      type: object
    VpnGatewaysGetStatusResponse:
      properties:
        result:
          $ref: "#/components/schemas/VpnGatewayStatus"
      type: object
    VpnGatewaysScopedList:
      properties:
        vpnGateways:
          description: "[Output Only] A list of VPN gateways contained in this scope."
          items:
            $ref: "#/components/schemas/VpnGateway"
          type: array
        warning:
          description: "[Output Only] Informational warning which replaces the list of
            addresses when the list is empty."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    VpnTunnel:
      description: >-
        Represents a Cloud VPN Tunnel resource.


        For more information about VPN, read the the Cloud VPN Overview. (== resource_for beta.vpnTunnels ==) (== resource_for v1.vpnTunnels ==)
      properties:
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional description of this resource. Provide this property when
            you create the resource.
          type: string
        detailedStatus:
          description: "[Output Only] Detailed status message for the VPN tunnel."
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        ikeVersion:
          description: IKE protocol version to use when establishing the VPN tunnel with
            the peer VPN gateway. Acceptable IKE versions are 1 or 2. The
            default version is 2.
          format: int32
          type: integer
        kind:
          default: compute#vpnTunnel
          description: "[Output Only] Type of resource. Always compute#vpnTunnel for VPN
            tunnels."
          type: string
        localTrafficSelector:
          description: "Local traffic selector to use when establishing the VPN tunnel with
            the peer VPN gateway. The value should be a CIDR formatted string,
            for example: 192.168.0.0/16. The ranges must be disjoint. Only IPv4
            is supported."
          items:
            type: string
          type: array
        name:
          description: Name of the resource. Provided by the client when the resource is
            created. The name must be 1-63 characters long, and comply with
            RFC1035. Specifically, the name must be 1-63 characters long and
            match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which
            means the first character must be a lowercase letter, and all
            following characters must be a dash, lowercase letter, or digit,
            except the last character, which cannot be a dash.
          pattern: "[a-z](?:[-a-z0-9]{0,61}[a-z0-9])?"
          type: string
        peerExternalGateway:
          description: URL of the peer side external VPN gateway to which this VPN tunnel
            is connected. Provided by the client when the VPN tunnel is created.
            This field is exclusive with the field peerGcpGateway.
          type: string
        peerExternalGatewayInterface:
          description: The interface ID of the external VPN gateway to which this VPN
            tunnel is connected. Provided by the client when the VPN tunnel is
            created.
          format: int32
          type: integer
        peerGcpGateway:
          description: URL of the peer side HA GCP VPN gateway to which this VPN tunnel is
            connected. Provided by the client when the VPN tunnel is created.
            This field can be used when creating highly available VPN from VPC
            network to VPC network, the field is exclusive with the field
            peerExternalGateway. If provided, the VPN tunnel will automatically
            use the same vpnGatewayInterface ID in the peer GCP VPN gateway.
          type: string
        peerIp:
          description: IP address of the peer VPN gateway. Only IPv4 is supported.
          type: string
        region:
          description: "[Output Only] URL of the region where the VPN tunnel resides. You
            must specify this field as part of the HTTP request URL. It is not
            settable as a field in the request body."
          type: string
        remoteTrafficSelector:
          description: "Remote traffic selectors to use when establishing the VPN tunnel
            with the peer VPN gateway. The value should be a CIDR formatted
            string, for example: 192.168.0.0/16. The ranges should be disjoint.
            Only IPv4 is supported."
          items:
            type: string
          type: array
        router:
          description: URL of the router resource to be used for dynamic routing.
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        sharedSecret:
          description: Shared secret used to set the secure session between the Cloud VPN
            gateway and the peer VPN gateway.
          type: string
        sharedSecretHash:
          description: Hash of the shared secret.
          type: string
        status:
          description: >-
            [Output Only] The status of the VPN tunnel, which can be one of the
            following: 

            - PROVISIONING: Resource is being allocated for the VPN tunnel. 

            - WAITING_FOR_FULL_CONFIG: Waiting to receive all VPN-related configs from the user. Network, TargetVpnGateway, VpnTunnel, ForwardingRule, and Route resources are needed to setup the VPN tunnel. 

            - FIRST_HANDSHAKE: Successful first handshake with the peer VPN. 

            - ESTABLISHED: Secure session is successfully established with the peer VPN. 

            - NETWORK_ERROR: Deprecated, replaced by NO_INCOMING_PACKETS 

            - AUTHORIZATION_ERROR: Auth error (for example, bad shared secret). 

            - NEGOTIATION_FAILURE: Handshake failed. 

            - DEPROVISIONING: Resources are being deallocated for the VPN tunnel. 

            - FAILED: Tunnel creation has failed and the tunnel is not ready to be used.
          enum:
            - ALLOCATING_RESOURCES
            - AUTHORIZATION_ERROR
            - DEPROVISIONING
            - ESTABLISHED
            - FAILED
            - FIRST_HANDSHAKE
            - NEGOTIATION_FAILURE
            - NETWORK_ERROR
            - NO_INCOMING_PACKETS
            - PROVISIONING
            - REJECTED
            - STOPPED
            - WAITING_FOR_FULL_CONFIG
          type: string
        targetVpnGateway:
          description: URL of the Target VPN gateway with which this VPN tunnel is
            associated. Provided by the client when the VPN tunnel is created.
          type: string
        vpnGateway:
          description: URL of the VPN gateway with which this VPN tunnel is associated.
            Provided by the client when the VPN tunnel is created. This must be
            used (instead of target_vpn_gateway) if a High Availability VPN
            gateway resource is created.
          type: string
        vpnGatewayInterface:
          description: The interface ID of the VPN gateway with which this VPN tunnel is
            associated.
          format: int32
          type: integer
      type: object
    VpnTunnelAggregatedList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          additionalProperties:
            $ref: "#/components/schemas/VpnTunnelsScopedList"
          description: A list of VpnTunnelsScopedList resources.
          type: object
        kind:
          default: compute#vpnTunnelAggregatedList
          description: "[Output Only] Type of resource. Always compute#vpnTunnel for VPN
            tunnels."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    VpnTunnelList:
      description: Contains a list of VpnTunnel resources.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of VpnTunnel resources.
          items:
            $ref: "#/components/schemas/VpnTunnel"
          type: array
        kind:
          default: compute#vpnTunnelList
          description: "[Output Only] Type of resource. Always compute#vpnTunnel for VPN
            tunnels."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    VpnTunnelsScopedList:
      properties:
        vpnTunnels:
          description: A list of VPN tunnels contained in this scope.
          items:
            $ref: "#/components/schemas/VpnTunnel"
          type: array
        warning:
          description: Informational warning which replaces the list of addresses when the
            list is empty.
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    WeightedBackendService:
      description: In contrast to a single BackendService in  HttpRouteAction to which all
        matching traffic is directed to, WeightedBackendService allows traffic
        to be split across multiple BackendServices. The volume of traffic for
        each BackendService is proportional to the weight specified in each
        WeightedBackendService
      properties:
        backendService:
          description: The full or partial URL to the default BackendService resource.
            Before forwarding the request to backendService, the loadbalancer
            applies any relevant headerActions specified as part of this
            backendServiceWeight.
          type: string
        headerAction:
          $ref: "#/components/schemas/HttpHeaderAction"
        weight:
          description: >-
            Specifies the fraction of traffic sent to backendService, computed
            as weight / (sum of all weightedBackendService weights in
            routeAction) .

            The selection of a backend service is determined only for new traffic. Once a user's request has been directed to a backendService, subsequent requests will be sent to the same backendService as determined by the BackendService's session affinity policy.

            The value must be between 0 and 1000
          format: uint32
          type: integer
      type: object
    XpnHostList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: "[Output Only] A list of shared VPC host project URLs."
          items:
            $ref: "#/components/schemas/Project"
          type: array
        kind:
          default: compute#xpnHostList
          description: "[Output Only] Type of resource. Always compute#xpnHostList for
            lists of shared VPC hosts."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    XpnResourceId:
      description: Service resource (a.k.a service project) ID.
      properties:
        id:
          description: The ID of the service resource. In the case of projects, this field
            supports project id (e.g., my-project-123) and project number (e.g.
            12345678).
          type: string
        type:
          description: The type of the service resource.
          enum:
            - PROJECT
            - XPN_RESOURCE_TYPE_UNSPECIFIED
          type: string
      type: object
    Zone:
      description: >-
        Represents a Zone resource.


        A zone is a deployment area. These deployment areas are subsets of a region. For example the zone us-east1-a is located in the us-east1 region. For more information, read Regions and Zones. (== resource_for beta.zones ==) (== resource_for v1.zones ==)
      properties:
        availableCpuPlatforms:
          description: "[Output Only] Available cpu/platform selections for the zone."
          items:
            type: string
          type: array
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        deprecated:
          $ref: "#/components/schemas/DeprecationStatus"
        description:
          description: "[Output Only] Textual description of the resource."
          type: string
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        kind:
          default: compute#zone
          description: "[Output Only] Type of the resource. Always compute#zone for zones."
          type: string
        name:
          description: "[Output Only] Name of the resource."
          type: string
        region:
          description: "[Output Only] Full URL reference to the region which hosts the
            zone."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        status:
          description: "[Output Only] Status of the zone, either UP or DOWN."
          enum:
            - DOWN
            - UP
          type: string
      type: object
    ZoneList:
      description: Contains a list of zone resources.
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: A list of Zone resources.
          items:
            $ref: "#/components/schemas/Zone"
          type: array
        kind:
          default: compute#zoneList
          description: Type of resource.
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
        warning:
          description: "[Output Only] Informational warning message."
          properties:
            code:
              description: "[Output Only] A warning code, if applicable. For example,
                Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                results in the response."
              enum:
                - CLEANUP_FAILED
                - DEPRECATED_RESOURCE_USED
                - DEPRECATED_TYPE_USED
                - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                - EXPERIMENTAL_TYPE_USED
                - EXTERNAL_API_WARNING
                - FIELD_VALUE_OVERRIDEN
                - INJECTED_KERNELS_DEPRECATED
                - MISSING_TYPE_DEPENDENCY
                - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                - NEXT_HOP_CANNOT_IP_FORWARD
                - NEXT_HOP_INSTANCE_NOT_FOUND
                - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                - NEXT_HOP_NOT_RUNNING
                - NOT_CRITICAL_ERROR
                - NO_RESULTS_ON_PAGE
                - REQUIRED_TOS_AGREEMENT
                - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                - RESOURCE_NOT_DELETED
                - SCHEMA_VALIDATION_IGNORED
                - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                - UNDECLARED_PROPERTIES
                - UNREACHABLE
              type: string
            data:
              description: >-
                [Output Only] Metadata about this warning in key: value format.
                For example:

                "data": [ { "key": "scope", "value": "zones/us-east1-d" }
              items:
                properties:
                  key:
                    description: "[Output Only] A key that provides more detail on the
                      warning being returned. For example, for warnings where
                      there are no results in a list request for a particular
                      zone, this key might be scope and the key value might be
                      the zone name. Other examples might be a key indicating a
                      deprecated resource and a suggested replacement, or a
                      warning about invalid network settings (for example, if an
                      instance attempts to perform IP forwarding but is not
                      enabled for IP forwarding)."
                    type: string
                  value:
                    description: "[Output Only] A warning data value corresponding to the
                      key."
                    type: string
                type: object
              type: array
            message:
              description: "[Output Only] A human-readable description of the warning code."
              type: string
          type: object
      type: object
    ZoneSetLabelsRequest:
      properties:
        labelFingerprint:
          description: The fingerprint of the previous set of labels for this resource,
            used to detect conflicts. The fingerprint is initially generated by
            Compute Engine and changes after every request to modify or update
            labels. You must always provide an up-to-date fingerprint hash in
            order to update or change labels. Make a get() request to the
            resource to get the latest fingerprint.
          format: byte
          type: string
        labels:
          additionalProperties:
            type: string
          description: The labels to set for this resource.
          type: object
      type: object
    ZoneSetPolicyRequest:
      properties:
        bindings:
          description: Flatten Policy to create a backwacd compatible wire-format.
            Deprecated. Use 'policy' to specify bindings.
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        etag:
          description: Flatten Policy to create a backward compatible wire-format.
            Deprecated. Use 'policy' to specify the etag.
          format: byte
          type: string
        policy:
          $ref: "#/components/schemas/Policy"
      type: object
