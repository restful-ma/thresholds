openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: Manages identity and access control for Google Cloud Platform resources,
    including the creation of service accounts, which you can use to
    authenticate to Google and make API calls.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Identity and Access Management (IAM)
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - security
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: google
      url: https://iam.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: iam
externalDocs:
  url: https://cloud.google.com/iam/
tags:
  - name: iamPolicies
  - name: organizations
  - name: permissions
  - name: projects
  - name: roles
paths:
  /v1/iamPolicies:lintPolicy:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Lints a Cloud IAM policy object or its sub fields. Currently supports

        google.iam.v1.Policy, google.iam.v1.Binding and

        google.iam.v1.Binding.condition.


        Each lint operation consists of multiple lint validation units.

        Validation units have the following properties:


        - Each unit inspects the input object in regard to a particular
          linting aspect and issues a google.iam.admin.v1.LintResult
          disclosing the result.
        - Domain of discourse of each unit can be either
          google.iam.v1.Policy, google.iam.v1.Binding, or
          google.iam.v1.Binding.condition depending on the purpose of the
          validation.
        - A unit may require additional data (like the list of all possible
          enumerable values of a particular attribute used in the policy instance)
          which shall be provided by the caller. Refer to the comments of
          google.iam.admin.v1.LintPolicyRequest.context for more details.

        The set of applicable validation units is determined by the Cloud IAM

        server and is not configurable.


        Regardless of any lint issues or their severities, successful calls to

        `lintPolicy` return an HTTP 200 OK status code.
      operationId: iam.iamPolicies.lintPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LintPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/LintPolicyResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - iamPolicies
  /v1/iamPolicies:queryAuditableServices:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Returns a list of services that support service level audit logging
        configuration for the given resource.
      operationId: iam.iamPolicies.queryAuditableServices
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryAuditableServicesRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/QueryAuditableServicesResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - iamPolicies
  /v1/permissions:queryTestablePermissions:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Lists the permissions testable on a resource.

        A permission is testable if it can be tested for an identity on a resource.
      operationId: iam.permissions.queryTestablePermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryTestablePermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/QueryTestablePermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - permissions
  /v1/roles:
    get:
      description: Lists the Roles defined on a resource.
      operationId: iam.roles.list
      parameters:
        - description: Optional limit on the number of roles to include in the response.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional pagination token returned in an earlier ListRolesResponse.
          in: query
          name: pageToken
          schema:
            type: string
        - description: >-
            The `parent` parameter's value depends on the target resource for
            the

            request, namely

            [`roles`](/iam/reference/rest/v1/roles),

            [`projects`](/iam/reference/rest/v1/projects.roles), or

            [`organizations`](/iam/reference/rest/v1/organizations.roles). Each

            resource type's `parent` value format is described below:


            * [`roles.list()`](/iam/reference/rest/v1/roles/list): An empty string.
              This method doesn't require a resource; it simply returns all
              [predefined roles](/iam/docs/understanding-roles#predefined_roles) in
              Cloud IAM. Example request URL:
              `https://iam.googleapis.com/v1/roles`

            * [`projects.roles.list()`](/iam/reference/rest/v1/projects.roles/list):
              `projects/{PROJECT_ID}`. This method lists all project-level
              [custom roles](/iam/docs/understanding-custom-roles).
              Example request URL:
              `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles`

            * [`organizations.roles.list()`](/iam/reference/rest/v1/organizations.roles/list):
              `organizations/{ORGANIZATION_ID}`. This method lists all
              organization-level [custom roles](/iam/docs/understanding-custom-roles).
              Example request URL:
              `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles`

            Note: Wildcard (*) values are invalid; you must specify a complete project

            ID or organization ID.
          in: query
          name: parent
          schema:
            type: string
        - description: Include Roles that have been deleted.
          in: query
          name: showDeleted
          schema:
            type: boolean
        - description: >-
            Optional view for the returned Role objects. When `FULL` is
            specified,

            the `includedPermissions` field is returned, which includes a list of all

            permissions in the role. The default value is `BASIC`, which does not

            return the `includedPermissions` field.
          in: query
          name: view
          schema:
            type: string
            enum:
              - BASIC
              - FULL
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListRolesResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - roles
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  /v1/roles:queryGrantableRoles:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Queries roles that can be granted on a particular resource.

        A role is grantable if it can be used as the role in a binding for a policy

        for that resource.
      operationId: iam.roles.queryGrantableRoles
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryGrantableRolesRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/QueryGrantableRolesResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - roles
  "/v1/{name}":
    delete:
      description: >-
        Soft deletes a role. The role is suspended and cannot be used to create
        new

        IAM Policy Bindings.

        The Role will not be included in `ListRoles()` unless `show_deleted` is set

        in the `ListRolesRequest`. The Role contains the deleted boolean set.

        Existing Bindings remains, but are inactive. The Role can be undeleted

        within 7 days. After 7 days the Role is deleted and all Bindings associated

        with the role are removed.
      operationId: iam.projects.roles.delete
      parameters:
        - description: Used to perform a consistent read-modify-write.
          in: query
          name: etag
          schema:
            type: string
        - description: >-
            The `name` parameter's value depends on the target resource for the

            request, namely

            [`projects`](/iam/reference/rest/v1/projects.roles) or

            [`organizations`](/iam/reference/rest/v1/organizations.roles). Each

            resource type's `name` value format is described below:


            * [`projects.roles.delete()`](/iam/reference/rest/v1/projects.roles/delete):
              `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method deletes only
              [custom roles](/iam/docs/understanding-custom-roles) that have been
              created at the project level. Example request URL:
              `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`

            * [`organizations.roles.delete()`](/iam/reference/rest/v1/organizations.roles/delete):
              `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
              deletes only [custom roles](/iam/docs/understanding-custom-roles) that
              have been created at the organization level. Example request URL:
              `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`

            Note: Wildcard (*) values are invalid; you must specify a complete project

            ID or organization ID.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Role"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Gets a Role definition.
      operationId: iam.roles.get
      parameters:
        - description: >-
            The `name` parameter's value depends on the target resource for the

            request, namely

            [`roles`](/iam/reference/rest/v1/roles),

            [`projects`](/iam/reference/rest/v1/projects.roles), or

            [`organizations`](/iam/reference/rest/v1/organizations.roles). Each

            resource type's `name` value format is described below:


            * [`roles.get()`](/iam/reference/rest/v1/roles/get): `roles/{ROLE_NAME}`.
              This method returns results from all
              [predefined roles](/iam/docs/understanding-roles#predefined_roles) in
              Cloud IAM. Example request URL:
              `https://iam.googleapis.com/v1/roles/{ROLE_NAME}`

            * [`projects.roles.get()`](/iam/reference/rest/v1/projects.roles/get):
              `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method returns only
              [custom roles](/iam/docs/understanding-custom-roles) that have been
              created at the project level. Example request URL:
              `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`

            * [`organizations.roles.get()`](/iam/reference/rest/v1/organizations.roles/get):
              `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
              returns only [custom roles](/iam/docs/understanding-custom-roles) that
              have been created at the organization level. Example request URL:
              `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`

            Note: Wildcard (*) values are invalid; you must specify a complete project

            ID or organization ID.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: |-
            The output format of the public key requested.
            X509_PEM is the default output format.
          in: query
          name: publicKeyType
          schema:
            type: string
            enum:
              - TYPE_NONE
              - TYPE_X509_PEM_FILE
              - TYPE_RAW_PUBLIC_KEY
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Role"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - roles
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    patch:
      description: Updates a Role definition.
      operationId: iam.projects.roles.patch
      parameters:
        - description: >-
            The `name` parameter's value depends on the target resource for the

            request, namely

            [`projects`](/iam/reference/rest/v1/projects.roles) or

            [`organizations`](/iam/reference/rest/v1/organizations.roles). Each

            resource type's `name` value format is described below:


            * [`projects.roles.patch()`](/iam/reference/rest/v1/projects.roles/patch):
              `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method updates only
              [custom roles](/iam/docs/understanding-custom-roles) that have been
              created at the project level. Example request URL:
              `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`

            * [`organizations.roles.patch()`](/iam/reference/rest/v1/organizations.roles/patch):
              `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
              updates only [custom roles](/iam/docs/understanding-custom-roles) that
              have been created at the organization level. Example request URL:
              `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`

            Note: Wildcard (*) values are invalid; you must specify a complete project

            ID or organization ID.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: A mask describing which fields in the Role have changed.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Role"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Role"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    put:
      description: |-
        Note: This method is in the process of being deprecated. Use
        PatchServiceAccount instead.

        Updates a ServiceAccount.

        Currently, only the following fields are updatable:
        `display_name` and `description`.
      operationId: iam.projects.serviceAccounts.update
      parameters:
        - description: >-
            The resource name of the service account in the following format:

            `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.


            Requests using `-` as a wildcard for the `PROJECT_ID` will infer the

            project from the `account` and the `ACCOUNT` value can be the `email`

            address or the `unique_id` of the service account.


            In responses the resource name will always be in the format

            `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceAccount"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ServiceAccount"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{name}/keys":
    get:
      description: Lists ServiceAccountKeys.
      operationId: iam.projects.serviceAccounts.keys.list
      parameters:
        - description: |-
            Filters the types of keys the user wants to include in the list
            response. Duplicate key types are not allowed. If no key type
            is provided, all keys are returned.
          in: query
          name: keyTypes
          explode: true
          schema:
            type: array
            items:
              enum:
                - KEY_TYPE_UNSPECIFIED
                - USER_MANAGED
                - SYSTEM_MANAGED
              type: string
        - description: >-
            The resource name of the service account in the following format:

            `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.


            Using `-` as a wildcard for the `PROJECT_ID`, will infer the project from

            the account. The `ACCOUNT` value can be the `email` address or the

            `unique_id` of the service account.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListServiceAccountKeysResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Creates a ServiceAccountKey
        and returns it.
      operationId: iam.projects.serviceAccounts.keys.create
      parameters:
        - description: >-
            The resource name of the service account in the following format:

            `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.

            Using `-` as a wildcard for the `PROJECT_ID` will infer the project from

            the account. The `ACCOUNT` value can be the `email` address or the

            `unique_id` of the service account.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateServiceAccountKeyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ServiceAccountKey"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{name}/keys:upload":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Upload public key for a given service account.
        This rpc will create a
        ServiceAccountKey that has the
        provided public key and returns it.
      operationId: iam.projects.serviceAccounts.keys.upload
      parameters:
        - description: >-
            The resource name of the service account in the following format:

            `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.

            Using `-` as a wildcard for the `PROJECT_ID` will infer the project from

            the account. The `ACCOUNT` value can be the `email` address or the

            `unique_id` of the service account.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UploadServiceAccountKeyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ServiceAccountKey"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{name}/serviceAccounts":
    get:
      description: Lists ServiceAccounts for a project.
      operationId: iam.projects.serviceAccounts.list
      parameters:
        - description: >-
            Required. The resource name of the project associated with the
            service

            accounts, such as `projects/my-project-123`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: >-
            Optional limit on the number of service accounts to include in the

            response. Further accounts can subsequently be obtained by including the

            ListServiceAccountsResponse.next_page_token

            in a subsequent request.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            Optional pagination token returned in an earlier
            ListServiceAccountsResponse.next_page_token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListServiceAccountsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Creates a ServiceAccount
        and returns it.
      operationId: iam.projects.serviceAccounts.create
      parameters:
        - description: >-
            Required. The resource name of the project associated with the
            service

            accounts, such as `projects/my-project-123`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateServiceAccountRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ServiceAccount"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{name}:disable":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        DisableServiceAccount is currently in the alpha launch stage.


        Disables a ServiceAccount,

        which immediately prevents the service account from authenticating and

        gaining access to APIs.


        Disabled service accounts can be safely restored by using

        EnableServiceAccount at any point. Deleted service accounts cannot be

        restored using this method.


        Disabling a service account that is bound to VMs, Apps, Functions, or

        other jobs will cause those jobs to lose access to resources if they are

        using the disabled service account.


        To improve reliability of your services and avoid unexpected outages, it

        is recommended to first disable a service account rather than delete it.

        After disabling the service account, wait at least 24 hours to verify there

        are no unintended consequences, and then delete the service account.
      operationId: iam.projects.serviceAccounts.disable
      parameters:
        - description: >-
            The resource name of the service account in the following format:

            `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.

            Using `-` as a wildcard for the `PROJECT_ID` will infer the project from

            the account. The `ACCOUNT` value can be the `email` address or the

            `unique_id` of the service account.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisableServiceAccountRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{name}:enable":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        EnableServiceAccount is currently in the alpha launch stage.

         Restores a disabled ServiceAccount
         that has been manually disabled by using DisableServiceAccount. Service
         accounts that have been disabled by other means or for other reasons,
         such as abuse, cannot be restored using this method.

         EnableServiceAccount will have no effect on a service account that is
         not disabled.  Enabling an already enabled service account will have no
         effect.
      operationId: iam.projects.serviceAccounts.enable
      parameters:
        - description: >-
            The resource name of the service account in the following format:

            `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.

            Using `-` as a wildcard for the `PROJECT_ID` will infer the project from

            the account. The `ACCOUNT` value can be the `email` address or the

            `unique_id` of the service account.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnableServiceAccountRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{name}:signBlob":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        **Note**: This method is in the process of being deprecated. Call the

        [`signBlob()`](/iam/credentials/reference/rest/v1/projects.serviceAccounts/signBlob)

        method of the Cloud IAM Service Account Credentials API instead.


        Signs a blob using a service account's system-managed private key.
      operationId: iam.projects.serviceAccounts.signBlob
      parameters:
        - description: >-
            The resource name of the service account in the following format:

            `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.

            Using `-` as a wildcard for the `PROJECT_ID` will infer the project from

            the account. The `ACCOUNT` value can be the `email` address or the

            `unique_id` of the service account.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignBlobRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SignBlobResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{name}:signJwt":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        **Note**: This method is in the process of being deprecated. Call the

        [`signJwt()`](/iam/credentials/reference/rest/v1/projects.serviceAccounts/signJwt)

        method of the Cloud IAM Service Account Credentials API instead.


        Signs a JWT using a service account's system-managed private key.


        If no expiry time (`exp`) is provided in the `SignJwtRequest`, IAM sets an

        an expiry time of one hour by default. If you request an expiry time of

        more than one hour, the request will fail.
      operationId: iam.projects.serviceAccounts.signJwt
      parameters:
        - description: >-
            The resource name of the service account in the following format:

            `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.

            Using `-` as a wildcard for the `PROJECT_ID` will infer the project from

            the account. The `ACCOUNT` value can be the `email` address or the

            `unique_id` of the service account.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignJwtRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SignJwtResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{name}:undelete":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Undelete a Role, bringing it back in its previous state.
      operationId: iam.projects.roles.undelete
      parameters:
        - description: >-
            The `name` parameter's value depends on the target resource for the

            request, namely

            [`projects`](/iam/reference/rest/v1/projects.roles) or

            [`organizations`](/iam/reference/rest/v1/organizations.roles). Each

            resource type's `name` value format is described below:


            * [`projects.roles.undelete()`](/iam/reference/rest/v1/projects.roles/undelete):
              `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method undeletes
              only [custom roles](/iam/docs/understanding-custom-roles) that have been
              created at the project level. Example request URL:
              `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`

            * [`organizations.roles.undelete()`](/iam/reference/rest/v1/organizations.roles/undelete):
              `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method
              undeletes only [custom roles](/iam/docs/understanding-custom-roles) that
              have been created at the organization level. Example request URL:
              `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`

            Note: Wildcard (*) values are invalid; you must specify a complete project

            ID or organization ID.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UndeleteRoleRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Role"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{parent}/roles":
    get:
      description: Lists the Roles defined on a resource.
      operationId: iam.projects.roles.list
      parameters:
        - description: Optional limit on the number of roles to include in the response.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional pagination token returned in an earlier ListRolesResponse.
          in: query
          name: pageToken
          schema:
            type: string
        - description: >-
            The `parent` parameter's value depends on the target resource for
            the

            request, namely

            [`roles`](/iam/reference/rest/v1/roles),

            [`projects`](/iam/reference/rest/v1/projects.roles), or

            [`organizations`](/iam/reference/rest/v1/organizations.roles). Each

            resource type's `parent` value format is described below:


            * [`roles.list()`](/iam/reference/rest/v1/roles/list): An empty string.
              This method doesn't require a resource; it simply returns all
              [predefined roles](/iam/docs/understanding-roles#predefined_roles) in
              Cloud IAM. Example request URL:
              `https://iam.googleapis.com/v1/roles`

            * [`projects.roles.list()`](/iam/reference/rest/v1/projects.roles/list):
              `projects/{PROJECT_ID}`. This method lists all project-level
              [custom roles](/iam/docs/understanding-custom-roles).
              Example request URL:
              `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles`

            * [`organizations.roles.list()`](/iam/reference/rest/v1/organizations.roles/list):
              `organizations/{ORGANIZATION_ID}`. This method lists all
              organization-level [custom roles](/iam/docs/understanding-custom-roles).
              Example request URL:
              `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles`

            Note: Wildcard (*) values are invalid; you must specify a complete project

            ID or organization ID.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: Include Roles that have been deleted.
          in: query
          name: showDeleted
          schema:
            type: boolean
        - description: >-
            Optional view for the returned Role objects. When `FULL` is
            specified,

            the `includedPermissions` field is returned, which includes a list of all

            permissions in the role. The default value is `BASIC`, which does not

            return the `includedPermissions` field.
          in: query
          name: view
          schema:
            type: string
            enum:
              - BASIC
              - FULL
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListRolesResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Creates a new Role.
      operationId: iam.projects.roles.create
      parameters:
        - description: >-
            The `parent` parameter's value depends on the target resource for
            the

            request, namely

            [`projects`](/iam/reference/rest/v1/projects.roles) or

            [`organizations`](/iam/reference/rest/v1/organizations.roles). Each

            resource type's `parent` value format is described below:


            * [`projects.roles.create()`](/iam/reference/rest/v1/projects.roles/create):
              `projects/{PROJECT_ID}`. This method creates project-level
              [custom roles](/iam/docs/understanding-custom-roles).
              Example request URL:
              `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles`

            * [`organizations.roles.create()`](/iam/reference/rest/v1/organizations.roles/create):
              `organizations/{ORGANIZATION_ID}`. This method creates organization-level
              [custom roles](/iam/docs/understanding-custom-roles). Example request
              URL:
              `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles`

            Note: Wildcard (*) values are invalid; you must specify a complete project

            ID or organization ID.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRoleRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Role"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{resource}:getIamPolicy":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Returns the Cloud IAM access control policy for a

        ServiceAccount.


        Note: Service accounts are both

        [resources and

        identities](/iam/docs/service-accounts#service_account_permissions). This

        method treats the service account as a resource. It returns the Cloud IAM

        policy that reflects what members have access to the service account.


        This method does not return what resources the service account has access

        to. To see if a service account has access to a resource, call the

        `getIamPolicy` method on the target resource. For example, to view grants

        for a project, call the

        [projects.getIamPolicy](/resource-manager/reference/rest/v1/projects/getIamPolicy)

        method.
      operationId: iam.projects.serviceAccounts.getIamPolicy
      parameters:
        - description: >-
            Optional. The policy format version to be returned.


            Valid values are 0, 1, and 3. Requests specifying an invalid value will be

            rejected.


            Requests for policies with any conditional bindings must specify version 3.

            Policies without any conditional bindings may specify any valid value or

            leave the field unset.
          in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
        - description: >-
            REQUIRED: The resource for which the policy is being requested.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{resource}:setIamPolicy":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Sets the Cloud IAM access control policy for a

        ServiceAccount.


        Note: Service accounts are both

        [resources and

        identities](/iam/docs/service-accounts#service_account_permissions). This

        method treats the service account as a resource. Use it to grant members

        access to the service account, such as when they need to impersonate it.


        This method does not grant the service account access to other resources,

        such as projects. To grant a service account access to resources, include

        the service account in the Cloud IAM policy for the desired resource, then

        call the appropriate `setIamPolicy` method on the target resource. For

        example, to grant a service account access to a project, call the

        [projects.setIamPolicy](/resource-manager/reference/rest/v1/projects/setIamPolicy)

        method.
      operationId: iam.projects.serviceAccounts.setIamPolicy
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy is being specified.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetIamPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{resource}:testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Tests the specified permissions against the IAM access control policy
        for a ServiceAccount.
      operationId: iam.projects.serviceAccounts.testIamPermissions
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy detail is being
            requested.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestIamPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestIamPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
servers:
  - url: https://iam.googleapis.com/
components:
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
        default: json
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - "1"
          - "2"
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
  schemas:
    AdminAuditData:
      description: |-
        Audit log information specific to Cloud IAM admin APIs. This message is
        serialized as an `Any` type in the `ServiceData` message of an
        `AuditLog` message.
      properties:
        permissionDelta:
          $ref: "#/components/schemas/PermissionDelta"
      type: object
    AuditConfig:
      description: >-
        Specifies the audit configuration for a service.

        The configuration determines which permission types are logged, and what

        identities, if any, are exempted from logging.

        An AuditConfig must have one or more AuditLogConfigs.


        If there are AuditConfigs for both `allServices` and a specific service,

        the union of the two AuditConfigs is used for that service: the log_types

        specified in each AuditConfig are enabled, and the exempted_members in each

        AuditLogConfig are exempted.


        Example Policy with multiple AuditConfigs:

            {
              "audit_configs": [
                {
                  "service": "allServices"
                  "audit_log_configs": [
                    {
                      "log_type": "DATA_READ",
                      "exempted_members": [
                        "user:jose@example.com"
                      ]
                    },
                    {
                      "log_type": "DATA_WRITE",
                    },
                    {
                      "log_type": "ADMIN_READ",
                    }
                  ]
                },
                {
                  "service": "sampleservice.googleapis.com"
                  "audit_log_configs": [
                    {
                      "log_type": "DATA_READ",
                    },
                    {
                      "log_type": "DATA_WRITE",
                      "exempted_members": [
                        "user:aliya@example.com"
                      ]
                    }
                  ]
                }
              ]
            }

        For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ

        logging. It also exempts jose@example.com from DATA_READ logging, and

        aliya@example.com from DATA_WRITE logging.
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: "#/components/schemas/AuditLogConfig"
          type: array
        service:
          description: |-
            Specifies a service that will be enabled for audit logging.
            For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
      type: object
    AuditData:
      description: |-
        Audit log information specific to Cloud IAM. This message is serialized
        as an `Any` type in the `ServiceData` message of an
        `AuditLog` message.
      properties:
        policyDelta:
          $ref: "#/components/schemas/PolicyDelta"
      type: object
    AuditLogConfig:
      description: |-
        Provides the configuration for logging a type of permissions.
        Example:

            {
              "audit_log_configs": [
                {
                  "log_type": "DATA_READ",
                  "exempted_members": [
                    "user:jose@example.com"
                  ]
                },
                {
                  "log_type": "DATA_WRITE",
                }
              ]
            }

        This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      properties:
        exemptedMembers:
          description: |-
            Specifies the identities that do not cause logging for this type of
            permission.
            Follows the same format of Binding.members.
          items:
            type: string
          type: array
        logType:
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          type: string
      type: object
    AuditableService:
      description: Contains information about an auditable service.
      properties:
        name:
          description: |-
            Public name of the service.
            For example, the service name for Cloud IAM is 'iam.googleapis.com'.
          type: string
      type: object
    Binding:
      description: Associates `members` with a `role`.
      properties:
        condition:
          $ref: "#/components/schemas/Expr"
        members:
          description: >+
            Specifies the identities requesting access for a Cloud Platform
            resource.

            `members` can have the following values:


            * `allUsers`: A special identifier that represents anyone who is
               on the internet; with or without a Google account.

            * `allAuthenticatedUsers`: A special identifier that represents anyone
               who is authenticated with a Google account or a service account.

            * `user:{emailid}`: An email address that represents a specific Google
               account. For example, `alice@example.com` .


            * `serviceAccount:{emailid}`: An email address that represents a service
               account. For example, `my-other-app@appspot.gserviceaccount.com`.

            * `group:{emailid}`: An email address that represents a Google group.
               For example, `admins@example.com`.


            * `domain:{domain}`: The G Suite domain (primary) that represents all the
               users of that domain. For example, `google.com` or `example.com`.

          items:
            type: string
          type: array
        role:
          description: |-
            Role that is assigned to `members`.
            For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
          type: string
      type: object
    BindingDelta:
      description: >-
        One delta entry for Binding. Each individual change (only one member in
        each

        entry) to a binding will be a separate entry.
      properties:
        action:
          description: |-
            The action that was performed on a Binding.
            Required
          enum:
            - ACTION_UNSPECIFIED
            - ADD
            - REMOVE
          type: string
        condition:
          $ref: "#/components/schemas/Expr"
        member:
          description: |-
            A single identity requesting access for a Cloud Platform resource.
            Follows the same format of Binding.members.
            Required
          type: string
        role:
          description: |-
            Role that is assigned to `members`.
            For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
            Required
          type: string
      type: object
    CreateRoleRequest:
      description: The request to create a new role.
      properties:
        role:
          $ref: "#/components/schemas/Role"
        roleId:
          description: The role ID to use for this role.
          type: string
      type: object
    CreateServiceAccountKeyRequest:
      description: The service account key create request.
      properties:
        keyAlgorithm:
          description: >-
            Which type of key and algorithm to use for the key.

            The default is currently a 2K RSA key.  However this may change in the

            future.
          enum:
            - KEY_ALG_UNSPECIFIED
            - KEY_ALG_RSA_1024
            - KEY_ALG_RSA_2048
          type: string
        privateKeyType:
          description: |-
            The output format of the private key. The default value is
            `TYPE_GOOGLE_CREDENTIALS_FILE`, which is the Google Credentials File
            format.
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PKCS12_FILE
            - TYPE_GOOGLE_CREDENTIALS_FILE
          type: string
      type: object
    CreateServiceAccountRequest:
      description: The service account create request.
      properties:
        accountId:
          description: >-
            Required. The account id that is used to generate the service
            account

            email address and a stable unique id. It is unique within a project,

            must be 6-30 characters long, and match the regular expression

            `[a-z]([-a-z0-9]*[a-z0-9])` to comply with RFC1035.
          type: string
        serviceAccount:
          $ref: "#/components/schemas/ServiceAccount"
      type: object
    DisableServiceAccountRequest:
      description: The service account disable request.
      properties: {}
      type: object
    Empty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated

        empty messages in your APIs. A typical example is to use it as the request

        or the response type of an API method. For instance:

            service Foo {
              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
            }

        The JSON representation for `Empty` is empty JSON object `{}`.
      properties: {}
      type: object
    EnableServiceAccountRequest:
      description: The service account enable request.
      properties: {}
      type: object
    Expr:
      description: |-
        Represents an expression text. Example:

            title: "User account presence"
            description: "Determines whether the request has a user account"
            expression: "size(request.user) > 0"
      properties:
        description:
          description: >-
            An optional description of the expression. This is a longer text
            which

            describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: |-
            Textual representation of an expression in
            Common Expression Language syntax.

            The application context of the containing message determines which
            well-known feature set of CEL is supported.
          type: string
        location:
          description: >-
            An optional string indicating the location of the expression for
            error

            reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: |-
            An optional title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
      type: object
    LintPolicyRequest:
      description: |-
        The request to lint a Cloud IAM policy object. LintPolicy is currently
        functional only for `lint_object` of type `condition`.
      properties:
        binding:
          $ref: "#/components/schemas/Binding"
        condition:
          $ref: "#/components/schemas/Expr"
        context:
          additionalProperties:
            description: Properties of the object.
          description: >-
            `context` contains additional *permission-controlled* data that any

            lint unit may depend on, in form of `{key: value}` pairs. Currently, this

            field is non-operational and it will not be used during the lint operation.
          type: object
        fullResourceName:
          description: >-
            The full resource name of the policy this lint request is about.


            The name follows the Google Cloud Platform (GCP) resource format.

            For example, a GCP project with ID `my-project` will be named

            `//cloudresourcemanager.googleapis.com/projects/my-project`.


            The resource name is not used to read the policy instance from the Cloud

            IAM database. The candidate policy for lint has to be provided in the same

            request object.
          type: string
        policy:
          $ref: "#/components/schemas/Policy"
      type: object
    LintPolicyResponse:
      description: |-
        The response of a lint operation. An empty response indicates
        the operation was able to fully execute and no lint issue was found.
      properties:
        lintResults:
          description: >-
            List of lint results sorted by a composite <severity,
            binding_ordinal> key,

            descending order of severity and ascending order of binding_ordinal.

            There is no certain order among the same keys.


            For cross-binding results (only if the input object to lint is

            instance of google.iam.v1.Policy), there will be a

            google.iam.admin.v1.LintResult for each of the involved bindings,

            and the associated debug_message may enumerate the other involved

            binding ordinal number(s).
          items:
            $ref: "#/components/schemas/LintResult"
          type: array
      type: object
    LintResult:
      description: Structured response of a single validation unit.
      properties:
        bindingOrdinal:
          description: >-
            0-based index ordinality of the binding in the input object
            associated

            with this result.

            This field is populated only if the input object to lint is of type

            google.iam.v1.Policy, which can comprise more than one binding.

            It is set to -1 if the result is not associated with any particular

            binding and only targets the policy as a whole, such as results about

            policy size violations.
          format: int32
          type: integer
        debugMessage:
          description: Human readable debug message associated with the issue.
          type: string
        fieldName:
          description: >-
            The name of the field for which this lint result is about.


            For nested messages, `field_name` consists of names of the embedded fields

            separated by period character. The top-level qualifier is the input object

            to lint in the request. For instance, if the lint request is on a

            google.iam.v1.Policy and this lint result is about a condition

            expression of one of the input policy bindings, the field would be

            populated as `policy.bindings.condition.expression`.


            This field does not identify the ordinality of the repetitive fields (for

            instance bindings in a policy).
          type: string
        level:
          description: The validation unit level.
          enum:
            - LEVEL_UNSPECIFIED
            - POLICY
            - BINDING
            - CONDITION
          type: string
        locationOffset:
          description: >-
            0-based character position of problematic construct within the
            object

            identified by `field_name`. Currently, this is populated only for condition

            expression.
          format: int32
          type: integer
        severity:
          description: The validation unit severity.
          enum:
            - SEVERITY_UNSPECIFIED
            - ERROR
            - WARNING
            - NOTICE
            - INFO
            - DEPRECATED
          type: string
        validationUnitName:
          description: |-
            The validation unit name, for instance
            “lintValidationUnits/ConditionComplexityCheck”.
          type: string
      type: object
    ListRolesResponse:
      description: The response containing the roles defined under a resource.
      properties:
        nextPageToken:
          description: |-
            To retrieve the next page of results, set
            `ListRolesRequest.page_token` to this value.
          type: string
        roles:
          description: The Roles defined on this resource.
          items:
            $ref: "#/components/schemas/Role"
          type: array
      type: object
    ListServiceAccountKeysResponse:
      description: The service account keys list response.
      properties:
        keys:
          description: The public keys for the service account.
          items:
            $ref: "#/components/schemas/ServiceAccountKey"
          type: array
      type: object
    ListServiceAccountsResponse:
      description: The service account list response.
      properties:
        accounts:
          description: The list of matching service accounts.
          items:
            $ref: "#/components/schemas/ServiceAccount"
          type: array
        nextPageToken:
          description: |-
            To retrieve the next page of results, set
            ListServiceAccountsRequest.page_token
            to this value.
          type: string
      type: object
    PatchServiceAccountRequest:
      description: The patch service account request.
      properties:
        serviceAccount:
          $ref: "#/components/schemas/ServiceAccount"
        updateMask:
          format: google-fieldmask
          type: string
      type: object
    Permission:
      description: A permission which can be included by a role.
      properties:
        apiDisabled:
          description: The service API associated with the permission is not enabled.
          type: boolean
        customRolesSupportLevel:
          description: The current custom role support level.
          enum:
            - SUPPORTED
            - TESTING
            - NOT_SUPPORTED
          type: string
        description:
          description: A brief description of what this Permission is used for.
          type: string
        name:
          description: The name of this Permission.
          type: string
        onlyInPredefinedRoles:
          description: This permission can ONLY be used in predefined roles.
          type: boolean
        primaryPermission:
          description: >-
            The preferred name for this permission. If present, then this
            permission is

            an alias of, and equivalent to, the listed primary_permission.
          type: string
        stage:
          description: The current launch stage of the permission.
          enum:
            - ALPHA
            - BETA
            - GA
            - DEPRECATED
          type: string
        title:
          description: The title of this Permission.
          type: string
      type: object
    PermissionDelta:
      description: |-
        A PermissionDelta message to record the added_permissions and
        removed_permissions inside a role.
      properties:
        addedPermissions:
          description: Added permissions.
          items:
            type: string
          type: array
        removedPermissions:
          description: Removed permissions.
          items:
            type: string
          type: array
      type: object
    Policy:
      description: >-
        Defines an Identity and Access Management (IAM) policy. It is used to

        specify access control policies for Cloud Platform resources.



        A `Policy` is a collection of `bindings`. A `binding` binds one or more

        `members` to a single `role`. Members can be user accounts, service accounts,

        Google groups, and domains (such as G Suite). A `role` is a named list of

        permissions (defined by IAM or configured by users). A `binding` can

        optionally specify a `condition`, which is a logic expression that further

        constrains the role binding based on attributes about the request and/or

        target resource.


        **JSON Example**

            {
              "bindings": [
                {
                  "role": "role/resourcemanager.organizationAdmin",
                  "members": [
                    "user:mike@example.com",
                    "group:admins@example.com",
                    "domain:google.com",
                    "serviceAccount:my-project-id@appspot.gserviceaccount.com"
                  ]
                },
                {
                  "role": "roles/resourcemanager.organizationViewer",
                  "members": ["user:eve@example.com"],
                  "condition": {
                    "title": "expirable access",
                    "description": "Does not grant access after Sep 2020",
                    "expression": "request.time <
                    timestamp('2020-10-01T00:00:00.000Z')",
                  }
                }
              ]
            }

        **YAML Example**

            bindings:
            - members:
              - user:mike@example.com
              - group:admins@example.com
              - domain:google.com
              - serviceAccount:my-project-id@appspot.gserviceaccount.com
              role: roles/resourcemanager.organizationAdmin
            - members:
              - user:eve@example.com
              role: roles/resourcemanager.organizationViewer
              condition:
                title: expirable access
                description: Does not grant access after Sep 2020
                expression: request.time < timestamp('2020-10-01T00:00:00.000Z')

        For a description of IAM and its features, see the

        [IAM developer's guide](https://cloud.google.com/iam/docs).
      properties:
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: "#/components/schemas/AuditConfig"
          type: array
        bindings:
          description: |-
            Associates a list of `members` to a `role`. Optionally may specify a
            `condition` that determines when binding is in effect.
            `bindings` with no members will result in an error.
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help

            prevent simultaneous updates of a policy from overwriting each other.

            It is strongly suggested that systems make use of the `etag` in the

            read-modify-write cycle to perform policy updates in order to avoid race

            conditions: An `etag` is returned in the response to `getIamPolicy`, and

            systems are expected to put that etag in the request to `setIamPolicy` to

            ensure that their change will be applied to the same version of the policy.


            If no `etag` is provided in the call to `setIamPolicy`, then the existing

            policy is overwritten. Due to blind-set semantics of an etag-less policy,

            'setIamPolicy' will not fail even if either of incoming or stored policy

            does not meet the version requirements.
          format: byte
          type: string
        version:
          description: >-
            Specifies the format of the policy.


            Valid values are 0, 1, and 3. Requests specifying an invalid value will be

            rejected.


            Operations affecting conditional bindings must specify version 3. This can

            be either setting a conditional policy, modifying a conditional binding,

            or removing a conditional binding from the stored conditional policy.

            Operations on non-conditional policies may specify any valid value or

            leave the field unset.


            If no etag is provided in the call to `setIamPolicy`, any version

            compliance checks on the incoming and/or stored policy is skipped.
          format: int32
          type: integer
      type: object
    PolicyDelta:
      description: The difference delta between two policies.
      properties:
        bindingDeltas:
          description: The delta for Bindings between two policies.
          items:
            $ref: "#/components/schemas/BindingDelta"
          type: array
      type: object
    QueryAuditableServicesRequest:
      description: A request to get the list of auditable services for a resource.
      properties:
        fullResourceName:
          description: >-
            Required. The full resource name to query from the list of auditable

            services.


            The name follows the Google Cloud Platform resource format.

            For example, a Cloud Platform project with id `my-project` will be named

            `//cloudresourcemanager.googleapis.com/projects/my-project`.
          type: string
      type: object
    QueryAuditableServicesResponse:
      description: A response containing a list of auditable services for a resource.
      properties:
        services:
          description: The auditable services for a resource.
          items:
            $ref: "#/components/schemas/AuditableService"
          type: array
      type: object
    QueryGrantableRolesRequest:
      description: The grantable role query request.
      properties:
        fullResourceName:
          description: >-
            Required. The full resource name to query from the list of grantable
            roles.


            The name follows the Google Cloud Platform resource format.

            For example, a Cloud Platform project with id `my-project` will be named

            `//cloudresourcemanager.googleapis.com/projects/my-project`.
          type: string
        pageSize:
          description: Optional limit on the number of roles to include in the response.
          format: int32
          type: integer
        pageToken:
          description: |-
            Optional pagination token returned in an earlier
            QueryGrantableRolesResponse.
          type: string
        view:
          enum:
            - BASIC
            - FULL
          type: string
      type: object
    QueryGrantableRolesResponse:
      description: The grantable role query response.
      properties:
        nextPageToken:
          description: |-
            To retrieve the next page of results, set
            `QueryGrantableRolesRequest.page_token` to this value.
          type: string
        roles:
          description: The list of matching roles.
          items:
            $ref: "#/components/schemas/Role"
          type: array
      type: object
    QueryTestablePermissionsRequest:
      description: A request to get permissions which can be tested on a resource.
      properties:
        fullResourceName:
          description: >-
            Required. The full resource name to query from the list of testable

            permissions.


            The name follows the Google Cloud Platform resource format.

            For example, a Cloud Platform project with id `my-project` will be named

            `//cloudresourcemanager.googleapis.com/projects/my-project`.
          type: string
        pageSize:
          description: Optional limit on the number of permissions to include in the
            response.
          format: int32
          type: integer
        pageToken:
          description: |-
            Optional pagination token returned in an earlier
            QueryTestablePermissionsRequest.
          type: string
      type: object
    QueryTestablePermissionsResponse:
      description: The response containing permissions which can be tested on a resource.
      properties:
        nextPageToken:
          description: |-
            To retrieve the next page of results, set
            `QueryTestableRolesRequest.page_token` to this value.
          type: string
        permissions:
          description: The Permissions testable on the requested resource.
          items:
            $ref: "#/components/schemas/Permission"
          type: array
      type: object
    Role:
      description: A role in the Identity and Access Management API.
      properties:
        deleted:
          description: |-
            The current deleted state of the role. This field is read only.
            It will be ignored in calls to CreateRole and UpdateRole.
          type: boolean
        description:
          description: Optional. A human-readable description for the role.
          type: string
        etag:
          description: Used to perform a consistent read-modify-write.
          format: byte
          type: string
        includedPermissions:
          description: The names of the permissions this role grants when bound in an IAM
            policy.
          items:
            type: string
          type: array
        name:
          description: >-
            The name of the role.


            When Role is used in CreateRole, the role name must not be set.


            When Role is used in output and other input such as UpdateRole, the role

            name is the complete path, e.g., roles/logging.viewer for predefined roles

            and organizations/{ORGANIZATION_ID}/roles/logging.viewer for custom roles.
          type: string
        stage:
          description: >-
            The current launch stage of the role. If the `ALPHA` launch stage
            has been

            selected for a role, the `stage` field will not be included in the

            returned definition for the role.
          enum:
            - ALPHA
            - BETA
            - GA
            - DEPRECATED
            - DISABLED
            - EAP
          type: string
        title:
          description: |-
            Optional. A human-readable title for the role.  Typically this
            is limited to 100 UTF-8 bytes.
          type: string
      type: object
    ServiceAccount:
      description: >-
        A service account in the Identity and Access Management API.


        To create a service account, specify the `project_id` and the `account_id`

        for the account.  The `account_id` is unique within the project, and is used

        to generate the service account email address and a stable

        `unique_id`.


        If the account already exists, the account's resource name is returned

        in the format of projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}. The caller

        can use the name in other methods to access the account.


        All other methods can identify the service account using the format

        `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.

        Using `-` as a wildcard for the `PROJECT_ID` will infer the project from

        the account. The `ACCOUNT` value can be the `email` address or the

        `unique_id` of the service account.
      properties:
        description:
          description: >-
            Optional. A user-specified opaque description of the service
            account.

            Must be less than or equal to 256 UTF-8 bytes.
          type: string
        disabled:
          description: |-
            @OutputOnly A bool indicate if the service account is disabled.
            The field is currently in alpha phase.
          type: boolean
        displayName:
          description: |-
            Optional. A user-specified name for the service account.
            Must be less than or equal to 100 UTF-8 bytes.
          type: string
        email:
          description: "@OutputOnly The email address of the service account."
          type: string
        etag:
          description: >-
            Optional. Note: `etag` is an inoperable legacy field that is only
            returned

            for backwards compatibility.
          format: byte
          type: string
        name:
          description: >-
            The resource name of the service account in the following format:

            `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.


            Requests using `-` as a wildcard for the `PROJECT_ID` will infer the

            project from the `account` and the `ACCOUNT` value can be the `email`

            address or the `unique_id` of the service account.


            In responses the resource name will always be in the format

            `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`.
          type: string
        oauth2ClientId:
          description: |-
            @OutputOnly The OAuth2 client id for the service account.
            This is used in conjunction with the OAuth2 clientconfig API to make
            three legged OAuth2 (3LO) flows to access the data of Google users.
          type: string
        projectId:
          description: "@OutputOnly The id of the project that owns the service account."
          type: string
        uniqueId:
          description: "@OutputOnly The unique and stable id of the service account."
          type: string
      type: object
    ServiceAccountKey:
      description: >-
        Represents a service account key.


        A service account has two sets of key-pairs: user-managed, and

        system-managed.


        User-managed key-pairs can be created and deleted by users.  Users are

        responsible for rotating these keys periodically to ensure security of

        their service accounts.  Users retain the private key of these key-pairs,

        and Google retains ONLY the public key.


        System-managed keys are automatically rotated by Google, and are used for

        signing for a maximum of two weeks. The rotation process is probabilistic,

        and usage of the new key will gradually ramp up and down over the key's

        lifetime. We recommend caching the public key set for a service account for

        no more than 24 hours to ensure you have access to the latest keys.


        Public keys for all service accounts are also published at the OAuth2

        Service Account API.
      properties:
        keyAlgorithm:
          description: Specifies the algorithm (and possibly key size) for the key.
          enum:
            - KEY_ALG_UNSPECIFIED
            - KEY_ALG_RSA_1024
            - KEY_ALG_RSA_2048
          type: string
        keyOrigin:
          description: The key origin.
          enum:
            - ORIGIN_UNSPECIFIED
            - USER_PROVIDED
            - GOOGLE_PROVIDED
          type: string
        name:
          description: |-
            The resource name of the service account key in the following format
            `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`.
          type: string
        privateKeyData:
          description: >-
            The private key data. Only provided in `CreateServiceAccountKey`

            responses. Make sure to keep the private key data secure because it

            allows for the assertion of the service account identity.

            When base64 decoded, the private key data can be used to authenticate with

            Google API client libraries and with

            <a href="/sdk/gcloud/reference/auth/activate-service-account">gcloud

            auth activate-service-account</a>.
          format: byte
          type: string
        privateKeyType:
          description: |-
            The output format for the private key.
            Only provided in `CreateServiceAccountKey` responses, not
            in `GetServiceAccountKey` or `ListServiceAccountKey` responses.

            Google never exposes system-managed private keys, and never retains
            user-managed private keys.
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PKCS12_FILE
            - TYPE_GOOGLE_CREDENTIALS_FILE
          type: string
        publicKeyData:
          description: The public key data. Only provided in `GetServiceAccountKey`
            responses.
          format: byte
          type: string
        validAfterTime:
          description: The key can be used after this timestamp.
          format: google-datetime
          type: string
        validBeforeTime:
          description: |-
            The key can be used before this timestamp.
            For system-managed key pairs, this timestamp is the end time for the
            private key signing operation. The public key could still be used
            for verification for a few hours after this time.
          format: google-datetime
          type: string
      type: object
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          $ref: "#/components/schemas/Policy"
        updateMask:
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only

            the fields in the mask will be modified. If no mask is provided, the

            following default mask is used:

            paths: "bindings, etag"

            This field is only used by Cloud IAM.
          format: google-fieldmask
          type: string
      type: object
    SignBlobRequest:
      description: The service account sign blob request.
      properties:
        bytesToSign:
          description: The bytes to sign.
          format: byte
          type: string
      type: object
    SignBlobResponse:
      description: The service account sign blob response.
      properties:
        keyId:
          description: The id of the key used to sign the blob.
          type: string
        signature:
          description: The signed blob.
          format: byte
          type: string
      type: object
    SignJwtRequest:
      description: The service account sign JWT request.
      properties:
        payload:
          description: The JWT payload to sign, a JSON JWT Claim set.
          type: string
      type: object
    SignJwtResponse:
      description: The service account sign JWT response.
      properties:
        keyId:
          description: The id of the key used to sign the JWT.
          type: string
        signedJwt:
          description: The signed JWT.
          type: string
      type: object
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with

            wildcards (such as '*' or 'storage.*') are not allowed. For more

            information see

            [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          type: array
      type: object
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          description: |-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          items:
            type: string
          type: array
      type: object
    UndeleteRoleRequest:
      description: The request to undelete an existing role.
      properties:
        etag:
          description: Used to perform a consistent read-modify-write.
          format: byte
          type: string
      type: object
    UndeleteServiceAccountRequest:
      description: The service account undelete request.
      properties: {}
      type: object
    UndeleteServiceAccountResponse:
      properties:
        restoredAccount:
          $ref: "#/components/schemas/ServiceAccount"
      type: object
    UploadServiceAccountKeyRequest:
      description: The service account key upload request.
      properties:
        publicKeyData:
          description: |-
            A field that allows clients to upload their own public key. If set,
            use this public key data to create a service account key for given
            service account.
            Please note, the expected format for this field is X509_PEM.
          format: byte
          type: string
      type: object
