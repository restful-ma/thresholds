openapi: 3.0.0
info:
  description: Azure Service Fabric Resource Provider API Client
  title: ServiceFabricManagementClient
  version: 2019-03-01
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/servicefabric/resource-manager/Microsoft.ServiceFabric/stable/2019-03-01/application.json
      version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: servicefabric-application
  x-tags:
    - Azure
    - Microsoft
security:
  - azure_auth:
      - user_impersonation
paths:
  /providers/Microsoft.ServiceFabric/operations:
    get:
      description: Get the list of available Service Fabric resource provider API
        operations.
      operationId: Operations_List
      parameters:
        - description: The version of the Service Fabric resource provider API
          in: query
          name: api-version
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationListResult"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Lists all of the available Service Fabric resource provider API
        operations.
      tags:
        - Operations
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applicationTypes":
    get:
      description: Gets all application type name resources created or in the process of
        being created in the Service Fabric cluster resource.
      operationId: ApplicationTypes_List
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/clusterNameParameter"
        - $ref: "#/components/parameters/api-version"
      responses:
        "200":
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationTypeResourceList"
              examples:
                Get a list of application type name resources:
                  $ref: "#/components/examples/Get_a_list_of_application_type_name_\
                    resources"
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Gets the list of application type name resources created in the
        specified Service Fabric cluster resource.
      tags:
        - ApplicationType
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applicationTypes/{applicationTypeName}":
    delete:
      description: Delete a Service Fabric application type name resource with the
        specified name.
      operationId: ApplicationTypes_Delete
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/clusterNameParameter"
        - $ref: "#/components/parameters/applicationTypeName"
        - $ref: "#/components/parameters/api-version"
      responses:
        "202":
          description: The request was accepted and the operation will complete
            asynchronously.
        "204":
          description: The resource was not found.
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Deletes a Service Fabric application type name resource.
      tags:
        - ApplicationType
      x-ms-long-running-operation: true
    get:
      description: Get a Service Fabric application type name resource created or in the
        process of being created in the Service Fabric cluster resource.
      operationId: ApplicationTypes_Get
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/clusterNameParameter"
        - $ref: "#/components/parameters/applicationTypeName"
        - $ref: "#/components/parameters/api-version"
      responses:
        "200":
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationTypeResource"
              examples:
                Get an application type:
                  $ref: "#/components/examples/Get_an_application_type"
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Gets a Service Fabric application type name resource.
      tags:
        - ApplicationType
    put:
      description: Create or update a Service Fabric application type name resource with
        the specified name.
      operationId: ApplicationTypes_CreateOrUpdate
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/clusterNameParameter"
        - $ref: "#/components/parameters/applicationTypeName"
        - $ref: "#/components/parameters/api-version"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationTypeResource"
        description: The application type name resource.
        required: true
        x-ms-parameter-location: method
      responses:
        "200":
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationTypeResource"
              examples:
                Put an application type:
                  $ref: "#/components/examples/Put_an_application_type"
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Creates or updates a Service Fabric application type name resource.
      tags:
        - ApplicationType
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applicationTypes/{applicationTypeName}/versions":
    get:
      description: Gets all application type version resources created or in the process of
        being created in the Service Fabric application type name resource.
      operationId: ApplicationTypeVersions_List
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/clusterNameParameter"
        - $ref: "#/components/parameters/applicationTypeName"
        - $ref: "#/components/parameters/api-version"
      responses:
        "200":
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationTypeVersionResourceList"
              examples:
                Get a list of application type version resources:
                  $ref: "#/components/examples/Get_a_list_of_application_type_versi\
                    on_resources"
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Gets the list of application type version resources created in the
        specified Service Fabric application type name resource.
      tags:
        - ApplicationTypeVersion
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applicationTypes/{applicationTypeName}/versions/{version}":
    delete:
      description: Delete a Service Fabric application type version resource with the
        specified name.
      operationId: ApplicationTypeVersions_Delete
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/clusterNameParameter"
        - $ref: "#/components/parameters/applicationTypeName"
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/api-version"
      responses:
        "202":
          description: The request was accepted and the operation will complete
            asynchronously.
        "204":
          description: The resource was not found.
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Deletes a Service Fabric application type version resource.
      tags:
        - ApplicationTypeVersion
      x-ms-long-running-operation: true
    get:
      description: Get a Service Fabric application type version resource created or in the
        process of being created in the Service Fabric application type name
        resource.
      operationId: ApplicationTypeVersions_Get
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/clusterNameParameter"
        - $ref: "#/components/parameters/applicationTypeName"
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/api-version"
      responses:
        "200":
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationTypeVersionResource"
              examples:
                Get an application type version:
                  $ref: "#/components/examples/Get_an_application_type_version"
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Gets a Service Fabric application type version resource.
      tags:
        - ApplicationTypeVersion
    put:
      description: Create or update a Service Fabric application type version resource with
        the specified name.
      operationId: ApplicationTypeVersions_CreateOrUpdate
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/clusterNameParameter"
        - $ref: "#/components/parameters/applicationTypeName"
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/api-version"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationTypeVersionResource"
        description: The application type version resource.
        required: true
        x-ms-parameter-location: method
      responses:
        "202":
          description: The request was accepted and the operation will complete
            asynchronously.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationTypeVersionResource"
              examples:
                Put an application type version:
                  $ref: "#/components/examples/Put_an_application_type_version"
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Creates or updates a Service Fabric application type version resource.
      tags:
        - ApplicationTypeVersion
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applications":
    get:
      description: Gets all application resources created or in the process of being
        created in the Service Fabric cluster resource.
      operationId: Applications_List
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/clusterNameParameter"
        - $ref: "#/components/parameters/api-version"
      responses:
        "200":
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationResourceList"
              examples:
                Get a list of application resources:
                  $ref: "#/components/examples/Get_a_list_of_application_resources"
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Gets the list of application resources created in the specified Service
        Fabric cluster resource.
      tags:
        - Application
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applications/{applicationName}":
    delete:
      description: Delete a Service Fabric application resource with the specified name.
      operationId: Applications_Delete
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/clusterNameParameter"
        - $ref: "#/components/parameters/applicationName"
        - $ref: "#/components/parameters/api-version"
      responses:
        "202":
          description: The request was accepted and the operation will complete
            asynchronously.
        "204":
          description: The resource was not found.
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Deletes a Service Fabric application resource.
      tags:
        - Application
      x-ms-long-running-operation: true
    get:
      description: Get a Service Fabric application resource created or in the process of
        being created in the Service Fabric cluster resource.
      operationId: Applications_Get
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/clusterNameParameter"
        - $ref: "#/components/parameters/applicationName"
        - $ref: "#/components/parameters/api-version"
      responses:
        "200":
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationResource"
              examples:
                Get an application:
                  $ref: "#/components/examples/Get_an_application"
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Gets a Service Fabric application resource.
      tags:
        - Application
    patch:
      description: Update a Service Fabric application resource with the specified name.
      operationId: Applications_Update
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/clusterNameParameter"
        - $ref: "#/components/parameters/applicationName"
        - $ref: "#/components/parameters/api-version"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationResourceUpdate"
        description: The application resource for patch operations.
        required: true
        x-ms-parameter-location: method
      responses:
        "202":
          description: The request was accepted and the operation will complete
            asynchronously.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationResource"
              examples:
                Patch an application:
                  $ref: "#/components/examples/Patch_an_application"
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Updates a Service Fabric application resource.
      tags:
        - Application
      x-ms-long-running-operation: true
    put:
      description: Create or update a Service Fabric application resource with the
        specified name.
      operationId: Applications_CreateOrUpdate
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/clusterNameParameter"
        - $ref: "#/components/parameters/applicationName"
        - $ref: "#/components/parameters/api-version"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationResource"
        description: The application resource.
        required: true
        x-ms-parameter-location: method
      responses:
        "202":
          description: The request was accepted and the operation will complete
            asynchronously.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationResource"
              examples:
                Put an application with maximum parameters:
                  $ref: "#/components/examples/Put_an_application_with_maximum_para\
                    meters"
                Put an application with minimum parameters:
                  $ref: "#/components/examples/Put_an_application_with_minimum_para\
                    meters"
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Creates or updates a Service Fabric application resource.
      tags:
        - Application
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applications/{applicationName}/services":
    get:
      description: Gets all service resources created or in the process of being created in
        the Service Fabric application resource.
      operationId: Services_List
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/clusterNameParameter"
        - $ref: "#/components/parameters/applicationName"
        - $ref: "#/components/parameters/api-version"
      responses:
        "200":
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceResourceList"
              examples:
                Get a list of service resources:
                  $ref: "#/components/examples/Get_a_list_of_service_resources"
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Gets the list of service resources created in the specified Service
        Fabric application resource.
      tags:
        - Service
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applications/{applicationName}/services/{serviceName}":
    delete:
      description: Delete a Service Fabric service resource with the specified name.
      operationId: Services_Delete
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/clusterNameParameter"
        - $ref: "#/components/parameters/applicationName"
        - $ref: "#/components/parameters/serviceName"
        - $ref: "#/components/parameters/api-version"
      responses:
        "202":
          description: The request was accepted and the operation will complete
            asynchronously.
        "204":
          description: The resource was not found.
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Deletes a Service Fabric service resource.
      tags:
        - Service
      x-ms-long-running-operation: true
    get:
      description: Get a Service Fabric service resource created or in the process of being
        created in the Service Fabric application resource.
      operationId: Services_Get
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/clusterNameParameter"
        - $ref: "#/components/parameters/applicationName"
        - $ref: "#/components/parameters/serviceName"
        - $ref: "#/components/parameters/api-version"
      responses:
        "200":
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceResource"
              examples:
                Get a service:
                  $ref: "#/components/examples/Get_a_service"
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Gets a Service Fabric service resource.
      tags:
        - Service
    patch:
      description: Update a Service Fabric service resource with the specified name.
      operationId: Services_Update
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/clusterNameParameter"
        - $ref: "#/components/parameters/applicationName"
        - $ref: "#/components/parameters/serviceName"
        - $ref: "#/components/parameters/api-version"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceResourceUpdate"
        description: The service resource for patch operations.
        required: true
        x-ms-parameter-location: method
      responses:
        "202":
          description: The request was accepted and the operation will complete
            asynchronously.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceResource"
              examples:
                Patch a service:
                  $ref: "#/components/examples/Patch_a_service"
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Updates a Service Fabric service resource.
      tags:
        - Service
      x-ms-long-running-operation: true
    put:
      description: Create or update a Service Fabric service resource with the specified
        name.
      operationId: Services_CreateOrUpdate
      parameters:
        - $ref: "#/components/parameters/subscriptionId"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/clusterNameParameter"
        - $ref: "#/components/parameters/applicationName"
        - $ref: "#/components/parameters/serviceName"
        - $ref: "#/components/parameters/api-version"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceResource"
        description: The service resource.
        required: true
        x-ms-parameter-location: method
      responses:
        "202":
          description: The request was accepted and the operation will complete
            asynchronously.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceResource"
              examples:
                Put a service with maximum parameters:
                  $ref: "#/components/examples/Put_a_service_with_maximum_parameters"
                Put a service with minimum parameters:
                  $ref: "#/components/examples/Put_a_service_with_minimum_parameters"
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Creates or updates a Service Fabric service resource.
      tags:
        - Service
      x-ms-long-running-operation: true
servers:
  - url: https://management.azure.com
components:
  examples:
    Get_a_list_of_application_type_name_resources:
      value:
        nextLink: ""
        value:
          - etag: W/"636462502174844831"
            id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster/applicationTypes/myAppType
            location: eastus
            name: myCluster
            properties:
              provisioningState: Succeeded
            tags: {}
            type: applicationTypes
    Get_an_application_type:
      value:
        etag: W/"636462502174844831"
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster/applicationTypes/myAppType
        location: eastus
        name: myCluster
        properties:
          provisioningState: Succeeded
        tags: {}
        type: applicationTypes
    Put_an_application_type:
      value:
        etag: W/"636462502174844831"
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster/applicationTypes/myAppType
        location: eastus
        name: myCluster
        properties:
          provisioningState: Succeeded
        tags: {}
        type: applicationTypes
    Get_a_list_of_application_type_version_resources:
      value:
        nextLink: ""
        value:
          - etag: W/"636462502176040417"
            id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster/applicationTypes/myAppType/versions/1.0
            location: eastus
            name: myCluster
            properties:
              appPackageUrl: http://fakelink.test.com/MyAppType
              defaultParameterList: {}
              provisioningState: Updating
            tags: {}
            type: versions
    Get_an_application_type_version:
      value:
        etag: W/"636462502176040417"
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster/applicationTypes/myAppType/versions/1.0
        location: eastus
        name: myCluster
        properties:
          appPackageUrl: http://fakelink.test.com/MyAppType
          defaultParameterList: {}
          provisioningState: Updating
        tags: {}
        type: versions
    Put_an_application_type_version:
      value:
        etag: W/"636462502176040417"
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster/applicationTypes/myAppType/versions/1.0
        location: eastus
        name: myCluster
        properties:
          appPackageUrl: http://fakelink.test.com/MyAppType
          defaultParameterList: {}
          provisioningState: Updating
        tags: {}
        type: versions
    Get_a_list_of_application_resources:
      value:
        nextLink: ""
        value:
          - etag: W/"636462502180261858"
            id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster/applications/myApp
            location: eastus
            name: myCluster
            properties:
              metrics:
                - maximumCapacity: 3
                  name: metric1
                  reservationCapacity: 1
                  totalApplicationCapacity: 5
              provisioningState: Updating
              removeApplicationCapacity: false
              typeName: myAppType
              typeVersion: "1.0"
            tags: {}
            type: applications
    Get_an_application:
      value:
        etag: W/"636462502180261859"
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster/applications/myApp
        location: eastus
        name: myCluster
        properties:
          maximumNodes: 3
          metrics:
            - maximumCapacity: 3
              name: metric1
              reservationCapacity: 1
              totalApplicationCapacity: 5
          minimumNodes: 1
          parameters:
            param1: value1
          provisioningState: Updating
          removeApplicationCapacity: false
          typeName: myAppType
          typeVersion: "1.0"
          upgradePolicy:
            applicationHealthPolicy:
              considerWarningAsError: true
              defaultServiceTypeHealthPolicy:
                maxPercentUnhealthyPartitionsPerService: 0
                maxPercentUnhealthyReplicasPerPartition: 0
                maxPercentUnhealthyServices: 0
              maxPercentUnhealthyDeployedApplications: 0
            forceRestart: false
            rollingUpgradeMonitoringPolicy:
              failureAction: Rollback
              healthCheckRetryTimeout: 00:10:00
              healthCheckStableDuration: 00:05:00
              healthCheckWaitDuration: 00:02:00
              upgradeDomainTimeout: 1.06:00:00
              upgradeTimeout: 01:00:00
            upgradeReplicaSetCheckTimeout: 01:00:00
        tags: {}
        type: applications
    Patch_an_application:
      value:
        etag: W/"636462502180261858"
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster/applications/myApp
        location: eastus
        name: myCluster
        properties:
          metrics:
            - maximumCapacity: 3
              name: metric1
              reservationCapacity: 1
              totalApplicationCapacity: 5
          provisioningState: Updating
          removeApplicationCapacity: false
          typeName: myAppType
          typeVersion: "1.0"
        tags: {}
        type: applications
    Put_an_application_with_maximum_parameters:
      value:
        etag: W/"636462502180261859"
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster/applications/myApp
        location: eastus
        name: myCluster
        properties:
          maximumNodes: 3
          metrics:
            - maximumCapacity: 3
              name: metric1
              reservationCapacity: 1
              totalApplicationCapacity: 5
          minimumNodes: 1
          parameters:
            param1: value1
          provisioningState: Updating
          removeApplicationCapacity: false
          typeName: myAppType
          typeVersion: "1.0"
          upgradePolicy:
            applicationHealthPolicy:
              considerWarningAsError: true
              defaultServiceTypeHealthPolicy:
                maxPercentUnhealthyPartitionsPerService: 0
                maxPercentUnhealthyReplicasPerPartition: 0
                maxPercentUnhealthyServices: 0
              maxPercentUnhealthyDeployedApplications: 0
            forceRestart: false
            rollingUpgradeMonitoringPolicy:
              failureAction: Rollback
              healthCheckRetryTimeout: 00:10:00
              healthCheckStableDuration: 00:05:00
              healthCheckWaitDuration: 00:02:00
              upgradeDomainTimeout: 1.06:00:00
              upgradeTimeout: 01:00:00
            upgradeReplicaSetCheckTimeout: 01:00:00
        tags: {}
        type: applications
    Put_an_application_with_minimum_parameters:
      value:
        etag: W/"636462502180261857"
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster/applications/myApp
        location: eastus
        name: myCluster
        properties:
          provisioningState: Updating
          removeApplicationCapacity: false
          typeName: myAppType
          typeVersion: "1.0"
        tags: {}
        type: applications
    Get_a_list_of_service_resources:
      value:
        nextLink: ""
        value:
          - etag: W/"636462502183671257"
            id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster/applications/myApp/services/myService
            location: eastus
            name: myCluster
            properties:
              instanceCount: 1
              partitionDescription:
                partitionScheme: Singleton
              provisioningState: Updating
              serviceKind: Stateless
              serviceLoadMetrics:
                - name: metric1
                  weight: Low
              servicePackageActivationMode: SharedProcess
              serviceTypeName: myServiceType
            tags: {}
            type: services
    Get_a_service:
      value:
        etag: W/"636462502183671258"
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster/applications/myApp/services/myService
        location: eastus
        name: myCluster
        properties:
          defaultMoveCost: Medium
          instanceCount: 5
          partitionDescription:
            partitionScheme: Singleton
          placementConstraints: NodeType==frontend
          provisioningState: Updating
          serviceKind: Stateless
          serviceLoadMetrics:
            - name: metric1
              weight: Low
          servicePackageActivationMode: SharedProcess
          servicePlacementPolicies: []
          serviceTypeName: myServiceType
        tags: {}
        type: services
    Patch_a_service:
      value:
        etag: W/"636462502183671257"
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster/applications/myApp/services/myService
        location: eastus
        name: myCluster
        properties:
          instanceCount: 1
          partitionDescription:
            partitionScheme: Singleton
          provisioningState: Updating
          serviceKind: Stateless
          serviceLoadMetrics:
            - name: metric1
              weight: Low
          servicePackageActivationMode: SharedProcess
          serviceTypeName: myServiceType
        tags: {}
        type: services
    Put_a_service_with_maximum_parameters:
      value:
        etag: W/"636462502183671258"
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster/applications/myApp/services/myService
        location: eastus
        name: myCluster
        properties:
          defaultMoveCost: Medium
          instanceCount: 5
          partitionDescription:
            partitionScheme: Singleton
          placementConstraints: NodeType==frontend
          provisioningState: Updating
          serviceKind: Stateless
          serviceLoadMetrics:
            - name: metric1
              weight: Low
          servicePackageActivationMode: SharedProcess
          servicePlacementPolicies: []
          serviceTypeName: myServiceType
        tags: {}
        type: services
    Put_a_service_with_minimum_parameters:
      value:
        etag: W/"636462502183671256"
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resRg/providers/Microsoft.ServiceFabric/clusters/myCluster/applications/myApp/services/myService
        location: eastus
        name: myCluster
        properties:
          instanceCount: 1
          partitionDescription:
            partitionScheme: Singleton
          provisioningState: Updating
          serviceKind: Stateless
          serviceTypeName: myServiceType
        tags: {}
        type: services
  parameters:
    api-version:
      description: The version of the Service Fabric resource provider API. This is a
        required parameter and it's value must be "2019-03-01" for this
        specification.
      in: query
      name: api-version
      required: true
      x-ms-parameter-location: client
      schema:
        type: string
        enum:
          - 2019-03-01
        default: 2019-03-01
      examples:
        Get a list of application type name resources:
          value: 2019-03-01
        Delete an application type:
          value: 2019-03-01
        Get an application type:
          value: 2019-03-01
        Put an application type:
          value: 2019-03-01
        Get a list of application type version resources:
          value: 2019-03-01
        Delete an application type version:
          value: 2019-03-01
        Get an application type version:
          value: 2019-03-01
        Put an application type version:
          value: 2019-03-01
        Get a list of application resources:
          value: 2019-03-01
        Delete an application:
          value: 2019-03-01
        Get an application:
          value: 2019-03-01
        Patch an application:
          value: 2019-03-01
        Put an application with maximum parameters:
          value: 2019-03-01
        Put an application with minimum parameters:
          value: 2019-03-01
        Get a list of service resources:
          value: 2019-03-01
        Delete a service:
          value: 2019-03-01
        Get a service:
          value: 2019-03-01
        Patch a service:
          value: 2019-03-01
        Put a service with maximum parameters:
          value: 2019-03-01
        Put a service with minimum parameters:
          value: 2019-03-01
    applicationName:
      description: The name of the application resource.
      in: path
      name: applicationName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
      examples:
        Delete an application:
          value: myApp
        Get an application:
          value: myApp
        Patch an application:
          value: myApp
        Put an application with maximum parameters:
          value: myApp
        Put an application with minimum parameters:
          value: myApp
        Get a list of service resources:
          value: myApp
        Delete a service:
          value: myApp
        Get a service:
          value: myApp
        Patch a service:
          value: myApp
        Put a service with maximum parameters:
          value: myApp
        Put a service with minimum parameters:
          value: myApp
    applicationTypeName:
      description: The name of the application type name resource.
      in: path
      name: applicationTypeName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
      examples:
        Delete an application type:
          value: myAppType
        Get an application type:
          value: myAppType
        Put an application type:
          value: myAppType
        Get a list of application type version resources:
          value: myAppType
        Delete an application type version:
          value: myAppType
        Get an application type version:
          value: myAppType
        Put an application type version:
          value: myAppType
    clusterNameParameter:
      description: The name of the cluster resource.
      in: path
      name: clusterName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
      examples:
        Get a list of application type name resources:
          value: myCluster
        Delete an application type:
          value: myCluster
        Get an application type:
          value: myCluster
        Put an application type:
          value: myCluster
        Get a list of application type version resources:
          value: myCluster
        Delete an application type version:
          value: myCluster
        Get an application type version:
          value: myCluster
        Put an application type version:
          value: myCluster
        Get a list of application resources:
          value: myCluster
        Delete an application:
          value: myCluster
        Get an application:
          value: myCluster
        Patch an application:
          value: myCluster
        Put an application with maximum parameters:
          value: myCluster
        Put an application with minimum parameters:
          value: myCluster
        Get a list of service resources:
          value: myCluster
        Delete a service:
          value: myCluster
        Get a service:
          value: myCluster
        Patch a service:
          value: myCluster
        Put a service with maximum parameters:
          value: myCluster
        Put a service with minimum parameters:
          value: myCluster
    resourceGroupNameParameter:
      description: The name of the resource group.
      in: path
      name: resourceGroupName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
      examples:
        Get a list of application type name resources:
          value: resRg
        Delete an application type:
          value: resRg
        Get an application type:
          value: resRg
        Put an application type:
          value: resRg
        Get a list of application type version resources:
          value: resRg
        Delete an application type version:
          value: resRg
        Get an application type version:
          value: resRg
        Put an application type version:
          value: resRg
        Get a list of application resources:
          value: resRg
        Delete an application:
          value: resRg
        Get an application:
          value: resRg
        Patch an application:
          value: resRg
        Put an application with maximum parameters:
          value: resRg
        Put an application with minimum parameters:
          value: resRg
        Get a list of service resources:
          value: resRg
        Delete a service:
          value: resRg
        Get a service:
          value: resRg
        Patch a service:
          value: resRg
        Put a service with maximum parameters:
          value: resRg
        Put a service with minimum parameters:
          value: resRg
    serviceName:
      description: The name of the service resource in the format of
        {applicationName}~{serviceName}.
      in: path
      name: serviceName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
      examples:
        Delete a service:
          value: myService
        Get a service:
          value: myService
        Patch a service:
          value: myService
        Put a service with maximum parameters:
          value: myService
        Put a service with minimum parameters:
          value: myService
    subscriptionId:
      description: The customer subscription identifier.
      in: path
      name: subscriptionId
      required: true
      x-ms-parameter-location: client
      schema:
        type: string
      examples:
        Get a list of application type name resources:
          value: 00000000-0000-0000-0000-000000000000
        Delete an application type:
          value: 00000000-0000-0000-0000-000000000000
        Get an application type:
          value: 00000000-0000-0000-0000-000000000000
        Put an application type:
          value: 00000000-0000-0000-0000-000000000000
        Get a list of application type version resources:
          value: 00000000-0000-0000-0000-000000000000
        Delete an application type version:
          value: 00000000-0000-0000-0000-000000000000
        Get an application type version:
          value: 00000000-0000-0000-0000-000000000000
        Put an application type version:
          value: 00000000-0000-0000-0000-000000000000
        Get a list of application resources:
          value: 00000000-0000-0000-0000-000000000000
        Delete an application:
          value: 00000000-0000-0000-0000-000000000000
        Get an application:
          value: 00000000-0000-0000-0000-000000000000
        Patch an application:
          value: 00000000-0000-0000-0000-000000000000
        Put an application with maximum parameters:
          value: 00000000-0000-0000-0000-000000000000
        Put an application with minimum parameters:
          value: 00000000-0000-0000-0000-000000000000
        Get a list of service resources:
          value: 00000000-0000-0000-0000-000000000000
        Delete a service:
          value: 00000000-0000-0000-0000-000000000000
        Get a service:
          value: 00000000-0000-0000-0000-000000000000
        Patch a service:
          value: 00000000-0000-0000-0000-000000000000
        Put a service with maximum parameters:
          value: 00000000-0000-0000-0000-000000000000
        Put a service with minimum parameters:
          value: 00000000-0000-0000-0000-000000000000
    version:
      description: The application type version.
      in: path
      name: version
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
      examples:
        Delete an application type version:
          value: "1.0"
        Get an application type version:
          value: "1.0"
        Put an application type version:
          value: "1.0"
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    ApplicationMetricDescription:
      description: >
        Describes capacity information for a custom resource balancing metric.
        This can be used to limit the total consumption of this metric by the
        services of this application.
      properties:
        maximumCapacity:
          description: >
            The maximum node capacity for Service Fabric application.

            This is the maximum Load for an instance of this application on a single node. Even if the capacity of node is greater than this value, Service Fabric will limit the total load of services within the application on each node to this value.

            If set to zero, capacity for this metric is unlimited on each node.

            When creating a new application with application capacity defined, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.

            When updating existing application with application capacity, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.
          format: int64
          type: integer
        name:
          description: The name of the metric.
          type: string
        reservationCapacity:
          description: >
            The node reservation capacity for Service Fabric application.

            This is the amount of load which is reserved on nodes which have instances of this application.

            If MinimumNodes is specified, then the product of these values will be the capacity reserved in the cluster for the application.

            If set to zero, no capacity is reserved for this metric.

            When setting application capacity or when updating application capacity; this value must be smaller than or equal to MaximumCapacity for each metric.
          format: int64
          type: integer
        totalApplicationCapacity:
          description: >
            The total metric capacity for Service Fabric application.

            This is the total metric capacity for this application in the cluster. Service Fabric will try to limit the sum of loads of services within the application to this value.

            When creating a new application with application capacity defined, the product of MaximumNodes and MaximumCapacity must always be smaller than or equal to this value.
          format: int64
          type: integer
      type: object
    ApplicationMetricDescriptionList:
      description: List of application capacity metric description.
      items:
        $ref: "#/components/schemas/ApplicationMetricDescription"
      type: array
    ApplicationParameterList:
      additionalProperties:
        type: string
      description: List of application parameters with overridden values from their default
        values specified in the application manifest.
      type: object
    ApplicationResource:
      allOf:
        - $ref: "#/components/schemas/ProxyResource"
      description: The application resource.
      properties:
        properties:
          $ref: "#/components/schemas/ApplicationResourceProperties"
    ApplicationResourceList:
      description: The list of application resources.
      properties:
        nextLink:
          description: URL to get the next set of application list results if there are any.
          readOnly: true
          type: string
        value:
          items:
            $ref: "#/components/schemas/ApplicationResource"
          type: array
    ApplicationResourceProperties:
      allOf:
        - $ref: "#/components/schemas/ApplicationResourceUpdateProperties"
      description: The application resource properties.
      properties:
        provisioningState:
          description: The current deployment or provisioning state, which only appears in
            the response
          readOnly: true
          type: string
        typeName:
          $ref: "#/components/schemas/ApplicationTypeName"
    ApplicationResourceUpdate:
      allOf:
        - $ref: "#/components/schemas/ProxyResource"
      description: The application resource for patch operations.
      properties:
        properties:
          $ref: "#/components/schemas/ApplicationResourceUpdateProperties"
    ApplicationResourceUpdateProperties:
      description: The application resource properties for patch operations.
      properties:
        maximumNodes:
          default: 0
          description: The maximum number of nodes where Service Fabric will reserve
            capacity for this application. Note that this does not mean that the
            services of this application will be placed on all of those nodes.
            By default, the value of this property is zero and it means that the
            services can be placed on any node.
          format: int64
          minimum: 0
          type: integer
        metrics:
          $ref: "#/components/schemas/ApplicationMetricDescriptionList"
        minimumNodes:
          description: The minimum number of nodes where Service Fabric will reserve
            capacity for this application. Note that this does not mean that the
            services of this application will be placed on all of those nodes.
            If this property is set to zero, no capacity will be reserved. The
            value of this property cannot be more than the value of the
            MaximumNodes property.
          format: int64
          minimum: 0
          type: integer
        parameters:
          $ref: "#/components/schemas/ApplicationParameterList"
        removeApplicationCapacity:
          description: Remove the current application capacity settings.
          type: boolean
        typeVersion:
          $ref: "#/components/schemas/ApplicationTypeVersion"
        upgradePolicy:
          $ref: "#/components/schemas/ApplicationUpgradePolicy"
    ApplicationTypeName:
      description: The application type name as defined in the application manifest.
      type: string
    ApplicationTypeParameterList:
      additionalProperties:
        type: string
      description: List of application type parameters that can be overridden when creating
        or updating the application.
      type: object
    ApplicationTypeResource:
      allOf:
        - $ref: "#/components/schemas/ProxyResource"
      description: The application type name resource
      properties:
        properties:
          $ref: "#/components/schemas/ApplicationTypeResourceProperties"
    ApplicationTypeResourceList:
      description: The list of application type names.
      properties:
        nextLink:
          description: URL to get the next set of application type list results if there
            are any.
          readOnly: true
          type: string
        value:
          items:
            $ref: "#/components/schemas/ApplicationTypeResource"
          type: array
    ApplicationTypeResourceProperties:
      description: The application type name properties
      properties:
        provisioningState:
          description: The current deployment or provisioning state, which only appears in
            the response.
          readOnly: true
          type: string
    ApplicationTypeVersion:
      description: The version of the application type as defined in the application
        manifest.
      type: string
    ApplicationTypeVersionResource:
      allOf:
        - $ref: "#/components/schemas/ProxyResource"
      description: An application type version resource for the specified application type
        name resource.
      properties:
        properties:
          $ref: "#/components/schemas/ApplicationTypeVersionResourceProperties"
    ApplicationTypeVersionResourceList:
      description: The list of application type version resources for the specified
        application type name resource.
      properties:
        nextLink:
          description: URL to get the next set of application type version list results if
            there are any.
          readOnly: true
          type: string
        value:
          items:
            $ref: "#/components/schemas/ApplicationTypeVersionResource"
          type: array
    ApplicationTypeVersionResourceProperties:
      description: The properties of the application type version resource.
      properties:
        appPackageUrl:
          description: The URL to the application package
          type: string
        defaultParameterList:
          $ref: "#/components/schemas/ApplicationTypeParameterList"
        provisioningState:
          description: The current deployment or provisioning state, which only appears in
            the response
          readOnly: true
          type: string
      required:
        - appPackageUrl
    ApplicationUpgradePolicy:
      description: Describes the policy for a monitored application upgrade.
      properties:
        applicationHealthPolicy:
          $ref: "#/components/schemas/ArmApplicationHealthPolicy"
        forceRestart:
          $ref: "#/components/schemas/ForceRestart"
        rollingUpgradeMonitoringPolicy:
          $ref: "#/components/schemas/ArmRollingUpgradeMonitoringPolicy"
        upgradeReplicaSetCheckTimeout:
          description: The maximum amount of time to block processing of an upgrade domain
            and prevent loss of availability when there are unexpected issues.
            When this timeout expires, processing of the upgrade domain will
            proceed regardless of availability loss issues. The timeout is reset
            at the start of each upgrade domain. Valid values are between 0 and
            42949672925 inclusive. (unsigned 32-bit integer).
          type: string
    ArmApplicationHealthPolicy:
      description: >
        Defines a health policy used to evaluate the health of an application or
        one of its children entities.
      properties:
        considerWarningAsError:
          default: false
          description: Indicates whether warnings are treated with the same severity as
            errors.
          type: boolean
        defaultServiceTypeHealthPolicy:
          $ref: "#/components/schemas/ArmServiceTypeHealthPolicy"
        maxPercentUnhealthyDeployedApplications:
          default: 0
          description: >
            The maximum allowed percentage of unhealthy deployed applications.
            Allowed values are Byte values from zero to 100.

            The percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.

            This is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.

            The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.
          type: integer
        serviceTypeHealthPolicyMap:
          $ref: "#/components/schemas/ArmServiceTypeHealthPolicyMap"
      type: object
    ArmRollingUpgradeMonitoringPolicy:
      description: The policy used for monitoring the application upgrade
      properties:
        failureAction:
          description: The activation Mode of the service package
          enum:
            - Rollback
            - Manual
          type: string
          x-ms-enum:
            modelAsString: true
            name: ArmUpgradeFailureAction
            values:
              - description: Indicates that a rollback of the upgrade will be performed by
                  Service Fabric if the upgrade fails.
                value: Rollback
              - description: Indicates that a manual repair will need to be performed by
                  the administrator if the upgrade fails. Service Fabric will
                  not proceed to the next upgrade domain automatically.
                value: Manual
        healthCheckRetryTimeout:
          $ref: "#/components/schemas/HealthCheckRetryTimeout"
        healthCheckStableDuration:
          $ref: "#/components/schemas/HealthCheckStableDuration"
        healthCheckWaitDuration:
          $ref: "#/components/schemas/HealthCheckWaitDuration"
        upgradeDomainTimeout:
          $ref: "#/components/schemas/UpgradeDomainTimeout"
        upgradeTimeout:
          $ref: "#/components/schemas/UpgradeTimeout"
    ArmServiceTypeHealthPolicy:
      description: >
        Represents the health policy used to evaluate the health of services
        belonging to a service type.
      properties:
        maxPercentUnhealthyPartitionsPerService:
          default: 0
          description: >
            The maximum percentage of partitions per service allowed to be
            unhealthy before your application is considered in error.
          maximum: 100
          minimum: 0
          type: integer
        maxPercentUnhealthyReplicasPerPartition:
          default: 0
          description: >
            The maximum percentage of replicas per partition allowed to be
            unhealthy before your application is considered in error.
          maximum: 100
          minimum: 0
          type: integer
        maxPercentUnhealthyServices:
          default: 0
          description: >
            The maximum percentage of services allowed to be unhealthy before
            your application is considered in error.
          maximum: 100
          minimum: 0
          type: integer
      type: object
    ArmServiceTypeHealthPolicyMap:
      additionalProperties:
        $ref: "#/components/schemas/ArmServiceTypeHealthPolicy"
      description: >
        Defines a ServiceTypeHealthPolicy per service type name.


        The entries in the map replace the default service type health policy for each specified service type.

        For example, in an application that contains both a stateless gateway service type and a stateful engine service type, the health policies for the stateless and stateful services can be configured differently.

        With policy per service type, there's more granular control of the health of the service.


        If no policy is specified for a service type name, the DefaultServiceTypeHealthPolicy is used for evaluation.
      type: object
    AvailableOperationDisplay:
      description: Operation supported by the Service Fabric resource provider
      properties:
        description:
          description: Operation description
          type: string
        operation:
          description: The operation that can be performed.
          type: string
        provider:
          description: The name of the provider.
          type: string
        resource:
          description: The resource on which the operation is performed
          type: string
    CorrelationSchemeList:
      description: A list that describes the correlation of the service with other services.
      items:
        $ref: "#/components/schemas/ServiceCorrelationDescription"
      type: array
    ErrorModel:
      description: The structure of the error.
      properties:
        error:
          $ref: "#/components/schemas/ErrorModelError"
    ErrorModelError:
      description: The error details.
      properties:
        code:
          description: The error code.
          type: string
        message:
          description: The error message.
          type: string
    ForceRestart:
      default: false
      description: If true, then processes are forcefully restarted during upgrade even
        when the code version has not changed (the upgrade only changes
        configuration or data).
      type: boolean
    HealthCheckRetryTimeout:
      default: PT0H10M0S
      description: The amount of time to retry health evaluation when the application or
        cluster is unhealthy before FailureAction is executed. It is first
        interpreted as a string representing an ISO 8601 duration. If that
        fails, then it is interpreted as a number representing the total number
        of milliseconds.
      type: string
    HealthCheckStableDuration:
      default: PT0H2M0S
      description: The amount of time that the application or cluster must remain healthy
        before the upgrade proceeds to the next upgrade domain. It is first
        interpreted as a string representing an ISO 8601 duration. If that
        fails, then it is interpreted as a number representing the total number
        of milliseconds.
      type: string
    HealthCheckWaitDuration:
      default: "0"
      description: The amount of time to wait after completing an upgrade domain before
        applying health policies. It is first interpreted as a string
        representing an ISO 8601 duration. If that fails, then it is interpreted
        as a number representing the total number of milliseconds.
      type: string
    MoveCost:
      description: Specifies the move cost for the service.
      enum:
        - Zero
        - Low
        - Medium
        - High
      type: string
      x-ms-enum:
        modelAsString: true
        name: MoveCost
        values:
          - description: Zero move cost. This value is zero.
            value: Zero
          - description: Specifies the move cost of the service as Low. The value is 1.
            value: Low
          - description: Specifies the move cost of the service as Medium. The value is 2.
            value: Medium
          - description: Specifies the move cost of the service as High. The value is 3.
            value: High
    NamedPartitionSchemeDescription:
      allOf:
        - $ref: "#/components/schemas/PartitionSchemeDescription"
        - description: NamedPartitionSchemeDescription
          type: object
      description: Describes the named partition scheme of the service.
      properties:
        Count:
          description: The number of partitions.
          type: integer
        Names:
          description: Array of size specified by the ‘Count’ parameter, for the names of
            the partitions.
          items:
            type: string
          type: array
      required:
        - Count
        - Names
      x-ms-discriminator-value: Named
    OperationListResult:
      description: Describes the result of the request to list Service Fabric resource
        provider operations.
      properties:
        nextLink:
          description: URL to get the next set of operation list results if there are any.
          readOnly: true
          type: string
        value:
          description: List of operations supported by the Service Fabric resource provider.
          items:
            $ref: "#/components/schemas/OperationResult"
          type: array
    OperationResult:
      description: Available operation list result
      properties:
        display:
          $ref: "#/components/schemas/AvailableOperationDisplay"
        name:
          description: The name of the operation.
          type: string
        nextLink:
          description: The URL to use for getting the next set of results.
          type: string
        origin:
          description: Origin result
          type: string
    PartitionScheme:
      description: Enumerates the ways that a service can be partitioned.
      enum:
        - Invalid
        - Singleton
        - UniformInt64Range
        - Named
      type: string
      x-ms-enum:
        modelAsString: true
        name: PartitionScheme
        values:
          - description: Indicates the partition kind is invalid. All Service Fabric
              enumerations have the invalid type. The value is zero.
            value: Invalid
          - description: Indicates that the partition is based on string names, and is a
              SingletonPartitionSchemeDescription object, The value is 1.
            value: Singleton
          - description: Indicates that the partition is based on Int64 key ranges, and is
              a UniformInt64RangePartitionSchemeDescription object. The value is
              2.
            value: UniformInt64Range
          - description: Indicates that the partition is based on string names, and is a
              NamedPartitionSchemeDescription object. The value is 3
            value: Named
    PartitionSchemeDescription:
      description: Describes how the service is partitioned.
      discriminator:
        propertyName: partitionScheme
      properties:
        partitionScheme:
          $ref: "#/components/schemas/PartitionScheme"
      required:
        - partitionScheme
      type: object
    ProxyResource:
      description: The resource model definition for proxy-only resource.
      properties:
        etag:
          description: Azure resource etag.
          readOnly: true
          type: string
        id:
          description: Azure resource identifier.
          readOnly: true
          type: string
        location:
          description: It will be deprecated in New API, resource location depends on the
            parent resource.
          type: string
          x-ms-mutability:
            - create
            - read
        name:
          description: Azure resource name.
          readOnly: true
          type: string
        tags:
          additionalProperties:
            type: string
          description: Azure resource tags.
          type: object
          x-ms-mutability:
            - create
            - read
        type:
          description: Azure resource type.
          readOnly: true
          type: string
      x-ms-azure-resource: true
    ServiceCorrelationDescription:
      description: Creates a particular correlation between services.
      properties:
        scheme:
          $ref: "#/components/schemas/ServiceCorrelationScheme"
        serviceName:
          $ref: "#/components/schemas/ServiceName"
      required:
        - scheme
        - serviceName
      type: object
    ServiceCorrelationScheme:
      description: The service correlation scheme.
      enum:
        - Invalid
        - Affinity
        - AlignedAffinity
        - NonAlignedAffinity
      type: string
      x-ms-enum:
        modelAsString: true
        name: ServiceCorrelationScheme
        values:
          - description: An invalid correlation scheme. Cannot be used. The value is zero.
            value: Invalid
          - description: Indicates that this service has an affinity relationship with
              another service. Provided for backwards compatibility, consider
              preferring the Aligned or NonAlignedAffinity options. The value is
              1.
            value: Affinity
          - description: Aligned affinity ensures that the primaries of the partitions of
              the affinitized services are collocated on the same nodes. This is
              the default and is the same as selecting the Affinity scheme. The
              value is 2.
            value: AlignedAffinity
          - description: Non-Aligned affinity guarantees that all replicas of each service
              will be placed on the same nodes. Unlike Aligned Affinity, this
              does not guarantee that replicas of particular role will be
              collocated. The value is 3.
            value: NonAlignedAffinity
    ServiceKind:
      description: The kind of service (Stateless or Stateful).
      enum:
        - Invalid
        - Stateless
        - Stateful
      type: string
      x-ms-enum:
        modelAsString: true
        name: ServiceKind
        values:
          - description: Indicates the service kind is invalid. All Service Fabric
              enumerations have the invalid type. The value is zero.
            value: Invalid
          - description: Does not use Service Fabric to make its state highly available or
              reliable. The value is 1.
            value: Stateless
          - description: Uses Service Fabric to make its state or part of its state highly
              available and reliable. The value is 2.
            value: Stateful
    ServiceLoadMetricDescription:
      description: Specifies a metric to load balance a service during runtime.
      properties:
        defaultLoad:
          description: Used only for Stateless services. The default amount of load, as a
            number, that this service creates for this metric.
          type: integer
        name:
          description: The name of the metric. If the service chooses to report load during
            runtime, the load metric name should match the name that is
            specified in Name exactly. Note that metric names are case
            sensitive.
          type: string
        primaryDefaultLoad:
          description: Used only for Stateful services. The default amount of load, as a
            number, that this service creates for this metric when it is a
            Primary replica.
          type: integer
        secondaryDefaultLoad:
          description: Used only for Stateful services. The default amount of load, as a
            number, that this service creates for this metric when it is a
            Secondary replica.
          type: integer
        weight:
          $ref: "#/components/schemas/ServiceLoadMetricWeight"
      required:
        - name
      type: object
    ServiceLoadMetricWeight:
      description: Determines the metric weight relative to the other metrics that are
        configured for this service. During runtime, if two metrics end up in
        conflict, the Cluster Resource Manager prefers the metric with the
        higher weight.
      enum:
        - Zero
        - Low
        - Medium
        - High
      type: string
      x-ms-enum:
        modelAsString: true
        name: ServiceLoadMetricWeight
        values:
          - description: Disables resource balancing for this metric. This value is zero.
            value: Zero
          - description: Specifies the metric weight of the service load as Low. The value
              is 1.
            value: Low
          - description: Specifies the metric weight of the service load as Medium. The
              value is 2.
            value: Medium
          - description: Specifies the metric weight of the service load as High. The value
              is 3.
            value: High
    ServiceLoadMetricsList:
      description: The service load metrics is given as an array of
        ServiceLoadMetricDescription objects.
      items:
        $ref: "#/components/schemas/ServiceLoadMetricDescription"
      type: array
    ServiceName:
      description: The full name of the service with 'fabric:' URI scheme.
      type: string
    ServicePlacementPoliciesList:
      description: A list that describes the correlation of the service with other services.
      items:
        $ref: "#/components/schemas/ServicePlacementPolicyDescription"
      type: array
    ServicePlacementPolicyDescription:
      description: Describes the policy to be used for placement of a Service Fabric
        service.
      discriminator:
        propertyName: Type
      properties:
        Type:
          $ref: "#/components/schemas/ServicePlacementPolicyType"
      required:
        - Type
      type: object
    ServicePlacementPolicyType:
      description: The type of placement policy for a service fabric service. Following are
        the possible values.
      enum:
        - Invalid
        - InvalidDomain
        - RequiredDomain
        - PreferredPrimaryDomain
        - RequiredDomainDistribution
        - NonPartiallyPlaceService
      type: string
      x-ms-enum:
        modelAsString: true
        name: ServicePlacementPolicyType
        values:
          - description: Indicates the type of the placement policy is invalid. All Service
              Fabric enumerations have the invalid type. The value is zero.
            value: Invalid
          - description: Indicates that the ServicePlacementPolicyDescription is of type
              ServicePlacementInvalidDomainPolicyDescription, which indicates
              that a particular fault or upgrade domain cannot be used for
              placement of this service. The value is 1.
            value: InvalidDomain
          - description: Indicates that the ServicePlacementPolicyDescription is of type
              ServicePlacementRequireDomainDistributionPolicyDescription
              indicating that the replicas of the service must be placed in a
              specific domain. The value is 2.
            value: RequiredDomain
          - description: Indicates that the ServicePlacementPolicyDescription is of type
              ServicePlacementPreferPrimaryDomainPolicyDescription, which
              indicates that if possible the Primary replica for the partitions
              of the service should be located in a particular domain as an
              optimization. The value is 3.
            value: PreferredPrimaryDomain
          - description: Indicates that the ServicePlacementPolicyDescription is of type
              ServicePlacementRequireDomainDistributionPolicyDescription,
              indicating that the system will disallow placement of any two
              replicas from the same partition in the same domain at any time.
              The value is 4.
            value: RequiredDomainDistribution
          - description: Indicates that the ServicePlacementPolicyDescription is of type
              ServicePlacementNonPartiallyPlaceServicePolicyDescription, which
              indicates that if possible all replicas of a particular partition
              of the service should be placed atomically. The value is 5.
            value: NonPartiallyPlaceService
    ServiceResource:
      allOf:
        - $ref: "#/components/schemas/ProxyResource"
      description: The service resource.
      properties:
        properties:
          $ref: "#/components/schemas/ServiceResourceProperties"
    ServiceResourceList:
      description: The list of service resources.
      properties:
        nextLink:
          description: URL to get the next set of service list results if there are any.
          readOnly: true
          type: string
        value:
          items:
            $ref: "#/components/schemas/ServiceResource"
          type: array
    ServiceResourceProperties:
      allOf:
        - $ref: "#/components/schemas/ServiceResourcePropertiesBase"
      description: The service resource properties.
      discriminator:
        propertyName: serviceKind
      properties:
        partitionDescription:
          $ref: "#/components/schemas/PartitionSchemeDescription"
        provisioningState:
          description: The current deployment or provisioning state, which only appears in
            the response
          readOnly: true
          type: string
        serviceKind:
          $ref: "#/components/schemas/ServiceKind"
        servicePackageActivationMode:
          description: The activation Mode of the service package
          enum:
            - SharedProcess
            - ExclusiveProcess
          type: string
          x-ms-enum:
            modelAsString: true
            name: ArmServicePackageActivationMode
            values:
              - description: Indicates the application package activation mode will use
                  shared process.
                value: SharedProcess
              - description: Indicates the application package activation mode will use
                  exclusive process.
                value: ExclusiveProcess
        serviceTypeName:
          description: The name of the service type
          type: string
      required:
        - serviceKind
    ServiceResourcePropertiesBase:
      description: The common service resource properties.
      properties:
        correlationScheme:
          $ref: "#/components/schemas/CorrelationSchemeList"
        defaultMoveCost:
          $ref: "#/components/schemas/MoveCost"
        placementConstraints:
          description: 'The placement constraints as a string. Placement constraints are
            boolean expressions on node properties and allow for restricting a
            service to particular nodes based on the service requirements. For
            example, to place a service on nodes where NodeType is blue specify
            the following: "NodeColor == blue)".'
          type: string
        serviceLoadMetrics:
          $ref: "#/components/schemas/ServiceLoadMetricsList"
        servicePlacementPolicies:
          $ref: "#/components/schemas/ServicePlacementPoliciesList"
    ServiceResourceUpdate:
      allOf:
        - $ref: "#/components/schemas/ProxyResource"
      description: The service resource for patch operations.
      properties:
        properties:
          $ref: "#/components/schemas/ServiceResourceUpdateProperties"
    ServiceResourceUpdateProperties:
      allOf:
        - $ref: "#/components/schemas/ServiceResourcePropertiesBase"
      description: The service resource properties for patch operations.
      discriminator:
        propertyName: serviceKind
      properties:
        serviceKind:
          $ref: "#/components/schemas/ServiceKind"
      required:
        - serviceKind
    SingletonPartitionSchemeDescription:
      allOf:
        - $ref: "#/components/schemas/PartitionSchemeDescription"
        - description: SingletonPartitionSchemeDescription
          type: object
      description: Describes the partition scheme of a singleton-partitioned, or
        non-partitioned service.
      x-ms-discriminator-value: Singleton
    StatefulServiceProperties:
      allOf:
        - $ref: "#/components/schemas/ServiceResourceProperties"
      description: The properties of a stateful service resource.
      properties:
        hasPersistedState:
          description: A flag indicating whether this is a persistent service which stores
            states on the local disk. If it is then the value of this property
            is true, if not it is false.
          type: boolean
        minReplicaSetSize:
          description: The minimum replica set size as a number.
          minimum: 1
          type: integer
        quorumLossWaitDuration:
          description: The maximum duration for which a partition is allowed to be in a
            state of quorum loss, represented in ISO 8601 format (hh:mm:ss.s).
          format: date-time
          type: string
        replicaRestartWaitDuration:
          description: The duration between when a replica goes down and when a new replica
            is created, represented in ISO 8601 format (hh:mm:ss.s).
          format: date-time
          type: string
        standByReplicaKeepDuration:
          description: The definition on how long StandBy replicas should be maintained
            before being removed, represented in ISO 8601 format (hh:mm:ss.s).
          format: date-time
          type: string
        targetReplicaSetSize:
          description: The target replica set size as a number.
          minimum: 1
          type: integer
      x-ms-discriminator-value: Stateful
    StatefulServiceUpdateProperties:
      allOf:
        - $ref: "#/components/schemas/ServiceResourceUpdateProperties"
      description: The properties of a stateful service resource for patch operations.
      properties:
        minReplicaSetSize:
          description: The minimum replica set size as a number.
          minimum: 1
          type: integer
        quorumLossWaitDuration:
          description: The maximum duration for which a partition is allowed to be in a
            state of quorum loss, represented in ISO 8601 format (hh:mm:ss.s).
          format: date-time
          type: string
        replicaRestartWaitDuration:
          description: The duration between when a replica goes down and when a new replica
            is created, represented in ISO 8601 format (hh:mm:ss.s).
          format: date-time
          type: string
        standByReplicaKeepDuration:
          description: The definition on how long StandBy replicas should be maintained
            before being removed, represented in ISO 8601 format (hh:mm:ss.s).
          format: date-time
          type: string
        targetReplicaSetSize:
          description: The target replica set size as a number.
          minimum: 1
          type: integer
      x-ms-discriminator-value: Stateful
    StatelessServiceProperties:
      allOf:
        - $ref: "#/components/schemas/ServiceResourceProperties"
      description: The properties of a stateless service resource.
      properties:
        instanceCount:
          description: The instance count.
          minimum: -1
          type: integer
      x-ms-discriminator-value: Stateless
    StatelessServiceUpdateProperties:
      allOf:
        - $ref: "#/components/schemas/ServiceResourceUpdateProperties"
      description: The properties of a stateless service resource for patch operations.
      properties:
        instanceCount:
          description: The instance count.
          minimum: -1
          type: integer
      x-ms-discriminator-value: Stateless
    UniformInt64RangePartitionSchemeDescription:
      allOf:
        - $ref: "#/components/schemas/PartitionSchemeDescription"
        - description: UniformInt64RangePartitionSchemeDescription
          type: object
      description: Describes a partitioning scheme where an integer range is allocated
        evenly across a number of partitions.
      properties:
        Count:
          description: The number of partitions.
          type: integer
        HighKey:
          description: |
            String indicating the upper bound of the partition key range that
            should be split between the partition ‘Count’
          type: string
        LowKey:
          description: |
            String indicating the lower bound of the partition key range that
            should be split between the partition ‘Count’
          type: string
      required:
        - Count
        - LowKey
        - HighKey
      x-ms-discriminator-value: UniformInt64Range
    UpgradeDomainTimeout:
      default: P10675199DT02H48M05.4775807S
      description: The amount of time each upgrade domain has to complete before
        FailureAction is executed. It is first interpreted as a string
        representing an ISO 8601 duration. If that fails, then it is interpreted
        as a number representing the total number of milliseconds.
      type: string
    UpgradeTimeout:
      default: P10675199DT02H48M05.4775807S
      description: The amount of time the overall upgrade has to complete before
        FailureAction is executed. It is first interpreted as a string
        representing an ISO 8601 duration. If that fails, then it is interpreted
        as a number representing the total number of milliseconds.
      type: string
