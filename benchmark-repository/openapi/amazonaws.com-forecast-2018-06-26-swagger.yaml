openapi: 3.0.0
info:
  version: 2018-06-26
  x-release: v4
  title: Amazon Forecast Service
  description: Provides APIs for creating and managing Amazon Forecast resources.
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: forecast
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/forecast-2018-06-26.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/forecast/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=AmazonForecast.CreateDataset:
    post:
      operationId: CreateDataset
      description: <p>Creates an Amazon Forecast dataset. The information about the dataset
        that you provide helps Forecast understand how to consume the data for
        model training. This includes the following:</p> <ul> <li> <p> <i>
        <code>DataFrequency</code> </i> - How frequently your historical
        time-series data is collected. Amazon Forecast uses this information
        when training the model and generating a forecast.</p> </li> <li> <p>
        <i> <code>Domain</code> </i> and <i> <code>DatasetType</code> </i> -
        Each dataset has an associated dataset domain and a type within the
        domain. Amazon Forecast provides a list of predefined domains and types
        within each domain. For each unique dataset domain and type within the
        domain, Amazon Forecast requires your data to include a minimum set of
        predefined fields.</p> </li> <li> <p> <i> <code>Schema</code> </i> - A
        schema specifies the fields of the dataset, including the field name and
        data type.</p> </li> </ul> <p>After creating a dataset, you import your
        training data into the dataset and add the dataset to a dataset group.
        You then use the dataset group to create a predictor. For more
        information, see <a>howitworks-datasets-groups</a>.</p> <p>To get a list
        of all your datasets, use the <a>ListDatasets</a> operation.</p> <note>
        <p>The <code>Status</code> of a dataset must be <code>ACTIVE</code>
        before you can import training data. Use the <a>DescribeDataset</a>
        operation to get the status.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDatasetResponse"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.CreateDataset
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDatasetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonForecast.CreateDatasetGroup:
    post:
      operationId: CreateDatasetGroup
      description: <p>Creates an Amazon Forecast dataset group, which holds a collection of
        related datasets. You can add datasets to the dataset group when you
        create the dataset group, or you can add datasets later with the
        <a>UpdateDatasetGroup</a> operation.</p> <p>After creating a dataset
        group and adding datasets, you use the dataset group when you create a
        predictor. For more information, see
        <a>howitworks-datasets-groups</a>.</p> <p>To get a list of all your
        datasets groups, use the <a>ListDatasetGroups</a> operation.</p> <note>
        <p>The <code>Status</code> of a dataset group must be
        <code>ACTIVE</code> before you can create a predictor using the dataset
        group. Use the <a>DescribeDatasetGroup</a> operation to get the
        status.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDatasetGroupResponse"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.CreateDatasetGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDatasetGroupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonForecast.CreateDatasetImportJob:
    post:
      operationId: CreateDatasetImportJob
      description: <p>Imports your training data to an Amazon Forecast dataset. You provide
        the location of your training data in an Amazon Simple Storage Service
        (Amazon S3) bucket and the Amazon Resource Name (ARN) of the dataset
        that you want to import the data to.</p> <p>You must specify a
        <a>DataSource</a> object that includes an AWS Identity and Access
        Management (IAM) role that Amazon Forecast can assume to access the
        data. For more information, see <a>aws-forecast-iam-roles</a>.</p>
        <p>Two properties of the training data are optionally specified:</p>
        <ul> <li> <p>The delimiter that separates the data fields.</p> <p>The
        default delimiter is a comma (,), which is the only supported delimiter
        in this release.</p> </li> <li> <p>The format of timestamps.</p> <p>If
        the format is not specified, Amazon Forecast expects the format to be
        "yyyy-MM-dd HH:mm:ss".</p> </li> </ul> <p>When Amazon Forecast uploads
        your training data, it verifies that the data was collected at the
        <code>DataFrequency</code> specified when the target dataset was
        created. For more information, see <a>CreateDataset</a> and
        <a>howitworks-datasets-groups</a>. Amazon Forecast also verifies the
        delimiter and timestamp format.</p> <p>You can use the
        <a>ListDatasetImportJobs</a> operation to get a list of all your dataset
        import jobs, filtered by specified criteria.</p> <p>To get a list of all
        your dataset import jobs, filtered by the specified criteria, use the
        <a>ListDatasetGroups</a> operation.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDatasetImportJobResponse"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.CreateDatasetImportJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDatasetImportJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonForecast.CreateForecast:
    post:
      operationId: CreateForecast
      description: <p>Creates a forecast for each item in the
        <code>TARGET_TIME_SERIES</code> dataset that was used to train the
        predictor. This is known as inference. To retrieve the forecast for a
        single item at low latency, use the operation. To export the complete
        forecast into your Amazon Simple Storage Service (Amazon S3), use the
        <a>CreateForecastExportJob</a> operation.</p> <p>The range of the
        forecast is determined by the <code>ForecastHorizon</code>, specified in
        the <a>CreatePredictor</a> request, multiplied by the
        <code>DataFrequency</code>, specified in the <a>CreateDataset</a>
        request. When you query a forecast, you can request a specific date
        range within the complete forecast.</p> <p>To get a list of all your
        forecasts, use the <a>ListForecasts</a> operation.</p> <note> <p>The
        forecasts generated by Amazon Forecast are in the same timezone as the
        dataset that was used to create the predictor.</p> </note> <p>For more
        information, see <a>howitworks-forecast</a>.</p> <note> <p>The
        <code>Status</code> of the forecast must be <code>ACTIVE</code> before
        you can query or export the forecast. Use the <a>DescribeForecast</a>
        operation to get the status.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateForecastResponse"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.CreateForecast
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateForecastRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonForecast.CreateForecastExportJob:
    post:
      operationId: CreateForecastExportJob
      description: <p>Exports a forecast created by the <a>CreateForecast</a> operation to
        your Amazon Simple Storage Service (Amazon S3) bucket.</p> <p>You must
        specify a <a>DataDestination</a> object that includes an AWS Identity
        and Access Management (IAM) role that Amazon Forecast can assume to
        access the Amazon S3 bucket. For more information, see
        <a>aws-forecast-iam-roles</a>.</p> <p>For more information, see
        <a>howitworks-forecast</a>.</p> <p>To get a list of all your forecast
        export jobs, use the <a>ListForecastExportJobs</a> operation.</p> <note>
        <p>The <code>Status</code> of the forecast export job must be
        <code>ACTIVE</code> before you can access the forecast in your Amazon S3
        bucket. Use the <a>DescribeForecastExportJob</a> operation to get the
        status.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateForecastExportJobResponse"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.CreateForecastExportJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateForecastExportJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonForecast.CreatePredictor:
    post:
      operationId: CreatePredictor
      description: <p>Creates an Amazon Forecast predictor.</p> <p>In the request, you
        provide a dataset group and either specify an algorithm or let Amazon
        Forecast choose the algorithm for you using AutoML. If you specify an
        algorithm, you also can override algorithm-specific hyperparameters.</p>
        <p>Amazon Forecast uses the chosen algorithm to train a model using the
        latest version of the datasets in the specified dataset group. The
        result is called a predictor. You then generate a forecast using the
        <a>CreateForecast</a> operation.</p> <p>After training a model, the
        <code>CreatePredictor</code> operation also evaluates it. To see the
        evaluation metrics, use the <a>GetAccuracyMetrics</a> operation. Always
        review the evaluation metrics before deciding to use the predictor to
        generate a forecast.</p> <p>Optionally, you can specify a featurization
        configuration to fill and aggragate the data fields in the
        <code>TARGET_TIME_SERIES</code> dataset to improve model training. For
        more information, see <a>FeaturizationConfig</a>.</p> <p> <b>AutoML</b>
        </p> <p>If you set <code>PerformAutoML</code> to <code>true</code>,
        Amazon Forecast evaluates each algorithm and chooses the one that
        minimizes the <code>objective function</code>. The <code>objective
        function</code> is defined as the mean of the weighted p10, p50, and p90
        quantile losses. For more information, see <a>EvaluationResult</a>.</p>
        <p>When AutoML is enabled, the following properties are disallowed:</p>
        <ul> <li> <p> <code>AlgorithmArn</code> </p> </li> <li> <p>
        <code>HPOConfig</code> </p> </li> <li> <p> <code>PerformHPO</code> </p>
        </li> <li> <p> <code>TrainingParameters</code> </p> </li> </ul> <p>To
        get a list of all your predictors, use the <a>ListPredictors</a>
        operation.</p> <note> <p>The <code>Status</code> of the predictor must
        be <code>ACTIVE</code>, signifying that training has completed, before
        you can use the predictor to create a forecast. Use the
        <a>DescribePredictor</a> operation to get the status.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatePredictorResponse"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.CreatePredictor
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePredictorRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonForecast.DeleteDataset:
    post:
      operationId: DeleteDataset
      description: Deletes an Amazon Forecast dataset created using the
        <a>CreateDataset</a> operation. To be deleted, the dataset must have a
        status of <code>ACTIVE</code> or <code>CREATE_FAILED</code>. Use the
        <a>DescribeDataset</a> operation to get the status.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.DeleteDataset
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteDatasetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonForecast.DeleteDatasetGroup:
    post:
      operationId: DeleteDatasetGroup
      description: <p>Deletes a dataset group created using the <a>CreateDatasetGroup</a>
        operation. To be deleted, the dataset group must have a status of
        <code>ACTIVE</code>, <code>CREATE_FAILED</code>, or
        <code>UPDATE_FAILED</code>. Use the <a>DescribeDatasetGroup</a>
        operation to get the status.</p> <p>The operation deletes only the
        dataset group, not the datasets in the group.</p>
      responses:
        "200":
          description: Success
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.DeleteDatasetGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteDatasetGroupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonForecast.DeleteDatasetImportJob:
    post:
      operationId: DeleteDatasetImportJob
      description: Deletes a dataset import job created using the
        <a>CreateDatasetImportJob</a> operation. To be deleted, the import job
        must have a status of <code>ACTIVE</code> or <code>CREATE_FAILED</code>.
        Use the <a>DescribeDatasetImportJob</a> operation to get the status.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.DeleteDatasetImportJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteDatasetImportJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonForecast.DeleteForecast:
    post:
      operationId: DeleteForecast
      description: <p>Deletes a forecast created using the <a>CreateForecast</a> operation.
        To be deleted, the forecast must have a status of <code>ACTIVE</code> or
        <code>CREATE_FAILED</code>. Use the <a>DescribeForecast</a> operation to
        get the status.</p> <p>You can't delete a forecast while it is being
        exported.</p>
      responses:
        "200":
          description: Success
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.DeleteForecast
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteForecastRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonForecast.DeleteForecastExportJob:
    post:
      operationId: DeleteForecastExportJob
      description: Deletes a forecast export job created using the
        <a>CreateForecastExportJob</a> operation. To be deleted, the export job
        must have a status of <code>ACTIVE</code> or <code>CREATE_FAILED</code>.
        Use the <a>DescribeForecastExportJob</a> operation to get the status.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.DeleteForecastExportJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteForecastExportJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonForecast.DeletePredictor:
    post:
      operationId: DeletePredictor
      description: <p>Deletes a predictor created using the <a>CreatePredictor</a>
        operation. To be deleted, the predictor must have a status of
        <code>ACTIVE</code> or <code>CREATE_FAILED</code>. Use the
        <a>DescribePredictor</a> operation to get the status.</p> <p>Any
        forecasts generated by the predictor will no longer be available.</p>
      responses:
        "200":
          description: Success
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.DeletePredictor
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeletePredictorRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonForecast.DescribeDataset:
    post:
      operationId: DescribeDataset
      description: <p>Describes an Amazon Forecast dataset created using the
        <a>CreateDataset</a> operation.</p> <p>In addition to listing the
        properties provided by the user in the <code>CreateDataset</code>
        request, this operation includes the following properties:</p> <ul> <li>
        <p> <code>CreationTime</code> </p> </li> <li> <p>
        <code>LastModificationTime</code> </p> </li> <li> <p>
        <code>Status</code> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDatasetResponse"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.DescribeDataset
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeDatasetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonForecast.DescribeDatasetGroup:
    post:
      operationId: DescribeDatasetGroup
      description: <p>Describes a dataset group created using the <a>CreateDatasetGroup</a>
        operation.</p> <p>In addition to listing the properties provided by the
        user in the <code>CreateDatasetGroup</code> request, this operation
        includes the following properties:</p> <ul> <li> <p>
        <code>DatasetArns</code> - The datasets belonging to the group.</p>
        </li> <li> <p> <code>CreationTime</code> </p> </li> <li> <p>
        <code>LastModificationTime</code> </p> </li> <li> <p>
        <code>Status</code> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDatasetGroupResponse"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.DescribeDatasetGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeDatasetGroupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonForecast.DescribeDatasetImportJob:
    post:
      operationId: DescribeDatasetImportJob
      description: <p>Describes a dataset import job created using the
        <a>CreateDatasetImportJob</a> operation.</p> <p>In addition to listing
        the properties provided by the user in the
        <code>CreateDatasetImportJob</code> request, this operation includes the
        following properties:</p> <ul> <li> <p> <code>CreationTime</code> </p>
        </li> <li> <p> <code>LastModificationTime</code> </p> </li> <li> <p>
        <code>DataSize</code> </p> </li> <li> <p> <code>FieldStatistics</code>
        </p> </li> <li> <p> <code>Status</code> </p> </li> <li> <p>
        <code>Message</code> - If an error occurred, information about the
        error.</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDatasetImportJobResponse"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.DescribeDatasetImportJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeDatasetImportJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonForecast.DescribeForecast:
    post:
      operationId: DescribeForecast
      description: <p>Describes a forecast created using the <a>CreateForecast</a>
        operation.</p> <p>In addition to listing the properties provided by the
        user in the <code>CreateForecast</code> request, this operation includes
        the following properties:</p> <ul> <li> <p> <code>DatasetGroupArn</code>
        - The dataset group that provided the training data.</p> </li> <li> <p>
        <code>CreationTime</code> </p> </li> <li> <p>
        <code>LastModificationTime</code> </p> </li> <li> <p>
        <code>Status</code> </p> </li> <li> <p> <code>Message</code> - If an
        error occurred, information about the error.</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeForecastResponse"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.DescribeForecast
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeForecastRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonForecast.DescribeForecastExportJob:
    post:
      operationId: DescribeForecastExportJob
      description: <p>Describes a forecast export job created using the
        <a>CreateForecastExportJob</a> operation.</p> <p>In addition to listing
        the properties provided by the user in the
        <code>CreateForecastExportJob</code> request, this operation includes
        the following properties:</p> <ul> <li> <p> <code>CreationTime</code>
        </p> </li> <li> <p> <code>LastModificationTime</code> </p> </li> <li>
        <p> <code>Status</code> </p> </li> <li> <p> <code>Message</code> - If an
        error occurred, information about the error.</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeForecastExportJobResponse"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.DescribeForecastExportJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeForecastExportJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonForecast.DescribePredictor:
    post:
      operationId: DescribePredictor
      description: <p>Describes a predictor created using the <a>CreatePredictor</a>
        operation.</p> <p>In addition to listing the properties provided by the
        user in the <code>CreatePredictor</code> request, this operation
        includes the following properties:</p> <ul> <li> <p>
        <code>DatasetImportJobArns</code> - The dataset import jobs used to
        import training data.</p> </li> <li> <p>
        <code>AutoMLAlgorithmArns</code> - If AutoML is performed, the
        algorithms evaluated.</p> </li> <li> <p> <code>CreationTime</code> </p>
        </li> <li> <p> <code>LastModificationTime</code> </p> </li> <li> <p>
        <code>Status</code> </p> </li> <li> <p> <code>Message</code> - If an
        error occurred, information about the error.</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribePredictorResponse"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.DescribePredictor
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribePredictorRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonForecast.GetAccuracyMetrics:
    post:
      operationId: GetAccuracyMetrics
      description: <p>Provides metrics on the accuracy of the models that were trained by
        the <a>CreatePredictor</a> operation. Use metrics to see how well the
        model performed and to decide whether to use the predictor to generate a
        forecast.</p> <p>Metrics are generated for each backtest window
        evaluated. For more information, see <a>EvaluationParameters</a>.</p>
        <p>The parameters of the <code>filling</code> method determine which
        items contribute to the metrics. If <code>zero</code> is specified, all
        items contribute. If <code>nan</code> is specified, only those items
        that have complete data in the range being evaluated contribute. For
        more information, see <a>FeaturizationMethod</a>.</p> <p>For an example
        of how to train a model and review metrics, see
        <a>getting-started</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAccuracyMetricsResponse"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.GetAccuracyMetrics
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetAccuracyMetricsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonForecast.ListDatasetGroups:
    post:
      operationId: ListDatasetGroups
      description: Returns a list of dataset groups created using the
        <a>CreateDatasetGroup</a> operation. For each dataset group, a summary
        of its properties, including its Amazon Resource Name (ARN), is
        returned. You can retrieve the complete set of properties by using the
        ARN with the <a>DescribeDatasetGroup</a> operation.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetGroupsResponse"
        "480":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.ListDatasetGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListDatasetGroupsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonForecast.ListDatasetImportJobs:
    post:
      operationId: ListDatasetImportJobs
      description: Returns a list of dataset import jobs created using the
        <a>CreateDatasetImportJob</a> operation. For each import job, a summary
        of its properties, including its Amazon Resource Name (ARN), is
        returned. You can retrieve the complete set of properties by using the
        ARN with the <a>DescribeDatasetImportJob</a> operation. You can filter
        the list by providing an array of <a>Filter</a> objects.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetImportJobsResponse"
        "480":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.ListDatasetImportJobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListDatasetImportJobsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonForecast.ListDatasets:
    post:
      operationId: ListDatasets
      description: Returns a list of datasets created using the <a>CreateDataset</a>
        operation. For each dataset, a summary of its properties, including its
        Amazon Resource Name (ARN), is returned. You can retrieve the complete
        set of properties by using the ARN with the <a>DescribeDataset</a>
        operation.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetsResponse"
        "480":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.ListDatasets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListDatasetsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonForecast.ListForecastExportJobs:
    post:
      operationId: ListForecastExportJobs
      description: Returns a list of forecast export jobs created using the
        <a>CreateForecastExportJob</a> operation. For each forecast export job,
        a summary of its properties, including its Amazon Resource Name (ARN),
        is returned. You can retrieve the complete set of properties by using
        the ARN with the <a>DescribeForecastExportJob</a> operation. The list
        can be filtered using an array of <a>Filter</a> objects.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListForecastExportJobsResponse"
        "480":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.ListForecastExportJobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListForecastExportJobsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonForecast.ListForecasts:
    post:
      operationId: ListForecasts
      description: Returns a list of forecasts created using the <a>CreateForecast</a>
        operation. For each forecast, a summary of its properties, including its
        Amazon Resource Name (ARN), is returned. You can retrieve the complete
        set of properties by using the ARN with the <a>DescribeForecast</a>
        operation. The list can be filtered using an array of <a>Filter</a>
        objects.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListForecastsResponse"
        "480":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.ListForecasts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListForecastsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonForecast.ListPredictors:
    post:
      operationId: ListPredictors
      description: Returns a list of predictors created using the <a>CreatePredictor</a>
        operation. For each predictor, a summary of its properties, including
        its Amazon Resource Name (ARN), is returned. You can retrieve the
        complete set of properties by using the ARN with the
        <a>DescribePredictor</a> operation. The list can be filtered using an
        array of <a>Filter</a> objects.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPredictorsResponse"
        "480":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.ListPredictors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListPredictorsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonForecast.UpdateDatasetGroup:
    post:
      operationId: UpdateDatasetGroup
      description: <p>Replaces any existing datasets in the dataset group with the
        specified datasets.</p> <note> <p>The <code>Status</code> of the dataset
        group must be <code>ACTIVE</code> before creating a predictor using the
        dataset group. Use the <a>DescribeDatasetGroup</a> operation to get the
        status.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateDatasetGroupResponse"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonForecast.UpdateDatasetGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDatasetGroupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://forecast.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Forecast Service multi-region endpoint
  - url: https://forecast.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Forecast Service multi-region endpoint
  - url: http://forecast.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Forecast Service endpoint for China (Beijing) and China
      (Ningxia)
  - url: https://forecast.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Forecast Service endpoint for China (Beijing) and China
      (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateDatasetResponse:
      type: object
      properties:
        DatasetArn:
          $ref: "#/components/schemas/Arn"
    CreateDatasetRequest:
      type: object
      required:
        - DatasetName
        - Domain
        - DatasetType
        - Schema
      properties:
        DatasetName:
          $ref: "#/components/schemas/Name"
        Domain:
          $ref: "#/components/schemas/Domain"
        DatasetType:
          $ref: "#/components/schemas/DatasetType"
        DataFrequency:
          $ref: "#/components/schemas/Frequency"
        Schema:
          $ref: "#/components/schemas/Schema"
        EncryptionConfig:
          $ref: "#/components/schemas/EncryptionConfig"
    InvalidInputException: {}
    ResourceAlreadyExistsException: {}
    LimitExceededException: {}
    CreateDatasetGroupResponse:
      type: object
      properties:
        DatasetGroupArn:
          $ref: "#/components/schemas/Arn"
    CreateDatasetGroupRequest:
      type: object
      required:
        - DatasetGroupName
        - Domain
      properties:
        DatasetGroupName:
          $ref: "#/components/schemas/Name"
        Domain:
          $ref: "#/components/schemas/Domain"
        DatasetArns:
          $ref: "#/components/schemas/ArnList"
    ResourceNotFoundException: {}
    ResourceInUseException: {}
    CreateDatasetImportJobResponse:
      type: object
      properties:
        DatasetImportJobArn:
          $ref: "#/components/schemas/Arn"
    CreateDatasetImportJobRequest:
      type: object
      required:
        - DatasetImportJobName
        - DatasetArn
        - DataSource
      properties:
        DatasetImportJobName:
          $ref: "#/components/schemas/Name"
        DatasetArn:
          $ref: "#/components/schemas/Arn"
        DataSource:
          $ref: "#/components/schemas/DataSource"
        TimestampFormat:
          $ref: "#/components/schemas/TimestampFormat"
    CreateForecastResponse:
      type: object
      properties:
        ForecastArn:
          $ref: "#/components/schemas/Arn"
    CreateForecastRequest:
      type: object
      required:
        - ForecastName
        - PredictorArn
      properties:
        ForecastName:
          $ref: "#/components/schemas/Name"
        PredictorArn:
          $ref: "#/components/schemas/Arn"
    CreateForecastExportJobResponse:
      type: object
      properties:
        ForecastExportJobArn:
          $ref: "#/components/schemas/Arn"
    CreateForecastExportJobRequest:
      type: object
      required:
        - ForecastExportJobName
        - ForecastArn
        - Destination
      properties:
        ForecastExportJobName:
          $ref: "#/components/schemas/Name"
        ForecastArn:
          $ref: "#/components/schemas/Arn"
        Destination:
          $ref: "#/components/schemas/DataDestination"
    CreatePredictorResponse:
      type: object
      properties:
        PredictorArn:
          $ref: "#/components/schemas/Arn"
    CreatePredictorRequest:
      type: object
      required:
        - PredictorName
        - ForecastHorizon
        - InputDataConfig
        - FeaturizationConfig
      properties:
        PredictorName:
          $ref: "#/components/schemas/Name"
        AlgorithmArn:
          $ref: "#/components/schemas/Arn"
        ForecastHorizon:
          $ref: "#/components/schemas/Integer"
        PerformAutoML:
          $ref: "#/components/schemas/Boolean"
        PerformHPO:
          $ref: "#/components/schemas/Boolean"
        TrainingParameters:
          $ref: "#/components/schemas/TrainingParameters"
        EvaluationParameters:
          $ref: "#/components/schemas/EvaluationParameters"
        HPOConfig:
          $ref: "#/components/schemas/HyperParameterTuningJobConfig"
        InputDataConfig:
          $ref: "#/components/schemas/InputDataConfig"
        FeaturizationConfig:
          $ref: "#/components/schemas/FeaturizationConfig"
        EncryptionConfig:
          $ref: "#/components/schemas/EncryptionConfig"
    DeleteDatasetRequest:
      type: object
      required:
        - DatasetArn
      properties:
        DatasetArn:
          $ref: "#/components/schemas/Arn"
    DeleteDatasetGroupRequest:
      type: object
      required:
        - DatasetGroupArn
      properties:
        DatasetGroupArn:
          $ref: "#/components/schemas/Arn"
    DeleteDatasetImportJobRequest:
      type: object
      required:
        - DatasetImportJobArn
      properties:
        DatasetImportJobArn:
          $ref: "#/components/schemas/Arn"
    DeleteForecastRequest:
      type: object
      required:
        - ForecastArn
      properties:
        ForecastArn:
          $ref: "#/components/schemas/Arn"
    DeleteForecastExportJobRequest:
      type: object
      required:
        - ForecastExportJobArn
      properties:
        ForecastExportJobArn:
          $ref: "#/components/schemas/Arn"
    DeletePredictorRequest:
      type: object
      required:
        - PredictorArn
      properties:
        PredictorArn:
          $ref: "#/components/schemas/Arn"
    DescribeDatasetResponse:
      type: object
      properties:
        DatasetArn:
          $ref: "#/components/schemas/Arn"
        DatasetName:
          $ref: "#/components/schemas/Name"
        Domain:
          $ref: "#/components/schemas/Domain"
        DatasetType:
          $ref: "#/components/schemas/DatasetType"
        DataFrequency:
          $ref: "#/components/schemas/Frequency"
        Schema:
          $ref: "#/components/schemas/Schema"
        EncryptionConfig:
          $ref: "#/components/schemas/EncryptionConfig"
        Status:
          $ref: "#/components/schemas/Status"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        LastModificationTime:
          $ref: "#/components/schemas/Timestamp"
    DescribeDatasetRequest:
      type: object
      required:
        - DatasetArn
      properties:
        DatasetArn:
          $ref: "#/components/schemas/Arn"
    DescribeDatasetGroupResponse:
      type: object
      properties:
        DatasetGroupName:
          $ref: "#/components/schemas/Name"
        DatasetGroupArn:
          $ref: "#/components/schemas/Arn"
        DatasetArns:
          $ref: "#/components/schemas/ArnList"
        Domain:
          $ref: "#/components/schemas/Domain"
        Status:
          $ref: "#/components/schemas/Status"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        LastModificationTime:
          $ref: "#/components/schemas/Timestamp"
    DescribeDatasetGroupRequest:
      type: object
      required:
        - DatasetGroupArn
      properties:
        DatasetGroupArn:
          $ref: "#/components/schemas/Arn"
    DescribeDatasetImportJobResponse:
      type: object
      properties:
        DatasetImportJobName:
          $ref: "#/components/schemas/Name"
        DatasetImportJobArn:
          $ref: "#/components/schemas/Arn"
        DatasetArn:
          $ref: "#/components/schemas/Arn"
        TimestampFormat:
          $ref: "#/components/schemas/TimestampFormat"
        DataSource:
          $ref: "#/components/schemas/DataSource"
        FieldStatistics:
          $ref: "#/components/schemas/FieldStatistics"
        DataSize:
          $ref: "#/components/schemas/Double"
        Status:
          $ref: "#/components/schemas/Status"
        Message:
          $ref: "#/components/schemas/Message"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        LastModificationTime:
          $ref: "#/components/schemas/Timestamp"
    DescribeDatasetImportJobRequest:
      type: object
      required:
        - DatasetImportJobArn
      properties:
        DatasetImportJobArn:
          $ref: "#/components/schemas/Arn"
    DescribeForecastResponse:
      type: object
      properties:
        ForecastArn:
          $ref: "#/components/schemas/Arn"
        ForecastName:
          $ref: "#/components/schemas/Name"
        PredictorArn:
          $ref: "#/components/schemas/Arn"
        DatasetGroupArn:
          $ref: "#/components/schemas/Arn"
        Status:
          $ref: "#/components/schemas/String"
        Message:
          $ref: "#/components/schemas/ErrorMessage"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        LastModificationTime:
          $ref: "#/components/schemas/Timestamp"
    DescribeForecastRequest:
      type: object
      required:
        - ForecastArn
      properties:
        ForecastArn:
          $ref: "#/components/schemas/Arn"
    DescribeForecastExportJobResponse:
      type: object
      properties:
        ForecastExportJobArn:
          $ref: "#/components/schemas/Arn"
        ForecastExportJobName:
          $ref: "#/components/schemas/Name"
        ForecastArn:
          $ref: "#/components/schemas/Arn"
        Destination:
          $ref: "#/components/schemas/DataDestination"
        Message:
          $ref: "#/components/schemas/Message"
        Status:
          $ref: "#/components/schemas/Status"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        LastModificationTime:
          $ref: "#/components/schemas/Timestamp"
    DescribeForecastExportJobRequest:
      type: object
      required:
        - ForecastExportJobArn
      properties:
        ForecastExportJobArn:
          $ref: "#/components/schemas/Arn"
    DescribePredictorResponse:
      type: object
      properties:
        PredictorArn:
          $ref: "#/components/schemas/Name"
        PredictorName:
          $ref: "#/components/schemas/Name"
        AlgorithmArn:
          $ref: "#/components/schemas/Arn"
        ForecastHorizon:
          $ref: "#/components/schemas/Integer"
        PerformAutoML:
          $ref: "#/components/schemas/Boolean"
        PerformHPO:
          $ref: "#/components/schemas/Boolean"
        TrainingParameters:
          $ref: "#/components/schemas/TrainingParameters"
        EvaluationParameters:
          $ref: "#/components/schemas/EvaluationParameters"
        HPOConfig:
          $ref: "#/components/schemas/HyperParameterTuningJobConfig"
        InputDataConfig:
          $ref: "#/components/schemas/InputDataConfig"
        FeaturizationConfig:
          $ref: "#/components/schemas/FeaturizationConfig"
        EncryptionConfig:
          $ref: "#/components/schemas/EncryptionConfig"
        DatasetImportJobArns:
          $ref: "#/components/schemas/ArnList"
        AutoMLAlgorithmArns:
          $ref: "#/components/schemas/ArnList"
        Status:
          $ref: "#/components/schemas/Status"
        Message:
          $ref: "#/components/schemas/Message"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        LastModificationTime:
          $ref: "#/components/schemas/Timestamp"
    DescribePredictorRequest:
      type: object
      required:
        - PredictorArn
      properties:
        PredictorArn:
          $ref: "#/components/schemas/Arn"
    GetAccuracyMetricsResponse:
      type: object
      properties:
        PredictorEvaluationResults:
          $ref: "#/components/schemas/PredictorEvaluationResults"
    GetAccuracyMetricsRequest:
      type: object
      required:
        - PredictorArn
      properties:
        PredictorArn:
          $ref: "#/components/schemas/Arn"
    ListDatasetGroupsResponse:
      type: object
      properties:
        DatasetGroups:
          $ref: "#/components/schemas/DatasetGroups"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListDatasetGroupsRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    InvalidNextTokenException: {}
    ListDatasetImportJobsResponse:
      type: object
      properties:
        DatasetImportJobs:
          $ref: "#/components/schemas/DatasetImportJobs"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListDatasetImportJobsRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        Filters:
          $ref: "#/components/schemas/Filters"
    ListDatasetsResponse:
      type: object
      properties:
        Datasets:
          $ref: "#/components/schemas/Datasets"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListDatasetsRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListForecastExportJobsResponse:
      type: object
      properties:
        ForecastExportJobs:
          $ref: "#/components/schemas/ForecastExportJobs"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListForecastExportJobsRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        Filters:
          $ref: "#/components/schemas/Filters"
    ListForecastsResponse:
      type: object
      properties:
        Forecasts:
          $ref: "#/components/schemas/Forecasts"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListForecastsRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        Filters:
          $ref: "#/components/schemas/Filters"
    ListPredictorsResponse:
      type: object
      properties:
        Predictors:
          $ref: "#/components/schemas/Predictors"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListPredictorsRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        Filters:
          $ref: "#/components/schemas/Filters"
    UpdateDatasetGroupResponse:
      type: object
      properties: {}
    UpdateDatasetGroupRequest:
      type: object
      required:
        - DatasetGroupArn
        - DatasetArns
      properties:
        DatasetGroupArn:
          $ref: "#/components/schemas/Arn"
        DatasetArns:
          $ref: "#/components/schemas/ArnList"
    Arn:
      type: string
      pattern: ^[a-zA-Z0-9\-\_\.\/\:]+$
      maxLength: 256
    ArnList:
      type: array
      items:
        $ref: "#/components/schemas/Arn"
    AttributeType:
      type: string
      enum:
        - string
        - integer
        - float
        - timestamp
    Boolean:
      type: boolean
    Name:
      type: string
      pattern: ^[a-zA-Z0-9][a-zA-Z0-9_]*
      minLength: 1
      maxLength: 63
    Values:
      type: array
      items:
        $ref: "#/components/schemas/Value"
      minItems: 1
      maxItems: 20
    CategoricalParameterRange:
      type: object
      required:
        - Name
        - Values
      properties:
        Name:
          $ref: "#/components/schemas/Name"
        Values:
          $ref: "#/components/schemas/Values"
      description: Specifies a categorical hyperparameter and it's range of tunable values.
        This object is part of the <a>ParameterRanges</a> object.
    CategoricalParameterRanges:
      type: array
      items:
        $ref: "#/components/schemas/CategoricalParameterRange"
      minItems: 1
      maxItems: 20
    Double:
      type: number
      format: double
    ScalingType:
      type: string
      enum:
        - Auto
        - Linear
        - Logarithmic
        - ReverseLogarithmic
    ContinuousParameterRange:
      type: object
      required:
        - Name
        - MaxValue
        - MinValue
      properties:
        Name:
          $ref: "#/components/schemas/Name"
        MaxValue:
          $ref: "#/components/schemas/Double"
        MinValue:
          $ref: "#/components/schemas/Double"
        ScalingType:
          $ref: "#/components/schemas/ScalingType"
      description: Specifies a continuous hyperparameter and it's range of tunable values.
        This object is part of the <a>ParameterRanges</a> object.
    ContinuousParameterRanges:
      type: array
      items:
        $ref: "#/components/schemas/ContinuousParameterRange"
      minItems: 1
      maxItems: 20
    Domain:
      type: string
      enum:
        - RETAIL
        - CUSTOM
        - INVENTORY_PLANNING
        - EC2_CAPACITY
        - WORK_FORCE
        - WEB_TRAFFIC
        - METRICS
    DataSource:
      type: object
      required:
        - S3Config
      properties:
        S3Config:
          $ref: "#/components/schemas/S3Config"
      description: The source of your training data and credentials to access the data.
        This object is submitted in the <a>CreateDatasetImportJob</a> request.
    TimestampFormat:
      type: string
      pattern: ^[a-zA-Z0-9\-\:\.\,\'\s]+$
      maxLength: 256
    DatasetType:
      type: string
      enum:
        - TARGET_TIME_SERIES
        - RELATED_TIME_SERIES
        - ITEM_METADATA
    Frequency:
      type: string
      pattern: ^Y|M|W|D|H|30min|15min|10min|5min|1min$
    Schema:
      type: object
      properties:
        Attributes:
          $ref: "#/components/schemas/SchemaAttributes"
      description: Defines the fields of a dataset. This object is specified in the
        <a>CreateDataset</a> request.
    EncryptionConfig:
      type: object
      required:
        - RoleArn
        - KMSKeyArn
      properties:
        RoleArn:
          $ref: "#/components/schemas/Arn"
        KMSKeyArn:
          $ref: "#/components/schemas/KMSKeyArn"
      description: An AWS Key Management Service (KMS) key and an AWS Identity and Access
        Management (IAM) role that Amazon Forecast can assume to access the key.
        This object is optionally submitted in the <a>CreateDataset</a> and
        <a>CreatePredictor</a> requests.
    DataDestination:
      type: object
      required:
        - S3Config
      properties:
        S3Config:
          $ref: "#/components/schemas/S3Config"
      description: The destination of an exported forecast and credentials to access the
        location. This object is submitted in the <a>CreateForecastExportJob</a>
        request.
    Integer:
      type: integer
    TrainingParameters:
      type: object
      minProperties: 0
      maxProperties: 100
      additionalProperties:
        $ref: "#/components/schemas/ParameterValue"
    EvaluationParameters:
      type: object
      properties:
        NumberOfBacktestWindows:
          $ref: "#/components/schemas/Integer"
        BackTestWindowOffset:
          $ref: "#/components/schemas/Integer"
      description: <p>Parameters that define how to split a dataset into training data and
        testing data, and the number of iterations to perform. These parameters
        are specified in the predefined algorithms and can be overridden in the
        <a>CreatePredictor</a> request.</p> <p>For example, suppose that you
        have a dataset with data collection frequency set to every day and you
        have 200 days worth of data (that is, 200 data points). Now suppose that
        you set the <code>NumberOfBacktestWindows</code> to 2 and the
        <code>BackTestWindowOffset</code> parameter to 20. The algorithm splits
        the data twice. The first time, the algorithm trains the model using the
        first 180 data points and uses the last 20 data points for evaluation.
        The second time, the algorithm trains the model using the first 160 data
        points and uses the last 40 data points for evaluation.</p>
    HyperParameterTuningJobConfig:
      type: object
      properties:
        ParameterRanges:
          $ref: "#/components/schemas/ParameterRanges"
      description: <p>Configuration information for a hyperparameter tuning job. This
        object is specified in the <a>CreatePredictor</a> request.</p> <p>A
        hyperparameter is a parameter that governs the model training process
        and is set before training starts. This is as opposed to a model
        parameter that is determined during training. The values of the
        hyperparameters have an effect on the chosen model parameters.</p> <p>A
        hyperparameter tuning job is the process of choosing the optimum set of
        hyperparameter values that optimize a specified metric. This is
        accomplished by running many training jobs over a range of
        hyperparameter values. The optimum set of values is dependent on the
        algorithm, the training data, and the given metric objective.</p>
    InputDataConfig:
      type: object
      required:
        - DatasetGroupArn
      properties:
        DatasetGroupArn:
          $ref: "#/components/schemas/Arn"
        SupplementaryFeatures:
          $ref: "#/components/schemas/SupplementaryFeatures"
      description: The data used to train a predictor. The data includes a dataset group
        and any supplementary features. This object is specified in the
        <a>CreatePredictor</a> request.
    FeaturizationConfig:
      type: object
      required:
        - ForecastFrequency
      properties:
        ForecastFrequency:
          $ref: "#/components/schemas/Frequency"
        ForecastDimensions:
          $ref: "#/components/schemas/ForecastDimensions"
        Featurizations:
          $ref: "#/components/schemas/Featurizations"
      description: <p>In a <a>CreatePredictor</a> operation, the specified algorithm trains
        a model using the specified dataset group. You can optionally tell the
        operation to modify data fields prior to training a model. These
        modifications are referred to as <i>featurization</i>.</p> <p>You define
        featurization using the <code>FeaturizationConfig</code> object. You
        specify an array of transformations, one for each field that you want to
        featurize. You then include the <code>FeaturizationConfig</code> in your
        <code>CreatePredictor</code> request. Amazon Forecast applies the
        featurization to the <code>TARGET_TIME_SERIES</code> dataset before
        model training.</p> <p>You can create multiple featurization
        configurations. For example, you might call the
        <code>CreatePredictor</code> operation twice by specifying different
        featurization configurations.</p>
    S3Config:
      type: object
      required:
        - Path
        - RoleArn
      properties:
        Path:
          $ref: "#/components/schemas/S3Path"
        RoleArn:
          $ref: "#/components/schemas/Arn"
        KMSKeyArn:
          $ref: "#/components/schemas/KMSKeyArn"
      description: The path to the file(s) in an Amazon Simple Storage Service (Amazon S3)
        bucket, and an AWS Identity and Access Management (IAM) role that Amazon
        Forecast can assume to access the file(s). Optionally, includes an AWS
        Key Management Service (KMS) key. This object is submitted in the
        <a>CreateDatasetImportJob</a> and <a>CreateForecastExportJob</a>
        requests.
    Timestamp:
      type: string
      format: date-time
    DatasetGroupSummary:
      type: object
      properties:
        DatasetGroupArn:
          $ref: "#/components/schemas/Arn"
        DatasetGroupName:
          $ref: "#/components/schemas/Name"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        LastModificationTime:
          $ref: "#/components/schemas/Timestamp"
      description: Provides a summary of the dataset group properties used in the
        <a>ListDatasetGroups</a> operation. To get the complete set of
        properties, call the <a>DescribeDatasetGroup</a> operation, and provide
        the listed <code>DatasetGroupArn</code>.
    DatasetGroups:
      type: array
      items:
        $ref: "#/components/schemas/DatasetGroupSummary"
    Status:
      type: string
      maxLength: 256
    ErrorMessage:
      type: string
    DatasetImportJobSummary:
      type: object
      properties:
        DatasetImportJobArn:
          $ref: "#/components/schemas/Arn"
        DatasetImportJobName:
          $ref: "#/components/schemas/Name"
        DataSource:
          $ref: "#/components/schemas/DataSource"
        Status:
          $ref: "#/components/schemas/Status"
        Message:
          $ref: "#/components/schemas/ErrorMessage"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        LastModificationTime:
          $ref: "#/components/schemas/Timestamp"
      description: Provides a summary of the dataset import job properties used in the
        <a>ListDatasetImportJobs</a> operation. To get the complete set of
        properties, call the <a>DescribeDatasetImportJob</a> operation, and
        provide the listed <code>DatasetImportJobArn</code>.
    DatasetImportJobs:
      type: array
      items:
        $ref: "#/components/schemas/DatasetImportJobSummary"
    DatasetSummary:
      type: object
      properties:
        DatasetArn:
          $ref: "#/components/schemas/Arn"
        DatasetName:
          $ref: "#/components/schemas/Name"
        DatasetType:
          $ref: "#/components/schemas/DatasetType"
        Domain:
          $ref: "#/components/schemas/Domain"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        LastModificationTime:
          $ref: "#/components/schemas/Timestamp"
      description: Provides a summary of the dataset properties used in the
        <a>ListDatasets</a> operation. To get the complete set of properties,
        call the <a>DescribeDataset</a> operation, and provide the listed
        <code>DatasetArn</code>.
    Datasets:
      type: array
      items:
        $ref: "#/components/schemas/DatasetSummary"
    FieldStatistics:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/Statistics"
    Message:
      type: string
    String:
      type: string
      pattern: ^[a-zA-Z0-9\_]+$
      maxLength: 256
    KMSKeyArn:
      type: string
      pattern: arn:aws:kms:.*:key/.*
      maxLength: 256
    TestWindows:
      type: array
      items:
        $ref: "#/components/schemas/WindowSummary"
    EvaluationResult:
      type: object
      properties:
        AlgorithmArn:
          $ref: "#/components/schemas/Arn"
        TestWindows:
          $ref: "#/components/schemas/TestWindows"
      description: The results of evaluating an algorithm. Returned as part of the
        <a>GetAccuracyMetrics</a> response.
    EvaluationType:
      type: string
      enum:
        - SUMMARY
        - COMPUTED
    FeaturizationPipeline:
      type: array
      items:
        $ref: "#/components/schemas/FeaturizationMethod"
      minItems: 1
      maxItems: 1
    Featurization:
      type: object
      required:
        - AttributeName
      properties:
        AttributeName:
          $ref: "#/components/schemas/Name"
        FeaturizationPipeline:
          $ref: "#/components/schemas/FeaturizationPipeline"
      description: '<p>Provides featurization (transformation) information for a dataset
        field. This object is part of the <a>FeaturizationConfig</a> object.</p>
        <p>For example:</p> <p> <code>{</code> </p> <p> <code>"AttributeName":
        "demand",</code> </p> <p> <code>FeaturizationPipeline [ {</code> </p>
        <p> <code>"FeaturizationMethodName": "filling",</code> </p> <p>
        <code>"FeaturizationMethodParameters": {"aggregation": "avg",
        "backfill": "nan"}</code> </p> <p> <code>} ]</code> </p> <p>
        <code>}</code> </p>'
    ForecastDimensions:
      type: array
      items:
        $ref: "#/components/schemas/Name"
      minItems: 1
      maxItems: 5
    Featurizations:
      type: array
      items:
        $ref: "#/components/schemas/Featurization"
      minItems: 1
      maxItems: 1
    FeaturizationMethodName:
      type: string
      enum:
        - filling
    FeaturizationMethodParameters:
      type: object
      minProperties: 1
      maxProperties: 20
      additionalProperties:
        $ref: "#/components/schemas/ParameterValue"
    FeaturizationMethod:
      type: object
      required:
        - FeaturizationMethodName
      properties:
        FeaturizationMethodName:
          $ref: "#/components/schemas/FeaturizationMethodName"
        FeaturizationMethodParameters:
          $ref: "#/components/schemas/FeaturizationMethodParameters"
      description: "<p>Provides information about a method that featurizes (transforms) a
        dataset field. The method is part of the
        <code>FeaturizationPipeline</code> of the <a>Featurization</a> object.
        If <code>FeaturizationMethodParameters</code> isn't specified, Amazon
        Forecast uses default parameters.</p> <p>For example:</p> <p>
        <code>{</code> </p> <p> <code>\"FeaturizationMethodName\":
        \"filling\",</code> </p> <p> <code>\"FeaturizationMethodParameters\":
        {\"aggregation\": \"avg\", \"backfill\": \"nan\"}</code> </p> <p>
        <code>}</code> </p>"
    ParameterValue:
      type: string
      pattern: ^[a-zA-Z0-9\-\_\.\/\[\]\,\"\\\s]+$
      maxLength: 256
    Statistics:
      type: object
      properties:
        Count:
          $ref: "#/components/schemas/Integer"
        CountDistinct:
          $ref: "#/components/schemas/Integer"
        CountNull:
          $ref: "#/components/schemas/Integer"
        CountNan:
          $ref: "#/components/schemas/Integer"
        Min:
          $ref: "#/components/schemas/String"
        Max:
          $ref: "#/components/schemas/String"
        Avg:
          $ref: "#/components/schemas/Double"
        Stddev:
          $ref: "#/components/schemas/Double"
      description: Provides statistics for each data field imported to an Amazon Forecast
        dataset with the <a>CreateDatasetImportJob</a> operation.
    FilterConditionString:
      type: string
      enum:
        - IS
        - IS_NOT
    Filter:
      type: object
      required:
        - Key
        - Value
        - Condition
      properties:
        Key:
          $ref: "#/components/schemas/String"
        Value:
          $ref: "#/components/schemas/Arn"
        Condition:
          $ref: "#/components/schemas/FilterConditionString"
      description: Describes a filter for choosing a subset of objects. Each filter
        consists of a condition and a match statement. The condition is either
        <code>IS</code> or <code>IS_NOT</code>, which specifies whether to
        include or exclude, respectively, the objects that match the statement.
        The match statement consists of a key and a value.
    Filters:
      type: array
      items:
        $ref: "#/components/schemas/Filter"
    ForecastExportJobSummary:
      type: object
      properties:
        ForecastExportJobArn:
          $ref: "#/components/schemas/Arn"
        ForecastExportJobName:
          $ref: "#/components/schemas/Name"
        Destination:
          $ref: "#/components/schemas/DataDestination"
        Status:
          $ref: "#/components/schemas/Status"
        Message:
          $ref: "#/components/schemas/ErrorMessage"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        LastModificationTime:
          $ref: "#/components/schemas/Timestamp"
      description: Provides a summary of the forecast export job properties used in the
        <a>ListForecastExportJobs</a> operation. To get the complete set of
        properties, call the <a>DescribeForecastExportJob</a> operation, and
        provide the listed <code>ForecastExportJobArn</code>.
    ForecastExportJobs:
      type: array
      items:
        $ref: "#/components/schemas/ForecastExportJobSummary"
    ForecastSummary:
      type: object
      properties:
        ForecastArn:
          $ref: "#/components/schemas/Arn"
        ForecastName:
          $ref: "#/components/schemas/Name"
        PredictorArn:
          $ref: "#/components/schemas/String"
        DatasetGroupArn:
          $ref: "#/components/schemas/String"
        Status:
          $ref: "#/components/schemas/Status"
        Message:
          $ref: "#/components/schemas/ErrorMessage"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        LastModificationTime:
          $ref: "#/components/schemas/Timestamp"
      description: Provides a summary of the forecast properties used in the
        <a>ListForecasts</a> operation. To get the complete set of properties,
        call the <a>DescribeForecast</a> operation, and provide the listed
        <code>ForecastArn</code>.
    Forecasts:
      type: array
      items:
        $ref: "#/components/schemas/ForecastSummary"
    PredictorEvaluationResults:
      type: array
      items:
        $ref: "#/components/schemas/EvaluationResult"
    ParameterRanges:
      type: object
      properties:
        CategoricalParameterRanges:
          $ref: "#/components/schemas/CategoricalParameterRanges"
        ContinuousParameterRanges:
          $ref: "#/components/schemas/ContinuousParameterRanges"
        IntegerParameterRanges:
          $ref: "#/components/schemas/IntegerParameterRanges"
      description: Specifies the categorical, continuous, and integer hyperparameters, and
        their ranges of tunable values. The range of tunable values determines
        which values that a hyperparameter tuning job can choose for the
        specified hyperparameter. This object is part of the
        <a>HyperParameterTuningJobConfig</a> object.
    SupplementaryFeatures:
      type: array
      items:
        $ref: "#/components/schemas/SupplementaryFeature"
      minItems: 1
      maxItems: 1
    IntegerParameterRange:
      type: object
      required:
        - Name
        - MaxValue
        - MinValue
      properties:
        Name:
          $ref: "#/components/schemas/Name"
        MaxValue:
          $ref: "#/components/schemas/Integer"
        MinValue:
          $ref: "#/components/schemas/Integer"
        ScalingType:
          $ref: "#/components/schemas/ScalingType"
      description: Specifies an integer hyperparameter and it's range of tunable values.
        This object is part of the <a>ParameterRanges</a> object.
    IntegerParameterRanges:
      type: array
      items:
        $ref: "#/components/schemas/IntegerParameterRange"
      minItems: 1
      maxItems: 20
    NextToken:
      type: string
      minLength: 1
      maxLength: 3000
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    Predictors:
      type: array
      items:
        $ref: "#/components/schemas/PredictorSummary"
    WeightedQuantileLosses:
      type: array
      items:
        $ref: "#/components/schemas/WeightedQuantileLoss"
    Metrics:
      type: object
      properties:
        RMSE:
          $ref: "#/components/schemas/Double"
        WeightedQuantileLosses:
          $ref: "#/components/schemas/WeightedQuantileLosses"
      description: Provides metrics used to evaluate the performance of a predictor. This
        object is part of the <a>WindowSummary</a> object.
    ParameterKey:
      type: string
      pattern: ^[a-zA-Z0-9\-\_\.\/\[\]\,\\]+$
      maxLength: 256
    PredictorSummary:
      type: object
      properties:
        PredictorArn:
          $ref: "#/components/schemas/Arn"
        PredictorName:
          $ref: "#/components/schemas/Name"
        DatasetGroupArn:
          $ref: "#/components/schemas/Arn"
        Status:
          $ref: "#/components/schemas/Status"
        Message:
          $ref: "#/components/schemas/ErrorMessage"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        LastModificationTime:
          $ref: "#/components/schemas/Timestamp"
      description: Provides a summary of the predictor properties used in the
        <a>ListPredictors</a> operation. To get the complete set of properties,
        call the <a>DescribePredictor</a> operation, and provide the listed
        <code>PredictorArn</code>.
    S3Path:
      type: string
      pattern: ^s3://.+$
    SchemaAttributes:
      type: array
      items:
        $ref: "#/components/schemas/SchemaAttribute"
    SchemaAttribute:
      type: object
      properties:
        AttributeName:
          $ref: "#/components/schemas/Name"
        AttributeType:
          $ref: "#/components/schemas/AttributeType"
      description: An attribute of a schema, which defines a field of a dataset. A schema
        attribute is required for every field in a dataset. The <a>Schema</a>
        object contains an array of <code>SchemaAttribute</code> objects.
    Value:
      type: string
      pattern: ^[a-zA-Z0-9\_\-]+$
      maxLength: 256
    SupplementaryFeature:
      type: object
      required:
        - Name
        - Value
      properties:
        Name:
          $ref: "#/components/schemas/Name"
        Value:
          $ref: "#/components/schemas/Value"
      description: <p>Describes a supplementary feature of a dataset group. This object is
        part of the <a>InputDataConfig</a> object.</p> <p>For this release, the
        only supported feature is a holiday calendar. If the calendar is used,
        all data should belong to the same country as the calendar. For the
        calendar data, see <a
        href="http://jollyday.sourceforge.net/data.html">http://jollyday.sourceforge.net/data.html</a>.</p>
    WindowSummary:
      type: object
      properties:
        TestWindowStart:
          $ref: "#/components/schemas/Timestamp"
        TestWindowEnd:
          $ref: "#/components/schemas/Timestamp"
        ItemCount:
          $ref: "#/components/schemas/Integer"
        EvaluationType:
          $ref: "#/components/schemas/EvaluationType"
        Metrics:
          $ref: "#/components/schemas/Metrics"
      description: <p>The metrics for a time range within the evaluation portion of a
        dataset. This object is part of the <a>EvaluationResult</a> object.</p>
        <p>The <code>TestWindowStart</code> and <code>TestWindowEnd</code>
        parameters are determined by the <code>BackTestWindowOffset</code>
        parameter of the <a>EvaluationParameters</a> object.</p>
    WeightedQuantileLoss:
      type: object
      properties:
        Quantile:
          $ref: "#/components/schemas/Double"
        LossValue:
          $ref: "#/components/schemas/Double"
      description: The weighted loss value for a quantile. This object is part of the
        <a>Metrics</a> object.
