openapi: 3.0.0
info:
  version: 2014-05-15
  x-release: v4
  title: Amazon Route 53 Domains
  description: Amazon Route 53 API actions let you register domain names and perform
    related operations.
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: route53domains
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/route53domains-2014-05-15.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/route53domains/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=Route53Domains_v20140515.CheckDomainAvailability:
    post:
      operationId: CheckDomainAvailability
      description: This operation checks the availability of one domain name. Note that if
        the availability status of a domain is pending, you must submit another
        request to determine the availability of the domain name.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckDomainAvailabilityResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: UnsupportedTLD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedTLD"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53Domains_v20140515.CheckDomainAvailability
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckDomainAvailabilityRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53Domains_v20140515.CheckDomainTransferability:
    post:
      operationId: CheckDomainTransferability
      description: "Checks whether a domain name can be transferred to Amazon Route 53. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckDomainTransferabilityResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: UnsupportedTLD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedTLD"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53Domains_v20140515.CheckDomainTransferability
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckDomainTransferabilityRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53Domains_v20140515.DeleteTagsForDomain:
    post:
      operationId: DeleteTagsForDomain
      description: <p>This operation deletes the specified tags for a domain.</p> <p>All
        tag operations are eventually consistent; subsequent operations might
        not immediately represent all issued operations.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteTagsForDomainResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: OperationLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationLimitExceeded"
        "482":
          description: UnsupportedTLD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedTLD"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53Domains_v20140515.DeleteTagsForDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteTagsForDomainRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53Domains_v20140515.DisableDomainAutoRenew:
    post:
      operationId: DisableDomainAutoRenew
      description: This operation disables automatic renewal of domain registration for the
        specified domain.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisableDomainAutoRenewResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: UnsupportedTLD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedTLD"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53Domains_v20140515.DisableDomainAutoRenew
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisableDomainAutoRenewRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53Domains_v20140515.DisableDomainTransferLock:
    post:
      operationId: DisableDomainTransferLock
      description: This operation removes the transfer lock on the domain (specifically the
        <code>clientTransferProhibited</code> status) to allow domain transfers.
        We recommend you refrain from performing this action unless you intend
        to transfer the domain to a different registrar. Successful submission
        returns an operation ID that you can use to track the progress and
        completion of the action. If the request is not completed successfully,
        the domain registrant will be notified by email.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisableDomainTransferLockResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: DuplicateRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateRequest"
        "482":
          description: TLDRulesViolation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TLDRulesViolation"
        "483":
          description: OperationLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationLimitExceeded"
        "484":
          description: UnsupportedTLD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedTLD"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53Domains_v20140515.DisableDomainTransferLock
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisableDomainTransferLockRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53Domains_v20140515.EnableDomainAutoRenew:
    post:
      operationId: EnableDomainAutoRenew
      description: <p>This operation configures Amazon Route 53 to automatically renew the
        specified domain before the domain registration expires. The cost of
        renewing your domain registration is billed to your AWS account.</p>
        <p>The period during which you can renew a domain name varies by TLD.
        For a list of TLDs and their renewal policies, see <a
        href="http://wiki.gandi.net/en/domains/renew#renewal_restoration_and_deletion_times">"Renewal,
        restoration, and deletion times"</a> on the website for our registrar
        associate, Gandi. Amazon Route 53 requires that you renew before the end
        of the renewal period that is listed on the Gandi website so we can
        complete processing before the deadline.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnableDomainAutoRenewResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: UnsupportedTLD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedTLD"
        "482":
          description: TLDRulesViolation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TLDRulesViolation"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53Domains_v20140515.EnableDomainAutoRenew
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnableDomainAutoRenewRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53Domains_v20140515.EnableDomainTransferLock:
    post:
      operationId: EnableDomainTransferLock
      description: This operation sets the transfer lock on the domain (specifically the
        <code>clientTransferProhibited</code> status) to prevent domain
        transfers. Successful submission returns an operation ID that you can
        use to track the progress and completion of the action. If the request
        is not completed successfully, the domain registrant will be notified by
        email.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnableDomainTransferLockResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: DuplicateRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateRequest"
        "482":
          description: TLDRulesViolation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TLDRulesViolation"
        "483":
          description: OperationLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationLimitExceeded"
        "484":
          description: UnsupportedTLD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedTLD"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53Domains_v20140515.EnableDomainTransferLock
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnableDomainTransferLockRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53Domains_v20140515.GetContactReachabilityStatus:
    post:
      operationId: GetContactReachabilityStatus
      description: <p>For operations that require confirmation that the email address for
        the registrant contact is valid, such as registering a new domain, this
        operation returns information about whether the registrant contact has
        responded.</p> <p>If you want us to resend the email, use the
        <code>ResendContactReachabilityEmail</code> operation.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetContactReachabilityStatusResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: OperationLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationLimitExceeded"
        "482":
          description: UnsupportedTLD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedTLD"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53Domains_v20140515.GetContactReachabilityStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetContactReachabilityStatusRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53Domains_v20140515.GetDomainDetail:
    post:
      operationId: GetDomainDetail
      description: This operation returns detailed information about a specified domain
        that is associated with the current AWS account. Contact information for
        the domain is also returned as part of the output.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDomainDetailResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: UnsupportedTLD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedTLD"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53Domains_v20140515.GetDomainDetail
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetDomainDetailRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53Domains_v20140515.GetDomainSuggestions:
    post:
      operationId: GetDomainSuggestions
      description: The GetDomainSuggestions operation returns a list of suggested domain
        names given a string, which can either be a domain name or simply a word
        or phrase (without spaces).
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDomainSuggestionsResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: UnsupportedTLD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedTLD"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53Domains_v20140515.GetDomainSuggestions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetDomainSuggestionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53Domains_v20140515.GetOperationDetail:
    post:
      operationId: GetOperationDetail
      description: This operation returns the current status of an operation that is not
        completed.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOperationDetailResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53Domains_v20140515.GetOperationDetail
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetOperationDetailRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53Domains_v20140515.ListDomains:
    post:
      operationId: ListDomains
      description: This operation returns all the domain names registered with Amazon Route
        53 for the current AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDomainsResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: MaxItems
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53Domains_v20140515.ListDomains
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListDomainsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53Domains_v20140515.ListOperations:
    post:
      operationId: ListOperations
      description: This operation returns the operation IDs of operations that are not yet
        complete.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOperationsResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: MaxItems
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53Domains_v20140515.ListOperations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListOperationsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53Domains_v20140515.ListTagsForDomain:
    post:
      operationId: ListTagsForDomain
      description: <p>This operation returns all of the tags that are associated with the
        specified domain.</p> <p>All tag operations are eventually consistent;
        subsequent operations might not immediately represent all issued
        operations.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForDomainResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: OperationLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationLimitExceeded"
        "482":
          description: UnsupportedTLD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedTLD"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53Domains_v20140515.ListTagsForDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTagsForDomainRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53Domains_v20140515.RegisterDomain:
    post:
      operationId: RegisterDomain
      description: <p>This operation registers a domain. Domains are registered either by
        Amazon Registrar (for .com, .net, and .org domains) or by our registrar
        associate, Gandi (for all other domains). For some top-level domains
        (TLDs), this operation requires extra parameters.</p> <p>When you
        register a domain, Amazon Route 53 does the following:</p> <ul> <li>
        <p>Creates a Amazon Route 53 hosted zone that has the same name as the
        domain. Amazon Route 53 assigns four name servers to your hosted zone
        and automatically updates your domain registration with the names of
        these name servers.</p> </li> <li> <p>Enables autorenew, so your domain
        registration will renew automatically each year. We'll notify you in
        advance of the renewal date so you can choose whether to renew the
        registration.</p> </li> <li> <p>Optionally enables privacy protection,
        so WHOIS queries return contact information either for Amazon Registrar
        (for .com, .net, and .org domains) or for our registrar associate, Gandi
        (for all other TLDs). If you don't enable privacy protection, WHOIS
        queries return the information that you entered for the registrant,
        admin, and tech contacts.</p> </li> <li> <p>If registration is
        successful, returns an operation ID that you can use to track the
        progress and completion of the action. If the request is not completed
        successfully, the domain registrant is notified by email.</p> </li> <li>
        <p>Charges your AWS account an amount based on the top-level domain. For
        more information, see <a
        href="http://aws.amazon.com/route53/pricing/">Amazon Route 53
        Pricing</a>.</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterDomainResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: UnsupportedTLD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedTLD"
        "482":
          description: DuplicateRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateRequest"
        "483":
          description: TLDRulesViolation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TLDRulesViolation"
        "484":
          description: DomainLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainLimitExceeded"
        "485":
          description: OperationLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationLimitExceeded"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53Domains_v20140515.RegisterDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterDomainRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53Domains_v20140515.RenewDomain:
    post:
      operationId: RenewDomain
      description: <p>This operation renews a domain for the specified number of years. The
        cost of renewing your domain is billed to your AWS account.</p> <p>We
        recommend that you renew your domain several weeks before the expiration
        date. Some TLD registries delete domains before the expiration date if
        you haven't renewed far enough in advance. For more information about
        renewing domain registration, see <a
        href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/domain-renew.html">Renewing
        Registration for a Domain</a> in the Amazon Route 53 Developer
        Guide.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RenewDomainResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: UnsupportedTLD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedTLD"
        "482":
          description: DuplicateRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateRequest"
        "483":
          description: TLDRulesViolation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TLDRulesViolation"
        "484":
          description: OperationLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationLimitExceeded"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53Domains_v20140515.RenewDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RenewDomainRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53Domains_v20140515.ResendContactReachabilityEmail:
    post:
      operationId: ResendContactReachabilityEmail
      description: For operations that require confirmation that the email address for the
        registrant contact is valid, such as registering a new domain, this
        operation resends the confirmation email to the current email address
        for the registrant contact.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResendContactReachabilityEmailResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: OperationLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationLimitExceeded"
        "482":
          description: UnsupportedTLD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedTLD"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53Domains_v20140515.ResendContactReachabilityEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResendContactReachabilityEmailRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53Domains_v20140515.RetrieveDomainAuthCode:
    post:
      operationId: RetrieveDomainAuthCode
      description: This operation returns the AuthCode for the domain. To transfer a domain
        to another registrar, you provide this value to the new registrar.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetrieveDomainAuthCodeResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: UnsupportedTLD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedTLD"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53Domains_v20140515.RetrieveDomainAuthCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RetrieveDomainAuthCodeRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53Domains_v20140515.TransferDomain:
    post:
      operationId: TransferDomain
      description: <p>This operation transfers a domain from another registrar to Amazon
        Route 53. When the transfer is complete, the domain is registered either
        with Amazon Registrar (for .com, .net, and .org domains) or with our
        registrar associate, Gandi (for all other TLDs).</p> <p>For transfer
        requirements, a detailed procedure, and information about viewing the
        status of a domain transfer, see <a
        href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/domain-transfer-to-route-53.html">Transferring
        Registration for a Domain to Amazon Route 53</a> in the <i>Amazon Route
        53 Developer Guide</i>.</p> <p>If the registrar for your domain is also
        the DNS service provider for the domain, we highly recommend that you
        consider transferring your DNS service to Amazon Route 53 or to another
        DNS service provider before you transfer your registration. Some
        registrars provide free DNS service when you purchase a domain
        registration. When you transfer the registration, the previous registrar
        will not renew your domain registration and could end your DNS service
        at any time.</p> <important> <p>If the registrar for your domain is also
        the DNS service provider for the domain and you don't transfer DNS
        service to another provider, your website, email, and the web
        applications associated with the domain might become unavailable.</p>
        </important> <p>If the transfer is successful, this method returns an
        operation ID that you can use to track the progress and completion of
        the action. If the transfer doesn't complete successfully, the domain
        registrant will be notified by email.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferDomainResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: UnsupportedTLD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedTLD"
        "482":
          description: DuplicateRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateRequest"
        "483":
          description: TLDRulesViolation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TLDRulesViolation"
        "484":
          description: DomainLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainLimitExceeded"
        "485":
          description: OperationLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationLimitExceeded"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53Domains_v20140515.TransferDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransferDomainRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53Domains_v20140515.UpdateDomainContact:
    post:
      operationId: UpdateDomainContact
      description: "<p>This operation updates the contact information for a particular
        domain. You must specify information for at least one contact:
        registrant, administrator, or technical.</p> <p>If the update is
        successful, this method returns an operation ID that you can use to
        track the progress and completion of the action. If the request is not
        completed successfully, the domain registrant will be notified by
        email.</p>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateDomainContactResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: DuplicateRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateRequest"
        "482":
          description: TLDRulesViolation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TLDRulesViolation"
        "483":
          description: OperationLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationLimitExceeded"
        "484":
          description: UnsupportedTLD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedTLD"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53Domains_v20140515.UpdateDomainContact
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDomainContactRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53Domains_v20140515.UpdateDomainContactPrivacy:
    post:
      operationId: UpdateDomainContactPrivacy
      description: <p>This operation updates the specified domain contact's privacy
        setting. When privacy protection is enabled, contact information such as
        email address is replaced either with contact information for Amazon
        Registrar (for .com, .net, and .org domains) or with contact information
        for our registrar associate, Gandi.</p> <p>This operation affects only
        the contact information for the specified contact type (registrant,
        administrator, or tech). If the request succeeds, Amazon Route 53
        returns an operation ID that you can use with <a>GetOperationDetail</a>
        to track the progress and completion of the action. If the request
        doesn't complete successfully, the domain registrant will be notified by
        email.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateDomainContactPrivacyResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: DuplicateRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateRequest"
        "482":
          description: TLDRulesViolation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TLDRulesViolation"
        "483":
          description: OperationLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationLimitExceeded"
        "484":
          description: UnsupportedTLD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedTLD"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53Domains_v20140515.UpdateDomainContactPrivacy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDomainContactPrivacyRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53Domains_v20140515.UpdateDomainNameservers:
    post:
      operationId: UpdateDomainNameservers
      description: <p>This operation replaces the current set of name servers for the
        domain with the specified set of name servers. If you use Amazon Route
        53 as your DNS service, specify the four name servers in the delegation
        set for the hosted zone for the domain.</p> <p>If successful, this
        operation returns an operation ID that you can use to track the progress
        and completion of the action. If the request is not completed
        successfully, the domain registrant will be notified by email.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateDomainNameserversResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: DuplicateRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateRequest"
        "482":
          description: TLDRulesViolation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TLDRulesViolation"
        "483":
          description: OperationLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationLimitExceeded"
        "484":
          description: UnsupportedTLD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedTLD"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53Domains_v20140515.UpdateDomainNameservers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDomainNameserversRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53Domains_v20140515.UpdateTagsForDomain:
    post:
      operationId: UpdateTagsForDomain
      description: <p>This operation adds or updates tags for a specified domain.</p>
        <p>All tag operations are eventually consistent; subsequent operations
        might not immediately represent all issued operations.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateTagsForDomainResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: OperationLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationLimitExceeded"
        "482":
          description: UnsupportedTLD
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedTLD"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53Domains_v20140515.UpdateTagsForDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTagsForDomainRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53Domains_v20140515.ViewBilling:
    post:
      operationId: ViewBilling
      description: Returns all the domain-related billing records for the current AWS
        account for a specified period
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ViewBillingResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53Domains_v20140515.ViewBilling
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ViewBillingRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://route53domains.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Route 53 Domains multi-region endpoint
  - url: https://route53domains.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Route 53 Domains multi-region endpoint
  - url: http://route53domains.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Route 53 Domains endpoint for China (Beijing) and China
      (Ningxia)
  - url: https://route53domains.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Route 53 Domains endpoint for China (Beijing) and China
      (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CheckDomainAvailabilityResponse:
      type: object
      required:
        - Availability
      properties:
        Availability:
          $ref: "#/components/schemas/DomainAvailability"
      description: The CheckDomainAvailability response includes the following elements.
    CheckDomainAvailabilityRequest:
      type: object
      required:
        - DomainName
      properties:
        DomainName:
          $ref: "#/components/schemas/DomainName"
        IdnLangCode:
          $ref: "#/components/schemas/LangCode"
      description: The CheckDomainAvailability request contains the following elements.
    InvalidInput:
      type: object
      properties:
        message:
          $ref: "#/components/schemas/ErrorMessage"
      description: The requested item is not acceptable. For example, for an OperationId it
        might refer to the ID of an operation that is already completed. For a
        domain name, it might not be a valid domain name or belong to the
        requester account.
    UnsupportedTLD:
      type: object
      properties:
        message:
          $ref: "#/components/schemas/ErrorMessage"
      description: Amazon Route 53 does not support this top-level domain (TLD).
    CheckDomainTransferabilityResponse:
      type: object
      required:
        - Transferability
      properties:
        Transferability:
          $ref: "#/components/schemas/DomainTransferability"
      description: The CheckDomainTransferability response includes the following elements.
    CheckDomainTransferabilityRequest:
      type: object
      required:
        - DomainName
      properties:
        DomainName:
          $ref: "#/components/schemas/DomainName"
        AuthCode:
          $ref: "#/components/schemas/DomainAuthCode"
      description: The CheckDomainTransferability request contains the following elements.
    DeleteTagsForDomainResponse:
      type: object
      properties: {}
    DeleteTagsForDomainRequest:
      type: object
      required:
        - DomainName
        - TagsToDelete
      properties:
        DomainName:
          $ref: "#/components/schemas/DomainName"
        TagsToDelete:
          $ref: "#/components/schemas/TagKeyList"
      description: The DeleteTagsForDomainRequest includes the following elements.
    OperationLimitExceeded:
      type: object
      properties:
        message:
          $ref: "#/components/schemas/ErrorMessage"
      description: The number of operations or jobs running exceeded the allowed threshold
        for the account.
    DisableDomainAutoRenewResponse:
      type: object
      properties: {}
    DisableDomainAutoRenewRequest:
      type: object
      required:
        - DomainName
      properties:
        DomainName:
          $ref: "#/components/schemas/DomainName"
    DisableDomainTransferLockResponse:
      type: object
      required:
        - OperationId
      properties:
        OperationId:
          $ref: "#/components/schemas/OperationId"
      description: The DisableDomainTransferLock response includes the following element.
    DisableDomainTransferLockRequest:
      type: object
      required:
        - DomainName
      properties:
        DomainName:
          $ref: "#/components/schemas/DomainName"
      description: The DisableDomainTransferLock request includes the following element.
    DuplicateRequest:
      type: object
      properties:
        message:
          $ref: "#/components/schemas/ErrorMessage"
      description: The request is already in progress for the domain.
    TLDRulesViolation:
      type: object
      properties:
        message:
          $ref: "#/components/schemas/ErrorMessage"
      description: The top-level domain does not support this operation.
    EnableDomainAutoRenewResponse:
      type: object
      properties: {}
    EnableDomainAutoRenewRequest:
      type: object
      required:
        - DomainName
      properties:
        DomainName:
          $ref: "#/components/schemas/DomainName"
    EnableDomainTransferLockResponse:
      type: object
      required:
        - OperationId
      properties:
        OperationId:
          $ref: "#/components/schemas/OperationId"
      description: The EnableDomainTransferLock response includes the following elements.
    EnableDomainTransferLockRequest:
      type: object
      required:
        - DomainName
      properties:
        DomainName:
          $ref: "#/components/schemas/DomainName"
      description: A request to set the transfer lock for the specified domain.
    GetContactReachabilityStatusResponse:
      type: object
      properties:
        domainName:
          $ref: "#/components/schemas/DomainName"
        status:
          $ref: "#/components/schemas/ReachabilityStatus"
    GetContactReachabilityStatusRequest:
      type: object
      properties:
        domainName:
          $ref: "#/components/schemas/DomainName"
    GetDomainDetailResponse:
      type: object
      required:
        - DomainName
        - Nameservers
        - AdminContact
        - RegistrantContact
        - TechContact
      properties:
        DomainName:
          $ref: "#/components/schemas/DomainName"
        Nameservers:
          $ref: "#/components/schemas/NameserverList"
        AutoRenew:
          $ref: "#/components/schemas/Boolean"
        AdminContact:
          $ref: "#/components/schemas/ContactDetail"
        RegistrantContact:
          $ref: "#/components/schemas/ContactDetail"
        TechContact:
          $ref: "#/components/schemas/ContactDetail"
        AdminPrivacy:
          $ref: "#/components/schemas/Boolean"
        RegistrantPrivacy:
          $ref: "#/components/schemas/Boolean"
        TechPrivacy:
          $ref: "#/components/schemas/Boolean"
        RegistrarName:
          $ref: "#/components/schemas/RegistrarName"
        WhoIsServer:
          $ref: "#/components/schemas/RegistrarWhoIsServer"
        RegistrarUrl:
          $ref: "#/components/schemas/RegistrarUrl"
        AbuseContactEmail:
          $ref: "#/components/schemas/Email"
        AbuseContactPhone:
          $ref: "#/components/schemas/ContactNumber"
        RegistryDomainId:
          $ref: "#/components/schemas/RegistryDomainId"
        CreationDate:
          $ref: "#/components/schemas/Timestamp"
        UpdatedDate:
          $ref: "#/components/schemas/Timestamp"
        ExpirationDate:
          $ref: "#/components/schemas/Timestamp"
        Reseller:
          $ref: "#/components/schemas/Reseller"
        DnsSec:
          $ref: "#/components/schemas/DNSSec"
        StatusList:
          $ref: "#/components/schemas/DomainStatusList"
      description: The GetDomainDetail response includes the following elements.
    GetDomainDetailRequest:
      type: object
      required:
        - DomainName
      properties:
        DomainName:
          $ref: "#/components/schemas/DomainName"
      description: The GetDomainDetail request includes the following element.
    GetDomainSuggestionsResponse:
      type: object
      properties:
        SuggestionsList:
          $ref: "#/components/schemas/DomainSuggestionsList"
    GetDomainSuggestionsRequest:
      type: object
      required:
        - DomainName
        - SuggestionCount
        - OnlyAvailable
      properties:
        DomainName:
          $ref: "#/components/schemas/DomainName"
        SuggestionCount:
          $ref: "#/components/schemas/Integer"
        OnlyAvailable:
          $ref: "#/components/schemas/Boolean"
    GetOperationDetailResponse:
      type: object
      properties:
        OperationId:
          $ref: "#/components/schemas/OperationId"
        Status:
          $ref: "#/components/schemas/OperationStatus"
        Message:
          $ref: "#/components/schemas/ErrorMessage"
        DomainName:
          $ref: "#/components/schemas/DomainName"
        Type:
          $ref: "#/components/schemas/OperationType"
        SubmittedDate:
          $ref: "#/components/schemas/Timestamp"
      description: The GetOperationDetail response includes the following elements.
    GetOperationDetailRequest:
      type: object
      required:
        - OperationId
      properties:
        OperationId:
          $ref: "#/components/schemas/OperationId"
      description: The <a>GetOperationDetail</a> request includes the following element.
    ListDomainsResponse:
      type: object
      required:
        - Domains
      properties:
        Domains:
          $ref: "#/components/schemas/DomainSummaryList"
        NextPageMarker:
          $ref: "#/components/schemas/PageMarker"
      description: The ListDomains response includes the following elements.
    ListDomainsRequest:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/PageMarker"
        MaxItems:
          $ref: "#/components/schemas/PageMaxItems"
      description: The ListDomains request includes the following elements.
    ListOperationsResponse:
      type: object
      required:
        - Operations
      properties:
        Operations:
          $ref: "#/components/schemas/OperationSummaryList"
        NextPageMarker:
          $ref: "#/components/schemas/PageMarker"
      description: The ListOperations response includes the following elements.
    ListOperationsRequest:
      type: object
      properties:
        SubmittedSince:
          $ref: "#/components/schemas/Timestamp"
        Marker:
          $ref: "#/components/schemas/PageMarker"
        MaxItems:
          $ref: "#/components/schemas/PageMaxItems"
      description: The ListOperations request includes the following elements.
    ListTagsForDomainResponse:
      type: object
      required:
        - TagList
      properties:
        TagList:
          $ref: "#/components/schemas/TagList"
      description: The ListTagsForDomain response includes the following elements.
    ListTagsForDomainRequest:
      type: object
      required:
        - DomainName
      properties:
        DomainName:
          $ref: "#/components/schemas/DomainName"
      description: The ListTagsForDomainRequest includes the following elements.
    RegisterDomainResponse:
      type: object
      required:
        - OperationId
      properties:
        OperationId:
          $ref: "#/components/schemas/OperationId"
      description: The RegisterDomain response includes the following element.
    RegisterDomainRequest:
      type: object
      required:
        - DomainName
        - DurationInYears
        - AdminContact
        - RegistrantContact
        - TechContact
      properties:
        DomainName:
          $ref: "#/components/schemas/DomainName"
        IdnLangCode:
          $ref: "#/components/schemas/LangCode"
        DurationInYears:
          $ref: "#/components/schemas/DurationInYears"
        AutoRenew:
          $ref: "#/components/schemas/Boolean"
        AdminContact:
          $ref: "#/components/schemas/ContactDetail"
        RegistrantContact:
          $ref: "#/components/schemas/ContactDetail"
        TechContact:
          $ref: "#/components/schemas/ContactDetail"
        PrivacyProtectAdminContact:
          $ref: "#/components/schemas/Boolean"
        PrivacyProtectRegistrantContact:
          $ref: "#/components/schemas/Boolean"
        PrivacyProtectTechContact:
          $ref: "#/components/schemas/Boolean"
      description: The RegisterDomain request includes the following elements.
    DomainLimitExceeded:
      type: object
      properties:
        message:
          $ref: "#/components/schemas/ErrorMessage"
      description: The number of domains has exceeded the allowed threshold for the account.
    RenewDomainResponse:
      type: object
      required:
        - OperationId
      properties:
        OperationId:
          $ref: "#/components/schemas/OperationId"
    RenewDomainRequest:
      type: object
      required:
        - DomainName
        - CurrentExpiryYear
      properties:
        DomainName:
          $ref: "#/components/schemas/DomainName"
        DurationInYears:
          $ref: "#/components/schemas/DurationInYears"
        CurrentExpiryYear:
          $ref: "#/components/schemas/CurrentExpiryYear"
      description: A <code>RenewDomain</code> request includes the number of years that you
        want to renew for and the current expiration year.
    ResendContactReachabilityEmailResponse:
      type: object
      properties:
        domainName:
          $ref: "#/components/schemas/DomainName"
        emailAddress:
          $ref: "#/components/schemas/Email"
        isAlreadyVerified:
          $ref: "#/components/schemas/Boolean"
    ResendContactReachabilityEmailRequest:
      type: object
      properties:
        domainName:
          $ref: "#/components/schemas/DomainName"
    RetrieveDomainAuthCodeResponse:
      type: object
      required:
        - AuthCode
      properties:
        AuthCode:
          $ref: "#/components/schemas/DomainAuthCode"
      description: The RetrieveDomainAuthCode response includes the following element.
    RetrieveDomainAuthCodeRequest:
      type: object
      required:
        - DomainName
      properties:
        DomainName:
          $ref: "#/components/schemas/DomainName"
      description: A request for the authorization code for the specified domain. To
        transfer a domain to another registrar, you provide this value to the
        new registrar.
    TransferDomainResponse:
      type: object
      required:
        - OperationId
      properties:
        OperationId:
          $ref: "#/components/schemas/OperationId"
      description: The TranserDomain response includes the following element.
    TransferDomainRequest:
      type: object
      required:
        - DomainName
        - DurationInYears
        - AdminContact
        - RegistrantContact
        - TechContact
      properties:
        DomainName:
          $ref: "#/components/schemas/DomainName"
        IdnLangCode:
          $ref: "#/components/schemas/LangCode"
        DurationInYears:
          $ref: "#/components/schemas/DurationInYears"
        Nameservers:
          $ref: "#/components/schemas/NameserverList"
        AuthCode:
          $ref: "#/components/schemas/DomainAuthCode"
        AutoRenew:
          $ref: "#/components/schemas/Boolean"
        AdminContact:
          $ref: "#/components/schemas/ContactDetail"
        RegistrantContact:
          $ref: "#/components/schemas/ContactDetail"
        TechContact:
          $ref: "#/components/schemas/ContactDetail"
        PrivacyProtectAdminContact:
          $ref: "#/components/schemas/Boolean"
        PrivacyProtectRegistrantContact:
          $ref: "#/components/schemas/Boolean"
        PrivacyProtectTechContact:
          $ref: "#/components/schemas/Boolean"
      description: The TransferDomain request includes the following elements.
    UpdateDomainContactResponse:
      type: object
      required:
        - OperationId
      properties:
        OperationId:
          $ref: "#/components/schemas/OperationId"
      description: The UpdateDomainContact response includes the following element.
    UpdateDomainContactRequest:
      type: object
      required:
        - DomainName
      properties:
        DomainName:
          $ref: "#/components/schemas/DomainName"
        AdminContact:
          $ref: "#/components/schemas/ContactDetail"
        RegistrantContact:
          $ref: "#/components/schemas/ContactDetail"
        TechContact:
          $ref: "#/components/schemas/ContactDetail"
      description: The UpdateDomainContact request includes the following elements.
    UpdateDomainContactPrivacyResponse:
      type: object
      required:
        - OperationId
      properties:
        OperationId:
          $ref: "#/components/schemas/OperationId"
      description: The UpdateDomainContactPrivacy response includes the following element.
    UpdateDomainContactPrivacyRequest:
      type: object
      required:
        - DomainName
      properties:
        DomainName:
          $ref: "#/components/schemas/DomainName"
        AdminPrivacy:
          $ref: "#/components/schemas/Boolean"
        RegistrantPrivacy:
          $ref: "#/components/schemas/Boolean"
        TechPrivacy:
          $ref: "#/components/schemas/Boolean"
      description: The UpdateDomainContactPrivacy request includes the following elements.
    UpdateDomainNameserversResponse:
      type: object
      required:
        - OperationId
      properties:
        OperationId:
          $ref: "#/components/schemas/OperationId"
      description: The UpdateDomainNameservers response includes the following element.
    UpdateDomainNameserversRequest:
      type: object
      required:
        - DomainName
        - Nameservers
      properties:
        DomainName:
          $ref: "#/components/schemas/DomainName"
        FIAuthKey:
          $ref: "#/components/schemas/FIAuthKey"
        Nameservers:
          $ref: "#/components/schemas/NameserverList"
      description: <p>Replaces the current set of name servers for the domain with the
        specified set of name servers. If you use Amazon Route 53 as your DNS
        service, specify the four name servers in the delegation set for the
        hosted zone for the domain.</p> <p>If successful, this operation returns
        an operation ID that you can use to track the progress and completion of
        the action. If the request is not completed successfully, the domain
        registrant will be notified by email. </p>
    UpdateTagsForDomainResponse:
      type: object
      properties: {}
    UpdateTagsForDomainRequest:
      type: object
      required:
        - DomainName
      properties:
        DomainName:
          $ref: "#/components/schemas/DomainName"
        TagsToUpdate:
          $ref: "#/components/schemas/TagList"
      description: The UpdateTagsForDomainRequest includes the following elements.
    ViewBillingResponse:
      type: object
      properties:
        NextPageMarker:
          $ref: "#/components/schemas/PageMarker"
        BillingRecords:
          $ref: "#/components/schemas/BillingRecords"
      description: The ViewBilling response includes the following elements.
    ViewBillingRequest:
      type: object
      properties:
        Start:
          $ref: "#/components/schemas/Timestamp"
        End:
          $ref: "#/components/schemas/Timestamp"
        Marker:
          $ref: "#/components/schemas/PageMarker"
        MaxItems:
          $ref: "#/components/schemas/PageMaxItems"
      description: The ViewBilling request includes the following elements.
    AddressLine:
      type: string
      maxLength: 255
    DomainName:
      type: string
      maxLength: 255
    OperationType:
      type: string
      enum:
        - REGISTER_DOMAIN
        - DELETE_DOMAIN
        - TRANSFER_IN_DOMAIN
        - UPDATE_DOMAIN_CONTACT
        - UPDATE_NAMESERVER
        - CHANGE_PRIVACY_PROTECTION
        - DOMAIN_LOCK
        - ENABLE_AUTORENEW
        - DISABLE_AUTORENEW
        - ADD_DNSSEC
        - REMOVE_DNSSEC
        - EXPIRE_DOMAIN
        - TRANSFER_OUT_DOMAIN
        - CHANGE_DOMAIN_OWNER
        - RENEW_DOMAIN
        - PUSH_DOMAIN
    InvoiceId:
      type: string
    Timestamp:
      type: string
      format: date-time
    Price:
      type: number
      format: double
    BillingRecord:
      type: object
      properties:
        DomainName:
          $ref: "#/components/schemas/DomainName"
        Operation:
          $ref: "#/components/schemas/OperationType"
        InvoiceId:
          $ref: "#/components/schemas/InvoiceId"
        BillDate:
          $ref: "#/components/schemas/Timestamp"
        Price:
          $ref: "#/components/schemas/Price"
      description: Information for one billing record.
    BillingRecords:
      type: array
      items:
        $ref: "#/components/schemas/BillingRecord"
    Boolean:
      type: boolean
    LangCode:
      type: string
      maxLength: 3
    DomainAvailability:
      type: string
      enum:
        - AVAILABLE
        - AVAILABLE_RESERVED
        - AVAILABLE_PREORDER
        - UNAVAILABLE
        - UNAVAILABLE_PREMIUM
        - UNAVAILABLE_RESTRICTED
        - RESERVED
        - DONT_KNOW
    DomainAuthCode:
      type: string
      maxLength: 1024
      format: password
    DomainTransferability:
      type: object
      properties:
        Transferable:
          $ref: "#/components/schemas/Transferable"
      description: A complex type that contains information about whether the specified
        domain can be transferred to Amazon Route 53.
    City:
      type: string
      maxLength: 255
    ContactName:
      type: string
      maxLength: 255
    ContactType:
      type: string
      enum:
        - PERSON
        - COMPANY
        - ASSOCIATION
        - PUBLIC_BODY
        - RESELLER
    State:
      type: string
      maxLength: 255
    CountryCode:
      type: string
      enum:
        - AD
        - AE
        - AF
        - AG
        - AI
        - AL
        - AM
        - AN
        - AO
        - AQ
        - AR
        - AS
        - AT
        - AU
        - AW
        - AZ
        - BA
        - BB
        - BD
        - BE
        - BF
        - BG
        - BH
        - BI
        - BJ
        - BL
        - BM
        - BN
        - BO
        - BR
        - BS
        - BT
        - BW
        - BY
        - BZ
        - CA
        - CC
        - CD
        - CF
        - CG
        - CH
        - CI
        - CK
        - CL
        - CM
        - CN
        - CO
        - CR
        - CU
        - CV
        - CX
        - CY
        - CZ
        - DE
        - DJ
        - DK
        - DM
        - DO
        - DZ
        - EC
        - EE
        - EG
        - ER
        - ES
        - ET
        - FI
        - FJ
        - FK
        - FM
        - FO
        - FR
        - GA
        - GB
        - GD
        - GE
        - GH
        - GI
        - GL
        - GM
        - GN
        - GQ
        - GR
        - GT
        - GU
        - GW
        - GY
        - HK
        - HN
        - HR
        - HT
        - HU
        - ID
        - IE
        - IL
        - IM
        - IN
        - IQ
        - IR
        - IS
        - IT
        - JM
        - JO
        - JP
        - KE
        - KG
        - KH
        - KI
        - KM
        - KN
        - KP
        - KR
        - KW
        - KY
        - KZ
        - LA
        - LB
        - LC
        - LI
        - LK
        - LR
        - LS
        - LT
        - LU
        - LV
        - LY
        - MA
        - MC
        - MD
        - ME
        - MF
        - MG
        - MH
        - MK
        - ML
        - MM
        - MN
        - MO
        - MP
        - MR
        - MS
        - MT
        - MU
        - MV
        - MW
        - MX
        - MY
        - MZ
        - NA
        - NC
        - NE
        - NG
        - NI
        - NL
        - NO
        - NP
        - NR
        - NU
        - NZ
        - OM
        - PA
        - PE
        - PF
        - PG
        - PH
        - PK
        - PL
        - PM
        - PN
        - PR
        - PT
        - PW
        - PY
        - QA
        - RO
        - RS
        - RU
        - RW
        - SA
        - SB
        - SC
        - SD
        - SE
        - SG
        - SH
        - SI
        - SK
        - SL
        - SM
        - SN
        - SO
        - SR
        - ST
        - SV
        - SY
        - SZ
        - TC
        - TD
        - TG
        - TH
        - TJ
        - TK
        - TL
        - TM
        - TN
        - TO
        - TR
        - TT
        - TV
        - TW
        - TZ
        - UA
        - UG
        - US
        - UY
        - UZ
        - VA
        - VC
        - VE
        - VG
        - VI
        - VN
        - VU
        - WF
        - WS
        - YE
        - YT
        - ZA
        - ZM
        - ZW
    ZipCode:
      type: string
      maxLength: 255
    ContactNumber:
      type: string
      maxLength: 30
    Email:
      type: string
      maxLength: 254
    ExtraParamList:
      type: array
      items:
        $ref: "#/components/schemas/ExtraParam"
    ContactDetail:
      type: object
      properties:
        FirstName:
          $ref: "#/components/schemas/ContactName"
        LastName:
          $ref: "#/components/schemas/ContactName"
        ContactType:
          $ref: "#/components/schemas/ContactType"
        OrganizationName:
          $ref: "#/components/schemas/ContactName"
        AddressLine1:
          $ref: "#/components/schemas/AddressLine"
        AddressLine2:
          $ref: "#/components/schemas/AddressLine"
        City:
          $ref: "#/components/schemas/City"
        State:
          $ref: "#/components/schemas/State"
        CountryCode:
          $ref: "#/components/schemas/CountryCode"
        ZipCode:
          $ref: "#/components/schemas/ZipCode"
        PhoneNumber:
          $ref: "#/components/schemas/ContactNumber"
        Email:
          $ref: "#/components/schemas/Email"
        Fax:
          $ref: "#/components/schemas/ContactNumber"
        ExtraParams:
          $ref: "#/components/schemas/ExtraParamList"
      description: ContactDetail includes the following elements.
    CurrentExpiryYear:
      type: integer
    DNSSec:
      type: string
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
    OperationId:
      type: string
      maxLength: 255
    ErrorMessage:
      type: string
    DomainStatus:
      type: string
    DomainStatusList:
      type: array
      items:
        $ref: "#/components/schemas/DomainStatus"
    String:
      type: string
    DomainSuggestion:
      type: object
      properties:
        DomainName:
          $ref: "#/components/schemas/DomainName"
        Availability:
          $ref: "#/components/schemas/String"
      description: Information about one suggested domain name.
    DomainSuggestionsList:
      type: array
      items:
        $ref: "#/components/schemas/DomainSuggestion"
    DomainSummary:
      type: object
      required:
        - DomainName
      properties:
        DomainName:
          $ref: "#/components/schemas/DomainName"
        AutoRenew:
          $ref: "#/components/schemas/Boolean"
        TransferLock:
          $ref: "#/components/schemas/Boolean"
        Expiry:
          $ref: "#/components/schemas/Timestamp"
      description: Summary information about one domain.
    DomainSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/DomainSummary"
    Transferable:
      type: string
      enum:
        - TRANSFERABLE
        - UNTRANSFERABLE
        - DONT_KNOW
      description: <p>Whether the domain name can be transferred to Amazon Route 53.</p>
        <note> <p>You can transfer only domains that have a value of
        <code>TRANSFERABLE</code> for <code>Transferable</code>.</p> </note>
        <p>Valid values:</p> <dl> <dt>TRANSFERABLE</dt> <dd> <p>The domain name
        can be transferred to Amazon Route 53.</p> </dd>
        <dt>UNTRANSFERRABLE</dt> <dd> <p>The domain name can't be transferred to
        Amazon Route 53.</p> </dd> <dt>DONT_KNOW</dt> <dd> <p>Reserved for
        future use.</p> </dd> </dl>
    DurationInYears:
      type: integer
      minimum: 1
      maximum: 10
    ExtraParamName:
      type: string
      enum:
        - DUNS_NUMBER
        - BRAND_NUMBER
        - BIRTH_DEPARTMENT
        - BIRTH_DATE_IN_YYYY_MM_DD
        - BIRTH_COUNTRY
        - BIRTH_CITY
        - DOCUMENT_NUMBER
        - AU_ID_NUMBER
        - AU_ID_TYPE
        - CA_LEGAL_TYPE
        - CA_BUSINESS_ENTITY_TYPE
        - ES_IDENTIFICATION
        - ES_IDENTIFICATION_TYPE
        - ES_LEGAL_FORM
        - FI_BUSINESS_NUMBER
        - FI_ID_NUMBER
        - FI_NATIONALITY
        - FI_ORGANIZATION_TYPE
        - IT_PIN
        - IT_REGISTRANT_ENTITY_TYPE
        - RU_PASSPORT_DATA
        - SE_ID_NUMBER
        - SG_ID_NUMBER
        - VAT_NUMBER
        - UK_CONTACT_TYPE
        - UK_COMPANY_NUMBER
    ExtraParamValue:
      type: string
      maxLength: 2048
    ExtraParam:
      type: object
      required:
        - Name
        - Value
      properties:
        Name:
          $ref: "#/components/schemas/ExtraParamName"
        Value:
          $ref: "#/components/schemas/ExtraParamValue"
      description: ExtraParam includes the following elements.
    FIAuthKey:
      type: string
    ReachabilityStatus:
      type: string
      enum:
        - PENDING
        - DONE
        - EXPIRED
    NameserverList:
      type: array
      items:
        $ref: "#/components/schemas/Nameserver"
    RegistrarName:
      type: string
    RegistrarWhoIsServer:
      type: string
    RegistrarUrl:
      type: string
    RegistryDomainId:
      type: string
    Reseller:
      type: string
    Integer:
      type: integer
    OperationStatus:
      type: string
      enum:
        - SUBMITTED
        - IN_PROGRESS
        - ERROR
        - SUCCESSFUL
        - FAILED
    GlueIp:
      type: string
      maxLength: 45
    GlueIpList:
      type: array
      items:
        $ref: "#/components/schemas/GlueIp"
    HostName:
      type: string
      pattern: "[a-zA-Z0-9_\\-.]*"
      maxLength: 255
    PageMarker:
      type: string
      maxLength: 4096
    PageMaxItems:
      type: integer
      maximum: 100
    OperationSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/OperationSummary"
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
    Nameserver:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/HostName"
        GlueIps:
          $ref: "#/components/schemas/GlueIpList"
      description: Nameserver includes the following elements.
    OperationSummary:
      type: object
      required:
        - OperationId
        - Status
        - Type
        - SubmittedDate
      properties:
        OperationId:
          $ref: "#/components/schemas/OperationId"
        Status:
          $ref: "#/components/schemas/OperationStatus"
        Type:
          $ref: "#/components/schemas/OperationType"
        SubmittedDate:
          $ref: "#/components/schemas/Timestamp"
      description: OperationSummary includes the following elements.
    TagKey:
      type: string
    TagValue:
      type: string
    Tag:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/TagKey"
        Value:
          $ref: "#/components/schemas/TagValue"
      description: Each tag includes the following elements.
