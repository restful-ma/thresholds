openapi: 3.0.0
info:
  version: 2012-09-25
  x-release: v4
  title: Amazon Elastic Transcoder
  description: <fullname>AWS Elastic Transcoder Service</fullname> <p>The AWS Elastic
    Transcoder Service.</p>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: elastictranscoder
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/elastictranscoder-2012-09-25.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/elastictranscoder/
security:
  - hmac: []
paths:
  "/2012-09-25/jobs/{Id}":
    delete:
      operationId: CancelJob
      description: <p>The CancelJob operation cancels an unfinished job.</p> <note> <p>You
        can only cancel a job that has a status of <code>Submitted</code>. To
        prevent a pipeline from starting to process a job while you're getting
        the job identifier, use <a>UpdatePipelineStatus</a> to temporarily pause
        the pipeline.</p> </note>
      responses:
        "202":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CancelJobResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: IncompatibleVersionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleVersionException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: Id
          in: path
          required: true
          description: <p>The identifier of the job that you want to cancel.</p> <p>To get
            a list of the jobs (including their <code>jobId</code>) that have a
            status of <code>Submitted</code>, use the <a>ListJobsByStatus</a>
            API action.</p>
          schema:
            type: string
            pattern: ^\d{13}-\w{6}$
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ReadJob
      description: The ReadJob operation returns detailed information about a job.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadJobResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: IncompatibleVersionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleVersionException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The identifier of the job for which you want to get detailed
            information.
          schema:
            type: string
            pattern: ^\d{13}-\w{6}$
  /2012-09-25/jobs:
    post:
      operationId: CreateJob
      description: <p>When you create a job, Elastic Transcoder returns JSON data that
        includes the values that you specified plus information about the job
        that is created.</p> <p>If you have specified more than one output for
        your jobs (for example, one output for the Kindle Fire and another
        output for the Apple iPhone 4s), you currently must use the Elastic
        Transcoder API to list the jobs (as opposed to the AWS Console).</p>
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateJobResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: IncompatibleVersionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleVersionException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - PipelineId
              properties:
                PipelineId:
                  description: The <code>Id</code> of the pipeline that you want Elastic
                    Transcoder to use for transcoding. The pipeline determines
                    several settings, including the Amazon S3 bucket from which
                    Elastic Transcoder gets the files to transcode and the
                    bucket into which Elastic Transcoder puts the transcoded
                    files.
                  type: string
                  pattern: ^\d{13}-\w{6}$
                Input:
                  description: Information about the file that you're transcoding.
                  type: object
                  properties:
                    Key:
                      $ref: "#/components/schemas/LongKey"
                    FrameRate:
                      $ref: "#/components/schemas/FrameRate"
                    Resolution:
                      $ref: "#/components/schemas/Resolution"
                    AspectRatio:
                      $ref: "#/components/schemas/AspectRatio"
                    Interlaced:
                      $ref: "#/components/schemas/Interlaced"
                    Container:
                      $ref: "#/components/schemas/JobContainer"
                    Encryption:
                      $ref: "#/components/schemas/Encryption"
                    TimeSpan:
                      $ref: "#/components/schemas/TimeSpan"
                    InputCaptions:
                      $ref: "#/components/schemas/InputCaptions"
                    DetectedProperties:
                      $ref: "#/components/schemas/DetectedProperties"
                Inputs:
                  description: A section of the request body that provides information
                    about the files that are being transcoded.
                  type: array
                  items:
                    $ref: "#/components/schemas/JobInput"
                  maxItems: 200
                Output:
                  description: The <code>CreateJobOutput</code> structure.
                  type: object
                  properties:
                    Key:
                      $ref: "#/components/schemas/Key"
                    ThumbnailPattern:
                      $ref: "#/components/schemas/ThumbnailPattern"
                    ThumbnailEncryption:
                      $ref: "#/components/schemas/Encryption"
                    Rotate:
                      $ref: "#/components/schemas/Rotate"
                    PresetId:
                      $ref: "#/components/schemas/Id"
                    SegmentDuration:
                      $ref: "#/components/schemas/FloatString"
                    Watermarks:
                      $ref: "#/components/schemas/JobWatermarks"
                    AlbumArt:
                      $ref: "#/components/schemas/JobAlbumArt"
                    Composition:
                      $ref: "#/components/schemas/Composition"
                    Captions:
                      $ref: "#/components/schemas/Captions"
                    Encryption:
                      $ref: "#/components/schemas/Encryption"
                Outputs:
                  description: " A section of the request body that provides information
                    about the transcoded (target) files. We recommend that you
                    use the <code>Outputs</code> syntax instead of the
                    <code>Output</code> syntax. "
                  type: array
                  items:
                    $ref: "#/components/schemas/CreateJobOutput"
                  maxItems: 30
                OutputKeyPrefix:
                  description: The value, if any, that you want Elastic Transcoder to
                    prepend to the names of all files that this job creates,
                    including output files, thumbnails, and playlists.
                  type: string
                  minLength: 1
                  maxLength: 255
                Playlists:
                  description: <p>If you specify a preset in <code>PresetId</code> for
                    which the value of <code>Container</code> is fmp4
                    (Fragmented MP4) or ts (MPEG-TS), Playlists contains
                    information about the master playlists that you want Elastic
                    Transcoder to create.</p> <p>The maximum number of master
                    playlists in a job is 30.</p>
                  type: array
                  items:
                    $ref: "#/components/schemas/CreateJobPlaylist"
                  maxItems: 30
                UserMetadata:
                  description: User-defined metadata that you want to associate with an
                    Elastic Transcoder job. You specify metadata in
                    <code>key/value</code> pairs, and you can add up to 10
                    <code>key/value</code> pairs per job. Elastic Transcoder
                    does not guarantee that <code>key/value</code> pairs are
                    returned in the same order in which you specify them.
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/String"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /2012-09-25/pipelines:
    post:
      operationId: CreatePipeline
      description: The CreatePipeline operation creates a pipeline with settings that you
        specify.
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatePipelineResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: IncompatibleVersionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleVersionException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - InputBucket
                - Role
              properties:
                Name:
                  description: "<p>The name of the pipeline. We recommend that the name be
                    unique within the AWS account, but uniqueness is not
                    enforced.</p> <p>Constraints: Maximum 40 characters.</p>"
                  type: string
                  minLength: 1
                  maxLength: 40
                InputBucket:
                  description: The Amazon S3 bucket in which you saved the media files that
                    you want to transcode.
                  type: string
                  pattern: ^(\w|\.|-){1,255}$
                OutputBucket:
                  description: <p>The Amazon S3 bucket in which you want Elastic Transcoder
                    to save the transcoded files. (Use this, or use
                    ContentConfig:Bucket plus ThumbnailConfig:Bucket.)</p>
                    <p>Specify this value when all of the following are
                    true:</p> <ul> <li> <p>You want to save transcoded files,
                    thumbnails (if any), and playlists (if any) together in one
                    bucket.</p> </li> <li> <p>You do not want to specify the
                    users or groups who have access to the transcoded files,
                    thumbnails, and playlists.</p> </li> <li> <p>You do not want
                    to specify the permissions that Elastic Transcoder grants to
                    the files. </p> <important> <p>When Elastic Transcoder saves
                    files in <code>OutputBucket</code>, it grants full control
                    over the files only to the AWS account that owns the role
                    that is specified by <code>Role</code>.</p> </important>
                    </li> <li> <p>You want to associate the transcoded files and
                    thumbnails with the Amazon S3 Standard storage class.</p>
                    </li> </ul> <p>If you want to save transcoded files and
                    playlists in one bucket and thumbnails in another bucket,
                    specify which users can access the transcoded files or the
                    permissions the users have, or change the Amazon S3 storage
                    class, omit <code>OutputBucket</code> and specify values for
                    <code>ContentConfig</code> and <code>ThumbnailConfig</code>
                    instead.</p>
                  type: string
                  pattern: ^(\w|\.|-){1,255}$
                Role:
                  description: The IAM Amazon Resource Name (ARN) for the role that you
                    want Elastic Transcoder to use to create the pipeline.
                  type: string
                  pattern: ^arn:aws:iam::\w{12}:role/.+$
                AwsKmsKeyArn:
                  description: <p>The AWS Key Management Service (AWS KMS) key that you
                    want to use with this pipeline.</p> <p>If you use either
                    <code>s3</code> or <code>s3-aws-kms</code> as your
                    <code>Encryption:Mode</code>, you don't need to provide a
                    key with your job because a default key, known as an AWS-KMS
                    key, is created for you automatically. You need to provide
                    an AWS-KMS key only if you want to use a non-default AWS-KMS
                    key, or if you are using an <code>Encryption:Mode</code> of
                    <code>aes-cbc-pkcs7</code>, <code>aes-ctr</code>, or
                    <code>aes-gcm</code>.</p>
                  type: string
                  minLength: 0
                  maxLength: 255
                Notifications:
                  description: <p>The Amazon Simple Notification Service (Amazon SNS) topic
                    or topics to notify in order to report job status.</p>
                    <important> <p>To receive notifications, you must also
                    subscribe to the new topic in the Amazon SNS console.</p>
                    </important>
                  type: object
                  properties:
                    Progressing:
                      $ref: "#/components/schemas/SnsTopic"
                    Completed:
                      $ref: "#/components/schemas/SnsTopic"
                    Warning:
                      $ref: "#/components/schemas/SnsTopic"
                    Error:
                      $ref: "#/components/schemas/SnsTopic"
                ContentConfig:
                  description: The <code>PipelineOutputConfig</code> structure.
                  type: object
                  properties:
                    Bucket:
                      $ref: "#/components/schemas/BucketName"
                    StorageClass:
                      $ref: "#/components/schemas/StorageClass"
                    Permissions:
                      $ref: "#/components/schemas/Permissions"
                ThumbnailConfig:
                  description: The <code>PipelineOutputConfig</code> structure.
                  type: object
                  properties:
                    Bucket:
                      $ref: "#/components/schemas/BucketName"
                    StorageClass:
                      $ref: "#/components/schemas/StorageClass"
                    Permissions:
                      $ref: "#/components/schemas/Permissions"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListPipelines
      description: The ListPipelines operation gets a list of the pipelines associated with
        the current AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPipelinesResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: IncompatibleVersionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleVersionException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: Ascending
          in: query
          required: false
          description: To list pipelines in chronological order by the date and time that
            they were created, enter <code>true</code>. To list pipelines in
            reverse chronological order, enter <code>false</code>.
          schema:
            type: string
            pattern: (^true$)|(^false$)
        - name: PageToken
          in: query
          required: false
          description: "When Elastic Transcoder returns more than one page of results, use
            <code>pageToken</code> in subsequent <code>GET</code> requests to
            get each successive page of results. "
          schema:
            type: string
            pattern: ^\d{13}-\w{6}$
  /2012-09-25/presets:
    post:
      operationId: CreatePreset
      description: "<p>The CreatePreset operation creates a preset with settings that you
        specify.</p> <important> <p>Elastic Transcoder checks the CreatePreset
        settings to ensure that they meet Elastic Transcoder requirements and to
        determine whether they comply with H.264 standards. If your settings are
        not valid for Elastic Transcoder, Elastic Transcoder returns an HTTP 400
        response (<code>ValidationException</code>) and does not create the
        preset. If the settings are valid for Elastic Transcoder but aren't
        strictly compliant with the H.264 standard, Elastic Transcoder creates
        the preset and returns a warning message in the response. This helps you
        determine whether your settings comply with the H.264 standard while
        giving you greater flexibility with respect to the video that Elastic
        Transcoder produces.</p> </important> <p>Elastic Transcoder uses the
        H.264 video-compression format. For more information, see the
        International Telecommunication Union publication <i>Recommendation
        ITU-T H.264: Advanced video coding for generic audiovisual
        services</i>.</p>"
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatePresetResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: IncompatibleVersionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleVersionException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - Container
              properties:
                Name:
                  description: The name of the preset. We recommend that the name be unique
                    within the AWS account, but uniqueness is not enforced.
                  type: string
                  minLength: 1
                  maxLength: 40
                Description:
                  description: A description of the preset.
                  type: string
                  minLength: 0
                  maxLength: 255
                Container:
                  description: The container type for the output file. Valid values include
                    <code>flac</code>, <code>flv</code>, <code>fmp4</code>,
                    <code>gif</code>, <code>mp3</code>, <code>mp4</code>,
                    <code>mpg</code>, <code>mxf</code>, <code>oga</code>,
                    <code>ogg</code>, <code>ts</code>, and <code>webm</code>.
                  type: string
                  pattern: (^mp4$)|(^ts$)|(^webm$)|(^mp3$)|(^flac$)|(^oga$)|(^ogg$)|(^fmp4$)|(^mpg$)|(^flv$)|(^gif$)|(^mxf$)|(^wav$)|(^mp2$)
                Video:
                  description: The <code>VideoParameters</code> structure.
                  type: object
                  properties:
                    Codec:
                      $ref: "#/components/schemas/VideoCodec"
                    CodecOptions:
                      $ref: "#/components/schemas/CodecOptions"
                    KeyframesMaxDist:
                      $ref: "#/components/schemas/KeyframesMaxDist"
                    FixedGOP:
                      $ref: "#/components/schemas/FixedGOP"
                    BitRate:
                      $ref: "#/components/schemas/VideoBitRate"
                    FrameRate:
                      $ref: "#/components/schemas/FrameRate"
                    MaxFrameRate:
                      $ref: "#/components/schemas/MaxFrameRate"
                    Resolution:
                      $ref: "#/components/schemas/Resolution"
                    AspectRatio:
                      $ref: "#/components/schemas/AspectRatio"
                    MaxWidth:
                      $ref: "#/components/schemas/DigitsOrAuto"
                    MaxHeight:
                      $ref: "#/components/schemas/DigitsOrAuto"
                    DisplayAspectRatio:
                      $ref: "#/components/schemas/AspectRatio"
                    SizingPolicy:
                      $ref: "#/components/schemas/SizingPolicy"
                    PaddingPolicy:
                      $ref: "#/components/schemas/PaddingPolicy"
                    Watermarks:
                      $ref: "#/components/schemas/PresetWatermarks"
                Audio:
                  description: Parameters required for transcoding audio.
                  type: object
                  properties:
                    Codec:
                      $ref: "#/components/schemas/AudioCodec"
                    SampleRate:
                      $ref: "#/components/schemas/AudioSampleRate"
                    BitRate:
                      $ref: "#/components/schemas/AudioBitRate"
                    Channels:
                      $ref: "#/components/schemas/AudioChannels"
                    AudioPackingMode:
                      $ref: "#/components/schemas/AudioPackingMode"
                    CodecOptions:
                      $ref: "#/components/schemas/AudioCodecOptions"
                Thumbnails:
                  description: Thumbnails for videos.
                  type: object
                  properties:
                    Format:
                      $ref: "#/components/schemas/JpgOrPng"
                    Interval:
                      $ref: "#/components/schemas/Digits"
                    Resolution:
                      $ref: "#/components/schemas/ThumbnailResolution"
                    AspectRatio:
                      $ref: "#/components/schemas/AspectRatio"
                    MaxWidth:
                      $ref: "#/components/schemas/DigitsOrAuto"
                    MaxHeight:
                      $ref: "#/components/schemas/DigitsOrAuto"
                    SizingPolicy:
                      $ref: "#/components/schemas/SizingPolicy"
                    PaddingPolicy:
                      $ref: "#/components/schemas/PaddingPolicy"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListPresets
      description: The ListPresets operation gets a list of the default presets included
        with Elastic Transcoder and the presets that you've added in an AWS
        region.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPresetsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: IncompatibleVersionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleVersionException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: Ascending
          in: query
          required: false
          description: To list presets in chronological order by the date and time that
            they were created, enter <code>true</code>. To list presets in
            reverse chronological order, enter <code>false</code>.
          schema:
            type: string
            pattern: (^true$)|(^false$)
        - name: PageToken
          in: query
          required: false
          description: "When Elastic Transcoder returns more than one page of results, use
            <code>pageToken</code> in subsequent <code>GET</code> requests to
            get each successive page of results. "
          schema:
            type: string
            pattern: ^\d{13}-\w{6}$
  "/2012-09-25/pipelines/{Id}":
    delete:
      operationId: DeletePipeline
      description: <p>The DeletePipeline operation removes a pipeline.</p> <p> You can only
        delete a pipeline that has never been used or that is not currently in
        use (doesn't contain any active jobs). If the pipeline is currently in
        use, <code>DeletePipeline</code> returns an error. </p>
      responses:
        "202":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeletePipelineResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: IncompatibleVersionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleVersionException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The identifier of the pipeline that you want to delete.
          schema:
            type: string
            pattern: ^\d{13}-\w{6}$
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ReadPipeline
      description: The ReadPipeline operation gets detailed information about a pipeline.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadPipelineResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: IncompatibleVersionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleVersionException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The identifier of the pipeline to read.
          schema:
            type: string
            pattern: ^\d{13}-\w{6}$
    put:
      operationId: UpdatePipeline
      description: <p> Use the <code>UpdatePipeline</code> operation to update settings for
        a pipeline.</p> <important> <p>When you change pipeline settings, your
        changes take effect immediately. Jobs that you have already submitted
        and that Elastic Transcoder has not started to process are affected in
        addition to jobs that you submit after you change settings. </p>
        </important>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdatePipelineResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: IncompatibleVersionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleVersionException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the pipeline that you want to update.
          schema:
            type: string
            pattern: ^\d{13}-\w{6}$
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  description: "<p>The name of the pipeline. We recommend that the name be
                    unique within the AWS account, but uniqueness is not
                    enforced.</p> <p>Constraints: Maximum 40 characters</p>"
                  type: string
                  minLength: 1
                  maxLength: 40
                InputBucket:
                  description: The Amazon S3 bucket in which you saved the media files that
                    you want to transcode and the graphics that you want to use
                    as watermarks.
                  type: string
                  pattern: ^(\w|\.|-){1,255}$
                Role:
                  description: The IAM Amazon Resource Name (ARN) for the role that you
                    want Elastic Transcoder to use to transcode jobs for this
                    pipeline.
                  type: string
                  pattern: ^arn:aws:iam::\w{12}:role/.+$
                AwsKmsKeyArn:
                  description: <p>The AWS Key Management Service (AWS KMS) key that you
                    want to use with this pipeline.</p> <p>If you use either
                    <code>s3</code> or <code>s3-aws-kms</code> as your
                    <code>Encryption:Mode</code>, you don't need to provide a
                    key with your job because a default key, known as an AWS-KMS
                    key, is created for you automatically. You need to provide
                    an AWS-KMS key only if you want to use a non-default AWS-KMS
                    key, or if you are using an <code>Encryption:Mode</code> of
                    <code>aes-cbc-pkcs7</code>, <code>aes-ctr</code>, or
                    <code>aes-gcm</code>.</p>
                  type: string
                  minLength: 0
                  maxLength: 255
                Notifications:
                  description: <p>The Amazon Simple Notification Service (Amazon SNS) topic
                    or topics to notify in order to report job status.</p>
                    <important> <p>To receive notifications, you must also
                    subscribe to the new topic in the Amazon SNS console.</p>
                    </important>
                  type: object
                  properties:
                    Progressing:
                      $ref: "#/components/schemas/SnsTopic"
                    Completed:
                      $ref: "#/components/schemas/SnsTopic"
                    Warning:
                      $ref: "#/components/schemas/SnsTopic"
                    Error:
                      $ref: "#/components/schemas/SnsTopic"
                ContentConfig:
                  description: The <code>PipelineOutputConfig</code> structure.
                  type: object
                  properties:
                    Bucket:
                      $ref: "#/components/schemas/BucketName"
                    StorageClass:
                      $ref: "#/components/schemas/StorageClass"
                    Permissions:
                      $ref: "#/components/schemas/Permissions"
                ThumbnailConfig:
                  description: The <code>PipelineOutputConfig</code> structure.
                  type: object
                  properties:
                    Bucket:
                      $ref: "#/components/schemas/BucketName"
                    StorageClass:
                      $ref: "#/components/schemas/StorageClass"
                    Permissions:
                      $ref: "#/components/schemas/Permissions"
        required: true
  "/2012-09-25/presets/{Id}":
    delete:
      operationId: DeletePreset
      description: <p>The DeletePreset operation removes a preset that you've added in an
        AWS region.</p> <note> <p>You can't delete the default presets that are
        included with Elastic Transcoder.</p> </note>
      responses:
        "202":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeletePresetResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: IncompatibleVersionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleVersionException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The identifier of the preset for which you want to get detailed
            information.
          schema:
            type: string
            pattern: ^\d{13}-\w{6}$
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ReadPreset
      description: The ReadPreset operation gets detailed information about a preset.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadPresetResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: IncompatibleVersionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleVersionException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The identifier of the preset for which you want to get detailed
            information.
          schema:
            type: string
            pattern: ^\d{13}-\w{6}$
  "/2012-09-25/jobsByPipeline/{PipelineId}":
    get:
      operationId: ListJobsByPipeline
      description: <p>The ListJobsByPipeline operation gets a list of the jobs currently in
        a pipeline.</p> <p>Elastic Transcoder returns all of the jobs currently
        in the specified pipeline. The response body contains one element for
        each job that satisfies the search criteria.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListJobsByPipelineResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: IncompatibleVersionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleVersionException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: PipelineId
          in: path
          required: true
          description: The ID of the pipeline for which you want to get job information.
          schema:
            type: string
            pattern: ^\d{13}-\w{6}$
        - name: Ascending
          in: query
          required: false
          description: " To list jobs in chronological order by the date and time that they
            were submitted, enter <code>true</code>. To list jobs in reverse
            chronological order, enter <code>false</code>. "
          schema:
            type: string
            pattern: (^true$)|(^false$)
        - name: PageToken
          in: query
          required: false
          description: " When Elastic Transcoder returns more than one page of results, use
            <code>pageToken</code> in subsequent <code>GET</code> requests to
            get each successive page of results. "
          schema:
            type: string
            pattern: ^\d{13}-\w{6}$
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/2012-09-25/jobsByStatus/{Status}":
    get:
      operationId: ListJobsByStatus
      description: The ListJobsByStatus operation gets a list of jobs that have a specified
        status. The response body contains one element for each job that
        satisfies the search criteria.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListJobsByStatusResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: IncompatibleVersionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleVersionException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: Status
          in: path
          required: true
          description: "To get information about all of the jobs associated with the
            current AWS account that have a given status, specify the following
            status: <code>Submitted</code>, <code>Progressing</code>,
            <code>Complete</code>, <code>Canceled</code>, or
            <code>Error</code>."
          schema:
            type: string
            pattern: (^Submitted$)|(^Progressing$)|(^Complete$)|(^Canceled$)|(^Error$)
        - name: Ascending
          in: query
          required: false
          description: " To list jobs in chronological order by the date and time that they
            were submitted, enter <code>true</code>. To list jobs in reverse
            chronological order, enter <code>false</code>. "
          schema:
            type: string
            pattern: (^true$)|(^false$)
        - name: PageToken
          in: query
          required: false
          description: " When Elastic Transcoder returns more than one page of results, use
            <code>pageToken</code> in subsequent <code>GET</code> requests to
            get each successive page of results. "
          schema:
            type: string
            pattern: ^\d{13}-\w{6}$
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /2012-09-25/roleTests:
    post:
      deprecated: true
      operationId: TestRole
      description: <p>The TestRole operation tests the IAM role used to create the
        pipeline.</p> <p>The <code>TestRole</code> action lets you determine
        whether the IAM role you are using has sufficient permissions to let
        Elastic Transcoder perform tasks associated with the transcoding
        process. The action attempts to assume the specified IAM role, checks
        read access to the input and output buckets, and tries to send a test
        notification to Amazon SNS topics that you specify.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestRoleResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: IncompatibleVersionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleVersionException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - Role
                - InputBucket
                - OutputBucket
                - Topics
              properties:
                Role:
                  description: The IAM Amazon Resource Name (ARN) for the role that you
                    want Elastic Transcoder to test.
                  type: string
                  pattern: ^arn:aws:iam::\w{12}:role/.+$
                InputBucket:
                  description: The Amazon S3 bucket that contains media files to be
                    transcoded. The action attempts to read from this bucket.
                  type: string
                  pattern: ^(\w|\.|-){1,255}$
                OutputBucket:
                  description: The Amazon S3 bucket that Elastic Transcoder writes
                    transcoded media files to. The action attempts to read from
                    this bucket.
                  type: string
                  pattern: ^(\w|\.|-){1,255}$
                Topics:
                  description: The ARNs of one or more Amazon Simple Notification Service
                    (Amazon SNS) topics that you want the action to send a test
                    notification to.
                  type: array
                  items:
                    $ref: "#/components/schemas/SnsTopic"
                  maxItems: 30
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/2012-09-25/pipelines/{Id}/notifications":
    post:
      operationId: UpdatePipelineNotifications
      description: <p>With the UpdatePipelineNotifications operation, you can update Amazon
        Simple Notification Service (Amazon SNS) notifications for a
        pipeline.</p> <p>When you update notifications for a pipeline, Elastic
        Transcoder returns the values that you specified in the request.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdatePipelineNotificationsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: IncompatibleVersionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleVersionException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The identifier of the pipeline for which you want to change
            notification settings.
          schema:
            type: string
            pattern: ^\d{13}-\w{6}$
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - Notifications
              properties:
                Notifications:
                  description: <p>The Amazon Simple Notification Service (Amazon SNS) topic
                    or topics to notify in order to report job status.</p>
                    <important> <p>To receive notifications, you must also
                    subscribe to the new topic in the Amazon SNS console.</p>
                    </important>
                  type: object
                  properties:
                    Progressing:
                      $ref: "#/components/schemas/SnsTopic"
                    Completed:
                      $ref: "#/components/schemas/SnsTopic"
                    Warning:
                      $ref: "#/components/schemas/SnsTopic"
                    Error:
                      $ref: "#/components/schemas/SnsTopic"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/2012-09-25/pipelines/{Id}/status":
    post:
      operationId: UpdatePipelineStatus
      description: <p>The UpdatePipelineStatus operation pauses or reactivates a pipeline,
        so that the pipeline stops or restarts the processing of jobs.</p>
        <p>Changing the pipeline status is useful if you want to cancel one or
        more jobs. You can't cancel jobs after Elastic Transcoder has started
        processing them; if you pause the pipeline to which you submitted the
        jobs, you have more time to get the job IDs for the jobs that you want
        to cancel, and to send a <a>CancelJob</a> request. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdatePipelineStatusResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: IncompatibleVersionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleVersionException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The identifier of the pipeline to update.
          schema:
            type: string
            pattern: ^\d{13}-\w{6}$
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - Status
              properties:
                Status:
                  description: "<p>The desired status of the pipeline:</p> <ul> <li> <p>
                    <code>Active</code>: The pipeline is processing jobs.</p>
                    </li> <li> <p> <code>Paused</code>: The pipeline is not
                    currently processing jobs.</p> </li> </ul>"
                  type: string
                  pattern: (^Active$)|(^Paused$)
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://elastictranscoder.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Elastic Transcoder multi-region endpoint
  - url: https://elastictranscoder.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Elastic Transcoder multi-region endpoint
  - url: http://elastictranscoder.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Elastic Transcoder endpoint for China (Beijing) and China
      (Ningxia)
  - url: https://elastictranscoder.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Elastic Transcoder endpoint for China (Beijing) and China
      (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CancelJobResponse:
      type: object
      properties: {}
      description: The response body contains a JSON object. If the job is successfully
        canceled, the value of <code>Success</code> is <code>true</code>.
    ValidationException: {}
    IncompatibleVersionException: {}
    ResourceNotFoundException: {}
    ResourceInUseException: {}
    AccessDeniedException: {}
    InternalServiceException: {}
    CreateJobResponse:
      type: object
      properties:
        Job:
          $ref: "#/components/schemas/Job"
      description: The CreateJobResponse structure.
    LongKey:
      type: string
      minLength: 1
      maxLength: 1024
    FrameRate:
      type: string
      pattern: (^auto$)|(^10$)|(^15$)|(^23.97$)|(^24$)|(^25$)|(^29.97$)|(^30$)|(^50$)|(^60$)
    Resolution:
      type: string
      pattern: (^auto$)|(^\d{1,5}x\d{1,5}$)
    AspectRatio:
      type: string
      pattern: (^auto$)|(^1:1$)|(^4:3$)|(^3:2$)|(^16:9$)
    Interlaced:
      type: string
      pattern: (^auto$)|(^true$)|(^false$)
    JobContainer:
      type: string
      pattern: (^auto$)|(^3gp$)|(^asf$)|(^avi$)|(^divx$)|(^flv$)|(^mkv$)|(^mov$)|(^mp4$)|(^mpeg$)|(^mpeg-ps$)|(^mpeg-ts$)|(^mxf$)|(^ogg$)|(^ts$)|(^vob$)|(^wav$)|(^webm$)|(^mp3$)|(^m4a$)|(^aac$)
    Encryption:
      type: object
      properties:
        Mode:
          $ref: "#/components/schemas/EncryptionMode"
        Key:
          $ref: "#/components/schemas/Base64EncodedString"
        KeyMd5:
          $ref: "#/components/schemas/Base64EncodedString"
        InitializationVector:
          $ref: "#/components/schemas/ZeroTo255String"
      description: The encryption settings, if any, that are used for decrypting your input
        files or encrypting your output files. If your input file is encrypted,
        you must specify the mode that Elastic Transcoder uses to decrypt your
        file, otherwise you must specify the mode you want Elastic Transcoder to
        use to encrypt your output files.
    TimeSpan:
      type: object
      properties:
        StartTime:
          $ref: "#/components/schemas/Time"
        Duration:
          $ref: "#/components/schemas/Time"
      description: Settings that determine when a clip begins and how long it lasts.
    InputCaptions:
      type: object
      properties:
        MergePolicy:
          $ref: "#/components/schemas/CaptionMergePolicy"
        CaptionSources:
          $ref: "#/components/schemas/CaptionSources"
      description: The captions to be created, if any.
    DetectedProperties:
      type: object
      properties:
        Width:
          $ref: "#/components/schemas/NullableInteger"
        Height:
          $ref: "#/components/schemas/NullableInteger"
        FrameRate:
          $ref: "#/components/schemas/FloatString"
        FileSize:
          $ref: "#/components/schemas/NullableLong"
        DurationMillis:
          $ref: "#/components/schemas/NullableLong"
      description: The detected properties of the input file. Elastic Transcoder identifies
        these values from the input file.
    JobInput:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/LongKey"
        FrameRate:
          $ref: "#/components/schemas/FrameRate"
        Resolution:
          $ref: "#/components/schemas/Resolution"
        AspectRatio:
          $ref: "#/components/schemas/AspectRatio"
        Interlaced:
          $ref: "#/components/schemas/Interlaced"
        Container:
          $ref: "#/components/schemas/JobContainer"
        Encryption:
          $ref: "#/components/schemas/Encryption"
        TimeSpan:
          $ref: "#/components/schemas/TimeSpan"
        InputCaptions:
          $ref: "#/components/schemas/InputCaptions"
        DetectedProperties:
          $ref: "#/components/schemas/DetectedProperties"
      description: Information about the file that you're transcoding.
    Key:
      type: string
      minLength: 1
      maxLength: 255
    ThumbnailPattern:
      type: string
      pattern: (^$)|(^.*\{count\}.*$)
    Rotate:
      type: string
      pattern: (^auto$)|(^0$)|(^90$)|(^180$)|(^270$)
    Id:
      type: string
      pattern: ^\d{13}-\w{6}$
    FloatString:
      type: string
      pattern: ^\d{1,5}(\.\d{0,5})?$
    JobWatermarks:
      type: array
      items:
        $ref: "#/components/schemas/JobWatermark"
    JobAlbumArt:
      type: object
      properties:
        MergePolicy:
          $ref: "#/components/schemas/MergePolicy"
        Artwork:
          $ref: "#/components/schemas/Artworks"
      description: The .jpg or .png file associated with an audio file.
    Composition:
      type: array
      items:
        $ref: "#/components/schemas/Clip"
    Captions:
      type: object
      properties:
        MergePolicy:
          $ref: "#/components/schemas/CaptionMergePolicy"
        CaptionSources:
          $ref: "#/components/schemas/CaptionSources"
        CaptionFormats:
          $ref: "#/components/schemas/CaptionFormats"
      description: The captions to be created, if any.
    CreateJobOutput:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/Key"
        ThumbnailPattern:
          $ref: "#/components/schemas/ThumbnailPattern"
        ThumbnailEncryption:
          $ref: "#/components/schemas/Encryption"
        Rotate:
          $ref: "#/components/schemas/Rotate"
        PresetId:
          $ref: "#/components/schemas/Id"
        SegmentDuration:
          $ref: "#/components/schemas/FloatString"
        Watermarks:
          $ref: "#/components/schemas/JobWatermarks"
        AlbumArt:
          $ref: "#/components/schemas/JobAlbumArt"
        Composition:
          $ref: "#/components/schemas/Composition"
        Captions:
          $ref: "#/components/schemas/Captions"
        Encryption:
          $ref: "#/components/schemas/Encryption"
      description: The <code>CreateJobOutput</code> structure.
    CreateJobPlaylist:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/Filename"
        Format:
          $ref: "#/components/schemas/PlaylistFormat"
        OutputKeys:
          $ref: "#/components/schemas/OutputKeys"
        HlsContentProtection:
          $ref: "#/components/schemas/HlsContentProtection"
        PlayReadyDrm:
          $ref: "#/components/schemas/PlayReadyDrm"
      description: Information about the master playlist.
    String:
      type: string
    LimitExceededException: {}
    CreatePipelineResponse:
      type: object
      properties:
        Pipeline:
          $ref: "#/components/schemas/Pipeline"
        Warnings:
          $ref: "#/components/schemas/Warnings"
      description: When you create a pipeline, Elastic Transcoder returns the values that
        you specified in the request.
    SnsTopic:
      type: string
      pattern: (^$)|(^arn:aws:sns:.*:\w{12}:.+$)
    BucketName:
      type: string
      pattern: ^(\w|\.|-){1,255}$
    StorageClass:
      type: string
      pattern: (^ReducedRedundancy$)|(^Standard$)
    Permissions:
      type: array
      items:
        $ref: "#/components/schemas/Permission"
      maxItems: 30
    CreatePresetResponse:
      type: object
      properties:
        Preset:
          $ref: "#/components/schemas/Preset"
        Warning:
          $ref: "#/components/schemas/String"
      description: The <code>CreatePresetResponse</code> structure.
    VideoCodec:
      type: string
      pattern: (^H\.264$)|(^vp8$)|(^vp9$)|(^mpeg2$)|(^gif$)
    CodecOptions:
      type: object
      maxProperties: 30
      additionalProperties:
        $ref: "#/components/schemas/CodecOption"
    KeyframesMaxDist:
      type: string
      pattern: ^\d{1,6}$
    FixedGOP:
      type: string
      pattern: (^true$)|(^false$)
    VideoBitRate:
      type: string
      pattern: (^\d{2,5}$)|(^auto$)
    MaxFrameRate:
      type: string
      pattern: (^10$)|(^15$)|(^23.97$)|(^24$)|(^25$)|(^29.97$)|(^30$)|(^50$)|(^60$)
    DigitsOrAuto:
      type: string
      pattern: (^auto$)|(^\d{2,4}$)
    SizingPolicy:
      type: string
      pattern: (^Fit$)|(^Fill$)|(^Stretch$)|(^Keep$)|(^ShrinkToFit$)|(^ShrinkToFill$)
    PaddingPolicy:
      type: string
      pattern: (^Pad$)|(^NoPad$)
    PresetWatermarks:
      type: array
      items:
        $ref: "#/components/schemas/PresetWatermark"
    AudioCodec:
      type: string
      pattern: (^AAC$)|(^vorbis$)|(^mp3$)|(^mp2$)|(^pcm$)|(^flac$)
    AudioSampleRate:
      type: string
      pattern: (^auto$)|(^22050$)|(^32000$)|(^44100$)|(^48000$)|(^96000$)|(^192000$)
    AudioBitRate:
      type: string
      pattern: ^\d{1,3}$
    AudioChannels:
      type: string
      pattern: (^auto$)|(^0$)|(^1$)|(^2$)
    AudioPackingMode:
      type: string
      pattern: (^SingleTrack$)|(^OneChannelPerTrack$)|(^OneChannelPerTrackWithMosTo8Tracks$)
    AudioCodecOptions:
      type: object
      properties:
        Profile:
          $ref: "#/components/schemas/AudioCodecProfile"
        BitDepth:
          $ref: "#/components/schemas/AudioBitDepth"
        BitOrder:
          $ref: "#/components/schemas/AudioBitOrder"
        Signed:
          $ref: "#/components/schemas/AudioSigned"
      description: Options associated with your audio codec.
    JpgOrPng:
      type: string
      pattern: (^jpg$)|(^png$)
    Digits:
      type: string
      pattern: ^\d{1,5}$
    ThumbnailResolution:
      type: string
      pattern: ^\d{1,5}x\d{1,5}$
    DeletePipelineResponse:
      type: object
      properties: {}
      description: The <code>DeletePipelineResponse</code> structure.
    DeletePresetResponse:
      type: object
      properties: {}
      description: The <code>DeletePresetResponse</code> structure.
    ListJobsByPipelineResponse:
      type: object
      properties:
        Jobs:
          $ref: "#/components/schemas/Jobs"
        NextPageToken:
          $ref: "#/components/schemas/Id"
      description: The <code>ListJobsByPipelineResponse</code> structure.
    ListJobsByStatusResponse:
      type: object
      properties:
        Jobs:
          $ref: "#/components/schemas/Jobs"
        NextPageToken:
          $ref: "#/components/schemas/Id"
      description: " The <code>ListJobsByStatusResponse</code> structure. "
    ListPipelinesResponse:
      type: object
      properties:
        Pipelines:
          $ref: "#/components/schemas/Pipelines"
        NextPageToken:
          $ref: "#/components/schemas/Id"
      description: A list of the pipelines associated with the current AWS account.
    ListPresetsResponse:
      type: object
      properties:
        Presets:
          $ref: "#/components/schemas/Presets"
        NextPageToken:
          $ref: "#/components/schemas/Id"
      description: The <code>ListPresetsResponse</code> structure.
    ReadJobResponse:
      type: object
      properties:
        Job:
          $ref: "#/components/schemas/Job"
      description: The <code>ReadJobResponse</code> structure.
    ReadPipelineResponse:
      type: object
      properties:
        Pipeline:
          $ref: "#/components/schemas/Pipeline"
        Warnings:
          $ref: "#/components/schemas/Warnings"
      description: The <code>ReadPipelineResponse</code> structure.
    ReadPresetResponse:
      type: object
      properties:
        Preset:
          $ref: "#/components/schemas/Preset"
      description: The <code>ReadPresetResponse</code> structure.
    TestRoleResponse:
      type: object
      properties:
        Success:
          $ref: "#/components/schemas/Success"
        Messages:
          $ref: "#/components/schemas/ExceptionMessages"
      description: The <code>TestRoleResponse</code> structure.
    UpdatePipelineResponse:
      type: object
      properties:
        Pipeline:
          $ref: "#/components/schemas/Pipeline"
        Warnings:
          $ref: "#/components/schemas/Warnings"
      description: When you update a pipeline, Elastic Transcoder returns the values that
        you specified in the request.
    UpdatePipelineNotificationsResponse:
      type: object
      properties:
        Pipeline:
          $ref: "#/components/schemas/Pipeline"
      description: The <code>UpdatePipelineNotificationsResponse</code> structure.
    UpdatePipelineStatusResponse:
      type: object
      properties:
        Pipeline:
          $ref: "#/components/schemas/Pipeline"
      description: When you update status for a pipeline, Elastic Transcoder returns the
        values that you specified in the request.
    AccessControl:
      type: string
      pattern: (^FullControl$)|(^Read$)|(^ReadAcp$)|(^WriteAcp$)
    AccessControls:
      type: array
      items:
        $ref: "#/components/schemas/AccessControl"
      maxItems: 30
    WatermarkKey:
      type: string
      pattern: (^.{1,1020}.jpg$)|(^.{1,1019}.jpeg$)|(^.{1,1020}.png$)
      minLength: 1
      maxLength: 1024
    Artwork:
      type: object
      properties:
        InputKey:
          $ref: "#/components/schemas/WatermarkKey"
        MaxWidth:
          $ref: "#/components/schemas/DigitsOrAuto"
        MaxHeight:
          $ref: "#/components/schemas/DigitsOrAuto"
        SizingPolicy:
          $ref: "#/components/schemas/SizingPolicy"
        PaddingPolicy:
          $ref: "#/components/schemas/PaddingPolicy"
        AlbumArtFormat:
          $ref: "#/components/schemas/JpgOrPng"
        Encryption:
          $ref: "#/components/schemas/Encryption"
      description: <p>The file to be used as album art. There can be multiple artworks
        associated with an audio file, to a maximum of 20.</p> <p>To remove
        artwork or leave the artwork empty, you can either set
        <code>Artwork</code> to null, or set the <code>Merge Policy</code> to
        "Replace" and use an empty <code>Artwork</code> array.</p> <p>To pass
        through existing artwork unchanged, set the <code>Merge Policy</code> to
        "Prepend", "Append", or "Fallback", and use an empty
        <code>Artwork</code> array.</p>
    Artworks:
      type: array
      items:
        $ref: "#/components/schemas/Artwork"
    Ascending:
      type: string
      pattern: (^true$)|(^false$)
    AudioBitDepth:
      type: string
      pattern: (^8$)|(^16$)|(^24$)|(^32$)
    AudioBitOrder:
      type: string
      pattern: (^LittleEndian$)
    AudioCodecProfile:
      type: string
      pattern: (^auto$)|(^AAC-LC$)|(^HE-AAC$)|(^HE-AACv2$)
    AudioSigned:
      type: string
      pattern: (^Unsigned$)|(^Signed$)
    AudioParameters:
      type: object
      properties:
        Codec:
          $ref: "#/components/schemas/AudioCodec"
        SampleRate:
          $ref: "#/components/schemas/AudioSampleRate"
        BitRate:
          $ref: "#/components/schemas/AudioBitRate"
        Channels:
          $ref: "#/components/schemas/AudioChannels"
        AudioPackingMode:
          $ref: "#/components/schemas/AudioPackingMode"
        CodecOptions:
          $ref: "#/components/schemas/AudioCodecOptions"
      description: Parameters required for transcoding audio.
    Base64EncodedString:
      type: string
      pattern: ^$|(^(?:[A-Za-z0-9\+/]{4})*(?:[A-Za-z0-9\+/]{2}==|[A-Za-z0-9\+/]{3}=)?$)
    CancelJobRequest:
      type: object
      properties: {}
      description: The <code>CancelJobRequest</code> structure.
    CaptionFormatFormat:
      type: string
      pattern: (^mov-text$)|(^srt$)|(^scc$)|(^webvtt$)|(^dfxp$)|(^cea-708$)
    CaptionFormatPattern:
      type: string
      pattern: (^$)|(^.*\{language\}.*$)
    CaptionFormat:
      type: object
      properties:
        Format:
          $ref: "#/components/schemas/CaptionFormatFormat"
        Pattern:
          $ref: "#/components/schemas/CaptionFormatPattern"
        Encryption:
          $ref: "#/components/schemas/Encryption"
      description: The file format of the output captions. If you leave this value blank,
        Elastic Transcoder returns an error.
    CaptionFormats:
      type: array
      items:
        $ref: "#/components/schemas/CaptionFormat"
      maxItems: 4
    CaptionMergePolicy:
      type: string
      pattern: (^MergeOverride$)|(^MergeRetain$)|(^Override$)
    TimeOffset:
      type: string
      pattern: (^[+-]?\d{1,5}(\.\d{0,3})?$)|(^[+-]?([0-1]?[0-9]:|2[0-3]:)?([0-5]?[0-9]:)?[0-5]?[0-9](\.\d{0,3})?$)
    Name:
      type: string
      minLength: 1
      maxLength: 40
    CaptionSource:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/LongKey"
        Language:
          $ref: "#/components/schemas/Key"
        TimeOffset:
          $ref: "#/components/schemas/TimeOffset"
        Label:
          $ref: "#/components/schemas/Name"
        Encryption:
          $ref: "#/components/schemas/Encryption"
      description: A source file for the input sidecar captions used during the transcoding
        process.
    CaptionSources:
      type: array
      items:
        $ref: "#/components/schemas/CaptionSource"
      maxItems: 20
    Clip:
      type: object
      properties:
        TimeSpan:
          $ref: "#/components/schemas/TimeSpan"
      description: Settings for one clip in a composition. All jobs in a playlist must have
        the same clip settings.
    CodecOption:
      type: string
      minLength: 1
      maxLength: 255
    CreateJobOutputs:
      type: array
      items:
        $ref: "#/components/schemas/CreateJobOutput"
      maxItems: 30
    Filename:
      type: string
      minLength: 1
      maxLength: 255
    PlaylistFormat:
      type: string
      pattern: (^HLSv3$)|(^HLSv4$)|(^Smooth$)|(^MPEG-DASH$)
    OutputKeys:
      type: array
      items:
        $ref: "#/components/schemas/Key"
      maxItems: 30
    HlsContentProtection:
      type: object
      properties:
        Method:
          $ref: "#/components/schemas/HlsContentProtectionMethod"
        Key:
          $ref: "#/components/schemas/Base64EncodedString"
        KeyMd5:
          $ref: "#/components/schemas/Base64EncodedString"
        InitializationVector:
          $ref: "#/components/schemas/ZeroTo255String"
        LicenseAcquisitionUrl:
          $ref: "#/components/schemas/ZeroTo512String"
        KeyStoragePolicy:
          $ref: "#/components/schemas/KeyStoragePolicy"
      description: The HLS content protection settings, if any, that you want Elastic
        Transcoder to apply to your output files.
    PlayReadyDrm:
      type: object
      properties:
        Format:
          $ref: "#/components/schemas/PlayReadyDrmFormatString"
        Key:
          $ref: "#/components/schemas/NonEmptyBase64EncodedString"
        KeyMd5:
          $ref: "#/components/schemas/NonEmptyBase64EncodedString"
        KeyId:
          $ref: "#/components/schemas/KeyIdGuid"
        InitializationVector:
          $ref: "#/components/schemas/ZeroTo255String"
        LicenseAcquisitionUrl:
          $ref: "#/components/schemas/OneTo512String"
      description: <p>The PlayReady DRM settings, if any, that you want Elastic Transcoder
        to apply to the output files associated with this playlist.</p>
        <p>PlayReady DRM encrypts your media files using <code>aes-ctr</code>
        encryption.</p> <p>If you use DRM for an <code>HLSv3</code> playlist,
        your outputs must have a master playlist.</p>
    CreateJobPlaylists:
      type: array
      items:
        $ref: "#/components/schemas/CreateJobPlaylist"
      maxItems: 30
    JobInputs:
      type: array
      items:
        $ref: "#/components/schemas/JobInput"
      maxItems: 200
    UserMetadata:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/String"
    CreateJobRequest:
      type: object
      required:
        - PipelineId
      properties:
        PipelineId:
          $ref: "#/components/schemas/Id"
        Input:
          $ref: "#/components/schemas/JobInput"
        Inputs:
          $ref: "#/components/schemas/JobInputs"
        Output:
          $ref: "#/components/schemas/CreateJobOutput"
        Outputs:
          $ref: "#/components/schemas/CreateJobOutputs"
        OutputKeyPrefix:
          $ref: "#/components/schemas/Key"
        Playlists:
          $ref: "#/components/schemas/CreateJobPlaylists"
        UserMetadata:
          $ref: "#/components/schemas/UserMetadata"
      description: The <code>CreateJobRequest</code> structure.
    Job:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/Id"
        Arn:
          $ref: "#/components/schemas/String"
        PipelineId:
          $ref: "#/components/schemas/Id"
        Input:
          $ref: "#/components/schemas/JobInput"
        Inputs:
          $ref: "#/components/schemas/JobInputs"
        Output:
          $ref: "#/components/schemas/JobOutput"
        Outputs:
          $ref: "#/components/schemas/JobOutputs"
        OutputKeyPrefix:
          $ref: "#/components/schemas/Key"
        Playlists:
          $ref: "#/components/schemas/Playlists"
        Status:
          $ref: "#/components/schemas/JobStatus"
        UserMetadata:
          $ref: "#/components/schemas/UserMetadata"
        Timing:
          $ref: "#/components/schemas/Timing"
      description: A section of the response body that provides information about the job
        that is created.
    Role:
      type: string
      pattern: ^arn:aws:iam::\w{12}:role/.+$
    KeyArn:
      type: string
      minLength: 0
      maxLength: 255
    Notifications:
      type: object
      properties:
        Progressing:
          $ref: "#/components/schemas/SnsTopic"
        Completed:
          $ref: "#/components/schemas/SnsTopic"
        Warning:
          $ref: "#/components/schemas/SnsTopic"
        Error:
          $ref: "#/components/schemas/SnsTopic"
      description: <p>The Amazon Simple Notification Service (Amazon SNS) topic or topics
        to notify in order to report job status.</p> <important> <p>To receive
        notifications, you must also subscribe to the new topic in the Amazon
        SNS console.</p> </important>
    PipelineOutputConfig:
      type: object
      properties:
        Bucket:
          $ref: "#/components/schemas/BucketName"
        StorageClass:
          $ref: "#/components/schemas/StorageClass"
        Permissions:
          $ref: "#/components/schemas/Permissions"
      description: The <code>PipelineOutputConfig</code> structure.
    CreatePipelineRequest:
      type: object
      required:
        - Name
        - InputBucket
        - Role
      properties:
        Name:
          $ref: "#/components/schemas/Name"
        InputBucket:
          $ref: "#/components/schemas/BucketName"
        OutputBucket:
          $ref: "#/components/schemas/BucketName"
        Role:
          $ref: "#/components/schemas/Role"
        AwsKmsKeyArn:
          $ref: "#/components/schemas/KeyArn"
        Notifications:
          $ref: "#/components/schemas/Notifications"
        ContentConfig:
          $ref: "#/components/schemas/PipelineOutputConfig"
        ThumbnailConfig:
          $ref: "#/components/schemas/PipelineOutputConfig"
      description: The <code>CreatePipelineRequest</code> structure.
    Pipeline:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/Id"
        Arn:
          $ref: "#/components/schemas/String"
        Name:
          $ref: "#/components/schemas/Name"
        Status:
          $ref: "#/components/schemas/PipelineStatus"
        InputBucket:
          $ref: "#/components/schemas/BucketName"
        OutputBucket:
          $ref: "#/components/schemas/BucketName"
        Role:
          $ref: "#/components/schemas/Role"
        AwsKmsKeyArn:
          $ref: "#/components/schemas/KeyArn"
        Notifications:
          $ref: "#/components/schemas/Notifications"
        ContentConfig:
          $ref: "#/components/schemas/PipelineOutputConfig"
        ThumbnailConfig:
          $ref: "#/components/schemas/PipelineOutputConfig"
      description: The pipeline (queue) that is used to manage jobs.
    Warnings:
      type: array
      items:
        $ref: "#/components/schemas/Warning"
    Description:
      type: string
      minLength: 0
      maxLength: 255
    PresetContainer:
      type: string
      pattern: (^mp4$)|(^ts$)|(^webm$)|(^mp3$)|(^flac$)|(^oga$)|(^ogg$)|(^fmp4$)|(^mpg$)|(^flv$)|(^gif$)|(^mxf$)|(^wav$)|(^mp2$)
    VideoParameters:
      type: object
      properties:
        Codec:
          $ref: "#/components/schemas/VideoCodec"
        CodecOptions:
          $ref: "#/components/schemas/CodecOptions"
        KeyframesMaxDist:
          $ref: "#/components/schemas/KeyframesMaxDist"
        FixedGOP:
          $ref: "#/components/schemas/FixedGOP"
        BitRate:
          $ref: "#/components/schemas/VideoBitRate"
        FrameRate:
          $ref: "#/components/schemas/FrameRate"
        MaxFrameRate:
          $ref: "#/components/schemas/MaxFrameRate"
        Resolution:
          $ref: "#/components/schemas/Resolution"
        AspectRatio:
          $ref: "#/components/schemas/AspectRatio"
        MaxWidth:
          $ref: "#/components/schemas/DigitsOrAuto"
        MaxHeight:
          $ref: "#/components/schemas/DigitsOrAuto"
        DisplayAspectRatio:
          $ref: "#/components/schemas/AspectRatio"
        SizingPolicy:
          $ref: "#/components/schemas/SizingPolicy"
        PaddingPolicy:
          $ref: "#/components/schemas/PaddingPolicy"
        Watermarks:
          $ref: "#/components/schemas/PresetWatermarks"
      description: The <code>VideoParameters</code> structure.
    Thumbnails:
      type: object
      properties:
        Format:
          $ref: "#/components/schemas/JpgOrPng"
        Interval:
          $ref: "#/components/schemas/Digits"
        Resolution:
          $ref: "#/components/schemas/ThumbnailResolution"
        AspectRatio:
          $ref: "#/components/schemas/AspectRatio"
        MaxWidth:
          $ref: "#/components/schemas/DigitsOrAuto"
        MaxHeight:
          $ref: "#/components/schemas/DigitsOrAuto"
        SizingPolicy:
          $ref: "#/components/schemas/SizingPolicy"
        PaddingPolicy:
          $ref: "#/components/schemas/PaddingPolicy"
      description: Thumbnails for videos.
    CreatePresetRequest:
      type: object
      required:
        - Name
        - Container
      properties:
        Name:
          $ref: "#/components/schemas/Name"
        Description:
          $ref: "#/components/schemas/Description"
        Container:
          $ref: "#/components/schemas/PresetContainer"
        Video:
          $ref: "#/components/schemas/VideoParameters"
        Audio:
          $ref: "#/components/schemas/AudioParameters"
        Thumbnails:
          $ref: "#/components/schemas/Thumbnails"
      description: The <code>CreatePresetRequest</code> structure.
    Preset:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/Id"
        Arn:
          $ref: "#/components/schemas/String"
        Name:
          $ref: "#/components/schemas/Name"
        Description:
          $ref: "#/components/schemas/Description"
        Container:
          $ref: "#/components/schemas/PresetContainer"
        Audio:
          $ref: "#/components/schemas/AudioParameters"
        Video:
          $ref: "#/components/schemas/VideoParameters"
        Thumbnails:
          $ref: "#/components/schemas/Thumbnails"
        Type:
          $ref: "#/components/schemas/PresetType"
      description: Presets are templates that contain most of the settings for transcoding
        media files from one format to another. Elastic Transcoder includes some
        default presets for common formats, for example, several iPod and iPhone
        versions. You can also create your own presets for formats that aren't
        included among the default presets. You specify which preset you want to
        use when you create a job.
    DeletePipelineRequest:
      type: object
      properties: {}
      description: The <code>DeletePipelineRequest</code> structure.
    DeletePresetRequest:
      type: object
      properties: {}
      description: The <code>DeletePresetRequest</code> structure.
    NullableInteger:
      type: integer
    NullableLong:
      type: integer
    EncryptionMode:
      type: string
      pattern: (^s3$)|(^s3-aws-kms$)|(^aes-cbc-pkcs7$)|(^aes-ctr$)|(^aes-gcm$)
    ZeroTo255String:
      type: string
      minLength: 0
      maxLength: 255
    ExceptionMessages:
      type: array
      items:
        $ref: "#/components/schemas/String"
    Grantee:
      type: string
      minLength: 1
      maxLength: 255
    GranteeType:
      type: string
      pattern: (^Canonical$)|(^Email$)|(^Group$)
    HlsContentProtectionMethod:
      type: string
      pattern: (^aes-128$)
    ZeroTo512String:
      type: string
      minLength: 0
      maxLength: 512
    KeyStoragePolicy:
      type: string
      pattern: (^NoStore$)|(^WithVariantPlaylists$)
    HorizontalAlign:
      type: string
      pattern: (^Left$)|(^Right$)|(^Center$)
    JobOutput:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/String"
        Key:
          $ref: "#/components/schemas/Key"
        ThumbnailPattern:
          $ref: "#/components/schemas/ThumbnailPattern"
        ThumbnailEncryption:
          $ref: "#/components/schemas/Encryption"
        Rotate:
          $ref: "#/components/schemas/Rotate"
        PresetId:
          $ref: "#/components/schemas/Id"
        SegmentDuration:
          $ref: "#/components/schemas/FloatString"
        Status:
          $ref: "#/components/schemas/JobStatus"
        StatusDetail:
          $ref: "#/components/schemas/Description"
        Duration:
          $ref: "#/components/schemas/NullableLong"
        Width:
          $ref: "#/components/schemas/NullableInteger"
        Height:
          $ref: "#/components/schemas/NullableInteger"
        FrameRate:
          $ref: "#/components/schemas/FloatString"
        FileSize:
          $ref: "#/components/schemas/NullableLong"
        DurationMillis:
          $ref: "#/components/schemas/NullableLong"
        Watermarks:
          $ref: "#/components/schemas/JobWatermarks"
        AlbumArt:
          $ref: "#/components/schemas/JobAlbumArt"
        Composition:
          $ref: "#/components/schemas/Composition"
        Captions:
          $ref: "#/components/schemas/Captions"
        Encryption:
          $ref: "#/components/schemas/Encryption"
        AppliedColorSpaceConversion:
          $ref: "#/components/schemas/String"
      description: <important> <p>Outputs recommended instead.</p> </important> <p>If you
        specified one output for a job, information about that output. If you
        specified multiple outputs for a job, the <code>Output</code> object
        lists information about the first output. This duplicates the
        information that is listed for the first output in the
        <code>Outputs</code> object.</p>
    JobOutputs:
      type: array
      items:
        $ref: "#/components/schemas/JobOutput"
    Playlists:
      type: array
      items:
        $ref: "#/components/schemas/Playlist"
    JobStatus:
      type: string
      pattern: (^Submitted$)|(^Progressing$)|(^Complete$)|(^Canceled$)|(^Error$)
    Timing:
      type: object
      properties:
        SubmitTimeMillis:
          $ref: "#/components/schemas/NullableLong"
        StartTimeMillis:
          $ref: "#/components/schemas/NullableLong"
        FinishTimeMillis:
          $ref: "#/components/schemas/NullableLong"
      description: Details about the timing of a job.
    MergePolicy:
      type: string
      pattern: (^Replace$)|(^Prepend$)|(^Append$)|(^Fallback$)
    PresetWatermarkId:
      type: string
      minLength: 1
      maxLength: 40
    JobWatermark:
      type: object
      properties:
        PresetWatermarkId:
          $ref: "#/components/schemas/PresetWatermarkId"
        InputKey:
          $ref: "#/components/schemas/WatermarkKey"
        Encryption:
          $ref: "#/components/schemas/Encryption"
      description: Watermarks can be in .png or .jpg format. If you want to display a
        watermark that is not rectangular, use the .png format, which supports
        transparency.
    Jobs:
      type: array
      items:
        $ref: "#/components/schemas/Job"
    KeyIdGuid:
      type: string
      pattern: (^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$)|(^[0-9A-Fa-f]{32}$)
    ListJobsByPipelineRequest:
      type: object
      properties: {}
      description: The <code>ListJobsByPipelineRequest</code> structure.
    ListJobsByStatusRequest:
      type: object
      properties: {}
      description: The <code>ListJobsByStatusRequest</code> structure.
    ListPipelinesRequest:
      type: object
      properties: {}
      description: The <code>ListPipelineRequest</code> structure.
    Pipelines:
      type: array
      items:
        $ref: "#/components/schemas/Pipeline"
    ListPresetsRequest:
      type: object
      properties: {}
      description: The <code>ListPresetsRequest</code> structure.
    Presets:
      type: array
      items:
        $ref: "#/components/schemas/Preset"
    NonEmptyBase64EncodedString:
      type: string
      pattern: (^(?:[A-Za-z0-9\+/]{4})*(?:[A-Za-z0-9\+/]{2}==|[A-Za-z0-9\+/]{3}=)?$)
    OneTo512String:
      type: string
      minLength: 1
      maxLength: 512
    Opacity:
      type: string
      pattern: ^\d{1,3}(\.\d{0,20})?$
    Permission:
      type: object
      properties:
        GranteeType:
          $ref: "#/components/schemas/GranteeType"
        Grantee:
          $ref: "#/components/schemas/Grantee"
        Access:
          $ref: "#/components/schemas/AccessControls"
      description: The <code>Permission</code> structure.
    PipelineStatus:
      type: string
      pattern: (^Active$)|(^Paused$)
    PixelsOrPercent:
      type: string
      pattern: (^\d{1,3}(\.\d{0,5})?%$)|(^\d{1,4}?px$)
    PlayReadyDrmFormatString:
      type: string
      pattern: (^microsoft$)|(^discretix-3.0$)
    Playlist:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/Filename"
        Format:
          $ref: "#/components/schemas/PlaylistFormat"
        OutputKeys:
          $ref: "#/components/schemas/OutputKeys"
        HlsContentProtection:
          $ref: "#/components/schemas/HlsContentProtection"
        PlayReadyDrm:
          $ref: "#/components/schemas/PlayReadyDrm"
        Status:
          $ref: "#/components/schemas/JobStatus"
        StatusDetail:
          $ref: "#/components/schemas/Description"
      description: " Use Only for Fragmented MP4 or MPEG-TS Outputs. If you specify a
        preset for which the value of Container is <code>fmp4</code> (Fragmented
        MP4) or <code>ts</code> (MPEG-TS), Playlists contains information about
        the master playlists that you want Elastic Transcoder to create. We
        recommend that you create only one master playlist per output format.
        The maximum number of master playlists in a job is 30. "
    PresetType:
      type: string
      pattern: (^System$)|(^Custom$)
    WatermarkSizingPolicy:
      type: string
      pattern: (^Fit$)|(^Stretch$)|(^ShrinkToFit$)
    VerticalAlign:
      type: string
      pattern: (^Top$)|(^Bottom$)|(^Center$)
    Target:
      type: string
      pattern: (^Content$)|(^Frame$)
    PresetWatermark:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/PresetWatermarkId"
        MaxWidth:
          $ref: "#/components/schemas/PixelsOrPercent"
        MaxHeight:
          $ref: "#/components/schemas/PixelsOrPercent"
        SizingPolicy:
          $ref: "#/components/schemas/WatermarkSizingPolicy"
        HorizontalAlign:
          $ref: "#/components/schemas/HorizontalAlign"
        HorizontalOffset:
          $ref: "#/components/schemas/PixelsOrPercent"
        VerticalAlign:
          $ref: "#/components/schemas/VerticalAlign"
        VerticalOffset:
          $ref: "#/components/schemas/PixelsOrPercent"
        Opacity:
          $ref: "#/components/schemas/Opacity"
        Target:
          $ref: "#/components/schemas/Target"
      description: <p>Settings for the size, location, and opacity of graphics that you
        want Elastic Transcoder to overlay over videos that are transcoded using
        this preset. You can specify settings for up to four watermarks.
        Watermarks appear in the specified size and location, and with the
        specified opacity for the duration of the transcoded video.</p>
        <p>Watermarks can be in .png or .jpg format. If you want to display a
        watermark that is not rectangular, use the .png format, which supports
        transparency.</p> <p>When you create a job that uses this preset, you
        specify the .png or .jpg graphics that you want Elastic Transcoder to
        include in the transcoded videos. You can specify fewer graphics in the
        job than you specify watermark settings in the preset, which allows you
        to use the same preset for up to four watermarks that have different
        dimensions.</p>
    ReadJobRequest:
      type: object
      properties: {}
      description: The <code>ReadJobRequest</code> structure.
    ReadPipelineRequest:
      type: object
      properties: {}
      description: The <code>ReadPipelineRequest</code> structure.
    ReadPresetRequest:
      type: object
      properties: {}
      description: The <code>ReadPresetRequest</code> structure.
    SnsTopics:
      type: array
      items:
        $ref: "#/components/schemas/SnsTopic"
      maxItems: 30
    Success:
      type: string
      pattern: (^true$)|(^false$)
    TestRoleRequest:
      type: object
      required:
        - Role
        - InputBucket
        - OutputBucket
        - Topics
      properties:
        Role:
          $ref: "#/components/schemas/Role"
        InputBucket:
          $ref: "#/components/schemas/BucketName"
        OutputBucket:
          $ref: "#/components/schemas/BucketName"
        Topics:
          $ref: "#/components/schemas/SnsTopics"
      description: " The <code>TestRoleRequest</code> structure. "
    Time:
      type: string
      pattern: (^\d{1,5}(\.\d{0,3})?$)|(^([0-1]?[0-9]:|2[0-3]:)?([0-5]?[0-9]:)?[0-5]?[0-9](\.\d{0,3})?$)
    UpdatePipelineNotificationsRequest:
      type: object
      required:
        - Notifications
      properties:
        Notifications:
          $ref: "#/components/schemas/Notifications"
      description: The <code>UpdatePipelineNotificationsRequest</code> structure.
    UpdatePipelineRequest:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/Name"
        InputBucket:
          $ref: "#/components/schemas/BucketName"
        Role:
          $ref: "#/components/schemas/Role"
        AwsKmsKeyArn:
          $ref: "#/components/schemas/KeyArn"
        Notifications:
          $ref: "#/components/schemas/Notifications"
        ContentConfig:
          $ref: "#/components/schemas/PipelineOutputConfig"
        ThumbnailConfig:
          $ref: "#/components/schemas/PipelineOutputConfig"
      description: The <code>UpdatePipelineRequest</code> structure.
    UpdatePipelineStatusRequest:
      type: object
      required:
        - Status
      properties:
        Status:
          $ref: "#/components/schemas/PipelineStatus"
      description: The <code>UpdatePipelineStatusRequest</code> structure.
    Warning:
      type: object
      properties:
        Code:
          $ref: "#/components/schemas/String"
        Message:
          $ref: "#/components/schemas/String"
      description: <p>Elastic Transcoder returns a warning if the resources used by your
        pipeline are not in the same region as the pipeline.</p> <p>Using
        resources in the same region, such as your Amazon S3 buckets, Amazon SNS
        notification topics, and AWS KMS key, reduces processing time and
        prevents cross-regional charges.</p>
