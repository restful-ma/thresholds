openapi: 3.0.0
info:
  version: 2017-03-14
  x-release: v4
  title: AWS Cloud Map
  description: "AWS Cloud Map lets you configure public DNS, private DNS, or HTTP
    namespaces that your microservice applications run in. When an instance of
    the service becomes available, you can call the AWS Cloud Map API to
    register the instance with AWS Cloud Map. For public or private DNS
    namespaces, AWS Cloud Map automatically creates DNS records and an optional
    health check. Clients that submit public or private DNS queries, or HTTP
    requests, for the service receive an answer that contains up to eight
    healthy records. "
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: servicediscovery
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/servicediscovery-2017-03-14.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/servicediscovery/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=Route53AutoNaming_v20170314.CreateHttpNamespace:
    post:
      operationId: CreateHttpNamespace
      description: <p>Creates an HTTP namespace. Service instances that you register using
        an HTTP namespace can be discovered using a
        <code>DiscoverInstances</code> request but can't be discovered using
        DNS. </p> <p>For the current limit on the number of namespaces that you
        can create using the same AWS account, see <a
        href="http://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html">AWS
        Cloud Map Limits</a> in the <i>AWS Cloud Map Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateHttpNamespaceResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: NamespaceAlreadyExists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NamespaceAlreadyExists"
        "482":
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceeded"
        "483":
          description: DuplicateRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53AutoNaming_v20170314.CreateHttpNamespace
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateHttpNamespaceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53AutoNaming_v20170314.CreatePrivateDnsNamespace:
    post:
      operationId: CreatePrivateDnsNamespace
      description: Creates a private namespace based on DNS, which will be visible only
        inside a specified Amazon VPC. The namespace defines your service naming
        scheme. For example, if you name your namespace <code>example.com</code>
        and name your service <code>backend</code>, the resulting DNS name for
        the service will be <code>backend.example.com</code>. For the current
        limit on the number of namespaces that you can create using the same AWS
        account, see <a
        href="http://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html">AWS
        Cloud Map Limits</a> in the <i>AWS Cloud Map Developer Guide</i>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatePrivateDnsNamespaceResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: NamespaceAlreadyExists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NamespaceAlreadyExists"
        "482":
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceeded"
        "483":
          description: DuplicateRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53AutoNaming_v20170314.CreatePrivateDnsNamespace
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePrivateDnsNamespaceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53AutoNaming_v20170314.CreatePublicDnsNamespace:
    post:
      operationId: CreatePublicDnsNamespace
      description: Creates a public namespace based on DNS, which will be visible on the
        internet. The namespace defines your service naming scheme. For example,
        if you name your namespace <code>example.com</code> and name your
        service <code>backend</code>, the resulting DNS name for the service
        will be <code>backend.example.com</code>. For the current limit on the
        number of namespaces that you can create using the same AWS account, see
        <a
        href="http://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html">AWS
        Cloud Map Limits</a> in the <i>AWS Cloud Map Developer Guide</i>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatePublicDnsNamespaceResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: NamespaceAlreadyExists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NamespaceAlreadyExists"
        "482":
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceeded"
        "483":
          description: DuplicateRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53AutoNaming_v20170314.CreatePublicDnsNamespace
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePublicDnsNamespaceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53AutoNaming_v20170314.CreateService:
    post:
      operationId: CreateService
      description: <p>Creates a service, which defines the configuration for the following
        entities:</p> <ul> <li> <p>For public and private DNS namespaces, one of
        the following combinations of DNS records in Amazon Route 53:</p> <ul>
        <li> <p>A</p> </li> <li> <p>AAAA</p> </li> <li> <p>A and AAAA</p> </li>
        <li> <p>SRV</p> </li> <li> <p>CNAME</p> </li> </ul> </li> <li>
        <p>Optionally, a health check</p> </li> </ul> <p>After you create the
        service, you can submit a <a>RegisterInstance</a> request, and AWS Cloud
        Map uses the values in the configuration to create the specified
        entities.</p> <p>For the current limit on the number of instances that
        you can register using the same namespace and using the same service,
        see <a
        href="http://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.html">AWS
        Cloud Map Limits</a> in the <i>AWS Cloud Map Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateServiceResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceeded"
        "482":
          description: NamespaceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NamespaceNotFound"
        "483":
          description: ServiceAlreadyExists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceAlreadyExists"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53AutoNaming_v20170314.CreateService
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateServiceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53AutoNaming_v20170314.DeleteNamespace:
    post:
      operationId: DeleteNamespace
      description: Deletes a namespace from the current account. If the namespace still
        contains one or more services, the request fails.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteNamespaceResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: NamespaceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NamespaceNotFound"
        "482":
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUse"
        "483":
          description: DuplicateRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53AutoNaming_v20170314.DeleteNamespace
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteNamespaceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53AutoNaming_v20170314.DeleteService:
    post:
      operationId: DeleteService
      description: Deletes a specified service. If the service still contains one or more
        registered instances, the request fails.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteServiceResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: ServiceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceNotFound"
        "482":
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUse"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53AutoNaming_v20170314.DeleteService
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteServiceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53AutoNaming_v20170314.DeregisterInstance:
    post:
      operationId: DeregisterInstance
      description: Deletes the Amazon Route 53 DNS records and health check, if any, that
        AWS Cloud Map created for the specified instance.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeregisterInstanceResponse"
        "480":
          description: DuplicateRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateRequest"
        "481":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "482":
          description: InstanceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceNotFound"
        "483":
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUse"
        "484":
          description: ServiceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceNotFound"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53AutoNaming_v20170314.DeregisterInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeregisterInstanceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53AutoNaming_v20170314.DiscoverInstances:
    post:
      operationId: DiscoverInstances
      description: Discovers registered instances for a specified namespace and service.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DiscoverInstancesResponse"
        "480":
          description: ServiceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceNotFound"
        "481":
          description: NamespaceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NamespaceNotFound"
        "482":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53AutoNaming_v20170314.DiscoverInstances
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DiscoverInstancesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53AutoNaming_v20170314.GetInstance:
    post:
      operationId: GetInstance
      description: Gets information about a specified instance.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInstanceResponse"
        "480":
          description: InstanceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceNotFound"
        "481":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "482":
          description: ServiceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceNotFound"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53AutoNaming_v20170314.GetInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetInstanceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53AutoNaming_v20170314.GetInstancesHealthStatus:
    post:
      operationId: GetInstancesHealthStatus
      description: <p>Gets the current health status (<code>Healthy</code>,
        <code>Unhealthy</code>, or <code>Unknown</code>) of one or more
        instances that are associated with a specified service.</p> <note>
        <p>There is a brief delay between when you register an instance and when
        the health status for the instance is available. </p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInstancesHealthStatusResponse"
        "480":
          description: InstanceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceNotFound"
        "481":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "482":
          description: ServiceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceNotFound"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53AutoNaming_v20170314.GetInstancesHealthStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetInstancesHealthStatusRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53AutoNaming_v20170314.GetNamespace:
    post:
      operationId: GetNamespace
      description: Gets information about a namespace.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetNamespaceResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: NamespaceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NamespaceNotFound"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53AutoNaming_v20170314.GetNamespace
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetNamespaceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53AutoNaming_v20170314.GetOperation:
    post:
      operationId: GetOperation
      description: <p>Gets information about any operation that returns an operation ID in
        the response, such as a <code>CreateService</code> request.</p> <note>
        <p>To get a list of operations that match specified criteria, see
        <a>ListOperations</a>.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOperationResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: OperationNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotFound"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53AutoNaming_v20170314.GetOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetOperationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53AutoNaming_v20170314.GetService:
    post:
      operationId: GetService
      description: Gets the settings for a specified service.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetServiceResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: ServiceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceNotFound"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53AutoNaming_v20170314.GetService
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetServiceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53AutoNaming_v20170314.ListInstances:
    post:
      operationId: ListInstances
      description: Lists summary information about the instances that you registered by
        using a specified service.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListInstancesResponse"
        "480":
          description: ServiceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceNotFound"
        "481":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53AutoNaming_v20170314.ListInstances
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListInstancesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53AutoNaming_v20170314.ListNamespaces:
    post:
      operationId: ListNamespaces
      description: Lists summary information about the namespaces that were created by the
        current AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListNamespacesResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53AutoNaming_v20170314.ListNamespaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListNamespacesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53AutoNaming_v20170314.ListOperations:
    post:
      operationId: ListOperations
      description: Lists operations that match the criteria that you specify.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOperationsResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53AutoNaming_v20170314.ListOperations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListOperationsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53AutoNaming_v20170314.ListServices:
    post:
      operationId: ListServices
      description: Lists summary information for all the services that are associated with
        one or more specified namespaces.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListServicesResponse"
        "480":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53AutoNaming_v20170314.ListServices
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListServicesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53AutoNaming_v20170314.RegisterInstance:
    post:
      operationId: RegisterInstance
      description: "<p>Creates or updates one or more records and, optionally, creates a
        health check based on the settings in a specified service. When you
        submit a <code>RegisterInstance</code> request, the following
        occurs:</p> <ul> <li> <p>For each DNS record that you define in the
        service that is specified by <code>ServiceId</code>, a record is created
        or updated in the hosted zone that is associated with the corresponding
        namespace.</p> </li> <li> <p>If the service includes
        <code>HealthCheckConfig</code>, a health check is created based on the
        settings in the health check configuration.</p> </li> <li> <p>The health
        check, if any, is associated with each of the new or updated
        records.</p> </li> </ul> <important> <p>One
        <code>RegisterInstance</code> request must complete before you can
        submit another request and specify the same service ID and instance
        ID.</p> </important> <p>For more information, see
        <a>CreateService</a>.</p> <p>When AWS Cloud Map receives a DNS query for
        the specified DNS name, it returns the applicable value:</p> <ul> <li>
        <p> <b>If the health check is healthy</b>: returns all the records</p>
        </li> <li> <p> <b>If the health check is unhealthy</b>: returns the
        applicable value for the last healthy instance</p> </li> <li> <p> <b>If
        you didn't specify a health check configuration</b>: returns all the
        records</p> </li> </ul> <p>For the current limit on the number of
        instances that you can register using the same namespace and using the
        same service, see <a
        href=\"http://docs.aws.amazon.com/cloud-map/latest/dg/cloud-map-limits.\
        html\">AWS Cloud Map Limits</a> in the <i>AWS Cloud Map Developer
        Guide</i>.</p>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterInstanceResponse"
        "480":
          description: DuplicateRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateRequest"
        "481":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "482":
          description: ResourceInUse
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUse"
        "483":
          description: ResourceLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceeded"
        "484":
          description: ServiceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceNotFound"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53AutoNaming_v20170314.RegisterInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterInstanceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53AutoNaming_v20170314.UpdateInstanceCustomHealthStatus:
    post:
      operationId: UpdateInstanceCustomHealthStatus
      description: <p>Submits a request to change the health status of a custom health
        check to healthy or unhealthy.</p> <p>You can use
        <code>UpdateInstanceCustomHealthStatus</code> to change the status only
        for custom health checks, which you define using
        <code>HealthCheckCustomConfig</code> when you create a service. You
        can't use it to change the status for Route 53 health checks, which you
        define using <code>HealthCheckConfig</code>.</p> <p>For more
        information, see <a>HealthCheckCustomConfig</a>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: InstanceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceNotFound"
        "481":
          description: ServiceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceNotFound"
        "482":
          description: CustomHealthNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomHealthNotFound"
        "483":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53AutoNaming_v20170314.UpdateInstanceCustomHealthStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateInstanceCustomHealthStatusRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Route53AutoNaming_v20170314.UpdateService:
    post:
      operationId: UpdateService
      description: <p>Submits a request to perform the following operations:</p> <ul> <li>
        <p>Add or delete <code>DnsRecords</code> configurations</p> </li> <li>
        <p>Update the TTL setting for existing <code>DnsRecords</code>
        configurations</p> </li> <li> <p>Add, update, or delete
        <code>HealthCheckConfig</code> for a specified service</p> </li> </ul>
        <p>For public and private DNS namespaces, you must specify all
        <code>DnsRecords</code> configurations (and, optionally,
        <code>HealthCheckConfig</code>) that you want to appear in the updated
        service. Any current configurations that don't appear in an
        <code>UpdateService</code> request are deleted.</p> <p>When you update
        the TTL setting for a service, AWS Cloud Map also updates the
        corresponding settings in all the records and health checks that were
        created by using the specified service.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateServiceResponse"
        "480":
          description: DuplicateRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateRequest"
        "481":
          description: InvalidInput
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "482":
          description: ServiceNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceNotFound"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Route53AutoNaming_v20170314.UpdateService
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateServiceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://servicediscovery.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The ServiceDiscovery multi-region endpoint
  - url: https://servicediscovery.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The ServiceDiscovery multi-region endpoint
  - url: http://servicediscovery.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The ServiceDiscovery endpoint for China (Beijing) and China (Ningxia)
  - url: https://servicediscovery.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The ServiceDiscovery endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateHttpNamespaceResponse:
      type: object
      properties:
        OperationId:
          $ref: "#/components/schemas/OperationId"
    CreateHttpNamespaceRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/NamespaceName"
        CreatorRequestId:
          $ref: "#/components/schemas/ResourceId"
        Description:
          $ref: "#/components/schemas/ResourceDescription"
    InvalidInput: {}
    NamespaceAlreadyExists: {}
    ResourceLimitExceeded: {}
    DuplicateRequest: {}
    CreatePrivateDnsNamespaceResponse:
      type: object
      properties:
        OperationId:
          $ref: "#/components/schemas/OperationId"
    CreatePrivateDnsNamespaceRequest:
      type: object
      required:
        - Name
        - Vpc
      properties:
        Name:
          $ref: "#/components/schemas/NamespaceName"
        CreatorRequestId:
          $ref: "#/components/schemas/ResourceId"
        Description:
          $ref: "#/components/schemas/ResourceDescription"
        Vpc:
          $ref: "#/components/schemas/ResourceId"
    CreatePublicDnsNamespaceResponse:
      type: object
      properties:
        OperationId:
          $ref: "#/components/schemas/OperationId"
    CreatePublicDnsNamespaceRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/NamespaceName"
        CreatorRequestId:
          $ref: "#/components/schemas/ResourceId"
        Description:
          $ref: "#/components/schemas/ResourceDescription"
    CreateServiceResponse:
      type: object
      properties:
        Service:
          $ref: "#/components/schemas/Service"
    CreateServiceRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/ServiceName"
        NamespaceId:
          $ref: "#/components/schemas/ResourceId"
        CreatorRequestId:
          $ref: "#/components/schemas/ResourceId"
        Description:
          $ref: "#/components/schemas/ResourceDescription"
        DnsConfig:
          $ref: "#/components/schemas/DnsConfig"
        HealthCheckConfig:
          $ref: "#/components/schemas/HealthCheckConfig"
        HealthCheckCustomConfig:
          $ref: "#/components/schemas/HealthCheckCustomConfig"
    NamespaceNotFound: {}
    ServiceAlreadyExists: {}
    DeleteNamespaceResponse:
      type: object
      properties:
        OperationId:
          $ref: "#/components/schemas/OperationId"
    DeleteNamespaceRequest:
      type: object
      required:
        - Id
      properties:
        Id:
          $ref: "#/components/schemas/ResourceId"
    ResourceInUse: {}
    DeleteServiceResponse:
      type: object
      properties: {}
    DeleteServiceRequest:
      type: object
      required:
        - Id
      properties:
        Id:
          $ref: "#/components/schemas/ResourceId"
    ServiceNotFound: {}
    DeregisterInstanceResponse:
      type: object
      properties:
        OperationId:
          $ref: "#/components/schemas/OperationId"
    DeregisterInstanceRequest:
      type: object
      required:
        - ServiceId
        - InstanceId
      properties:
        ServiceId:
          $ref: "#/components/schemas/ResourceId"
        InstanceId:
          $ref: "#/components/schemas/ResourceId"
    InstanceNotFound: {}
    DiscoverInstancesResponse:
      type: object
      properties:
        Instances:
          $ref: "#/components/schemas/HttpInstanceSummaryList"
    DiscoverInstancesRequest:
      type: object
      required:
        - NamespaceName
        - ServiceName
      properties:
        NamespaceName:
          $ref: "#/components/schemas/NamespaceName"
        ServiceName:
          $ref: "#/components/schemas/ServiceName"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        QueryParameters:
          $ref: "#/components/schemas/Attributes"
        HealthStatus:
          $ref: "#/components/schemas/HealthStatusFilter"
    GetInstanceResponse:
      type: object
      properties:
        Instance:
          $ref: "#/components/schemas/Instance"
    GetInstanceRequest:
      type: object
      required:
        - ServiceId
        - InstanceId
      properties:
        ServiceId:
          $ref: "#/components/schemas/ResourceId"
        InstanceId:
          $ref: "#/components/schemas/ResourceId"
    GetInstancesHealthStatusResponse:
      type: object
      properties:
        Status:
          $ref: "#/components/schemas/InstanceHealthStatusMap"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    GetInstancesHealthStatusRequest:
      type: object
      required:
        - ServiceId
      properties:
        ServiceId:
          $ref: "#/components/schemas/ResourceId"
        Instances:
          $ref: "#/components/schemas/InstanceIdList"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    GetNamespaceResponse:
      type: object
      properties:
        Namespace:
          $ref: "#/components/schemas/Namespace"
    GetNamespaceRequest:
      type: object
      required:
        - Id
      properties:
        Id:
          $ref: "#/components/schemas/ResourceId"
    GetOperationResponse:
      type: object
      properties:
        Operation:
          $ref: "#/components/schemas/Operation"
    GetOperationRequest:
      type: object
      required:
        - OperationId
      properties:
        OperationId:
          $ref: "#/components/schemas/ResourceId"
    OperationNotFound: {}
    GetServiceResponse:
      type: object
      properties:
        Service:
          $ref: "#/components/schemas/Service"
    GetServiceRequest:
      type: object
      required:
        - Id
      properties:
        Id:
          $ref: "#/components/schemas/ResourceId"
    ListInstancesResponse:
      type: object
      properties:
        Instances:
          $ref: "#/components/schemas/InstanceSummaryList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListInstancesRequest:
      type: object
      required:
        - ServiceId
      properties:
        ServiceId:
          $ref: "#/components/schemas/ResourceId"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListNamespacesResponse:
      type: object
      properties:
        Namespaces:
          $ref: "#/components/schemas/NamespaceSummariesList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListNamespacesRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        Filters:
          $ref: "#/components/schemas/NamespaceFilters"
    ListOperationsResponse:
      type: object
      properties:
        Operations:
          $ref: "#/components/schemas/OperationSummaryList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListOperationsRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        Filters:
          $ref: "#/components/schemas/OperationFilters"
    ListServicesResponse:
      type: object
      properties:
        Services:
          $ref: "#/components/schemas/ServiceSummariesList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListServicesRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        Filters:
          $ref: "#/components/schemas/ServiceFilters"
    RegisterInstanceResponse:
      type: object
      properties:
        OperationId:
          $ref: "#/components/schemas/OperationId"
    RegisterInstanceRequest:
      type: object
      required:
        - ServiceId
        - InstanceId
        - Attributes
      properties:
        ServiceId:
          $ref: "#/components/schemas/ResourceId"
        InstanceId:
          $ref: "#/components/schemas/ResourceId"
        CreatorRequestId:
          $ref: "#/components/schemas/ResourceId"
        Attributes:
          $ref: "#/components/schemas/Attributes"
    UpdateInstanceCustomHealthStatusRequest:
      type: object
      required:
        - ServiceId
        - InstanceId
        - Status
      properties:
        ServiceId:
          $ref: "#/components/schemas/ResourceId"
        InstanceId:
          $ref: "#/components/schemas/ResourceId"
        Status:
          $ref: "#/components/schemas/CustomHealthStatus"
    CustomHealthNotFound: {}
    UpdateServiceResponse:
      type: object
      properties:
        OperationId:
          $ref: "#/components/schemas/OperationId"
    UpdateServiceRequest:
      type: object
      required:
        - Id
        - Service
      properties:
        Id:
          $ref: "#/components/schemas/ResourceId"
        Service:
          $ref: "#/components/schemas/ServiceChange"
    Arn:
      type: string
      maxLength: 255
    AttrKey:
      type: string
      maxLength: 255
    AttrValue:
      type: string
      maxLength: 1024
    Attributes:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/AttrValue"
    Code:
      type: string
    NamespaceName:
      type: string
      maxLength: 1024
    ResourceId:
      type: string
      maxLength: 64
    ResourceDescription:
      type: string
      maxLength: 1024
    OperationId:
      type: string
      maxLength: 255
    ServiceName:
      type: string
      pattern: ((?=^.{1,127}$)^([a-zA-Z0-9_][a-zA-Z0-9-_]{0,61}[a-zA-Z0-9_]|[a-zA-Z0-9])(\.([a-zA-Z0-9_][a-zA-Z0-9-_]{0,61}[a-zA-Z0-9_]|[a-zA-Z0-9]))*$)|(^\.$)
    DnsConfig:
      type: object
      required:
        - DnsRecords
      properties:
        NamespaceId:
          $ref: "#/components/schemas/ResourceId"
        RoutingPolicy:
          $ref: "#/components/schemas/RoutingPolicy"
        DnsRecords:
          $ref: "#/components/schemas/DnsRecordList"
      description: A complex type that contains information about the Amazon Route 53 DNS
        records that you want AWS Cloud Map to create when you register an
        instance.
    HealthCheckConfig:
      type: object
      required:
        - Type
      properties:
        Type:
          $ref: "#/components/schemas/HealthCheckType"
        ResourcePath:
          $ref: "#/components/schemas/ResourcePath"
        FailureThreshold:
          $ref: "#/components/schemas/FailureThreshold"
      description: <p> <i>Public DNS namespaces only.</i> A complex type that contains
        settings for an optional health check. If you specify settings for a
        health check, AWS Cloud Map associates the health check with the records
        that you specify in <code>DnsConfig</code>.</p> <important> <p>If you
        specify a health check configuration, you can specify either
        <code>HealthCheckCustomConfig</code> or <code>HealthCheckConfig</code>
        but not both.</p> </important> <p>Health checks are basic Route 53
        health checks that monitor an AWS endpoint. For information about
        pricing for health checks, see <a
        href="http://aws.amazon.com/route53/pricing/">Amazon Route 53
        Pricing</a>.</p> <p>Note the following about configuring health
        checks.</p> <p> <b>A and AAAA records</b> </p> <p>If
        <code>DnsConfig</code> includes configurations for both A and AAAA
        records, AWS Cloud Map creates a health check that uses the IPv4 address
        to check the health of the resource. If the endpoint that is specified
        by the IPv4 address is unhealthy, Route 53 considers both the A and AAAA
        records to be unhealthy. </p> <p> <b>CNAME records</b> </p> <p>You can't
        specify settings for <code>HealthCheckConfig</code> when the
        <code>DNSConfig</code> includes <code>CNAME</code> for the value of
        <code>Type</code>. If you do, the <code>CreateService</code> request
        will fail with an <code>InvalidInput</code> error.</p> <p> <b>Request
        interval</b> </p> <p>A Route 53 health checker in each health-checking
        region sends a health check request to an endpoint every 30 seconds. On
        average, your endpoint receives a health check request about every two
        seconds. However, health checkers don't coordinate with one another, so
        you'll sometimes see several requests per second followed by a few
        seconds with no health checks at all.</p> <p> <b>Health checking
        regions</b> </p> <p>Health checkers perform checks from all Route 53
        health-checking regions. For a list of the current regions, see <a
        href="http://docs.aws.amazon.com/Route53/latest/APIReference/API_HealthCheckConfig.html#Route53-Type-HealthCheckConfig-Regions">Regions</a>.</p>
        <p> <b>Alias records</b> </p> <p>When you register an instance, if you
        include the <code>AWS_ALIAS_DNS_NAME</code> attribute, AWS Cloud Map
        creates a Route 53 alias record. Note the following:</p> <ul> <li>
        <p>Route 53 automatically sets <code>EvaluateTargetHealth</code> to true
        for alias records. When <code>EvaluateTargetHealth</code> is true, the
        alias record inherits the health of the referenced AWS resource. such as
        an ELB load balancer. For more information, see <a
        href="http://docs.aws.amazon.com/Route53/latest/APIReference/API_AliasTarget.html#Route53-Type-AliasTarget-EvaluateTargetHealth">EvaluateTargetHealth</a>.</p>
        </li> <li> <p>If you include <code>HealthCheckConfig</code> and then use
        the service to register an instance that creates an alias record, Route
        53 doesn't create the health check.</p> </li> </ul> <p> <b>Charges for
        health checks</b> </p> <p>Health checks are basic Route 53 health checks
        that monitor an AWS endpoint. For information about pricing for health
        checks, see <a href="http://aws.amazon.com/route53/pricing/">Amazon
        Route 53 Pricing</a>.</p>
    HealthCheckCustomConfig:
      type: object
      properties:
        FailureThreshold:
          $ref: "#/components/schemas/FailureThreshold"
      description: <p>A complex type that contains information about an optional custom
        health check. A custom health check, which requires that you use a
        third-party health checker to evaluate the health of your resources, is
        useful in the following circumstances:</p> <ul> <li> <p>You can't use a
        health check that is defined by <code>HealthCheckConfig</code> because
        the resource isn't available over the internet. For example, you can use
        a custom health check when the instance is in an Amazon VPC. (To check
        the health of resources in a VPC, the health checker must also be in the
        VPC.)</p> </li> <li> <p>You want to use a third-party health checker
        regardless of where your resources are.</p> </li> </ul> <important>
        <p>If you specify a health check configuration, you can specify either
        <code>HealthCheckCustomConfig</code> or <code>HealthCheckConfig</code>
        but not both.</p> </important> <p>To change the status of a custom
        health check, submit an <code>UpdateInstanceCustomHealthStatus</code>
        request. Cloud Map doesn't monitor the status of the resource, it just
        keeps a record of the status specified in the most recent
        <code>UpdateInstanceCustomHealthStatus</code> request.</p> <p>Here's how
        custom health checks work:</p> <ol> <li> <p>You create a service and
        specify a value for <code>FailureThreshold</code>. </p> <p>The failure
        threshold indicates the number of 30-second intervals you want AWS Cloud
        Map to wait between the time that your application sends an
        <a>UpdateInstanceCustomHealthStatus</a> request and the time that AWS
        Cloud Map stops routing internet traffic to the corresponding
        resource.</p> </li> <li> <p>You register an instance.</p> </li> <li>
        <p>You configure a third-party health checker to monitor the resource
        that is associated with the new instance. </p> <note> <p>AWS Cloud Map
        doesn't check the health of the resource directly. </p> </note> </li>
        <li> <p>The third-party health-checker determines that the resource is
        unhealthy and notifies your application.</p> </li> <li> <p>Your
        application submits an <code>UpdateInstanceCustomHealthStatus</code>
        request.</p> </li> <li> <p>AWS Cloud Map waits for
        (<code>FailureThreshold</code> x 30) seconds.</p> </li> <li> <p>If
        another <code>UpdateInstanceCustomHealthStatus</code> request doesn't
        arrive during that time to change the status back to healthy, AWS Cloud
        Map stops routing traffic to the resource.</p> </li> </ol> <p>Note the
        following about configuring custom health checks.</p>
    Service:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/ResourceId"
        Arn:
          $ref: "#/components/schemas/Arn"
        Name:
          $ref: "#/components/schemas/ServiceName"
        NamespaceId:
          $ref: "#/components/schemas/ResourceId"
        Description:
          $ref: "#/components/schemas/ResourceDescription"
        InstanceCount:
          $ref: "#/components/schemas/ResourceCount"
        DnsConfig:
          $ref: "#/components/schemas/DnsConfig"
        HealthCheckConfig:
          $ref: "#/components/schemas/HealthCheckConfig"
        HealthCheckCustomConfig:
          $ref: "#/components/schemas/HealthCheckCustomConfig"
        CreateDate:
          $ref: "#/components/schemas/Timestamp"
        CreatorRequestId:
          $ref: "#/components/schemas/ResourceId"
      description: A complex type that contains information about the specified service.
    CustomHealthStatus:
      type: string
      enum:
        - HEALTHY
        - UNHEALTHY
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    HealthStatusFilter:
      type: string
      enum:
        - HEALTHY
        - UNHEALTHY
        - ALL
    HttpInstanceSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/HttpInstanceSummary"
    RoutingPolicy:
      type: string
      enum:
        - MULTIVALUE
        - WEIGHTED
    DnsRecordList:
      type: array
      items:
        $ref: "#/components/schemas/DnsRecord"
    DnsConfigChange:
      type: object
      required:
        - DnsRecords
      properties:
        DnsRecords:
          $ref: "#/components/schemas/DnsRecordList"
      description: A complex type that contains information about changes to the Route 53
        DNS records that AWS Cloud Map creates when you register an instance.
    DnsProperties:
      type: object
      properties:
        HostedZoneId:
          $ref: "#/components/schemas/ResourceId"
      description: A complex type that contains the ID for the Route 53 hosted zone that
        AWS Cloud Map creates when you create a namespace.
    RecordType:
      type: string
      enum:
        - SRV
        - A
        - AAAA
        - CNAME
    RecordTTL:
      type: integer
      minimum: 0
      maximum: 2147483647
    DnsRecord:
      type: object
      required:
        - Type
        - TTL
      properties:
        Type:
          $ref: "#/components/schemas/RecordType"
        TTL:
          $ref: "#/components/schemas/RecordTTL"
      description: A complex type that contains information about the Route 53 DNS records
        that you want AWS Cloud Map to create when you register an instance.
    FailureThreshold:
      type: integer
      minimum: 1
      maximum: 10
    FilterCondition:
      type: string
      enum:
        - EQ
        - IN
        - BETWEEN
    FilterValue:
      type: string
      minLength: 1
      maxLength: 255
    FilterValues:
      type: array
      items:
        $ref: "#/components/schemas/FilterValue"
    Instance:
      type: object
      required:
        - Id
      properties:
        Id:
          $ref: "#/components/schemas/ResourceId"
        CreatorRequestId:
          $ref: "#/components/schemas/ResourceId"
        Attributes:
          $ref: "#/components/schemas/Attributes"
      description: A complex type that contains information about an instance that AWS
        Cloud Map creates when you submit a <code>RegisterInstance</code>
        request.
    InstanceIdList:
      type: array
      items:
        $ref: "#/components/schemas/ResourceId"
      minItems: 1
    NextToken:
      type: string
      maxLength: 4096
    InstanceHealthStatusMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/HealthStatus"
    Namespace:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/ResourceId"
        Arn:
          $ref: "#/components/schemas/Arn"
        Name:
          $ref: "#/components/schemas/NamespaceName"
        Type:
          $ref: "#/components/schemas/NamespaceType"
        Description:
          $ref: "#/components/schemas/ResourceDescription"
        ServiceCount:
          $ref: "#/components/schemas/ResourceCount"
        Properties:
          $ref: "#/components/schemas/NamespaceProperties"
        CreateDate:
          $ref: "#/components/schemas/Timestamp"
        CreatorRequestId:
          $ref: "#/components/schemas/ResourceId"
      description: A complex type that contains information about a specified namespace.
    Operation:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/OperationId"
        Type:
          $ref: "#/components/schemas/OperationType"
        Status:
          $ref: "#/components/schemas/OperationStatus"
        ErrorMessage:
          $ref: "#/components/schemas/Message"
        ErrorCode:
          $ref: "#/components/schemas/Code"
        CreateDate:
          $ref: "#/components/schemas/Timestamp"
        UpdateDate:
          $ref: "#/components/schemas/Timestamp"
        Targets:
          $ref: "#/components/schemas/OperationTargetsMap"
      description: A complex type that contains information about a specified operation.
    HealthCheckType:
      type: string
      enum:
        - HTTP
        - HTTPS
        - TCP
    ResourcePath:
      type: string
      maxLength: 255
    HealthStatus:
      type: string
      enum:
        - HEALTHY
        - UNHEALTHY
        - UNKNOWN
    HttpInstanceSummary:
      type: object
      properties:
        InstanceId:
          $ref: "#/components/schemas/ResourceId"
        NamespaceName:
          $ref: "#/components/schemas/NamespaceName"
        ServiceName:
          $ref: "#/components/schemas/ServiceName"
        HealthStatus:
          $ref: "#/components/schemas/HealthStatus"
        Attributes:
          $ref: "#/components/schemas/Attributes"
      description: In a response to a <a>DiscoverInstance</a> request,
        <code>HttpInstanceSummary</code> contains information about one instance
        that matches the values that you specified in the request.
    HttpProperties:
      type: object
      properties:
        HttpName:
          $ref: "#/components/schemas/NamespaceName"
      description: A complex type that contains the name of an HTTP namespace.
    InstanceSummary:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/ResourceId"
        Attributes:
          $ref: "#/components/schemas/Attributes"
      description: A complex type that contains information about the instances that you
        registered by using a specified service.
    InstanceSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/InstanceSummary"
    NamespaceFilters:
      type: array
      items:
        $ref: "#/components/schemas/NamespaceFilter"
    NamespaceSummariesList:
      type: array
      items:
        $ref: "#/components/schemas/NamespaceSummary"
    OperationFilters:
      type: array
      items:
        $ref: "#/components/schemas/OperationFilter"
    OperationSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/OperationSummary"
    ServiceFilters:
      type: array
      items:
        $ref: "#/components/schemas/ServiceFilter"
    ServiceSummariesList:
      type: array
      items:
        $ref: "#/components/schemas/ServiceSummary"
    Message:
      type: string
    NamespaceType:
      type: string
      enum:
        - DNS_PUBLIC
        - DNS_PRIVATE
        - HTTP
    ResourceCount:
      type: integer
    NamespaceProperties:
      type: object
      properties:
        DnsProperties:
          $ref: "#/components/schemas/DnsProperties"
        HttpProperties:
          $ref: "#/components/schemas/HttpProperties"
      description: A complex type that contains information that is specific to the
        namespace type.
    Timestamp:
      type: string
      format: date-time
    NamespaceFilterName:
      type: string
      enum:
        - TYPE
    NamespaceFilter:
      type: object
      required:
        - Name
        - Values
      properties:
        Name:
          $ref: "#/components/schemas/NamespaceFilterName"
        Values:
          $ref: "#/components/schemas/FilterValues"
        Condition:
          $ref: "#/components/schemas/FilterCondition"
      description: A complex type that identifies the namespaces that you want to list. You
        can choose to list public or private namespaces.
    NamespaceSummary:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/ResourceId"
        Arn:
          $ref: "#/components/schemas/Arn"
        Name:
          $ref: "#/components/schemas/NamespaceName"
        Type:
          $ref: "#/components/schemas/NamespaceType"
        Description:
          $ref: "#/components/schemas/ResourceDescription"
        ServiceCount:
          $ref: "#/components/schemas/ResourceCount"
        Properties:
          $ref: "#/components/schemas/NamespaceProperties"
        CreateDate:
          $ref: "#/components/schemas/Timestamp"
      description: A complex type that contains information about a namespace.
    OperationType:
      type: string
      enum:
        - CREATE_NAMESPACE
        - DELETE_NAMESPACE
        - UPDATE_SERVICE
        - REGISTER_INSTANCE
        - DEREGISTER_INSTANCE
    OperationStatus:
      type: string
      enum:
        - SUBMITTED
        - PENDING
        - SUCCESS
        - FAIL
    OperationTargetsMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/ResourceId"
    OperationFilterName:
      type: string
      enum:
        - NAMESPACE_ID
        - SERVICE_ID
        - STATUS
        - TYPE
        - UPDATE_DATE
    OperationFilter:
      type: object
      required:
        - Name
        - Values
      properties:
        Name:
          $ref: "#/components/schemas/OperationFilterName"
        Values:
          $ref: "#/components/schemas/FilterValues"
        Condition:
          $ref: "#/components/schemas/FilterCondition"
      description: A complex type that lets you select the operations that you want to list.
    OperationSummary:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/OperationId"
        Status:
          $ref: "#/components/schemas/OperationStatus"
      description: A complex type that contains information about an operation that matches
        the criteria that you specified in a <a>ListOperations</a> request.
    OperationTargetType:
      type: string
      enum:
        - NAMESPACE
        - SERVICE
        - INSTANCE
    ServiceChange:
      type: object
      required:
        - DnsConfig
      properties:
        Description:
          $ref: "#/components/schemas/ResourceDescription"
        DnsConfig:
          $ref: "#/components/schemas/DnsConfigChange"
        HealthCheckConfig:
          $ref: "#/components/schemas/HealthCheckConfig"
      description: A complex type that contains changes to an existing service.
    ServiceFilterName:
      type: string
      enum:
        - NAMESPACE_ID
    ServiceFilter:
      type: object
      required:
        - Name
        - Values
      properties:
        Name:
          $ref: "#/components/schemas/ServiceFilterName"
        Values:
          $ref: "#/components/schemas/FilterValues"
        Condition:
          $ref: "#/components/schemas/FilterCondition"
      description: A complex type that lets you specify the namespaces that you want to
        list services for.
    ServiceSummary:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/ResourceId"
        Arn:
          $ref: "#/components/schemas/Arn"
        Name:
          $ref: "#/components/schemas/ServiceName"
        Description:
          $ref: "#/components/schemas/ResourceDescription"
        InstanceCount:
          $ref: "#/components/schemas/ResourceCount"
        DnsConfig:
          $ref: "#/components/schemas/DnsConfig"
        HealthCheckConfig:
          $ref: "#/components/schemas/HealthCheckConfig"
        HealthCheckCustomConfig:
          $ref: "#/components/schemas/HealthCheckCustomConfig"
        CreateDate:
          $ref: "#/components/schemas/Timestamp"
      description: A complex type that contains information about a specified service.
