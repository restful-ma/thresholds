openapi: 3.0.0
info:
  version: 2012-12-01
  x-release: v4
  title: Amazon Redshift
  description: '<fullname>Amazon Redshift</fullname> <p> <b>Overview</b> </p> <p>This is an
    interface reference for Amazon Redshift. It contains documentation for one
    of the programming or command line interfaces you can use to manage Amazon
    Redshift clusters. Note that Amazon Redshift is asynchronous, which means
    that some interfaces may require techniques, such as polling or asynchronous
    callback handlers, to determine when a command has been applied. In this
    reference, the parameter descriptions indicate whether a change is applied
    immediately, on the next instance reboot, or during the next maintenance
    window. For a summary of the Amazon Redshift cluster management interfaces,
    go to <a
    href="https://docs.aws.amazon.com/redshift/latest/mgmt/using-aws-sdk.html">Using
    the Amazon Redshift Management Interfaces</a>.</p> <p>Amazon Redshift
    manages all the work of setting up, operating, and scaling a data warehouse:
    provisioning capacity, monitoring and backing up the cluster, and applying
    patches and upgrades to the Amazon Redshift engine. You can focus on using
    your data to acquire new insights for your business and customers.</p> <p>If
    you are a first-time user of Amazon Redshift, we recommend that you begin by
    reading the <a
    href="https://docs.aws.amazon.com/redshift/latest/gsg/getting-started.html">Amazon
    Redshift Getting Started Guide</a>.</p> <p>If you are a database developer,
    the <a
    href="https://docs.aws.amazon.com/redshift/latest/dg/welcome.html">Amazon
    Redshift Database Developer Guide</a> explains how to design, build, query,
    and maintain the databases that make up your data warehouse. </p>'
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: redshift
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/redshift-2012-12-01.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/redshift/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#Action=AcceptReservedNodeExchange:
    get:
      x-aws-operation-name: AcceptReservedNodeExchange
      operationId: GET AcceptReservedNodeExchange
      description: "Exchanges a DC1 Reserved Node for a DC2 Reserved Node with no changes
        to the configuration (term, payment type, or number of nodes) and no
        additional costs. "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AcceptReservedNodeExchangeOutputMessage"
        "480":
          description: ReservedNodeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedNodeNotFoundFault"
        "481":
          description: InvalidReservedNodeStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidReservedNodeStateFault"
        "482":
          description: ReservedNodeAlreadyMigratedFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedNodeAlreadyMigratedFault"
        "483":
          description: ReservedNodeOfferingNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedNodeOfferingNotFoundFault"
        "484":
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationFault"
        "485":
          description: DependentServiceUnavailableFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DependentServiceUnavailableFault"
        "486":
          description: ReservedNodeAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedNodeAlreadyExistsFault"
      parameters:
        - name: ReservedNodeId
          in: query
          required: true
          description: A string representing the node identifier of the DC1 Reserved Node
            to be exchanged.
          schema:
            type: string
        - name: TargetReservedNodeOfferingId
          in: query
          required: true
          description: "The unique identifier of the DC2 Reserved Node offering to be used
            for the exchange. You can obtain the value for the parameter by
            calling <a>GetReservedNodeExchangeOfferings</a> "
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AcceptReservedNodeExchange
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: AcceptReservedNodeExchange
      operationId: POST AcceptReservedNodeExchange
      description: "Exchanges a DC1 Reserved Node for a DC2 Reserved Node with no changes
        to the configuration (term, payment type, or number of nodes) and no
        additional costs. "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AcceptReservedNodeExchangeOutputMessage"
        "480":
          description: ReservedNodeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedNodeNotFoundFault"
        "481":
          description: InvalidReservedNodeStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidReservedNodeStateFault"
        "482":
          description: ReservedNodeAlreadyMigratedFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedNodeAlreadyMigratedFault"
        "483":
          description: ReservedNodeOfferingNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedNodeOfferingNotFoundFault"
        "484":
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationFault"
        "485":
          description: DependentServiceUnavailableFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DependentServiceUnavailableFault"
        "486":
          description: ReservedNodeAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedNodeAlreadyExistsFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AcceptReservedNodeExchange
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ReservedNodeId:
                  description: A string representing the node identifier of the DC1
                    Reserved Node to be exchanged.
                  type: string
                TargetReservedNodeOfferingId:
                  description: "The unique identifier of the DC2 Reserved Node offering to
                    be used for the exchange. You can obtain the value for the
                    parameter by calling <a>GetReservedNodeExchangeOfferings</a>
                    "
                  type: string
              required:
                - ReservedNodeId
                - TargetReservedNodeOfferingId
  /#Action=AuthorizeClusterSecurityGroupIngress:
    get:
      x-aws-operation-name: AuthorizeClusterSecurityGroupIngress
      operationId: GET AuthorizeClusterSecurityGroupIngress
      description: <p>Adds an inbound (ingress) rule to an Amazon Redshift security group.
        Depending on whether the application accessing your cluster is running
        on the Internet or an Amazon EC2 instance, you can authorize inbound
        access to either a Classless Interdomain Routing (CIDR)/Internet
        Protocol (IP) range or to an Amazon EC2 security group. You can add as
        many as 20 ingress rules to an Amazon Redshift security group.</p> <p>If
        you authorize access to an Amazon EC2 security group, specify
        <i>EC2SecurityGroupName</i> and <i>EC2SecurityGroupOwnerId</i>. The
        Amazon EC2 security group and Amazon Redshift cluster must be in the
        same AWS Region. </p> <p>If you authorize access to a CIDR/IP address
        range, specify <i>CIDRIP</i>. For an overview of CIDR blocks, see the
        Wikipedia article on <a
        href="http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Classless
        Inter-Domain Routing</a>. </p> <p>You must also associate the security
        group with a cluster so that clients running on these IP addresses or
        the EC2 instance are authorized to connect to the cluster. For
        information about managing security groups, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Working
        with Security Groups</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizeClusterSecurityGroupIngressRes\
                  ult"
        "480":
          description: ClusterSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSecurityGroupNotFoundFault"
        "481":
          description: InvalidClusterSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSecurityGroupStateFault"
        "482":
          description: AuthorizationAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationAlreadyExistsFault"
        "483":
          description: AuthorizationQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationQuotaExceededFault"
      parameters:
        - name: ClusterSecurityGroupName
          in: query
          required: true
          description: The name of the security group to which the ingress rule is added.
          schema:
            type: string
        - name: CIDRIP
          in: query
          required: false
          description: The IP range to be added the Amazon Redshift security group.
          schema:
            type: string
        - name: EC2SecurityGroupName
          in: query
          required: false
          description: The EC2 security group to be added the Amazon Redshift security
            group.
          schema:
            type: string
        - name: EC2SecurityGroupOwnerId
          in: query
          required: false
          description: "<p>The AWS account number of the owner of the security group
            specified by the <i>EC2SecurityGroupName</i> parameter. The AWS
            Access Key ID is not an acceptable value. </p> <p>Example:
            <code>111122223333</code> </p>"
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AuthorizeClusterSecurityGroupIngress
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: AuthorizeClusterSecurityGroupIngress
      operationId: POST AuthorizeClusterSecurityGroupIngress
      description: <p>Adds an inbound (ingress) rule to an Amazon Redshift security group.
        Depending on whether the application accessing your cluster is running
        on the Internet or an Amazon EC2 instance, you can authorize inbound
        access to either a Classless Interdomain Routing (CIDR)/Internet
        Protocol (IP) range or to an Amazon EC2 security group. You can add as
        many as 20 ingress rules to an Amazon Redshift security group.</p> <p>If
        you authorize access to an Amazon EC2 security group, specify
        <i>EC2SecurityGroupName</i> and <i>EC2SecurityGroupOwnerId</i>. The
        Amazon EC2 security group and Amazon Redshift cluster must be in the
        same AWS Region. </p> <p>If you authorize access to a CIDR/IP address
        range, specify <i>CIDRIP</i>. For an overview of CIDR blocks, see the
        Wikipedia article on <a
        href="http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Classless
        Inter-Domain Routing</a>. </p> <p>You must also associate the security
        group with a cluster so that clients running on these IP addresses or
        the EC2 instance are authorized to connect to the cluster. For
        information about managing security groups, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Working
        with Security Groups</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizeClusterSecurityGroupIngressRes\
                  ult"
        "480":
          description: ClusterSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSecurityGroupNotFoundFault"
        "481":
          description: InvalidClusterSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSecurityGroupStateFault"
        "482":
          description: AuthorizationAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationAlreadyExistsFault"
        "483":
          description: AuthorizationQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationQuotaExceededFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AuthorizeClusterSecurityGroupIngress
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterSecurityGroupName:
                  description: The name of the security group to which the ingress rule is
                    added.
                  type: string
                CIDRIP:
                  description: The IP range to be added the Amazon Redshift security group.
                  type: string
                EC2SecurityGroupName:
                  description: The EC2 security group to be added the Amazon Redshift
                    security group.
                  type: string
                EC2SecurityGroupOwnerId:
                  description: "<p>The AWS account number of the owner of the security
                    group specified by the <i>EC2SecurityGroupName</i>
                    parameter. The AWS Access Key ID is not an acceptable value.
                    </p> <p>Example: <code>111122223333</code> </p>"
                  type: string
              required:
                - ClusterSecurityGroupName
  /#Action=AuthorizeSnapshotAccess:
    get:
      x-aws-operation-name: AuthorizeSnapshotAccess
      operationId: GET AuthorizeSnapshotAccess
      description: <p>Authorizes the specified AWS customer account to restore the
        specified snapshot.</p> <p> For more information about working with
        snapshots, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon
        Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizeSnapshotAccessResult"
        "480":
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotNotFoundFault"
        "481":
          description: AuthorizationAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationAlreadyExistsFault"
        "482":
          description: AuthorizationQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationQuotaExceededFault"
        "483":
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DependentServiceRequestThrottlingFault"
        "484":
          description: InvalidClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSnapshotStateFault"
        "485":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
      parameters:
        - name: SnapshotIdentifier
          in: query
          required: true
          description: The identifier of the snapshot the account is authorized to restore.
          schema:
            type: string
        - name: SnapshotClusterIdentifier
          in: query
          required: false
          description: The identifier of the cluster the snapshot was created from. This
            parameter is required if your IAM user has a policy containing a
            snapshot resource element that specifies anything other than * for
            the cluster name.
          schema:
            type: string
        - name: AccountWithRestoreAccess
          in: query
          required: true
          description: <p>The identifier of the AWS customer account authorized to restore
            the specified snapshot.</p> <p>To share a snapshot with AWS support,
            specify amazon-redshift-support.</p>
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AuthorizeSnapshotAccess
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: AuthorizeSnapshotAccess
      operationId: POST AuthorizeSnapshotAccess
      description: <p>Authorizes the specified AWS customer account to restore the
        specified snapshot.</p> <p> For more information about working with
        snapshots, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon
        Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizeSnapshotAccessResult"
        "480":
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotNotFoundFault"
        "481":
          description: AuthorizationAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationAlreadyExistsFault"
        "482":
          description: AuthorizationQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationQuotaExceededFault"
        "483":
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DependentServiceRequestThrottlingFault"
        "484":
          description: InvalidClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSnapshotStateFault"
        "485":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AuthorizeSnapshotAccess
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SnapshotIdentifier:
                  description: The identifier of the snapshot the account is authorized to
                    restore.
                  type: string
                SnapshotClusterIdentifier:
                  description: The identifier of the cluster the snapshot was created from.
                    This parameter is required if your IAM user has a policy
                    containing a snapshot resource element that specifies
                    anything other than * for the cluster name.
                  type: string
                AccountWithRestoreAccess:
                  description: <p>The identifier of the AWS customer account authorized to
                    restore the specified snapshot.</p> <p>To share a snapshot
                    with AWS support, specify amazon-redshift-support.</p>
                  type: string
              required:
                - SnapshotIdentifier
                - AccountWithRestoreAccess
  /#Action=BatchDeleteClusterSnapshots:
    get:
      x-aws-operation-name: BatchDeleteClusterSnapshots
      operationId: GET BatchDeleteClusterSnapshots
      description: Deletes a set of cluster snapshots.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/BatchDeleteClusterSnapshotsResult"
        "480":
          description: BatchDeleteRequestSizeExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/BatchDeleteRequestSizeExceededFault"
      parameters:
        - name: Identifiers
          in: query
          required: true
          description: A list of identifiers for the snapshots that you want to delete.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - BatchDeleteClusterSnapshots
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: BatchDeleteClusterSnapshots
      operationId: POST BatchDeleteClusterSnapshots
      description: Deletes a set of cluster snapshots.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/BatchDeleteClusterSnapshotsResult"
        "480":
          description: BatchDeleteRequestSizeExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/BatchDeleteRequestSizeExceededFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - BatchDeleteClusterSnapshots
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Identifiers:
                  description: A list of identifiers for the snapshots that you want to
                    delete.
                  type: array
                  items:
                    type: string
              required:
                - Identifiers
  /#Action=BatchModifyClusterSnapshots:
    get:
      x-aws-operation-name: BatchModifyClusterSnapshots
      operationId: GET BatchModifyClusterSnapshots
      description: Modifies the settings for a list of snapshots.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/BatchModifyClusterSnapshotsOutputMessage"
        "480":
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRetentionPeriodFault"
        "481":
          description: BatchModifyClusterSnapshotsLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/BatchModifyClusterSnapshotsLimitExceede\
                  dFault"
      parameters:
        - name: SnapshotIdentifierList
          in: query
          required: true
          description: A list of snapshot identifiers you want to modify.
          schema:
            type: array
            items:
              type: string
        - name: ManualSnapshotRetentionPeriod
          in: query
          required: false
          description: <p>The number of days that a manual snapshot is retained. If you
            specify the value -1, the manual snapshot is retained
            indefinitely.</p> <p>The number must be either -1 or an integer
            between 1 and 3,653.</p> <p>If you decrease the manual snapshot
            retention period from its current value, existing manual snapshots
            that fall outside of the new retention period will return an error.
            If you want to suppress the errors and delete the snapshots, use the
            force option. </p>
          schema:
            type: integer
        - name: Force
          in: query
          required: false
          description: "A boolean value indicating whether to override an exception if the
            retention period has passed. "
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - BatchModifyClusterSnapshots
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: BatchModifyClusterSnapshots
      operationId: POST BatchModifyClusterSnapshots
      description: Modifies the settings for a list of snapshots.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/BatchModifyClusterSnapshotsOutputMessage"
        "480":
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRetentionPeriodFault"
        "481":
          description: BatchModifyClusterSnapshotsLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/BatchModifyClusterSnapshotsLimitExceede\
                  dFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - BatchModifyClusterSnapshots
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SnapshotIdentifierList:
                  description: A list of snapshot identifiers you want to modify.
                  type: array
                  items:
                    type: string
                ManualSnapshotRetentionPeriod:
                  description: <p>The number of days that a manual snapshot is retained. If
                    you specify the value -1, the manual snapshot is retained
                    indefinitely.</p> <p>The number must be either -1 or an
                    integer between 1 and 3,653.</p> <p>If you decrease the
                    manual snapshot retention period from its current value,
                    existing manual snapshots that fall outside of the new
                    retention period will return an error. If you want to
                    suppress the errors and delete the snapshots, use the force
                    option. </p>
                  type: integer
                Force:
                  description: "A boolean value indicating whether to override an exception
                    if the retention period has passed. "
                  type: boolean
              required:
                - SnapshotIdentifierList
  /#Action=CancelResize:
    get:
      x-aws-operation-name: CancelResize
      operationId: GET CancelResize
      description: Cancels a resize operation.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResizeProgressMessage"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "481":
          description: ResizeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResizeNotFoundFault"
        "482":
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterStateFault"
        "483":
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationFault"
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: The unique identifier for the cluster that you want to cancel a
            resize operation for.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CancelResize
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CancelResize
      operationId: POST CancelResize
      description: Cancels a resize operation.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResizeProgressMessage"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "481":
          description: ResizeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResizeNotFoundFault"
        "482":
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterStateFault"
        "483":
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CancelResize
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterIdentifier:
                  description: The unique identifier for the cluster that you want to
                    cancel a resize operation for.
                  type: string
              required:
                - ClusterIdentifier
  /#Action=CopyClusterSnapshot:
    get:
      x-aws-operation-name: CopyClusterSnapshot
      operationId: GET CopyClusterSnapshot
      description: <p>Copies the specified automated cluster snapshot to a new manual
        cluster snapshot. The source must be an automated snapshot and it must
        be in the available state.</p> <p>When you delete a cluster, Amazon
        Redshift deletes any automated snapshots of the cluster. Also, when the
        retention period of the snapshot expires, Amazon Redshift automatically
        deletes it. If you want to keep an automated snapshot for a longer
        period, you can make a manual copy of the snapshot. Manual snapshots are
        retained until you delete them.</p> <p> For more information about
        working with snapshots, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon
        Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CopyClusterSnapshotResult"
        "480":
          description: ClusterSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotAlreadyExistsFault"
        "481":
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotNotFoundFault"
        "482":
          description: InvalidClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSnapshotStateFault"
        "483":
          description: ClusterSnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotQuotaExceededFault"
        "484":
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRetentionPeriodFault"
      parameters:
        - name: SourceSnapshotIdentifier
          in: query
          required: true
          description: <p>The identifier for the source snapshot.</p> <p>Constraints:</p>
            <ul> <li> <p>Must be the identifier for a valid automated snapshot
            whose state is <code>available</code>.</p> </li> </ul>
          schema:
            type: string
        - name: SourceSnapshotClusterIdentifier
          in: query
          required: false
          description: <p>The identifier of the cluster the source snapshot was created
            from. This parameter is required if your IAM user has a policy
            containing a snapshot resource element that specifies anything other
            than * for the cluster name.</p> <p>Constraints:</p> <ul> <li>
            <p>Must be the identifier for a valid cluster.</p> </li> </ul>
          schema:
            type: string
        - name: TargetSnapshotIdentifier
          in: query
          required: true
          description: <p>The identifier given to the new manual snapshot.</p>
            <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty, or
            blank.</p> </li> <li> <p>Must contain from 1 to 255 alphanumeric
            characters or hyphens.</p> </li> <li> <p>First character must be a
            letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two
            consecutive hyphens.</p> </li> <li> <p>Must be unique for the AWS
            account that is making the request.</p> </li> </ul>
          schema:
            type: string
        - name: ManualSnapshotRetentionPeriod
          in: query
          required: false
          description: <p>The number of days that a manual snapshot is retained. If the
            value is -1, the manual snapshot is retained indefinitely. </p>
            <p>The value must be either -1 or an integer between 1 and
            3,653.</p> <p>The default value is -1.</p>
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CopyClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CopyClusterSnapshot
      operationId: POST CopyClusterSnapshot
      description: <p>Copies the specified automated cluster snapshot to a new manual
        cluster snapshot. The source must be an automated snapshot and it must
        be in the available state.</p> <p>When you delete a cluster, Amazon
        Redshift deletes any automated snapshots of the cluster. Also, when the
        retention period of the snapshot expires, Amazon Redshift automatically
        deletes it. If you want to keep an automated snapshot for a longer
        period, you can make a manual copy of the snapshot. Manual snapshots are
        retained until you delete them.</p> <p> For more information about
        working with snapshots, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon
        Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CopyClusterSnapshotResult"
        "480":
          description: ClusterSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotAlreadyExistsFault"
        "481":
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotNotFoundFault"
        "482":
          description: InvalidClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSnapshotStateFault"
        "483":
          description: ClusterSnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotQuotaExceededFault"
        "484":
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRetentionPeriodFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CopyClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SourceSnapshotIdentifier:
                  description: <p>The identifier for the source snapshot.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must be the identifier for
                    a valid automated snapshot whose state is
                    <code>available</code>.</p> </li> </ul>
                  type: string
                SourceSnapshotClusterIdentifier:
                  description: <p>The identifier of the cluster the source snapshot was
                    created from. This parameter is required if your IAM user
                    has a policy containing a snapshot resource element that
                    specifies anything other than * for the cluster name.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must be the identifier for
                    a valid cluster.</p> </li> </ul>
                  type: string
                TargetSnapshotIdentifier:
                  description: <p>The identifier given to the new manual snapshot.</p>
                    <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty, or
                    blank.</p> </li> <li> <p>Must contain from 1 to 255
                    alphanumeric characters or hyphens.</p> </li> <li> <p>First
                    character must be a letter.</p> </li> <li> <p>Cannot end
                    with a hyphen or contain two consecutive hyphens.</p> </li>
                    <li> <p>Must be unique for the AWS account that is making
                    the request.</p> </li> </ul>
                  type: string
                ManualSnapshotRetentionPeriod:
                  description: <p>The number of days that a manual snapshot is retained. If
                    the value is -1, the manual snapshot is retained
                    indefinitely. </p> <p>The value must be either -1 or an
                    integer between 1 and 3,653.</p> <p>The default value is
                    -1.</p>
                  type: integer
              required:
                - SourceSnapshotIdentifier
                - TargetSnapshotIdentifier
  /#Action=CreateCluster:
    get:
      x-aws-operation-name: CreateCluster
      operationId: GET CreateCluster
      description: <p>Creates a new cluster.</p> <p>To create a cluster in Virtual Private
        Cloud (VPC), you must provide a cluster subnet group name. The cluster
        subnet group identifies the subnets of your VPC that Amazon Redshift
        uses when creating the cluster. For more information about managing
        clusters, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon
        Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateClusterResult"
        "480":
          description: ClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterAlreadyExistsFault"
        "481":
          description: InsufficientClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientClusterCapacityFault"
        "482":
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterParameterGroupNotFoundFault"
        "483":
          description: ClusterSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSecurityGroupNotFoundFault"
        "484":
          description: ClusterQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterQuotaExceededFault"
        "485":
          description: NumberOfNodesQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NumberOfNodesQuotaExceededFault"
        "486":
          description: NumberOfNodesPerClusterLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NumberOfNodesPerClusterLimitExceededFau\
                  lt"
        "487":
          description: ClusterSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSubnetGroupNotFoundFault"
        "488":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "489":
          description: InvalidClusterSubnetGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSubnetGroupStateFault"
        "490":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
        "491":
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperation"
        "492":
          description: HsmClientCertificateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmClientCertificateNotFoundFault"
        "493":
          description: HsmConfigurationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmConfigurationNotFoundFault"
        "494":
          description: InvalidElasticIpFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidElasticIpFault"
        "495":
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededFault"
        "496":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
        "497":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "498":
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DependentServiceRequestThrottlingFault"
        "499":
          description: InvalidClusterTrackFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterTrackFault"
        "500":
          description: SnapshotScheduleNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotScheduleNotFoundFault"
        "501":
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRetentionPeriodFault"
      parameters:
        - name: DBName
          in: query
          required: false
          description: '<p>The name of the first database to be created when the cluster is
            created.</p> <p>To create additional databases after the cluster is
            created, connect to the cluster with a SQL client and use SQL
            commands to create a database. For more information, go to <a
            href="https://docs.aws.amazon.com/redshift/latest/dg/t_creating_database.html">Create
            a Database</a> in the Amazon Redshift Database Developer Guide. </p>
            <p>Default: <code>dev</code> </p> <p>Constraints:</p> <ul> <li>
            <p>Must contain 1 to 64 alphanumeric characters.</p> </li> <li>
            <p>Must contain only lowercase letters.</p> </li> <li> <p>Cannot be
            a word that is reserved by the service. A list of reserved words can
            be found in <a
            href="https://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html">Reserved
            Words</a> in the Amazon Redshift Database Developer Guide. </p>
            </li> </ul>'
          schema:
            type: string
        - name: ClusterIdentifier
          in: query
          required: true
          description: "<p>A unique identifier for the cluster. You use this identifier to
            refer to the cluster for any subsequent cluster operations such as
            deleting or modifying. The identifier also appears in the Amazon
            Redshift console.</p> <p>Constraints:</p> <ul> <li> <p>Must contain
            from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li>
            <p>Alphabetic characters must be lowercase.</p> </li> <li> <p>First
            character must be a letter.</p> </li> <li> <p>Cannot end with a
            hyphen or contain two consecutive hyphens.</p> </li> <li> <p>Must be
            unique for all clusters within an AWS account.</p> </li> </ul>
            <p>Example: <code>myexamplecluster</code> </p>"
          schema:
            type: string
        - name: ClusterType
          in: query
          required: false
          description: "<p>The type of the cluster. When cluster type is specified as</p>
            <ul> <li> <p> <code>single-node</code>, the <b>NumberOfNodes</b>
            parameter is not required.</p> </li> <li> <p>
            <code>multi-node</code>, the <b>NumberOfNodes</b> parameter is
            required.</p> </li> </ul> <p>Valid Values: <code>multi-node</code> |
            <code>single-node</code> </p> <p>Default: <code>multi-node</code>
            </p>"
          schema:
            type: string
        - name: NodeType
          in: query
          required: true
          description: '<p>The node type to be provisioned for the cluster. For information
            about node types, go to <a
            href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#how-many-nodes">
            Working with Clusters</a> in the <i>Amazon Redshift Cluster
            Management Guide</i>. </p> <p>Valid Values: <code>ds2.xlarge</code>
            | <code>ds2.8xlarge</code> | <code>ds2.xlarge</code> |
            <code>ds2.8xlarge</code> | <code>dc1.large</code> |
            <code>dc1.8xlarge</code> | <code>dc2.large</code> |
            <code>dc2.8xlarge</code> </p>'
          schema:
            type: string
        - name: MasterUsername
          in: query
          required: true
          description: <p>The user name associated with the master user account for the
            cluster that is being created.</p> <p>Constraints:</p> <ul> <li>
            <p>Must be 1 - 128 alphanumeric characters. The user name can't be
            <code>PUBLIC</code>.</p> </li> <li> <p>First character must be a
            letter.</p> </li> <li> <p>Cannot be a reserved word. A list of
            reserved words can be found in <a
            href="https://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html">Reserved
            Words</a> in the Amazon Redshift Database Developer Guide. </p>
            </li> </ul>
          schema:
            type: string
        - name: MasterUserPassword
          in: query
          required: true
          description: <p>The password associated with the master user account for the
            cluster that is being created.</p> <p>Constraints:</p> <ul> <li>
            <p>Must be between 8 and 64 characters in length.</p> </li> <li>
            <p>Must contain at least one uppercase letter.</p> </li> <li>
            <p>Must contain at least one lowercase letter.</p> </li> <li>
            <p>Must contain one number.</p> </li> <li> <p>Can be any printable
            ASCII character (ASCII code 33 to 126) except ' (single quote), "
            (double quote), \, /, @, or space.</p> </li> </ul>
          schema:
            type: string
        - name: ClusterSecurityGroups
          in: query
          required: false
          description: "<p>A list of security groups to be associated with this
            cluster.</p> <p>Default: The default cluster security group for
            Amazon Redshift.</p>"
          schema:
            type: array
            items:
              type: string
        - name: VpcSecurityGroupIds
          in: query
          required: false
          description: "<p>A list of Virtual Private Cloud (VPC) security groups to be
            associated with the cluster.</p> <p>Default: The default VPC
            security group is associated with the cluster.</p>"
          schema:
            type: array
            items:
              type: string
        - name: ClusterSubnetGroupName
          in: query
          required: false
          description: <p>The name of a cluster subnet group to be associated with this
            cluster.</p> <p>If this parameter is not provided the resulting
            cluster will be deployed outside virtual private cloud (VPC).</p>
          schema:
            type: string
        - name: AvailabilityZone
          in: query
          required: false
          description: "<p>The EC2 Availability Zone (AZ) in which you want Amazon Redshift
            to provision the cluster. For example, if you have several EC2
            instances running in a specific Availability Zone, then you might
            want the cluster to be provisioned in the same zone in order to
            decrease network latency.</p> <p>Default: A random, system-chosen
            Availability Zone in the region that is specified by the
            endpoint.</p> <p>Example: <code>us-east-1d</code> </p>
            <p>Constraint: The specified Availability Zone must be in the same
            region as the current endpoint.</p>"
          schema:
            type: string
        - name: PreferredMaintenanceWindow
          in: query
          required: false
          description: '<p>The weekly time range (in UTC) during which automated cluster
            maintenance can occur.</p> <p> Format:
            <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p> Default: A 30-minute
            window selected at random from an 8-hour block of time per region,
            occurring on a random day of the week. For more information about
            the time blocks for each region, see <a
            href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#rs-maintenance-windows">Maintenance
            Windows</a> in Amazon Redshift Cluster Management Guide.</p>
            <p>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</p>
            <p>Constraints: Minimum 30-minute window.</p>'
          schema:
            type: string
        - name: ClusterParameterGroupName
          in: query
          required: false
          description: '<p>The name of the parameter group to be associated with this
            cluster.</p> <p>Default: The default Amazon Redshift cluster
            parameter group. For information about the default parameter group,
            go to <a
            href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Working
            with Amazon Redshift Parameter Groups</a> </p> <p>Constraints:</p>
            <ul> <li> <p>Must be 1 to 255 alphanumeric characters or
            hyphens.</p> </li> <li> <p>First character must be a letter.</p>
            </li> <li> <p>Cannot end with a hyphen or contain two consecutive
            hyphens.</p> </li> </ul>'
          schema:
            type: string
        - name: AutomatedSnapshotRetentionPeriod
          in: query
          required: false
          description: "<p>The number of days that automated snapshots are retained. If the
            value is 0, automated snapshots are disabled. Even if automated
            snapshots are disabled, you can still create manual snapshots when
            you want with <a>CreateClusterSnapshot</a>. </p> <p>Default:
            <code>1</code> </p> <p>Constraints: Must be a value from 0 to
            35.</p>"
          schema:
            type: integer
        - name: ManualSnapshotRetentionPeriod
          in: query
          required: false
          description: <p>The default number of days to retain a manual snapshot. If the
            value is -1, the snapshot is retained indefinitely. This setting
            doesn't change the retention period of existing snapshots.</p>
            <p>The value must be either -1 or an integer between 1 and
            3,653.</p>
          schema:
            type: integer
        - name: Port
          in: query
          required: false
          description: "<p>The port number on which the cluster accepts incoming
            connections.</p> <p>The cluster is accessible only via the JDBC and
            ODBC connection strings. Part of the connection string requires the
            port on which the cluster will listen for incoming connections.</p>
            <p>Default: <code>5439</code> </p> <p>Valid Values:
            <code>1150-65535</code> </p>"
          schema:
            type: integer
        - name: ClusterVersion
          in: query
          required: false
          description: "<p>The version of the Amazon Redshift engine software that you want
            to deploy on the cluster.</p> <p>The version selected runs on all
            the nodes in the cluster.</p> <p>Constraints: Only version 1.0 is
            currently available.</p> <p>Example: <code>1.0</code> </p>"
          schema:
            type: string
        - name: AllowVersionUpgrade
          in: query
          required: false
          description: "<p>If <code>true</code>, major version upgrades can be applied
            during the maintenance window to the Amazon Redshift engine that is
            running on the cluster.</p> <p>When a new major version of the
            Amazon Redshift engine is released, you can request that the service
            automatically apply upgrades during the maintenance window to the
            Amazon Redshift engine that is running on your cluster.</p>
            <p>Default: <code>true</code> </p>"
          schema:
            type: boolean
        - name: NumberOfNodes
          in: query
          required: false
          description: "<p>The number of compute nodes in the cluster. This parameter is
            required when the <b>ClusterType</b> parameter is specified as
            <code>multi-node</code>. </p> <p>For information about determining
            how many nodes you need, go to <a
            href=\"https://docs.aws.amazon.com/redshift/latest/mgmt/working-wit\
            h-clusters.html#how-many-nodes\"> Working with Clusters</a> in the
            <i>Amazon Redshift Cluster Management Guide</i>. </p> <p>If you
            don't specify this parameter, you get a single-node cluster. When
            requesting a multi-node cluster, you must specify the number of
            nodes that you want in the cluster.</p> <p>Default: <code>1</code>
            </p> <p>Constraints: Value must be at least 1 and no more than
            100.</p>"
          schema:
            type: integer
        - name: PubliclyAccessible
          in: query
          required: false
          description: "If <code>true</code>, the cluster can be accessed from a public
            network. "
          schema:
            type: boolean
        - name: Encrypted
          in: query
          required: false
          description: "<p>If <code>true</code>, the data in the cluster is encrypted at
            rest. </p> <p>Default: false</p>"
          schema:
            type: boolean
        - name: HsmClientCertificateIdentifier
          in: query
          required: false
          description: Specifies the name of the HSM client certificate the Amazon Redshift
            cluster uses to retrieve the data encryption keys stored in an HSM.
          schema:
            type: string
        - name: HsmConfigurationIdentifier
          in: query
          required: false
          description: Specifies the name of the HSM configuration that contains the
            information the Amazon Redshift cluster can use to retrieve and
            store keys in an HSM.
          schema:
            type: string
        - name: ElasticIp
          in: query
          required: false
          description: '<p>The Elastic IP (EIP) address for the cluster.</p>
            <p>Constraints: The cluster must be provisioned in EC2-VPC and
            publicly-accessible through an Internet gateway. For more
            information about provisioning clusters in EC2-VPC, go to <a
            href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#cluster-platforms">Supported
            Platforms to Launch Your Cluster</a> in the Amazon Redshift Cluster
            Management Guide.</p>'
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: A list of tag instances.
          schema:
            type: array
            items:
              type: string
        - name: KmsKeyId
          in: query
          required: false
          description: The AWS Key Management Service (KMS) key ID of the encryption key
            that you want to use to encrypt data in the cluster.
          schema:
            type: string
        - name: EnhancedVpcRouting
          in: query
          required: false
          description: '<p>An option that specifies whether to create the cluster with
            enhanced VPC routing enabled. To create a cluster that uses enhanced
            VPC routing, the cluster must be in a VPC. For more information, see
            <a
            href="https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html">Enhanced
            VPC Routing</a> in the Amazon Redshift Cluster Management Guide.</p>
            <p>If this option is <code>true</code>, enhanced VPC routing is
            enabled. </p> <p>Default: false</p>'
          schema:
            type: boolean
        - name: AdditionalInfo
          in: query
          required: false
          description: Reserved.
          schema:
            type: string
        - name: IamRoles
          in: query
          required: false
          description: <p>A list of AWS Identity and Access Management (IAM) roles that can
            be used by the cluster to access other AWS services. You must supply
            the IAM roles in their Amazon Resource Name (ARN) format. You can
            supply up to 10 IAM roles in a single request.</p> <p>A cluster can
            have up to 10 IAM roles associated with it at any time.</p>
          schema:
            type: array
            items:
              type: string
        - name: MaintenanceTrackName
          in: query
          required: false
          description: An optional parameter for the name of the maintenance track for the
            cluster. If you don't provide a maintenance track name, the cluster
            is assigned to the <code>current</code> track.
          schema:
            type: string
        - name: SnapshotScheduleIdentifier
          in: query
          required: false
          description: A unique identifier for the snapshot schedule.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateCluster
      operationId: POST CreateCluster
      description: <p>Creates a new cluster.</p> <p>To create a cluster in Virtual Private
        Cloud (VPC), you must provide a cluster subnet group name. The cluster
        subnet group identifies the subnets of your VPC that Amazon Redshift
        uses when creating the cluster. For more information about managing
        clusters, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon
        Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateClusterResult"
        "480":
          description: ClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterAlreadyExistsFault"
        "481":
          description: InsufficientClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientClusterCapacityFault"
        "482":
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterParameterGroupNotFoundFault"
        "483":
          description: ClusterSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSecurityGroupNotFoundFault"
        "484":
          description: ClusterQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterQuotaExceededFault"
        "485":
          description: NumberOfNodesQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NumberOfNodesQuotaExceededFault"
        "486":
          description: NumberOfNodesPerClusterLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NumberOfNodesPerClusterLimitExceededFau\
                  lt"
        "487":
          description: ClusterSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSubnetGroupNotFoundFault"
        "488":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "489":
          description: InvalidClusterSubnetGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSubnetGroupStateFault"
        "490":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
        "491":
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperation"
        "492":
          description: HsmClientCertificateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmClientCertificateNotFoundFault"
        "493":
          description: HsmConfigurationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmConfigurationNotFoundFault"
        "494":
          description: InvalidElasticIpFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidElasticIpFault"
        "495":
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededFault"
        "496":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
        "497":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "498":
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DependentServiceRequestThrottlingFault"
        "499":
          description: InvalidClusterTrackFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterTrackFault"
        "500":
          description: SnapshotScheduleNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotScheduleNotFoundFault"
        "501":
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRetentionPeriodFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DBName:
                  description: '<p>The name of the first database to be created when the
                    cluster is created.</p> <p>To create additional databases
                    after the cluster is created, connect to the cluster with a
                    SQL client and use SQL commands to create a database. For
                    more information, go to <a
                    href="https://docs.aws.amazon.com/redshift/latest/dg/t_creating_database.html">Create
                    a Database</a> in the Amazon Redshift Database Developer
                    Guide. </p> <p>Default: <code>dev</code> </p>
                    <p>Constraints:</p> <ul> <li> <p>Must contain 1 to 64
                    alphanumeric characters.</p> </li> <li> <p>Must contain only
                    lowercase letters.</p> </li> <li> <p>Cannot be a word that
                    is reserved by the service. A list of reserved words can be
                    found in <a
                    href="https://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html">Reserved
                    Words</a> in the Amazon Redshift Database Developer Guide.
                    </p> </li> </ul>'
                  type: string
                ClusterIdentifier:
                  description: "<p>A unique identifier for the cluster. You use this
                    identifier to refer to the cluster for any subsequent
                    cluster operations such as deleting or modifying. The
                    identifier also appears in the Amazon Redshift console.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63
                    alphanumeric characters or hyphens.</p> </li> <li>
                    <p>Alphabetic characters must be lowercase.</p> </li> <li>
                    <p>First character must be a letter.</p> </li> <li>
                    <p>Cannot end with a hyphen or contain two consecutive
                    hyphens.</p> </li> <li> <p>Must be unique for all clusters
                    within an AWS account.</p> </li> </ul> <p>Example:
                    <code>myexamplecluster</code> </p>"
                  type: string
                ClusterType:
                  description: "<p>The type of the cluster. When cluster type is specified
                    as</p> <ul> <li> <p> <code>single-node</code>, the
                    <b>NumberOfNodes</b> parameter is not required.</p> </li>
                    <li> <p> <code>multi-node</code>, the <b>NumberOfNodes</b>
                    parameter is required.</p> </li> </ul> <p>Valid Values:
                    <code>multi-node</code> | <code>single-node</code> </p>
                    <p>Default: <code>multi-node</code> </p>"
                  type: string
                NodeType:
                  description: '<p>The node type to be provisioned for the cluster. For
                    information about node types, go to <a
                    href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#how-many-nodes">
                    Working with Clusters</a> in the <i>Amazon Redshift Cluster
                    Management Guide</i>. </p> <p>Valid Values:
                    <code>ds2.xlarge</code> | <code>ds2.8xlarge</code> |
                    <code>ds2.xlarge</code> | <code>ds2.8xlarge</code> |
                    <code>dc1.large</code> | <code>dc1.8xlarge</code> |
                    <code>dc2.large</code> | <code>dc2.8xlarge</code> </p>'
                  type: string
                MasterUsername:
                  description: <p>The user name associated with the master user account for
                    the cluster that is being created.</p> <p>Constraints:</p>
                    <ul> <li> <p>Must be 1 - 128 alphanumeric characters. The
                    user name can't be <code>PUBLIC</code>.</p> </li> <li>
                    <p>First character must be a letter.</p> </li> <li>
                    <p>Cannot be a reserved word. A list of reserved words can
                    be found in <a
                    href="https://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html">Reserved
                    Words</a> in the Amazon Redshift Database Developer Guide.
                    </p> </li> </ul>
                  type: string
                MasterUserPassword:
                  description: <p>The password associated with the master user account for
                    the cluster that is being created.</p> <p>Constraints:</p>
                    <ul> <li> <p>Must be between 8 and 64 characters in
                    length.</p> </li> <li> <p>Must contain at least one
                    uppercase letter.</p> </li> <li> <p>Must contain at least
                    one lowercase letter.</p> </li> <li> <p>Must contain one
                    number.</p> </li> <li> <p>Can be any printable ASCII
                    character (ASCII code 33 to 126) except ' (single quote), "
                    (double quote), \, /, @, or space.</p> </li> </ul>
                  type: string
                ClusterSecurityGroups:
                  description: "<p>A list of security groups to be associated with this
                    cluster.</p> <p>Default: The default cluster security group
                    for Amazon Redshift.</p>"
                  type: array
                  items:
                    type: string
                VpcSecurityGroupIds:
                  description: "<p>A list of Virtual Private Cloud (VPC) security groups to
                    be associated with the cluster.</p> <p>Default: The default
                    VPC security group is associated with the cluster.</p>"
                  type: array
                  items:
                    type: string
                ClusterSubnetGroupName:
                  description: <p>The name of a cluster subnet group to be associated with
                    this cluster.</p> <p>If this parameter is not provided the
                    resulting cluster will be deployed outside virtual private
                    cloud (VPC).</p>
                  type: string
                AvailabilityZone:
                  description: "<p>The EC2 Availability Zone (AZ) in which you want Amazon
                    Redshift to provision the cluster. For example, if you have
                    several EC2 instances running in a specific Availability
                    Zone, then you might want the cluster to be provisioned in
                    the same zone in order to decrease network latency.</p>
                    <p>Default: A random, system-chosen Availability Zone in the
                    region that is specified by the endpoint.</p> <p>Example:
                    <code>us-east-1d</code> </p> <p>Constraint: The specified
                    Availability Zone must be in the same region as the current
                    endpoint.</p>"
                  type: string
                PreferredMaintenanceWindow:
                  description: '<p>The weekly time range (in UTC) during which automated
                    cluster maintenance can occur.</p> <p> Format:
                    <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p> Default: A
                    30-minute window selected at random from an 8-hour block of
                    time per region, occurring on a random day of the week. For
                    more information about the time blocks for each region, see
                    <a
                    href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#rs-maintenance-windows">Maintenance
                    Windows</a> in Amazon Redshift Cluster Management Guide.</p>
                    <p>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</p>
                    <p>Constraints: Minimum 30-minute window.</p>'
                  type: string
                ClusterParameterGroupName:
                  description: '<p>The name of the parameter group to be associated with
                    this cluster.</p> <p>Default: The default Amazon Redshift
                    cluster parameter group. For information about the default
                    parameter group, go to <a
                    href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Working
                    with Amazon Redshift Parameter Groups</a> </p>
                    <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255
                    alphanumeric characters or hyphens.</p> </li> <li> <p>First
                    character must be a letter.</p> </li> <li> <p>Cannot end
                    with a hyphen or contain two consecutive hyphens.</p> </li>
                    </ul>'
                  type: string
                AutomatedSnapshotRetentionPeriod:
                  description: "<p>The number of days that automated snapshots are
                    retained. If the value is 0, automated snapshots are
                    disabled. Even if automated snapshots are disabled, you can
                    still create manual snapshots when you want with
                    <a>CreateClusterSnapshot</a>. </p> <p>Default:
                    <code>1</code> </p> <p>Constraints: Must be a value from 0
                    to 35.</p>"
                  type: integer
                ManualSnapshotRetentionPeriod:
                  description: <p>The default number of days to retain a manual snapshot.
                    If the value is -1, the snapshot is retained indefinitely.
                    This setting doesn't change the retention period of existing
                    snapshots.</p> <p>The value must be either -1 or an integer
                    between 1 and 3,653.</p>
                  type: integer
                Port:
                  description: "<p>The port number on which the cluster accepts incoming
                    connections.</p> <p>The cluster is accessible only via the
                    JDBC and ODBC connection strings. Part of the connection
                    string requires the port on which the cluster will listen
                    for incoming connections.</p> <p>Default: <code>5439</code>
                    </p> <p>Valid Values: <code>1150-65535</code> </p>"
                  type: integer
                ClusterVersion:
                  description: "<p>The version of the Amazon Redshift engine software that
                    you want to deploy on the cluster.</p> <p>The version
                    selected runs on all the nodes in the cluster.</p>
                    <p>Constraints: Only version 1.0 is currently available.</p>
                    <p>Example: <code>1.0</code> </p>"
                  type: string
                AllowVersionUpgrade:
                  description: "<p>If <code>true</code>, major version upgrades can be
                    applied during the maintenance window to the Amazon Redshift
                    engine that is running on the cluster.</p> <p>When a new
                    major version of the Amazon Redshift engine is released, you
                    can request that the service automatically apply upgrades
                    during the maintenance window to the Amazon Redshift engine
                    that is running on your cluster.</p> <p>Default:
                    <code>true</code> </p>"
                  type: boolean
                NumberOfNodes:
                  description: "<p>The number of compute nodes in the cluster. This
                    parameter is required when the <b>ClusterType</b> parameter
                    is specified as <code>multi-node</code>. </p> <p>For
                    information about determining how many nodes you need, go to
                    <a
                    href=\"https://docs.aws.amazon.com/redshift/latest/mgmt/wor\
                    king-with-clusters.html#how-many-nodes\"> Working with
                    Clusters</a> in the <i>Amazon Redshift Cluster Management
                    Guide</i>. </p> <p>If you don't specify this parameter, you
                    get a single-node cluster. When requesting a multi-node
                    cluster, you must specify the number of nodes that you want
                    in the cluster.</p> <p>Default: <code>1</code> </p>
                    <p>Constraints: Value must be at least 1 and no more than
                    100.</p>"
                  type: integer
                PubliclyAccessible:
                  description: "If <code>true</code>, the cluster can be accessed from a
                    public network. "
                  type: boolean
                Encrypted:
                  description: "<p>If <code>true</code>, the data in the cluster is
                    encrypted at rest. </p> <p>Default: false</p>"
                  type: boolean
                HsmClientCertificateIdentifier:
                  description: Specifies the name of the HSM client certificate the Amazon
                    Redshift cluster uses to retrieve the data encryption keys
                    stored in an HSM.
                  type: string
                HsmConfigurationIdentifier:
                  description: Specifies the name of the HSM configuration that contains
                    the information the Amazon Redshift cluster can use to
                    retrieve and store keys in an HSM.
                  type: string
                ElasticIp:
                  description: '<p>The Elastic IP (EIP) address for the cluster.</p>
                    <p>Constraints: The cluster must be provisioned in EC2-VPC
                    and publicly-accessible through an Internet gateway. For
                    more information about provisioning clusters in EC2-VPC, go
                    to <a
                    href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#cluster-platforms">Supported
                    Platforms to Launch Your Cluster</a> in the Amazon Redshift
                    Cluster Management Guide.</p>'
                  type: string
                Tags:
                  description: A list of tag instances.
                  type: array
                  items:
                    type: string
                KmsKeyId:
                  description: The AWS Key Management Service (KMS) key ID of the
                    encryption key that you want to use to encrypt data in the
                    cluster.
                  type: string
                EnhancedVpcRouting:
                  description: '<p>An option that specifies whether to create the cluster
                    with enhanced VPC routing enabled. To create a cluster that
                    uses enhanced VPC routing, the cluster must be in a VPC. For
                    more information, see <a
                    href="https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html">Enhanced
                    VPC Routing</a> in the Amazon Redshift Cluster Management
                    Guide.</p> <p>If this option is <code>true</code>, enhanced
                    VPC routing is enabled. </p> <p>Default: false</p>'
                  type: boolean
                AdditionalInfo:
                  description: Reserved.
                  type: string
                IamRoles:
                  description: <p>A list of AWS Identity and Access Management (IAM) roles
                    that can be used by the cluster to access other AWS
                    services. You must supply the IAM roles in their Amazon
                    Resource Name (ARN) format. You can supply up to 10 IAM
                    roles in a single request.</p> <p>A cluster can have up to
                    10 IAM roles associated with it at any time.</p>
                  type: array
                  items:
                    type: string
                MaintenanceTrackName:
                  description: An optional parameter for the name of the maintenance track
                    for the cluster. If you don't provide a maintenance track
                    name, the cluster is assigned to the <code>current</code>
                    track.
                  type: string
                SnapshotScheduleIdentifier:
                  description: A unique identifier for the snapshot schedule.
                  type: string
              required:
                - ClusterIdentifier
                - NodeType
                - MasterUsername
                - MasterUserPassword
  /#Action=CreateClusterParameterGroup:
    get:
      x-aws-operation-name: CreateClusterParameterGroup
      operationId: GET CreateClusterParameterGroup
      description: <p>Creates an Amazon Redshift parameter group.</p> <p>Creating parameter
        groups is independent of creating clusters. You can associate a cluster
        with a parameter group when you create the cluster. You can also
        associate an existing cluster with a parameter group after the cluster
        is created by using <a>ModifyCluster</a>. </p> <p>Parameters in the
        parameter group define specific behavior that applies to the databases
        you create on the cluster. For more information about parameters and
        parameter groups, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon
        Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster
        Management Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateClusterParameterGroupResult"
        "480":
          description: ClusterParameterGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterParameterGroupQuotaExceededFault"
        "481":
          description: ClusterParameterGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterParameterGroupAlreadyExistsFault"
        "482":
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededFault"
        "483":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: ParameterGroupName
          in: query
          required: true
          description: <p>The name of the cluster parameter group.</p> <p>Constraints:</p>
            <ul> <li> <p>Must be 1 to 255 alphanumeric characters or hyphens</p>
            </li> <li> <p>First character must be a letter.</p> </li> <li>
            <p>Cannot end with a hyphen or contain two consecutive hyphens.</p>
            </li> <li> <p>Must be unique withing your AWS account.</p> </li>
            </ul> <note> <p>This value is stored as a lower-case string.</p>
            </note>
          schema:
            type: string
        - name: ParameterGroupFamily
          in: query
          required: true
          description: <p>The Amazon Redshift engine version to which the cluster parameter
            group applies. The cluster engine version determines the set of
            parameters.</p> <p>To get a list of valid parameter group family
            names, you can call <a>DescribeClusterParameterGroups</a>. By
            default, Amazon Redshift returns a list of all the parameter groups
            that are owned by your AWS account, including the default parameter
            groups for each Amazon Redshift engine version. The parameter group
            family names associated with the default parameter groups provide
            you the valid values. For example, a valid family name is
            "redshift-1.0". </p>
          schema:
            type: string
        - name: Description
          in: query
          required: true
          description: A description of the parameter group.
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: A list of tag instances.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateClusterParameterGroup
      operationId: POST CreateClusterParameterGroup
      description: <p>Creates an Amazon Redshift parameter group.</p> <p>Creating parameter
        groups is independent of creating clusters. You can associate a cluster
        with a parameter group when you create the cluster. You can also
        associate an existing cluster with a parameter group after the cluster
        is created by using <a>ModifyCluster</a>. </p> <p>Parameters in the
        parameter group define specific behavior that applies to the databases
        you create on the cluster. For more information about parameters and
        parameter groups, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon
        Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster
        Management Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateClusterParameterGroupResult"
        "480":
          description: ClusterParameterGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterParameterGroupQuotaExceededFault"
        "481":
          description: ClusterParameterGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterParameterGroupAlreadyExistsFault"
        "482":
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededFault"
        "483":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ParameterGroupName:
                  description: <p>The name of the cluster parameter group.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255
                    alphanumeric characters or hyphens</p> </li> <li> <p>First
                    character must be a letter.</p> </li> <li> <p>Cannot end
                    with a hyphen or contain two consecutive hyphens.</p> </li>
                    <li> <p>Must be unique withing your AWS account.</p> </li>
                    </ul> <note> <p>This value is stored as a lower-case
                    string.</p> </note>
                  type: string
                ParameterGroupFamily:
                  description: <p>The Amazon Redshift engine version to which the cluster
                    parameter group applies. The cluster engine version
                    determines the set of parameters.</p> <p>To get a list of
                    valid parameter group family names, you can call
                    <a>DescribeClusterParameterGroups</a>. By default, Amazon
                    Redshift returns a list of all the parameter groups that are
                    owned by your AWS account, including the default parameter
                    groups for each Amazon Redshift engine version. The
                    parameter group family names associated with the default
                    parameter groups provide you the valid values. For example,
                    a valid family name is "redshift-1.0". </p>
                  type: string
                Description:
                  description: A description of the parameter group.
                  type: string
                Tags:
                  description: A list of tag instances.
                  type: array
                  items:
                    type: string
              required:
                - ParameterGroupName
                - ParameterGroupFamily
                - Description
  /#Action=CreateClusterSecurityGroup:
    get:
      x-aws-operation-name: CreateClusterSecurityGroup
      operationId: GET CreateClusterSecurityGroup
      description: <p>Creates a new Amazon Redshift security group. You use security groups
        to control access to non-VPC clusters.</p> <p> For information about
        managing security groups, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Amazon
        Redshift Cluster Security Groups</a> in the <i>Amazon Redshift Cluster
        Management Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateClusterSecurityGroupResult"
        "480":
          description: ClusterSecurityGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSecurityGroupAlreadyExistsFault"
        "481":
          description: ClusterSecurityGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSecurityGroupQuotaExceededFault"
        "482":
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededFault"
        "483":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: ClusterSecurityGroupName
          in: query
          required: true
          description: '<p>The name for the security group. Amazon Redshift stores the
            value as a lowercase string.</p> <p>Constraints:</p> <ul> <li>
            <p>Must contain no more than 255 alphanumeric characters or
            hyphens.</p> </li> <li> <p>Must not be "Default".</p> </li> <li>
            <p>Must be unique for all security groups that are created by your
            AWS account.</p> </li> </ul> <p>Example:
            <code>examplesecuritygroup</code> </p>'
          schema:
            type: string
        - name: Description
          in: query
          required: true
          description: A description for the security group.
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: A list of tag instances.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateClusterSecurityGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateClusterSecurityGroup
      operationId: POST CreateClusterSecurityGroup
      description: <p>Creates a new Amazon Redshift security group. You use security groups
        to control access to non-VPC clusters.</p> <p> For information about
        managing security groups, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Amazon
        Redshift Cluster Security Groups</a> in the <i>Amazon Redshift Cluster
        Management Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateClusterSecurityGroupResult"
        "480":
          description: ClusterSecurityGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSecurityGroupAlreadyExistsFault"
        "481":
          description: ClusterSecurityGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSecurityGroupQuotaExceededFault"
        "482":
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededFault"
        "483":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateClusterSecurityGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterSecurityGroupName:
                  description: '<p>The name for the security group. Amazon Redshift stores
                    the value as a lowercase string.</p> <p>Constraints:</p>
                    <ul> <li> <p>Must contain no more than 255 alphanumeric
                    characters or hyphens.</p> </li> <li> <p>Must not be
                    "Default".</p> </li> <li> <p>Must be unique for all security
                    groups that are created by your AWS account.</p> </li> </ul>
                    <p>Example: <code>examplesecuritygroup</code> </p>'
                  type: string
                Description:
                  description: A description for the security group.
                  type: string
                Tags:
                  description: A list of tag instances.
                  type: array
                  items:
                    type: string
              required:
                - ClusterSecurityGroupName
                - Description
  /#Action=CreateClusterSnapshot:
    get:
      x-aws-operation-name: CreateClusterSnapshot
      operationId: GET CreateClusterSnapshot
      description: <p>Creates a manual snapshot of the specified cluster. The cluster must
        be in the <code>available</code> state. </p> <p> For more information
        about working with snapshots, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon
        Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateClusterSnapshotResult"
        "480":
          description: ClusterSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotAlreadyExistsFault"
        "481":
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterStateFault"
        "482":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "483":
          description: ClusterSnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotQuotaExceededFault"
        "484":
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededFault"
        "485":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
        "486":
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRetentionPeriodFault"
      parameters:
        - name: SnapshotIdentifier
          in: query
          required: true
          description: "<p>A unique identifier for the snapshot that you are requesting.
            This identifier must be unique for all snapshots within the AWS
            account.</p> <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty,
            or blank</p> </li> <li> <p>Must contain from 1 to 255 alphanumeric
            characters or hyphens</p> </li> <li> <p>First character must be a
            letter</p> </li> <li> <p>Cannot end with a hyphen or contain two
            consecutive hyphens</p> </li> </ul> <p>Example:
            <code>my-snapshot-id</code> </p>"
          schema:
            type: string
        - name: ClusterIdentifier
          in: query
          required: true
          description: The cluster identifier for which you want a snapshot.
          schema:
            type: string
        - name: ManualSnapshotRetentionPeriod
          in: query
          required: false
          description: <p>The number of days that a manual snapshot is retained. If the
            value is -1, the manual snapshot is retained indefinitely. </p>
            <p>The value must be either -1 or an integer between 1 and
            3,653.</p> <p>The default value is -1.</p>
          schema:
            type: integer
        - name: Tags
          in: query
          required: false
          description: A list of tag instances.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateClusterSnapshot
      operationId: POST CreateClusterSnapshot
      description: <p>Creates a manual snapshot of the specified cluster. The cluster must
        be in the <code>available</code> state. </p> <p> For more information
        about working with snapshots, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon
        Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateClusterSnapshotResult"
        "480":
          description: ClusterSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotAlreadyExistsFault"
        "481":
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterStateFault"
        "482":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "483":
          description: ClusterSnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotQuotaExceededFault"
        "484":
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededFault"
        "485":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
        "486":
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRetentionPeriodFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SnapshotIdentifier:
                  description: "<p>A unique identifier for the snapshot that you are
                    requesting. This identifier must be unique for all snapshots
                    within the AWS account.</p> <p>Constraints:</p> <ul> <li>
                    <p>Cannot be null, empty, or blank</p> </li> <li> <p>Must
                    contain from 1 to 255 alphanumeric characters or hyphens</p>
                    </li> <li> <p>First character must be a letter</p> </li>
                    <li> <p>Cannot end with a hyphen or contain two consecutive
                    hyphens</p> </li> </ul> <p>Example:
                    <code>my-snapshot-id</code> </p>"
                  type: string
                ClusterIdentifier:
                  description: The cluster identifier for which you want a snapshot.
                  type: string
                ManualSnapshotRetentionPeriod:
                  description: <p>The number of days that a manual snapshot is retained. If
                    the value is -1, the manual snapshot is retained
                    indefinitely. </p> <p>The value must be either -1 or an
                    integer between 1 and 3,653.</p> <p>The default value is
                    -1.</p>
                  type: integer
                Tags:
                  description: A list of tag instances.
                  type: array
                  items:
                    type: string
              required:
                - SnapshotIdentifier
                - ClusterIdentifier
  /#Action=CreateClusterSubnetGroup:
    get:
      x-aws-operation-name: CreateClusterSubnetGroup
      operationId: GET CreateClusterSubnetGroup
      description: <p>Creates a new Amazon Redshift subnet group. You must provide a list
        of one or more subnets in your existing Amazon Virtual Private Cloud
        (Amazon VPC) when creating Amazon Redshift subnet group.</p> <p> For
        information about subnet groups, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-cluster-subnet-groups.html">Amazon
        Redshift Cluster Subnet Groups</a> in the <i>Amazon Redshift Cluster
        Management Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateClusterSubnetGroupResult"
        "480":
          description: ClusterSubnetGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSubnetGroupAlreadyExistsFault"
        "481":
          description: ClusterSubnetGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSubnetGroupQuotaExceededFault"
        "482":
          description: ClusterSubnetQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSubnetQuotaExceededFault"
        "483":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
        "484":
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperation"
        "485":
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededFault"
        "486":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
        "487":
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DependentServiceRequestThrottlingFault"
      parameters:
        - name: ClusterSubnetGroupName
          in: query
          required: true
          description: '<p>The name for the subnet group. Amazon Redshift stores the value
            as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must
            contain no more than 255 alphanumeric characters or hyphens.</p>
            </li> <li> <p>Must not be "Default".</p> </li> <li> <p>Must be
            unique for all subnet groups that are created by your AWS
            account.</p> </li> </ul> <p>Example: <code>examplesubnetgroup</code>
            </p>'
          schema:
            type: string
        - name: Description
          in: query
          required: true
          description: A description for the subnet group.
          schema:
            type: string
        - name: SubnetIds
          in: query
          required: true
          description: An array of VPC subnet IDs. A maximum of 20 subnets can be modified
            in a single request.
          schema:
            type: array
            items:
              type: string
        - name: Tags
          in: query
          required: false
          description: A list of tag instances.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateClusterSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateClusterSubnetGroup
      operationId: POST CreateClusterSubnetGroup
      description: <p>Creates a new Amazon Redshift subnet group. You must provide a list
        of one or more subnets in your existing Amazon Virtual Private Cloud
        (Amazon VPC) when creating Amazon Redshift subnet group.</p> <p> For
        information about subnet groups, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-cluster-subnet-groups.html">Amazon
        Redshift Cluster Subnet Groups</a> in the <i>Amazon Redshift Cluster
        Management Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateClusterSubnetGroupResult"
        "480":
          description: ClusterSubnetGroupAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSubnetGroupAlreadyExistsFault"
        "481":
          description: ClusterSubnetGroupQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSubnetGroupQuotaExceededFault"
        "482":
          description: ClusterSubnetQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSubnetQuotaExceededFault"
        "483":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
        "484":
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperation"
        "485":
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededFault"
        "486":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
        "487":
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DependentServiceRequestThrottlingFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateClusterSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterSubnetGroupName:
                  description: '<p>The name for the subnet group. Amazon Redshift stores
                    the value as a lowercase string.</p> <p>Constraints:</p>
                    <ul> <li> <p>Must contain no more than 255 alphanumeric
                    characters or hyphens.</p> </li> <li> <p>Must not be
                    "Default".</p> </li> <li> <p>Must be unique for all subnet
                    groups that are created by your AWS account.</p> </li> </ul>
                    <p>Example: <code>examplesubnetgroup</code> </p>'
                  type: string
                Description:
                  description: A description for the subnet group.
                  type: string
                SubnetIds:
                  description: An array of VPC subnet IDs. A maximum of 20 subnets can be
                    modified in a single request.
                  type: array
                  items:
                    type: string
                Tags:
                  description: A list of tag instances.
                  type: array
                  items:
                    type: string
              required:
                - ClusterSubnetGroupName
                - Description
                - SubnetIds
  /#Action=CreateEventSubscription:
    get:
      x-aws-operation-name: CreateEventSubscription
      operationId: GET CreateEventSubscription
      description: <p>Creates an Amazon Redshift event notification subscription. This
        action requires an ARN (Amazon Resource Name) of an Amazon SNS topic
        created by either the Amazon Redshift console, the Amazon SNS console,
        or the Amazon SNS API. To obtain an ARN with Amazon SNS, you must create
        a topic in Amazon SNS and subscribe to the topic. The ARN is displayed
        in the SNS console.</p> <p>You can specify the source type, and lists of
        Amazon Redshift source IDs, event categories, and event severities.
        Notifications will be sent for all events you want that match those
        criteria. For example, you can specify source type = cluster, source ID
        = my-cluster-1 and mycluster2, event categories = Availability, Backup,
        and severity = ERROR. The subscription will only send notifications for
        those ERROR events in the Availability and Backup categories for the
        specified clusters.</p> <p>If you specify both the source type and
        source IDs, such as source type = cluster and source identifier =
        my-cluster-1, notifications will be sent for all the cluster events for
        my-cluster-1. If you specify a source type but do not specify a source
        identifier, you will receive notice of the events for the objects of
        that type in your AWS account. If you do not specify either the
        SourceType nor the SourceIdentifier, you will be notified of events
        generated from all Amazon Redshift sources belonging to your AWS
        account. You must specify a source type if you specify a source ID.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateEventSubscriptionResult"
        "480":
          description: EventSubscriptionQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EventSubscriptionQuotaExceededFault"
        "481":
          description: SubscriptionAlreadyExistFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionAlreadyExistFault"
        "482":
          description: SNSInvalidTopicFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SNSInvalidTopicFault"
        "483":
          description: SNSNoAuthorizationFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SNSNoAuthorizationFault"
        "484":
          description: SNSTopicArnNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SNSTopicArnNotFoundFault"
        "485":
          description: SubscriptionEventIdNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionEventIdNotFoundFault"
        "486":
          description: SubscriptionCategoryNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionCategoryNotFoundFault"
        "487":
          description: SubscriptionSeverityNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionSeverityNotFoundFault"
        "488":
          description: SourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SourceNotFoundFault"
        "489":
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededFault"
        "490":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: SubscriptionName
          in: query
          required: true
          description: <p>The name of the event subscription to be created.</p>
            <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty, or
            blank.</p> </li> <li> <p>Must contain from 1 to 255 alphanumeric
            characters or hyphens.</p> </li> <li> <p>First character must be a
            letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two
            consecutive hyphens.</p> </li> </ul>
          schema:
            type: string
        - name: SnsTopicArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the Amazon SNS topic used to
            transmit the event notifications. The ARN is created by Amazon SNS
            when you create a topic and subscribe to it.
          schema:
            type: string
        - name: SourceType
          in: query
          required: false
          description: "<p>The type of source that will be generating the events. For
            example, if you want to be notified of events generated by a
            cluster, you would set this parameter to cluster. If this value is
            not specified, events are returned for all Amazon Redshift objects
            in your AWS account. You must specify a source type in order to
            specify source IDs.</p> <p>Valid values: cluster,
            cluster-parameter-group, cluster-security-group, and
            cluster-snapshot.</p>"
          schema:
            type: string
        - name: SourceIds
          in: query
          required: false
          description: "<p>A list of one or more identifiers of Amazon Redshift source
            objects. All of the objects must be of the same type as was
            specified in the source type parameter. The event subscription will
            return only events generated by the specified objects. If not
            specified, then events are returned for all objects within the
            source type specified.</p> <p>Example: my-cluster-1,
            my-cluster-2</p> <p>Example: my-snapshot-20131010</p>"
          schema:
            type: array
            items:
              type: string
        - name: EventCategories
          in: query
          required: false
          description: "<p>Specifies the Amazon Redshift event categories to be published
            by the event notification subscription.</p> <p>Values:
            configuration, management, monitoring, security</p>"
          schema:
            type: array
            items:
              type: string
        - name: Severity
          in: query
          required: false
          description: "<p>Specifies the Amazon Redshift event severity to be published by
            the event notification subscription.</p> <p>Values: ERROR, INFO</p>"
          schema:
            type: string
        - name: Enabled
          in: query
          required: false
          description: "A boolean value; set to <code>true</code> to activate the
            subscription, and set to <code>false</code> to create the
            subscription but not activate it. "
          schema:
            type: boolean
        - name: Tags
          in: query
          required: false
          description: A list of tag instances.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateEventSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateEventSubscription
      operationId: POST CreateEventSubscription
      description: <p>Creates an Amazon Redshift event notification subscription. This
        action requires an ARN (Amazon Resource Name) of an Amazon SNS topic
        created by either the Amazon Redshift console, the Amazon SNS console,
        or the Amazon SNS API. To obtain an ARN with Amazon SNS, you must create
        a topic in Amazon SNS and subscribe to the topic. The ARN is displayed
        in the SNS console.</p> <p>You can specify the source type, and lists of
        Amazon Redshift source IDs, event categories, and event severities.
        Notifications will be sent for all events you want that match those
        criteria. For example, you can specify source type = cluster, source ID
        = my-cluster-1 and mycluster2, event categories = Availability, Backup,
        and severity = ERROR. The subscription will only send notifications for
        those ERROR events in the Availability and Backup categories for the
        specified clusters.</p> <p>If you specify both the source type and
        source IDs, such as source type = cluster and source identifier =
        my-cluster-1, notifications will be sent for all the cluster events for
        my-cluster-1. If you specify a source type but do not specify a source
        identifier, you will receive notice of the events for the objects of
        that type in your AWS account. If you do not specify either the
        SourceType nor the SourceIdentifier, you will be notified of events
        generated from all Amazon Redshift sources belonging to your AWS
        account. You must specify a source type if you specify a source ID.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateEventSubscriptionResult"
        "480":
          description: EventSubscriptionQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EventSubscriptionQuotaExceededFault"
        "481":
          description: SubscriptionAlreadyExistFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionAlreadyExistFault"
        "482":
          description: SNSInvalidTopicFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SNSInvalidTopicFault"
        "483":
          description: SNSNoAuthorizationFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SNSNoAuthorizationFault"
        "484":
          description: SNSTopicArnNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SNSTopicArnNotFoundFault"
        "485":
          description: SubscriptionEventIdNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionEventIdNotFoundFault"
        "486":
          description: SubscriptionCategoryNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionCategoryNotFoundFault"
        "487":
          description: SubscriptionSeverityNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionSeverityNotFoundFault"
        "488":
          description: SourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SourceNotFoundFault"
        "489":
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededFault"
        "490":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateEventSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SubscriptionName:
                  description: <p>The name of the event subscription to be created.</p>
                    <p>Constraints:</p> <ul> <li> <p>Cannot be null, empty, or
                    blank.</p> </li> <li> <p>Must contain from 1 to 255
                    alphanumeric characters or hyphens.</p> </li> <li> <p>First
                    character must be a letter.</p> </li> <li> <p>Cannot end
                    with a hyphen or contain two consecutive hyphens.</p> </li>
                    </ul>
                  type: string
                SnsTopicArn:
                  description: The Amazon Resource Name (ARN) of the Amazon SNS topic used
                    to transmit the event notifications. The ARN is created by
                    Amazon SNS when you create a topic and subscribe to it.
                  type: string
                SourceType:
                  description: "<p>The type of source that will be generating the events.
                    For example, if you want to be notified of events generated
                    by a cluster, you would set this parameter to cluster. If
                    this value is not specified, events are returned for all
                    Amazon Redshift objects in your AWS account. You must
                    specify a source type in order to specify source IDs.</p>
                    <p>Valid values: cluster, cluster-parameter-group,
                    cluster-security-group, and cluster-snapshot.</p>"
                  type: string
                SourceIds:
                  description: "<p>A list of one or more identifiers of Amazon Redshift
                    source objects. All of the objects must be of the same type
                    as was specified in the source type parameter. The event
                    subscription will return only events generated by the
                    specified objects. If not specified, then events are
                    returned for all objects within the source type
                    specified.</p> <p>Example: my-cluster-1, my-cluster-2</p>
                    <p>Example: my-snapshot-20131010</p>"
                  type: array
                  items:
                    type: string
                EventCategories:
                  description: "<p>Specifies the Amazon Redshift event categories to be
                    published by the event notification subscription.</p>
                    <p>Values: configuration, management, monitoring,
                    security</p>"
                  type: array
                  items:
                    type: string
                Severity:
                  description: "<p>Specifies the Amazon Redshift event severity to be
                    published by the event notification subscription.</p>
                    <p>Values: ERROR, INFO</p>"
                  type: string
                Enabled:
                  description: "A boolean value; set to <code>true</code> to activate the
                    subscription, and set to <code>false</code> to create the
                    subscription but not activate it. "
                  type: boolean
                Tags:
                  description: A list of tag instances.
                  type: array
                  items:
                    type: string
              required:
                - SubscriptionName
                - SnsTopicArn
  /#Action=CreateHsmClientCertificate:
    get:
      x-aws-operation-name: CreateHsmClientCertificate
      operationId: GET CreateHsmClientCertificate
      description: <p>Creates an HSM client certificate that an Amazon Redshift cluster
        will use to connect to the client's HSM in order to store and retrieve
        the keys used to encrypt the cluster databases.</p> <p>The command
        returns a public key, which you must store in the HSM. In addition to
        creating the HSM certificate, you must create an Amazon Redshift HSM
        configuration that provides a cluster the information needed to store
        and use encryption keys in the HSM. For more information, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-HSM.html">Hardware
        Security Modules</a> in the Amazon Redshift Cluster Management
        Guide.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateHsmClientCertificateResult"
        "480":
          description: HsmClientCertificateAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmClientCertificateAlreadyExistsFault"
        "481":
          description: HsmClientCertificateQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmClientCertificateQuotaExceededFault"
        "482":
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededFault"
        "483":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: HsmClientCertificateIdentifier
          in: query
          required: true
          description: The identifier to be assigned to the new HSM client certificate that
            the cluster will use to connect to the HSM to use the database
            encryption keys.
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: A list of tag instances.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateHsmClientCertificate
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateHsmClientCertificate
      operationId: POST CreateHsmClientCertificate
      description: <p>Creates an HSM client certificate that an Amazon Redshift cluster
        will use to connect to the client's HSM in order to store and retrieve
        the keys used to encrypt the cluster databases.</p> <p>The command
        returns a public key, which you must store in the HSM. In addition to
        creating the HSM certificate, you must create an Amazon Redshift HSM
        configuration that provides a cluster the information needed to store
        and use encryption keys in the HSM. For more information, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-HSM.html">Hardware
        Security Modules</a> in the Amazon Redshift Cluster Management
        Guide.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateHsmClientCertificateResult"
        "480":
          description: HsmClientCertificateAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmClientCertificateAlreadyExistsFault"
        "481":
          description: HsmClientCertificateQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmClientCertificateQuotaExceededFault"
        "482":
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededFault"
        "483":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateHsmClientCertificate
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                HsmClientCertificateIdentifier:
                  description: The identifier to be assigned to the new HSM client
                    certificate that the cluster will use to connect to the HSM
                    to use the database encryption keys.
                  type: string
                Tags:
                  description: A list of tag instances.
                  type: array
                  items:
                    type: string
              required:
                - HsmClientCertificateIdentifier
  /#Action=CreateHsmConfiguration:
    get:
      x-aws-operation-name: CreateHsmConfiguration
      operationId: GET CreateHsmConfiguration
      description: <p>Creates an HSM configuration that contains the information required
        by an Amazon Redshift cluster to store and use database encryption keys
        in a Hardware Security Module (HSM). After creating the HSM
        configuration, you can specify it as a parameter when creating a
        cluster. The cluster will then store its encryption keys in the HSM.</p>
        <p>In addition to creating an HSM configuration, you must also create an
        HSM client certificate. For more information, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-HSM.html">Hardware
        Security Modules</a> in the Amazon Redshift Cluster Management
        Guide.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateHsmConfigurationResult"
        "480":
          description: HsmConfigurationAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmConfigurationAlreadyExistsFault"
        "481":
          description: HsmConfigurationQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmConfigurationQuotaExceededFault"
        "482":
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededFault"
        "483":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: HsmConfigurationIdentifier
          in: query
          required: true
          description: The identifier to be assigned to the new Amazon Redshift HSM
            configuration.
          schema:
            type: string
        - name: Description
          in: query
          required: true
          description: A text description of the HSM configuration to be created.
          schema:
            type: string
        - name: HsmIpAddress
          in: query
          required: true
          description: The IP address that the Amazon Redshift cluster must use to access
            the HSM.
          schema:
            type: string
        - name: HsmPartitionName
          in: query
          required: true
          description: The name of the partition in the HSM where the Amazon Redshift
            clusters will store their database encryption keys.
          schema:
            type: string
        - name: HsmPartitionPassword
          in: query
          required: true
          description: The password required to access the HSM partition.
          schema:
            type: string
        - name: HsmServerPublicCertificate
          in: query
          required: true
          description: The HSMs public certificate file. When using Cloud HSM, the file
            name is server.pem.
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: A list of tag instances.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateHsmConfiguration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateHsmConfiguration
      operationId: POST CreateHsmConfiguration
      description: <p>Creates an HSM configuration that contains the information required
        by an Amazon Redshift cluster to store and use database encryption keys
        in a Hardware Security Module (HSM). After creating the HSM
        configuration, you can specify it as a parameter when creating a
        cluster. The cluster will then store its encryption keys in the HSM.</p>
        <p>In addition to creating an HSM configuration, you must also create an
        HSM client certificate. For more information, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-HSM.html">Hardware
        Security Modules</a> in the Amazon Redshift Cluster Management
        Guide.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateHsmConfigurationResult"
        "480":
          description: HsmConfigurationAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmConfigurationAlreadyExistsFault"
        "481":
          description: HsmConfigurationQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmConfigurationQuotaExceededFault"
        "482":
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededFault"
        "483":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateHsmConfiguration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                HsmConfigurationIdentifier:
                  description: The identifier to be assigned to the new Amazon Redshift HSM
                    configuration.
                  type: string
                Description:
                  description: A text description of the HSM configuration to be created.
                  type: string
                HsmIpAddress:
                  description: The IP address that the Amazon Redshift cluster must use to
                    access the HSM.
                  type: string
                HsmPartitionName:
                  description: The name of the partition in the HSM where the Amazon
                    Redshift clusters will store their database encryption keys.
                  type: string
                HsmPartitionPassword:
                  description: The password required to access the HSM partition.
                  type: string
                HsmServerPublicCertificate:
                  description: The HSMs public certificate file. When using Cloud HSM, the
                    file name is server.pem.
                  type: string
                Tags:
                  description: A list of tag instances.
                  type: array
                  items:
                    type: string
              required:
                - HsmConfigurationIdentifier
                - Description
                - HsmIpAddress
                - HsmPartitionName
                - HsmPartitionPassword
                - HsmServerPublicCertificate
  /#Action=CreateSnapshotCopyGrant:
    get:
      x-aws-operation-name: CreateSnapshotCopyGrant
      operationId: GET CreateSnapshotCopyGrant
      description: <p>Creates a snapshot copy grant that permits Amazon Redshift to use a
        customer master key (CMK) from AWS Key Management Service (AWS KMS) to
        encrypt copied snapshots in a destination region.</p> <p> For more
        information about managing snapshot copy grants, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html">Amazon
        Redshift Database Encryption</a> in the <i>Amazon Redshift Cluster
        Management Guide</i>. </p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateSnapshotCopyGrantResult"
        "480":
          description: SnapshotCopyGrantAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotCopyGrantAlreadyExistsFault"
        "481":
          description: SnapshotCopyGrantQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotCopyGrantQuotaExceededFault"
        "482":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "483":
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededFault"
        "484":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
        "485":
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DependentServiceRequestThrottlingFault"
      parameters:
        - name: SnapshotCopyGrantName
          in: query
          required: true
          description: <p>The name of the snapshot copy grant. This name must be unique in
            the region for the AWS account.</p> <p>Constraints:</p> <ul> <li>
            <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p>
            </li> <li> <p>Alphabetic characters must be lowercase.</p> </li>
            <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot
            end with a hyphen or contain two consecutive hyphens.</p> </li> <li>
            <p>Must be unique for all clusters within an AWS account.</p> </li>
            </ul>
          schema:
            type: string
        - name: KmsKeyId
          in: query
          required: false
          description: The unique identifier of the customer master key (CMK) to which to
            grant Amazon Redshift permission. If no key is specified, the
            default key is used.
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: A list of tag instances.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateSnapshotCopyGrant
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateSnapshotCopyGrant
      operationId: POST CreateSnapshotCopyGrant
      description: <p>Creates a snapshot copy grant that permits Amazon Redshift to use a
        customer master key (CMK) from AWS Key Management Service (AWS KMS) to
        encrypt copied snapshots in a destination region.</p> <p> For more
        information about managing snapshot copy grants, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html">Amazon
        Redshift Database Encryption</a> in the <i>Amazon Redshift Cluster
        Management Guide</i>. </p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateSnapshotCopyGrantResult"
        "480":
          description: SnapshotCopyGrantAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotCopyGrantAlreadyExistsFault"
        "481":
          description: SnapshotCopyGrantQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotCopyGrantQuotaExceededFault"
        "482":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "483":
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededFault"
        "484":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
        "485":
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DependentServiceRequestThrottlingFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateSnapshotCopyGrant
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SnapshotCopyGrantName:
                  description: <p>The name of the snapshot copy grant. This name must be
                    unique in the region for the AWS account.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63
                    alphanumeric characters or hyphens.</p> </li> <li>
                    <p>Alphabetic characters must be lowercase.</p> </li> <li>
                    <p>First character must be a letter.</p> </li> <li>
                    <p>Cannot end with a hyphen or contain two consecutive
                    hyphens.</p> </li> <li> <p>Must be unique for all clusters
                    within an AWS account.</p> </li> </ul>
                  type: string
                KmsKeyId:
                  description: The unique identifier of the customer master key (CMK) to
                    which to grant Amazon Redshift permission. If no key is
                    specified, the default key is used.
                  type: string
                Tags:
                  description: A list of tag instances.
                  type: array
                  items:
                    type: string
              required:
                - SnapshotCopyGrantName
  /#Action=CreateSnapshotSchedule:
    get:
      x-aws-operation-name: CreateSnapshotSchedule
      operationId: GET CreateSnapshotSchedule
      description: Creates a new snapshot schedule.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotSchedule"
        "480":
          description: SnapshotScheduleAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotScheduleAlreadyExistsFault"
        "481":
          description: InvalidScheduleFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidScheduleFault"
        "482":
          description: SnapshotScheduleQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotScheduleQuotaExceededFault"
        "483":
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededFault"
        "484":
          description: ScheduleDefinitionTypeUnsupportedFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ScheduleDefinitionTypeUnsupportedFault"
      parameters:
        - name: ScheduleDefinitions
          in: query
          required: false
          description: 'The definition of the snapshot schedule. The definition is made up
            of schedule expressions, for example "cron(30 12 *)" or "rate(12
            hours)". '
          schema:
            type: array
            items:
              type: string
        - name: ScheduleIdentifier
          in: query
          required: false
          description: A unique identifier for a snapshot schedule. Only alphanumeric
            characters are allowed for the identifier.
          schema:
            type: string
        - name: ScheduleDescription
          in: query
          required: false
          description: The description of the snapshot schedule.
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: An optional set of tags you can use to search for the schedule.
          schema:
            type: array
            items:
              type: string
        - name: DryRun
          in: query
          required: false
          description: <p/>
          schema:
            type: boolean
        - name: NextInvocations
          in: query
          required: false
          description: <p/>
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateSnapshotSchedule
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateSnapshotSchedule
      operationId: POST CreateSnapshotSchedule
      description: Creates a new snapshot schedule.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotSchedule"
        "480":
          description: SnapshotScheduleAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotScheduleAlreadyExistsFault"
        "481":
          description: InvalidScheduleFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidScheduleFault"
        "482":
          description: SnapshotScheduleQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotScheduleQuotaExceededFault"
        "483":
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededFault"
        "484":
          description: ScheduleDefinitionTypeUnsupportedFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ScheduleDefinitionTypeUnsupportedFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateSnapshotSchedule
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ScheduleDefinitions:
                  description: 'The definition of the snapshot schedule. The definition is
                    made up of schedule expressions, for example "cron(30 12 *)"
                    or "rate(12 hours)". '
                  type: array
                  items:
                    type: string
                ScheduleIdentifier:
                  description: A unique identifier for a snapshot schedule. Only
                    alphanumeric characters are allowed for the identifier.
                  type: string
                ScheduleDescription:
                  description: The description of the snapshot schedule.
                  type: string
                Tags:
                  description: An optional set of tags you can use to search for the
                    schedule.
                  type: array
                  items:
                    type: string
                DryRun:
                  description: <p/>
                  type: boolean
                NextInvocations:
                  description: <p/>
                  type: integer
  /#Action=CreateTags:
    get:
      x-aws-operation-name: CreateTags
      operationId: GET CreateTags
      description: <p>Adds one or more tags to a specified resource.</p> <p>A resource can
        have up to 50 tags. If you try to create more than 50 tags for a
        resource, you will receive an error and the attempt will fail.</p> <p>If
        you specify a key that already exists for the resource, the value for
        that key will be updated with the new value.</p>
      responses:
        "200":
          description: Success
        "480":
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededFault"
        "481":
          description: ResourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundFault"
        "482":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: ResourceName
          in: query
          required: true
          description: "The Amazon Resource Name (ARN) to which you want to add the tag or
            tags. For example,
            <code>arn:aws:redshift:us-east-1:123456789:cluster:t1</code>. "
          schema:
            type: string
        - name: Tags
          in: query
          required: true
          description: 'One or more name/value pairs to add as tags to the specified
            resource. Each tag name is passed in with the parameter
            <code>Key</code> and the corresponding value is passed in with the
            parameter <code>Value</code>. The <code>Key</code> and
            <code>Value</code> parameters are separated by a comma (,). Separate
            multiple tags with a space. For example, <code>--tags
            "Key"="owner","Value"="admin" "Key"="environment","Value"="test"
            "Key"="version","Value"="1.0"</code>. '
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateTags
      operationId: POST CreateTags
      description: <p>Adds one or more tags to a specified resource.</p> <p>A resource can
        have up to 50 tags. If you try to create more than 50 tags for a
        resource, you will receive an error and the attempt will fail.</p> <p>If
        you specify a key that already exists for the resource, the value for
        that key will be updated with the new value.</p>
      responses:
        "200":
          description: Success
        "480":
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededFault"
        "481":
          description: ResourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundFault"
        "482":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ResourceName:
                  description: "The Amazon Resource Name (ARN) to which you want to add the
                    tag or tags. For example,
                    <code>arn:aws:redshift:us-east-1:123456789:cluster:t1</code\
                    >. "
                  type: string
                Tags:
                  description: 'One or more name/value pairs to add as tags to the
                    specified resource. Each tag name is passed in with the
                    parameter <code>Key</code> and the corresponding value is
                    passed in with the parameter <code>Value</code>. The
                    <code>Key</code> and <code>Value</code> parameters are
                    separated by a comma (,). Separate multiple tags with a
                    space. For example, <code>--tags
                    "Key"="owner","Value"="admin"
                    "Key"="environment","Value"="test"
                    "Key"="version","Value"="1.0"</code>. '
                  type: array
                  items:
                    type: string
              required:
                - ResourceName
                - Tags
  /#Action=DeleteCluster:
    get:
      x-aws-operation-name: DeleteCluster
      operationId: GET DeleteCluster
      description: <p>Deletes a previously provisioned cluster. A successful response from
        the web service indicates that the request was received correctly. Use
        <a>DescribeClusters</a> to monitor the status of the deletion. The
        delete operation cannot be canceled or reverted once submitted. For more
        information about managing clusters, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon
        Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.</p> <p>If you want to shut down the cluster and retain it for
        future use, set <i>SkipFinalClusterSnapshot</i> to <code>false</code>
        and specify a name for <i>FinalClusterSnapshotIdentifier</i>. You can
        later restore this snapshot to resume using the cluster. If a final
        cluster snapshot is requested, the status of the cluster will be
        "final-snapshot" while the snapshot is being taken, then it's "deleting"
        once Amazon Redshift begins deleting the cluster. </p> <p> For more
        information about managing clusters, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon
        Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteClusterResult"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "481":
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterStateFault"
        "482":
          description: ClusterSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotAlreadyExistsFault"
        "483":
          description: ClusterSnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotQuotaExceededFault"
        "484":
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRetentionPeriodFault"
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: <p>The identifier of the cluster to be deleted.</p>
            <p>Constraints:</p> <ul> <li> <p>Must contain lowercase
            characters.</p> </li> <li> <p>Must contain from 1 to 63 alphanumeric
            characters or hyphens.</p> </li> <li> <p>First character must be a
            letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two
            consecutive hyphens.</p> </li> </ul>
          schema:
            type: string
        - name: SkipFinalClusterSnapshot
          in: query
          required: false
          description: "<p>Determines whether a final snapshot of the cluster is created
            before Amazon Redshift deletes the cluster. If <code>true</code>, a
            final cluster snapshot is not created. If <code>false</code>, a
            final cluster snapshot is created before the cluster is deleted.
            </p> <note> <p>The <i>FinalClusterSnapshotIdentifier</i> parameter
            must be specified if <i>SkipFinalClusterSnapshot</i> is
            <code>false</code>.</p> </note> <p>Default: <code>false</code> </p>"
          schema:
            type: boolean
        - name: FinalClusterSnapshotIdentifier
          in: query
          required: false
          description: <p>The identifier of the final snapshot that is to be created
            immediately before deleting the cluster. If this parameter is
            provided, <i>SkipFinalClusterSnapshot</i> must be
            <code>false</code>. </p> <p>Constraints:</p> <ul> <li> <p>Must be 1
            to 255 alphanumeric characters.</p> </li> <li> <p>First character
            must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or
            contain two consecutive hyphens.</p> </li> </ul>
          schema:
            type: string
        - name: FinalClusterSnapshotRetentionPeriod
          in: query
          required: false
          description: <p>The number of days that a manual snapshot is retained. If the
            value is -1, the manual snapshot is retained indefinitely.</p>
            <p>The value must be either -1 or an integer between 1 and
            3,653.</p> <p>The default value is -1.</p>
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteCluster
      operationId: POST DeleteCluster
      description: <p>Deletes a previously provisioned cluster. A successful response from
        the web service indicates that the request was received correctly. Use
        <a>DescribeClusters</a> to monitor the status of the deletion. The
        delete operation cannot be canceled or reverted once submitted. For more
        information about managing clusters, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon
        Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.</p> <p>If you want to shut down the cluster and retain it for
        future use, set <i>SkipFinalClusterSnapshot</i> to <code>false</code>
        and specify a name for <i>FinalClusterSnapshotIdentifier</i>. You can
        later restore this snapshot to resume using the cluster. If a final
        cluster snapshot is requested, the status of the cluster will be
        "final-snapshot" while the snapshot is being taken, then it's "deleting"
        once Amazon Redshift begins deleting the cluster. </p> <p> For more
        information about managing clusters, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon
        Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteClusterResult"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "481":
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterStateFault"
        "482":
          description: ClusterSnapshotAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotAlreadyExistsFault"
        "483":
          description: ClusterSnapshotQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotQuotaExceededFault"
        "484":
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRetentionPeriodFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterIdentifier:
                  description: <p>The identifier of the cluster to be deleted.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must contain lowercase
                    characters.</p> </li> <li> <p>Must contain from 1 to 63
                    alphanumeric characters or hyphens.</p> </li> <li> <p>First
                    character must be a letter.</p> </li> <li> <p>Cannot end
                    with a hyphen or contain two consecutive hyphens.</p> </li>
                    </ul>
                  type: string
                SkipFinalClusterSnapshot:
                  description: "<p>Determines whether a final snapshot of the cluster is
                    created before Amazon Redshift deletes the cluster. If
                    <code>true</code>, a final cluster snapshot is not created.
                    If <code>false</code>, a final cluster snapshot is created
                    before the cluster is deleted. </p> <note> <p>The
                    <i>FinalClusterSnapshotIdentifier</i> parameter must be
                    specified if <i>SkipFinalClusterSnapshot</i> is
                    <code>false</code>.</p> </note> <p>Default:
                    <code>false</code> </p>"
                  type: boolean
                FinalClusterSnapshotIdentifier:
                  description: <p>The identifier of the final snapshot that is to be
                    created immediately before deleting the cluster. If this
                    parameter is provided, <i>SkipFinalClusterSnapshot</i> must
                    be <code>false</code>. </p> <p>Constraints:</p> <ul> <li>
                    <p>Must be 1 to 255 alphanumeric characters.</p> </li> <li>
                    <p>First character must be a letter.</p> </li> <li>
                    <p>Cannot end with a hyphen or contain two consecutive
                    hyphens.</p> </li> </ul>
                  type: string
                FinalClusterSnapshotRetentionPeriod:
                  description: <p>The number of days that a manual snapshot is retained. If
                    the value is -1, the manual snapshot is retained
                    indefinitely.</p> <p>The value must be either -1 or an
                    integer between 1 and 3,653.</p> <p>The default value is
                    -1.</p>
                  type: integer
              required:
                - ClusterIdentifier
  /#Action=DeleteClusterParameterGroup:
    get:
      x-aws-operation-name: DeleteClusterParameterGroup
      operationId: GET DeleteClusterParameterGroup
      description: <p>Deletes a specified Amazon Redshift parameter group.</p> <note>
        <p>You cannot delete a parameter group if it is associated with a
        cluster.</p> </note>
      responses:
        "200":
          description: Success
        "480":
          description: InvalidClusterParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterParameterGroupStateFault"
        "481":
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterParameterGroupNotFoundFault"
      parameters:
        - name: ParameterGroupName
          in: query
          required: true
          description: <p>The name of the parameter group to be deleted.</p>
            <p>Constraints:</p> <ul> <li> <p>Must be the name of an existing
            cluster parameter group.</p> </li> <li> <p>Cannot delete a default
            cluster parameter group.</p> </li> </ul>
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteClusterParameterGroup
      operationId: POST DeleteClusterParameterGroup
      description: <p>Deletes a specified Amazon Redshift parameter group.</p> <note>
        <p>You cannot delete a parameter group if it is associated with a
        cluster.</p> </note>
      responses:
        "200":
          description: Success
        "480":
          description: InvalidClusterParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterParameterGroupStateFault"
        "481":
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterParameterGroupNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ParameterGroupName:
                  description: <p>The name of the parameter group to be deleted.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must be the name of an
                    existing cluster parameter group.</p> </li> <li> <p>Cannot
                    delete a default cluster parameter group.</p> </li> </ul>
                  type: string
              required:
                - ParameterGroupName
  /#Action=DeleteClusterSecurityGroup:
    get:
      x-aws-operation-name: DeleteClusterSecurityGroup
      operationId: GET DeleteClusterSecurityGroup
      description: <p>Deletes an Amazon Redshift security group.</p> <note> <p>You cannot
        delete a security group that is associated with any clusters. You cannot
        delete the default security group.</p> </note> <p> For information about
        managing security groups, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Amazon
        Redshift Cluster Security Groups</a> in the <i>Amazon Redshift Cluster
        Management Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: InvalidClusterSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSecurityGroupStateFault"
        "481":
          description: ClusterSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSecurityGroupNotFoundFault"
      parameters:
        - name: ClusterSecurityGroupName
          in: query
          required: true
          description: The name of the cluster security group to be deleted.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteClusterSecurityGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteClusterSecurityGroup
      operationId: POST DeleteClusterSecurityGroup
      description: <p>Deletes an Amazon Redshift security group.</p> <note> <p>You cannot
        delete a security group that is associated with any clusters. You cannot
        delete the default security group.</p> </note> <p> For information about
        managing security groups, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Amazon
        Redshift Cluster Security Groups</a> in the <i>Amazon Redshift Cluster
        Management Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: InvalidClusterSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSecurityGroupStateFault"
        "481":
          description: ClusterSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSecurityGroupNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteClusterSecurityGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterSecurityGroupName:
                  description: The name of the cluster security group to be deleted.
                  type: string
              required:
                - ClusterSecurityGroupName
  /#Action=DeleteClusterSnapshot:
    get:
      x-aws-operation-name: DeleteClusterSnapshot
      operationId: GET DeleteClusterSnapshot
      description: <p>Deletes the specified manual snapshot. The snapshot must be in the
        <code>available</code> state, with no other users authorized to access
        the snapshot. </p> <p>Unlike automated snapshots, manual snapshots are
        retained even after you delete your cluster. Amazon Redshift does not
        delete your manual snapshots. You must delete manual snapshot explicitly
        to avoid getting charged. If other accounts are authorized to access the
        snapshot, you must revoke all of the authorizations before you can
        delete the snapshot.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteClusterSnapshotResult"
        "480":
          description: InvalidClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSnapshotStateFault"
        "481":
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotNotFoundFault"
      parameters:
        - name: SnapshotIdentifier
          in: query
          required: true
          description: "<p>The unique identifier of the manual snapshot to be deleted.</p>
            <p>Constraints: Must be the name of an existing snapshot that is in
            the <code>available</code>, <code>failed</code>, or
            <code>cancelled</code> state.</p>"
          schema:
            type: string
        - name: SnapshotClusterIdentifier
          in: query
          required: false
          description: "<p>The unique identifier of the cluster the snapshot was created
            from. This parameter is required if your IAM user has a policy
            containing a snapshot resource element that specifies anything other
            than * for the cluster name.</p> <p>Constraints: Must be the name of
            valid cluster.</p>"
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteClusterSnapshot
      operationId: POST DeleteClusterSnapshot
      description: <p>Deletes the specified manual snapshot. The snapshot must be in the
        <code>available</code> state, with no other users authorized to access
        the snapshot. </p> <p>Unlike automated snapshots, manual snapshots are
        retained even after you delete your cluster. Amazon Redshift does not
        delete your manual snapshots. You must delete manual snapshot explicitly
        to avoid getting charged. If other accounts are authorized to access the
        snapshot, you must revoke all of the authorizations before you can
        delete the snapshot.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteClusterSnapshotResult"
        "480":
          description: InvalidClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSnapshotStateFault"
        "481":
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SnapshotIdentifier:
                  description: "<p>The unique identifier of the manual snapshot to be
                    deleted.</p> <p>Constraints: Must be the name of an existing
                    snapshot that is in the <code>available</code>,
                    <code>failed</code>, or <code>cancelled</code> state.</p>"
                  type: string
                SnapshotClusterIdentifier:
                  description: "<p>The unique identifier of the cluster the snapshot was
                    created from. This parameter is required if your IAM user
                    has a policy containing a snapshot resource element that
                    specifies anything other than * for the cluster name.</p>
                    <p>Constraints: Must be the name of valid cluster.</p>"
                  type: string
              required:
                - SnapshotIdentifier
  /#Action=DeleteClusterSubnetGroup:
    get:
      x-aws-operation-name: DeleteClusterSubnetGroup
      operationId: GET DeleteClusterSubnetGroup
      description: Deletes the specified cluster subnet group.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidClusterSubnetGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSubnetGroupStateFault"
        "481":
          description: InvalidClusterSubnetStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSubnetStateFault"
        "482":
          description: ClusterSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSubnetGroupNotFoundFault"
      parameters:
        - name: ClusterSubnetGroupName
          in: query
          required: true
          description: The name of the cluster subnet group name to be deleted.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteClusterSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteClusterSubnetGroup
      operationId: POST DeleteClusterSubnetGroup
      description: Deletes the specified cluster subnet group.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidClusterSubnetGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSubnetGroupStateFault"
        "481":
          description: InvalidClusterSubnetStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSubnetStateFault"
        "482":
          description: ClusterSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSubnetGroupNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteClusterSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterSubnetGroupName:
                  description: The name of the cluster subnet group name to be deleted.
                  type: string
              required:
                - ClusterSubnetGroupName
  /#Action=DeleteEventSubscription:
    get:
      x-aws-operation-name: DeleteEventSubscription
      operationId: GET DeleteEventSubscription
      description: Deletes an Amazon Redshift event notification subscription.
      responses:
        "200":
          description: Success
        "480":
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionNotFoundFault"
        "481":
          description: InvalidSubscriptionStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubscriptionStateFault"
      parameters:
        - name: SubscriptionName
          in: query
          required: true
          description: The name of the Amazon Redshift event notification subscription to
            be deleted.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteEventSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteEventSubscription
      operationId: POST DeleteEventSubscription
      description: Deletes an Amazon Redshift event notification subscription.
      responses:
        "200":
          description: Success
        "480":
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionNotFoundFault"
        "481":
          description: InvalidSubscriptionStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubscriptionStateFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteEventSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SubscriptionName:
                  description: The name of the Amazon Redshift event notification
                    subscription to be deleted.
                  type: string
              required:
                - SubscriptionName
  /#Action=DeleteHsmClientCertificate:
    get:
      x-aws-operation-name: DeleteHsmClientCertificate
      operationId: GET DeleteHsmClientCertificate
      description: Deletes the specified HSM client certificate.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidHsmClientCertificateStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidHsmClientCertificateStateFault"
        "481":
          description: HsmClientCertificateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmClientCertificateNotFoundFault"
      parameters:
        - name: HsmClientCertificateIdentifier
          in: query
          required: true
          description: The identifier of the HSM client certificate to be deleted.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteHsmClientCertificate
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteHsmClientCertificate
      operationId: POST DeleteHsmClientCertificate
      description: Deletes the specified HSM client certificate.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidHsmClientCertificateStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidHsmClientCertificateStateFault"
        "481":
          description: HsmClientCertificateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmClientCertificateNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteHsmClientCertificate
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                HsmClientCertificateIdentifier:
                  description: The identifier of the HSM client certificate to be deleted.
                  type: string
              required:
                - HsmClientCertificateIdentifier
  /#Action=DeleteHsmConfiguration:
    get:
      x-aws-operation-name: DeleteHsmConfiguration
      operationId: GET DeleteHsmConfiguration
      description: Deletes the specified Amazon Redshift HSM configuration.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidHsmConfigurationStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidHsmConfigurationStateFault"
        "481":
          description: HsmConfigurationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmConfigurationNotFoundFault"
      parameters:
        - name: HsmConfigurationIdentifier
          in: query
          required: true
          description: The identifier of the Amazon Redshift HSM configuration to be
            deleted.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteHsmConfiguration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteHsmConfiguration
      operationId: POST DeleteHsmConfiguration
      description: Deletes the specified Amazon Redshift HSM configuration.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidHsmConfigurationStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidHsmConfigurationStateFault"
        "481":
          description: HsmConfigurationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmConfigurationNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteHsmConfiguration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                HsmConfigurationIdentifier:
                  description: The identifier of the Amazon Redshift HSM configuration to
                    be deleted.
                  type: string
              required:
                - HsmConfigurationIdentifier
  /#Action=DeleteSnapshotCopyGrant:
    get:
      x-aws-operation-name: DeleteSnapshotCopyGrant
      operationId: GET DeleteSnapshotCopyGrant
      description: Deletes the specified snapshot copy grant.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidSnapshotCopyGrantStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSnapshotCopyGrantStateFault"
        "481":
          description: SnapshotCopyGrantNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotCopyGrantNotFoundFault"
      parameters:
        - name: SnapshotCopyGrantName
          in: query
          required: true
          description: The name of the snapshot copy grant to delete.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteSnapshotCopyGrant
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteSnapshotCopyGrant
      operationId: POST DeleteSnapshotCopyGrant
      description: Deletes the specified snapshot copy grant.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidSnapshotCopyGrantStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSnapshotCopyGrantStateFault"
        "481":
          description: SnapshotCopyGrantNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotCopyGrantNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteSnapshotCopyGrant
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SnapshotCopyGrantName:
                  description: The name of the snapshot copy grant to delete.
                  type: string
              required:
                - SnapshotCopyGrantName
  /#Action=DeleteSnapshotSchedule:
    get:
      x-aws-operation-name: DeleteSnapshotSchedule
      operationId: GET DeleteSnapshotSchedule
      description: Deletes a snapshot schedule.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidClusterSnapshotScheduleStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSnapshotScheduleStateFault"
        "481":
          description: SnapshotScheduleNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotScheduleNotFoundFault"
      parameters:
        - name: ScheduleIdentifier
          in: query
          required: true
          description: A unique identifier of the snapshot schedule to delete.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteSnapshotSchedule
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteSnapshotSchedule
      operationId: POST DeleteSnapshotSchedule
      description: Deletes a snapshot schedule.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidClusterSnapshotScheduleStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSnapshotScheduleStateFault"
        "481":
          description: SnapshotScheduleNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotScheduleNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteSnapshotSchedule
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ScheduleIdentifier:
                  description: A unique identifier of the snapshot schedule to delete.
                  type: string
              required:
                - ScheduleIdentifier
  /#Action=DeleteTags:
    get:
      x-aws-operation-name: DeleteTags
      operationId: GET DeleteTags
      description: Deletes a tag or tags from a resource. You must provide the ARN of the
        resource from which you want to delete the tag or tags.
      responses:
        "200":
          description: Success
        "480":
          description: ResourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundFault"
        "481":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: ResourceName
          in: query
          required: true
          description: "The Amazon Resource Name (ARN) from which you want to remove the
            tag or tags. For example,
            <code>arn:aws:redshift:us-east-1:123456789:cluster:t1</code>. "
          schema:
            type: string
        - name: TagKeys
          in: query
          required: true
          description: The tag key that you want to delete.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteTags
      operationId: POST DeleteTags
      description: Deletes a tag or tags from a resource. You must provide the ARN of the
        resource from which you want to delete the tag or tags.
      responses:
        "200":
          description: Success
        "480":
          description: ResourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundFault"
        "481":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ResourceName:
                  description: "The Amazon Resource Name (ARN) from which you want to
                    remove the tag or tags. For example,
                    <code>arn:aws:redshift:us-east-1:123456789:cluster:t1</code\
                    >. "
                  type: string
                TagKeys:
                  description: The tag key that you want to delete.
                  type: array
                  items:
                    type: string
              required:
                - ResourceName
                - TagKeys
  /#Action=DescribeAccountAttributes:
    get:
      x-aws-operation-name: DescribeAccountAttributes
      operationId: GET DescribeAccountAttributes
      description: Returns a list of attributes attached to an account
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccountAttributeList"
      parameters:
        - name: AttributeNames
          in: query
          required: false
          description: A list of attribute names.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeAccountAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeAccountAttributes
      operationId: POST DescribeAccountAttributes
      description: Returns a list of attributes attached to an account
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccountAttributeList"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeAccountAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                AttributeNames:
                  description: A list of attribute names.
                  type: array
                  items:
                    type: string
  /#Action=DescribeClusterDbRevisions:
    get:
      x-aws-operation-name: DescribeClusterDbRevisions
      operationId: GET DescribeClusterDbRevisions
      description: Returns an array of <code>ClusterDbRevision</code> objects.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterDbRevisionsMessage"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "481":
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterStateFault"
      parameters:
        - name: ClusterIdentifier
          in: query
          required: false
          description: A unique identifier for a cluster whose
            <code>ClusterDbRevisions</code> you are requesting. This parameter
            is case sensitive. All clusters defined for an account are returned
            by default.
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of response records to return in each call.
            If the number of remaining response records exceeds the specified
            MaxRecords value, a value is returned in the <code>marker</code>
            field of the response. You can retrieve the next set of response
            records by providing the returned <code>marker</code> value in the
            <code>marker</code> parameter and retrying the request. </p>
            <p>Default: 100</p> <p>Constraints: minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: "<p>An optional parameter that specifies the starting point for
            returning a set of response records. When the results of a
            <code>DescribeClusterDbRevisions</code> request exceed the value
            specified in <code>MaxRecords</code>, Amazon Redshift returns a
            value in the <code>marker</code> field of the response. You can
            retrieve the next set of response records by providing the returned
            <code>marker</code> value in the <code>marker</code> parameter and
            retrying the request. </p> <p>Constraints: You can specify either
            the <code>ClusterIdentifier</code> parameter, or the
            <code>marker</code> parameter, but not both.</p>"
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterDbRevisions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeClusterDbRevisions
      operationId: POST DescribeClusterDbRevisions
      description: Returns an array of <code>ClusterDbRevision</code> objects.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterDbRevisionsMessage"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "481":
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterStateFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterDbRevisions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterIdentifier:
                  description: A unique identifier for a cluster whose
                    <code>ClusterDbRevisions</code> you are requesting. This
                    parameter is case sensitive. All clusters defined for an
                    account are returned by default.
                  type: string
                MaxRecords:
                  description: "<p>The maximum number of response records to return in each
                    call. If the number of remaining response records exceeds
                    the specified MaxRecords value, a value is returned in the
                    <code>marker</code> field of the response. You can retrieve
                    the next set of response records by providing the returned
                    <code>marker</code> value in the <code>marker</code>
                    parameter and retrying the request. </p> <p>Default: 100</p>
                    <p>Constraints: minimum 20, maximum 100.</p>"
                  type: integer
                Marker:
                  description: "<p>An optional parameter that specifies the starting point
                    for returning a set of response records. When the results of
                    a <code>DescribeClusterDbRevisions</code> request exceed the
                    value specified in <code>MaxRecords</code>, Amazon Redshift
                    returns a value in the <code>marker</code> field of the
                    response. You can retrieve the next set of response records
                    by providing the returned <code>marker</code> value in the
                    <code>marker</code> parameter and retrying the request. </p>
                    <p>Constraints: You can specify either the
                    <code>ClusterIdentifier</code> parameter, or the
                    <code>marker</code> parameter, but not both.</p>"
                  type: string
  /#Action=DescribeClusterParameterGroups:
    get:
      x-aws-operation-name: DescribeClusterParameterGroups
      operationId: GET DescribeClusterParameterGroups
      description: <p>Returns a list of Amazon Redshift parameter groups, including
        parameter groups you created and the default parameter group. For each
        parameter group, the response includes the parameter group name,
        description, and parameter group family name. You can optionally specify
        a name to retrieve the description of a specific parameter group.</p>
        <p> For more information about parameters and parameter groups, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon
        Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster
        Management Guide</i>.</p> <p>If you specify both tag keys and tag values
        in the same request, Amazon Redshift returns all parameter groups that
        match any combination of the specified keys and values. For example, if
        you have <code>owner</code> and <code>environment</code> for tag keys,
        and <code>admin</code> and <code>test</code> for tag values, all
        parameter groups that have any combination of those values are
        returned.</p> <p>If both tag keys and values are omitted from the
        request, parameter groups are returned regardless of whether they have
        tag keys or values associated with them.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterParameterGroupsMessage"
        "480":
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterParameterGroupNotFoundFault"
        "481":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: ParameterGroupName
          in: query
          required: false
          description: The name of a specific parameter group for which to return details.
            By default, details about all parameter groups and the default
            parameter group are returned.
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of response records to return in each call.
            If the number of remaining response records exceeds the specified
            <code>MaxRecords</code> value, a value is returned in a
            <code>marker</code> field of the response. You can retrieve the next
            set of records by retrying the command with the returned marker
            value. </p> <p>Default: <code>100</code> </p> <p>Constraints:
            minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: "An optional parameter that specifies the starting point to return a
            set of response records. When the results of a
            <a>DescribeClusterParameterGroups</a> request exceed the value
            specified in <code>MaxRecords</code>, AWS returns a value in the
            <code>Marker</code> field of the response. You can retrieve the next
            set of response records by providing the returned marker value in
            the <code>Marker</code> parameter and retrying the request. "
          schema:
            type: string
        - name: TagKeys
          in: query
          required: false
          description: A tag key or keys for which you want to return all matching cluster
            parameter groups that are associated with the specified key or keys.
            For example, suppose that you have parameter groups that are tagged
            with keys called <code>owner</code> and <code>environment</code>. If
            you specify both of these tag keys in the request, Amazon Redshift
            returns a response with the parameter groups that have either or
            both of these tag keys associated with them.
          schema:
            type: array
            items:
              type: string
        - name: TagValues
          in: query
          required: false
          description: A tag value or values for which you want to return all matching
            cluster parameter groups that are associated with the specified tag
            value or values. For example, suppose that you have parameter groups
            that are tagged with values called <code>admin</code> and
            <code>test</code>. If you specify both of these tag values in the
            request, Amazon Redshift returns a response with the parameter
            groups that have either or both of these tag values associated with
            them.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterParameterGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeClusterParameterGroups
      operationId: POST DescribeClusterParameterGroups
      description: <p>Returns a list of Amazon Redshift parameter groups, including
        parameter groups you created and the default parameter group. For each
        parameter group, the response includes the parameter group name,
        description, and parameter group family name. You can optionally specify
        a name to retrieve the description of a specific parameter group.</p>
        <p> For more information about parameters and parameter groups, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon
        Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster
        Management Guide</i>.</p> <p>If you specify both tag keys and tag values
        in the same request, Amazon Redshift returns all parameter groups that
        match any combination of the specified keys and values. For example, if
        you have <code>owner</code> and <code>environment</code> for tag keys,
        and <code>admin</code> and <code>test</code> for tag values, all
        parameter groups that have any combination of those values are
        returned.</p> <p>If both tag keys and values are omitted from the
        request, parameter groups are returned regardless of whether they have
        tag keys or values associated with them.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterParameterGroupsMessage"
        "480":
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterParameterGroupNotFoundFault"
        "481":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterParameterGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ParameterGroupName:
                  description: The name of a specific parameter group for which to return
                    details. By default, details about all parameter groups and
                    the default parameter group are returned.
                  type: string
                MaxRecords:
                  description: "<p>The maximum number of response records to return in each
                    call. If the number of remaining response records exceeds
                    the specified <code>MaxRecords</code> value, a value is
                    returned in a <code>marker</code> field of the response. You
                    can retrieve the next set of records by retrying the command
                    with the returned marker value. </p> <p>Default:
                    <code>100</code> </p> <p>Constraints: minimum 20, maximum
                    100.</p>"
                  type: integer
                Marker:
                  description: "An optional parameter that specifies the starting point to
                    return a set of response records. When the results of a
                    <a>DescribeClusterParameterGroups</a> request exceed the
                    value specified in <code>MaxRecords</code>, AWS returns a
                    value in the <code>Marker</code> field of the response. You
                    can retrieve the next set of response records by providing
                    the returned marker value in the <code>Marker</code>
                    parameter and retrying the request. "
                  type: string
                TagKeys:
                  description: A tag key or keys for which you want to return all matching
                    cluster parameter groups that are associated with the
                    specified key or keys. For example, suppose that you have
                    parameter groups that are tagged with keys called
                    <code>owner</code> and <code>environment</code>. If you
                    specify both of these tag keys in the request, Amazon
                    Redshift returns a response with the parameter groups that
                    have either or both of these tag keys associated with them.
                  type: array
                  items:
                    type: string
                TagValues:
                  description: A tag value or values for which you want to return all
                    matching cluster parameter groups that are associated with
                    the specified tag value or values. For example, suppose that
                    you have parameter groups that are tagged with values called
                    <code>admin</code> and <code>test</code>. If you specify
                    both of these tag values in the request, Amazon Redshift
                    returns a response with the parameter groups that have
                    either or both of these tag values associated with them.
                  type: array
                  items:
                    type: string
  /#Action=DescribeClusterParameters:
    get:
      x-aws-operation-name: DescribeClusterParameters
      operationId: GET DescribeClusterParameters
      description: <p>Returns a detailed list of parameters contained within the specified
        Amazon Redshift parameter group. For each parameter the response
        includes information such as parameter name, description, data type,
        value, whether the parameter value is modifiable, and so on.</p> <p>You
        can specify <i>source</i> filter to retrieve parameters of only specific
        type. For example, to retrieve parameters that were modified by a user
        action such as from <a>ModifyClusterParameterGroup</a>, you can specify
        <i>source</i> equal to <i>user</i>.</p> <p> For more information about
        parameters and parameter groups, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon
        Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster
        Management Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterParameterGroupDetails"
        "480":
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterParameterGroupNotFoundFault"
      parameters:
        - name: ParameterGroupName
          in: query
          required: true
          description: The name of a cluster parameter group for which to return details.
          schema:
            type: string
        - name: Source
          in: query
          required: false
          description: "<p>The parameter types to return. Specify <code>user</code> to show
            parameters that are different form the default. Similarly, specify
            <code>engine-default</code> to show parameters that are the same as
            the default parameter group. </p> <p>Default: All parameter types
            returned.</p> <p>Valid Values: <code>user</code> |
            <code>engine-default</code> </p>"
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of response records to return in each call.
            If the number of remaining response records exceeds the specified
            <code>MaxRecords</code> value, a value is returned in a
            <code>marker</code> field of the response. You can retrieve the next
            set of records by retrying the command with the returned marker
            value. </p> <p>Default: <code>100</code> </p> <p>Constraints:
            minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: "An optional parameter that specifies the starting point to return a
            set of response records. When the results of a
            <a>DescribeClusterParameters</a> request exceed the value specified
            in <code>MaxRecords</code>, AWS returns a value in the
            <code>Marker</code> field of the response. You can retrieve the next
            set of response records by providing the returned marker value in
            the <code>Marker</code> parameter and retrying the request. "
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeClusterParameters
      operationId: POST DescribeClusterParameters
      description: <p>Returns a detailed list of parameters contained within the specified
        Amazon Redshift parameter group. For each parameter the response
        includes information such as parameter name, description, data type,
        value, whether the parameter value is modifiable, and so on.</p> <p>You
        can specify <i>source</i> filter to retrieve parameters of only specific
        type. For example, to retrieve parameters that were modified by a user
        action such as from <a>ModifyClusterParameterGroup</a>, you can specify
        <i>source</i> equal to <i>user</i>.</p> <p> For more information about
        parameters and parameter groups, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon
        Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster
        Management Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterParameterGroupDetails"
        "480":
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterParameterGroupNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ParameterGroupName:
                  description: The name of a cluster parameter group for which to return
                    details.
                  type: string
                Source:
                  description: "<p>The parameter types to return. Specify <code>user</code>
                    to show parameters that are different form the default.
                    Similarly, specify <code>engine-default</code> to show
                    parameters that are the same as the default parameter group.
                    </p> <p>Default: All parameter types returned.</p> <p>Valid
                    Values: <code>user</code> | <code>engine-default</code>
                    </p>"
                  type: string
                MaxRecords:
                  description: "<p>The maximum number of response records to return in each
                    call. If the number of remaining response records exceeds
                    the specified <code>MaxRecords</code> value, a value is
                    returned in a <code>marker</code> field of the response. You
                    can retrieve the next set of records by retrying the command
                    with the returned marker value. </p> <p>Default:
                    <code>100</code> </p> <p>Constraints: minimum 20, maximum
                    100.</p>"
                  type: integer
                Marker:
                  description: "An optional parameter that specifies the starting point to
                    return a set of response records. When the results of a
                    <a>DescribeClusterParameters</a> request exceed the value
                    specified in <code>MaxRecords</code>, AWS returns a value in
                    the <code>Marker</code> field of the response. You can
                    retrieve the next set of response records by providing the
                    returned marker value in the <code>Marker</code> parameter
                    and retrying the request. "
                  type: string
              required:
                - ParameterGroupName
  /#Action=DescribeClusterSecurityGroups:
    get:
      x-aws-operation-name: DescribeClusterSecurityGroups
      operationId: GET DescribeClusterSecurityGroups
      description: <p>Returns information about Amazon Redshift security groups. If the
        name of a security group is specified, the response will contain only
        information about only that security group.</p> <p> For information
        about managing security groups, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Amazon
        Redshift Cluster Security Groups</a> in the <i>Amazon Redshift Cluster
        Management Guide</i>.</p> <p>If you specify both tag keys and tag values
        in the same request, Amazon Redshift returns all security groups that
        match any combination of the specified keys and values. For example, if
        you have <code>owner</code> and <code>environment</code> for tag keys,
        and <code>admin</code> and <code>test</code> for tag values, all
        security groups that have any combination of those values are
        returned.</p> <p>If both tag keys and values are omitted from the
        request, security groups are returned regardless of whether they have
        tag keys or values associated with them.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSecurityGroupMessage"
        "480":
          description: ClusterSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSecurityGroupNotFoundFault"
        "481":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: ClusterSecurityGroupName
          in: query
          required: false
          description: "<p>The name of a cluster security group for which you are
            requesting details. You can specify either the <b>Marker</b>
            parameter or a <b>ClusterSecurityGroupName</b> parameter, but not
            both. </p> <p> Example: <code>securitygroup1</code> </p>"
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of response records to return in each call.
            If the number of remaining response records exceeds the specified
            <code>MaxRecords</code> value, a value is returned in a
            <code>marker</code> field of the response. You can retrieve the next
            set of records by retrying the command with the returned marker
            value. </p> <p>Default: <code>100</code> </p> <p>Constraints:
            minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: "<p>An optional parameter that specifies the starting point to
            return a set of response records. When the results of a
            <a>DescribeClusterSecurityGroups</a> request exceed the value
            specified in <code>MaxRecords</code>, AWS returns a value in the
            <code>Marker</code> field of the response. You can retrieve the next
            set of response records by providing the returned marker value in
            the <code>Marker</code> parameter and retrying the request. </p>
            <p>Constraints: You can specify either the
            <b>ClusterSecurityGroupName</b> parameter or the <b>Marker</b>
            parameter, but not both. </p>"
          schema:
            type: string
        - name: TagKeys
          in: query
          required: false
          description: A tag key or keys for which you want to return all matching cluster
            security groups that are associated with the specified key or keys.
            For example, suppose that you have security groups that are tagged
            with keys called <code>owner</code> and <code>environment</code>. If
            you specify both of these tag keys in the request, Amazon Redshift
            returns a response with the security groups that have either or both
            of these tag keys associated with them.
          schema:
            type: array
            items:
              type: string
        - name: TagValues
          in: query
          required: false
          description: A tag value or values for which you want to return all matching
            cluster security groups that are associated with the specified tag
            value or values. For example, suppose that you have security groups
            that are tagged with values called <code>admin</code> and
            <code>test</code>. If you specify both of these tag values in the
            request, Amazon Redshift returns a response with the security groups
            that have either or both of these tag values associated with them.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterSecurityGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeClusterSecurityGroups
      operationId: POST DescribeClusterSecurityGroups
      description: <p>Returns information about Amazon Redshift security groups. If the
        name of a security group is specified, the response will contain only
        information about only that security group.</p> <p> For information
        about managing security groups, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Amazon
        Redshift Cluster Security Groups</a> in the <i>Amazon Redshift Cluster
        Management Guide</i>.</p> <p>If you specify both tag keys and tag values
        in the same request, Amazon Redshift returns all security groups that
        match any combination of the specified keys and values. For example, if
        you have <code>owner</code> and <code>environment</code> for tag keys,
        and <code>admin</code> and <code>test</code> for tag values, all
        security groups that have any combination of those values are
        returned.</p> <p>If both tag keys and values are omitted from the
        request, security groups are returned regardless of whether they have
        tag keys or values associated with them.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSecurityGroupMessage"
        "480":
          description: ClusterSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSecurityGroupNotFoundFault"
        "481":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterSecurityGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterSecurityGroupName:
                  description: "<p>The name of a cluster security group for which you are
                    requesting details. You can specify either the <b>Marker</b>
                    parameter or a <b>ClusterSecurityGroupName</b> parameter,
                    but not both. </p> <p> Example: <code>securitygroup1</code>
                    </p>"
                  type: string
                MaxRecords:
                  description: "<p>The maximum number of response records to return in each
                    call. If the number of remaining response records exceeds
                    the specified <code>MaxRecords</code> value, a value is
                    returned in a <code>marker</code> field of the response. You
                    can retrieve the next set of records by retrying the command
                    with the returned marker value. </p> <p>Default:
                    <code>100</code> </p> <p>Constraints: minimum 20, maximum
                    100.</p>"
                  type: integer
                Marker:
                  description: "<p>An optional parameter that specifies the starting point
                    to return a set of response records. When the results of a
                    <a>DescribeClusterSecurityGroups</a> request exceed the
                    value specified in <code>MaxRecords</code>, AWS returns a
                    value in the <code>Marker</code> field of the response. You
                    can retrieve the next set of response records by providing
                    the returned marker value in the <code>Marker</code>
                    parameter and retrying the request. </p> <p>Constraints: You
                    can specify either the <b>ClusterSecurityGroupName</b>
                    parameter or the <b>Marker</b> parameter, but not both.
                    </p>"
                  type: string
                TagKeys:
                  description: A tag key or keys for which you want to return all matching
                    cluster security groups that are associated with the
                    specified key or keys. For example, suppose that you have
                    security groups that are tagged with keys called
                    <code>owner</code> and <code>environment</code>. If you
                    specify both of these tag keys in the request, Amazon
                    Redshift returns a response with the security groups that
                    have either or both of these tag keys associated with them.
                  type: array
                  items:
                    type: string
                TagValues:
                  description: A tag value or values for which you want to return all
                    matching cluster security groups that are associated with
                    the specified tag value or values. For example, suppose that
                    you have security groups that are tagged with values called
                    <code>admin</code> and <code>test</code>. If you specify
                    both of these tag values in the request, Amazon Redshift
                    returns a response with the security groups that have either
                    or both of these tag values associated with them.
                  type: array
                  items:
                    type: string
  /#Action=DescribeClusterSnapshots:
    get:
      x-aws-operation-name: DescribeClusterSnapshots
      operationId: GET DescribeClusterSnapshots
      description: <p>Returns one or more snapshot objects, which contain metadata about
        your cluster snapshots. By default, this operation returns information
        about all snapshots of all clusters that are owned by you AWS customer
        account. No information is returned for snapshots owned by inactive AWS
        customer accounts.</p> <p>If you specify both tag keys and tag values in
        the same request, Amazon Redshift returns all snapshots that match any
        combination of the specified keys and values. For example, if you have
        <code>owner</code> and <code>environment</code> for tag keys, and
        <code>admin</code> and <code>test</code> for tag values, all snapshots
        that have any combination of those values are returned. Only snapshots
        that you own are returned in the response; shared snapshots are not
        returned with the tag key and tag value request parameters.</p> <p>If
        both tag keys and values are omitted from the request, snapshots are
        returned regardless of whether they have tag keys or values associated
        with them.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotMessage"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "481":
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotNotFoundFault"
        "482":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: ClusterIdentifier
          in: query
          required: false
          description: The identifier of the cluster which generated the requested
            snapshots.
          schema:
            type: string
        - name: SnapshotIdentifier
          in: query
          required: false
          description: The snapshot identifier of the snapshot about which to return
            information.
          schema:
            type: string
        - name: SnapshotType
          in: query
          required: false
          description: "<p>The type of snapshots for which you are requesting information.
            By default, snapshots of all types are returned.</p> <p>Valid
            Values: <code>automated</code> | <code>manual</code> </p>"
          schema:
            type: string
        - name: StartTime
          in: query
          required: false
          description: '<p>A value that requests only snapshots created at or after the
            specified time. The time value is specified in ISO 8601 format. For
            more information about ISO 8601, go to the <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601 Wikipedia
            page.</a> </p> <p>Example: <code>2012-07-16T18:00:00Z</code> </p>'
          schema:
            type: string
            format: date-time
        - name: EndTime
          in: query
          required: false
          description: '<p>A time value that requests only snapshots created at or before
            the specified time. The time value is specified in ISO 8601 format.
            For more information about ISO 8601, go to the <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601 Wikipedia
            page.</a> </p> <p>Example: <code>2012-07-16T18:00:00Z</code> </p>'
          schema:
            type: string
            format: date-time
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of response records to return in each call.
            If the number of remaining response records exceeds the specified
            <code>MaxRecords</code> value, a value is returned in a
            <code>marker</code> field of the response. You can retrieve the next
            set of records by retrying the command with the returned marker
            value. </p> <p>Default: <code>100</code> </p> <p>Constraints:
            minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: "An optional parameter that specifies the starting point to return a
            set of response records. When the results of a
            <a>DescribeClusterSnapshots</a> request exceed the value specified
            in <code>MaxRecords</code>, AWS returns a value in the
            <code>Marker</code> field of the response. You can retrieve the next
            set of response records by providing the returned marker value in
            the <code>Marker</code> parameter and retrying the request. "
          schema:
            type: string
        - name: OwnerAccount
          in: query
          required: false
          description: The AWS customer account used to create or copy the snapshot. Use
            this field to filter the results to snapshots owned by a particular
            account. To describe snapshots you own, either specify your AWS
            customer account, or do not specify the parameter.
          schema:
            type: string
        - name: TagKeys
          in: query
          required: false
          description: A tag key or keys for which you want to return all matching cluster
            snapshots that are associated with the specified key or keys. For
            example, suppose that you have snapshots that are tagged with keys
            called <code>owner</code> and <code>environment</code>. If you
            specify both of these tag keys in the request, Amazon Redshift
            returns a response with the snapshots that have either or both of
            these tag keys associated with them.
          schema:
            type: array
            items:
              type: string
        - name: TagValues
          in: query
          required: false
          description: A tag value or values for which you want to return all matching
            cluster snapshots that are associated with the specified tag value
            or values. For example, suppose that you have snapshots that are
            tagged with values called <code>admin</code> and <code>test</code>.
            If you specify both of these tag values in the request, Amazon
            Redshift returns a response with the snapshots that have either or
            both of these tag values associated with them.
          schema:
            type: array
            items:
              type: string
        - name: ClusterExists
          in: query
          required: false
          description: "<p>A value that indicates whether to return snapshots only for an
            existing cluster. You can perform table-level restore only by using
            a snapshot of an existing cluster, that is, a cluster that has not
            been deleted. Values for this parameter work as follows: </p> <ul>
            <li> <p>If <code>ClusterExists</code> is set to <code>true</code>,
            <code>ClusterIdentifier</code> is required.</p> </li> <li> <p>If
            <code>ClusterExists</code> is set to <code>false</code> and
            <code>ClusterIdentifier</code> isn't specified, all snapshots
            associated with deleted clusters (orphaned snapshots) are returned.
            </p> </li> <li> <p>If <code>ClusterExists</code> is set to
            <code>false</code> and <code>ClusterIdentifier</code> is specified
            for a deleted cluster, snapshots associated with that cluster are
            returned.</p> </li> <li> <p>If <code>ClusterExists</code> is set to
            <code>false</code> and <code>ClusterIdentifier</code> is specified
            for an existing cluster, no snapshots are returned. </p> </li>
            </ul>"
          schema:
            type: boolean
        - name: SortingEntities
          in: query
          required: false
          description: <p/>
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterSnapshots
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeClusterSnapshots
      operationId: POST DescribeClusterSnapshots
      description: <p>Returns one or more snapshot objects, which contain metadata about
        your cluster snapshots. By default, this operation returns information
        about all snapshots of all clusters that are owned by you AWS customer
        account. No information is returned for snapshots owned by inactive AWS
        customer accounts.</p> <p>If you specify both tag keys and tag values in
        the same request, Amazon Redshift returns all snapshots that match any
        combination of the specified keys and values. For example, if you have
        <code>owner</code> and <code>environment</code> for tag keys, and
        <code>admin</code> and <code>test</code> for tag values, all snapshots
        that have any combination of those values are returned. Only snapshots
        that you own are returned in the response; shared snapshots are not
        returned with the tag key and tag value request parameters.</p> <p>If
        both tag keys and values are omitted from the request, snapshots are
        returned regardless of whether they have tag keys or values associated
        with them.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotMessage"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "481":
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotNotFoundFault"
        "482":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterSnapshots
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterIdentifier:
                  description: The identifier of the cluster which generated the requested
                    snapshots.
                  type: string
                SnapshotIdentifier:
                  description: The snapshot identifier of the snapshot about which to
                    return information.
                  type: string
                SnapshotType:
                  description: "<p>The type of snapshots for which you are requesting
                    information. By default, snapshots of all types are
                    returned.</p> <p>Valid Values: <code>automated</code> |
                    <code>manual</code> </p>"
                  type: string
                StartTime:
                  description: '<p>A value that requests only snapshots created at or after
                    the specified time. The time value is specified in ISO 8601
                    format. For more information about ISO 8601, go to the <a
                    href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601
                    Wikipedia page.</a> </p> <p>Example:
                    <code>2012-07-16T18:00:00Z</code> </p>'
                  type: string
                  format: date-time
                EndTime:
                  description: '<p>A time value that requests only snapshots created at or
                    before the specified time. The time value is specified in
                    ISO 8601 format. For more information about ISO 8601, go to
                    the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601
                    Wikipedia page.</a> </p> <p>Example:
                    <code>2012-07-16T18:00:00Z</code> </p>'
                  type: string
                  format: date-time
                MaxRecords:
                  description: "<p>The maximum number of response records to return in each
                    call. If the number of remaining response records exceeds
                    the specified <code>MaxRecords</code> value, a value is
                    returned in a <code>marker</code> field of the response. You
                    can retrieve the next set of records by retrying the command
                    with the returned marker value. </p> <p>Default:
                    <code>100</code> </p> <p>Constraints: minimum 20, maximum
                    100.</p>"
                  type: integer
                Marker:
                  description: "An optional parameter that specifies the starting point to
                    return a set of response records. When the results of a
                    <a>DescribeClusterSnapshots</a> request exceed the value
                    specified in <code>MaxRecords</code>, AWS returns a value in
                    the <code>Marker</code> field of the response. You can
                    retrieve the next set of response records by providing the
                    returned marker value in the <code>Marker</code> parameter
                    and retrying the request. "
                  type: string
                OwnerAccount:
                  description: The AWS customer account used to create or copy the
                    snapshot. Use this field to filter the results to snapshots
                    owned by a particular account. To describe snapshots you
                    own, either specify your AWS customer account, or do not
                    specify the parameter.
                  type: string
                TagKeys:
                  description: A tag key or keys for which you want to return all matching
                    cluster snapshots that are associated with the specified key
                    or keys. For example, suppose that you have snapshots that
                    are tagged with keys called <code>owner</code> and
                    <code>environment</code>. If you specify both of these tag
                    keys in the request, Amazon Redshift returns a response with
                    the snapshots that have either or both of these tag keys
                    associated with them.
                  type: array
                  items:
                    type: string
                TagValues:
                  description: A tag value or values for which you want to return all
                    matching cluster snapshots that are associated with the
                    specified tag value or values. For example, suppose that you
                    have snapshots that are tagged with values called
                    <code>admin</code> and <code>test</code>. If you specify
                    both of these tag values in the request, Amazon Redshift
                    returns a response with the snapshots that have either or
                    both of these tag values associated with them.
                  type: array
                  items:
                    type: string
                ClusterExists:
                  description: "<p>A value that indicates whether to return snapshots only
                    for an existing cluster. You can perform table-level restore
                    only by using a snapshot of an existing cluster, that is, a
                    cluster that has not been deleted. Values for this parameter
                    work as follows: </p> <ul> <li> <p>If
                    <code>ClusterExists</code> is set to <code>true</code>,
                    <code>ClusterIdentifier</code> is required.</p> </li> <li>
                    <p>If <code>ClusterExists</code> is set to
                    <code>false</code> and <code>ClusterIdentifier</code> isn't
                    specified, all snapshots associated with deleted clusters
                    (orphaned snapshots) are returned. </p> </li> <li> <p>If
                    <code>ClusterExists</code> is set to <code>false</code> and
                    <code>ClusterIdentifier</code> is specified for a deleted
                    cluster, snapshots associated with that cluster are
                    returned.</p> </li> <li> <p>If <code>ClusterExists</code> is
                    set to <code>false</code> and <code>ClusterIdentifier</code>
                    is specified for an existing cluster, no snapshots are
                    returned. </p> </li> </ul>"
                  type: boolean
                SortingEntities:
                  description: <p/>
                  type: array
                  items:
                    type: string
  /#Action=DescribeClusterSubnetGroups:
    get:
      x-aws-operation-name: DescribeClusterSubnetGroups
      operationId: GET DescribeClusterSubnetGroups
      description: <p>Returns one or more cluster subnet group objects, which contain
        metadata about your cluster subnet groups. By default, this operation
        returns information about all cluster subnet groups that are defined in
        you AWS account.</p> <p>If you specify both tag keys and tag values in
        the same request, Amazon Redshift returns all subnet groups that match
        any combination of the specified keys and values. For example, if you
        have <code>owner</code> and <code>environment</code> for tag keys, and
        <code>admin</code> and <code>test</code> for tag values, all subnet
        groups that have any combination of those values are returned.</p> <p>If
        both tag keys and values are omitted from the request, subnet groups are
        returned regardless of whether they have tag keys or values associated
        with them.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSubnetGroupMessage"
        "480":
          description: ClusterSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSubnetGroupNotFoundFault"
        "481":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: ClusterSubnetGroupName
          in: query
          required: false
          description: The name of the cluster subnet group for which information is
            requested.
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of response records to return in each call.
            If the number of remaining response records exceeds the specified
            <code>MaxRecords</code> value, a value is returned in a
            <code>marker</code> field of the response. You can retrieve the next
            set of records by retrying the command with the returned marker
            value. </p> <p>Default: <code>100</code> </p> <p>Constraints:
            minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: "An optional parameter that specifies the starting point to return a
            set of response records. When the results of a
            <a>DescribeClusterSubnetGroups</a> request exceed the value
            specified in <code>MaxRecords</code>, AWS returns a value in the
            <code>Marker</code> field of the response. You can retrieve the next
            set of response records by providing the returned marker value in
            the <code>Marker</code> parameter and retrying the request. "
          schema:
            type: string
        - name: TagKeys
          in: query
          required: false
          description: A tag key or keys for which you want to return all matching cluster
            subnet groups that are associated with the specified key or keys.
            For example, suppose that you have subnet groups that are tagged
            with keys called <code>owner</code> and <code>environment</code>. If
            you specify both of these tag keys in the request, Amazon Redshift
            returns a response with the subnet groups that have either or both
            of these tag keys associated with them.
          schema:
            type: array
            items:
              type: string
        - name: TagValues
          in: query
          required: false
          description: A tag value or values for which you want to return all matching
            cluster subnet groups that are associated with the specified tag
            value or values. For example, suppose that you have subnet groups
            that are tagged with values called <code>admin</code> and
            <code>test</code>. If you specify both of these tag values in the
            request, Amazon Redshift returns a response with the subnet groups
            that have either or both of these tag values associated with them.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterSubnetGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeClusterSubnetGroups
      operationId: POST DescribeClusterSubnetGroups
      description: <p>Returns one or more cluster subnet group objects, which contain
        metadata about your cluster subnet groups. By default, this operation
        returns information about all cluster subnet groups that are defined in
        you AWS account.</p> <p>If you specify both tag keys and tag values in
        the same request, Amazon Redshift returns all subnet groups that match
        any combination of the specified keys and values. For example, if you
        have <code>owner</code> and <code>environment</code> for tag keys, and
        <code>admin</code> and <code>test</code> for tag values, all subnet
        groups that have any combination of those values are returned.</p> <p>If
        both tag keys and values are omitted from the request, subnet groups are
        returned regardless of whether they have tag keys or values associated
        with them.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSubnetGroupMessage"
        "480":
          description: ClusterSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSubnetGroupNotFoundFault"
        "481":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterSubnetGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterSubnetGroupName:
                  description: The name of the cluster subnet group for which information
                    is requested.
                  type: string
                MaxRecords:
                  description: "<p>The maximum number of response records to return in each
                    call. If the number of remaining response records exceeds
                    the specified <code>MaxRecords</code> value, a value is
                    returned in a <code>marker</code> field of the response. You
                    can retrieve the next set of records by retrying the command
                    with the returned marker value. </p> <p>Default:
                    <code>100</code> </p> <p>Constraints: minimum 20, maximum
                    100.</p>"
                  type: integer
                Marker:
                  description: "An optional parameter that specifies the starting point to
                    return a set of response records. When the results of a
                    <a>DescribeClusterSubnetGroups</a> request exceed the value
                    specified in <code>MaxRecords</code>, AWS returns a value in
                    the <code>Marker</code> field of the response. You can
                    retrieve the next set of response records by providing the
                    returned marker value in the <code>Marker</code> parameter
                    and retrying the request. "
                  type: string
                TagKeys:
                  description: A tag key or keys for which you want to return all matching
                    cluster subnet groups that are associated with the specified
                    key or keys. For example, suppose that you have subnet
                    groups that are tagged with keys called <code>owner</code>
                    and <code>environment</code>. If you specify both of these
                    tag keys in the request, Amazon Redshift returns a response
                    with the subnet groups that have either or both of these tag
                    keys associated with them.
                  type: array
                  items:
                    type: string
                TagValues:
                  description: A tag value or values for which you want to return all
                    matching cluster subnet groups that are associated with the
                    specified tag value or values. For example, suppose that you
                    have subnet groups that are tagged with values called
                    <code>admin</code> and <code>test</code>. If you specify
                    both of these tag values in the request, Amazon Redshift
                    returns a response with the subnet groups that have either
                    or both of these tag values associated with them.
                  type: array
                  items:
                    type: string
  /#Action=DescribeClusterTracks:
    get:
      x-aws-operation-name: DescribeClusterTracks
      operationId: GET DescribeClusterTracks
      description: Returns a list of all the available maintenance tracks.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TrackListMessage"
        "480":
          description: InvalidClusterTrackFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterTrackFault"
        "481":
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperation"
      parameters:
        - name: MaintenanceTrackName
          in: query
          required: false
          description: "The name of the maintenance track. "
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: An integer value for the maximum number of maintenance tracks to
            return.
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: "An optional parameter that specifies the starting point to return a
            set of response records. When the results of a
            <code>DescribeClusterTracks</code> request exceed the value
            specified in <code>MaxRecords</code>, Amazon Redshift returns a
            value in the <code>Marker</code> field of the response. You can
            retrieve the next set of response records by providing the returned
            marker value in the <code>Marker</code> parameter and retrying the
            request. "
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterTracks
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeClusterTracks
      operationId: POST DescribeClusterTracks
      description: Returns a list of all the available maintenance tracks.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TrackListMessage"
        "480":
          description: InvalidClusterTrackFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterTrackFault"
        "481":
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperation"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterTracks
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                MaintenanceTrackName:
                  description: "The name of the maintenance track. "
                  type: string
                MaxRecords:
                  description: An integer value for the maximum number of maintenance
                    tracks to return.
                  type: integer
                Marker:
                  description: "An optional parameter that specifies the starting point to
                    return a set of response records. When the results of a
                    <code>DescribeClusterTracks</code> request exceed the value
                    specified in <code>MaxRecords</code>, Amazon Redshift
                    returns a value in the <code>Marker</code> field of the
                    response. You can retrieve the next set of response records
                    by providing the returned marker value in the
                    <code>Marker</code> parameter and retrying the request. "
                  type: string
  /#Action=DescribeClusterVersions:
    get:
      x-aws-operation-name: DescribeClusterVersions
      operationId: GET DescribeClusterVersions
      description: Returns descriptions of the available Amazon Redshift cluster versions.
        You can call this operation even before creating any clusters to learn
        more about the Amazon Redshift versions. For more information about
        managing clusters, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon
        Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterVersionsMessage"
      parameters:
        - name: ClusterVersion
          in: query
          required: false
          description: "<p>The specific cluster version to return.</p> <p>Example:
            <code>1.0</code> </p>"
          schema:
            type: string
        - name: ClusterParameterGroupFamily
          in: query
          required: false
          description: <p>The name of a specific cluster parameter group family to return
            details for.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255
            alphanumeric characters</p> </li> <li> <p>First character must be a
            letter</p> </li> <li> <p>Cannot end with a hyphen or contain two
            consecutive hyphens</p> </li> </ul>
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of response records to return in each call.
            If the number of remaining response records exceeds the specified
            <code>MaxRecords</code> value, a value is returned in a
            <code>marker</code> field of the response. You can retrieve the next
            set of records by retrying the command with the returned marker
            value. </p> <p>Default: <code>100</code> </p> <p>Constraints:
            minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: "An optional parameter that specifies the starting point to return a
            set of response records. When the results of a
            <a>DescribeClusterVersions</a> request exceed the value specified in
            <code>MaxRecords</code>, AWS returns a value in the
            <code>Marker</code> field of the response. You can retrieve the next
            set of response records by providing the returned marker value in
            the <code>Marker</code> parameter and retrying the request. "
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterVersions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeClusterVersions
      operationId: POST DescribeClusterVersions
      description: Returns descriptions of the available Amazon Redshift cluster versions.
        You can call this operation even before creating any clusters to learn
        more about the Amazon Redshift versions. For more information about
        managing clusters, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon
        Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterVersionsMessage"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusterVersions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterVersion:
                  description: "<p>The specific cluster version to return.</p> <p>Example:
                    <code>1.0</code> </p>"
                  type: string
                ClusterParameterGroupFamily:
                  description: <p>The name of a specific cluster parameter group family to
                    return details for.</p> <p>Constraints:</p> <ul> <li>
                    <p>Must be 1 to 255 alphanumeric characters</p> </li> <li>
                    <p>First character must be a letter</p> </li> <li> <p>Cannot
                    end with a hyphen or contain two consecutive hyphens</p>
                    </li> </ul>
                  type: string
                MaxRecords:
                  description: "<p>The maximum number of response records to return in each
                    call. If the number of remaining response records exceeds
                    the specified <code>MaxRecords</code> value, a value is
                    returned in a <code>marker</code> field of the response. You
                    can retrieve the next set of records by retrying the command
                    with the returned marker value. </p> <p>Default:
                    <code>100</code> </p> <p>Constraints: minimum 20, maximum
                    100.</p>"
                  type: integer
                Marker:
                  description: "An optional parameter that specifies the starting point to
                    return a set of response records. When the results of a
                    <a>DescribeClusterVersions</a> request exceed the value
                    specified in <code>MaxRecords</code>, AWS returns a value in
                    the <code>Marker</code> field of the response. You can
                    retrieve the next set of response records by providing the
                    returned marker value in the <code>Marker</code> parameter
                    and retrying the request. "
                  type: string
  /#Action=DescribeClusters:
    get:
      x-aws-operation-name: DescribeClusters
      operationId: GET DescribeClusters
      description: <p>Returns properties of provisioned clusters including general cluster
        properties, cluster database properties, maintenance and backup
        properties, and security and access properties. This operation supports
        pagination. For more information about managing clusters, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon
        Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.</p> <p>If you specify both tag keys and tag values in the
        same request, Amazon Redshift returns all clusters that match any
        combination of the specified keys and values. For example, if you have
        <code>owner</code> and <code>environment</code> for tag keys, and
        <code>admin</code> and <code>test</code> for tag values, all clusters
        that have any combination of those values are returned.</p> <p>If both
        tag keys and values are omitted from the request, clusters are returned
        regardless of whether they have tag keys or values associated with
        them.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClustersMessage"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "481":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: ClusterIdentifier
          in: query
          required: false
          description: <p>The unique identifier of a cluster whose properties you are
            requesting. This parameter is case sensitive.</p> <p>The default is
            that all clusters defined for an account are returned.</p>
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of response records to return in each call.
            If the number of remaining response records exceeds the specified
            <code>MaxRecords</code> value, a value is returned in a
            <code>marker</code> field of the response. You can retrieve the next
            set of records by retrying the command with the returned marker
            value. </p> <p>Default: <code>100</code> </p> <p>Constraints:
            minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: "<p>An optional parameter that specifies the starting point to
            return a set of response records. When the results of a
            <a>DescribeClusters</a> request exceed the value specified in
            <code>MaxRecords</code>, AWS returns a value in the
            <code>Marker</code> field of the response. You can retrieve the next
            set of response records by providing the returned marker value in
            the <code>Marker</code> parameter and retrying the request. </p>
            <p>Constraints: You can specify either the <b>ClusterIdentifier</b>
            parameter or the <b>Marker</b> parameter, but not both. </p>"
          schema:
            type: string
        - name: TagKeys
          in: query
          required: false
          description: A tag key or keys for which you want to return all matching clusters
            that are associated with the specified key or keys. For example,
            suppose that you have clusters that are tagged with keys called
            <code>owner</code> and <code>environment</code>. If you specify both
            of these tag keys in the request, Amazon Redshift returns a response
            with the clusters that have either or both of these tag keys
            associated with them.
          schema:
            type: array
            items:
              type: string
        - name: TagValues
          in: query
          required: false
          description: A tag value or values for which you want to return all matching
            clusters that are associated with the specified tag value or values.
            For example, suppose that you have clusters that are tagged with
            values called <code>admin</code> and <code>test</code>. If you
            specify both of these tag values in the request, Amazon Redshift
            returns a response with the clusters that have either or both of
            these tag values associated with them.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeClusters
      operationId: POST DescribeClusters
      description: <p>Returns properties of provisioned clusters including general cluster
        properties, cluster database properties, maintenance and backup
        properties, and security and access properties. This operation supports
        pagination. For more information about managing clusters, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon
        Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.</p> <p>If you specify both tag keys and tag values in the
        same request, Amazon Redshift returns all clusters that match any
        combination of the specified keys and values. For example, if you have
        <code>owner</code> and <code>environment</code> for tag keys, and
        <code>admin</code> and <code>test</code> for tag values, all clusters
        that have any combination of those values are returned.</p> <p>If both
        tag keys and values are omitted from the request, clusters are returned
        regardless of whether they have tag keys or values associated with
        them.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClustersMessage"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "481":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeClusters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterIdentifier:
                  description: <p>The unique identifier of a cluster whose properties you
                    are requesting. This parameter is case sensitive.</p> <p>The
                    default is that all clusters defined for an account are
                    returned.</p>
                  type: string
                MaxRecords:
                  description: "<p>The maximum number of response records to return in each
                    call. If the number of remaining response records exceeds
                    the specified <code>MaxRecords</code> value, a value is
                    returned in a <code>marker</code> field of the response. You
                    can retrieve the next set of records by retrying the command
                    with the returned marker value. </p> <p>Default:
                    <code>100</code> </p> <p>Constraints: minimum 20, maximum
                    100.</p>"
                  type: integer
                Marker:
                  description: "<p>An optional parameter that specifies the starting point
                    to return a set of response records. When the results of a
                    <a>DescribeClusters</a> request exceed the value specified
                    in <code>MaxRecords</code>, AWS returns a value in the
                    <code>Marker</code> field of the response. You can retrieve
                    the next set of response records by providing the returned
                    marker value in the <code>Marker</code> parameter and
                    retrying the request. </p> <p>Constraints: You can specify
                    either the <b>ClusterIdentifier</b> parameter or the
                    <b>Marker</b> parameter, but not both. </p>"
                  type: string
                TagKeys:
                  description: A tag key or keys for which you want to return all matching
                    clusters that are associated with the specified key or keys.
                    For example, suppose that you have clusters that are tagged
                    with keys called <code>owner</code> and
                    <code>environment</code>. If you specify both of these tag
                    keys in the request, Amazon Redshift returns a response with
                    the clusters that have either or both of these tag keys
                    associated with them.
                  type: array
                  items:
                    type: string
                TagValues:
                  description: A tag value or values for which you want to return all
                    matching clusters that are associated with the specified tag
                    value or values. For example, suppose that you have clusters
                    that are tagged with values called <code>admin</code> and
                    <code>test</code>. If you specify both of these tag values
                    in the request, Amazon Redshift returns a response with the
                    clusters that have either or both of these tag values
                    associated with them.
                  type: array
                  items:
                    type: string
  /#Action=DescribeDefaultClusterParameters:
    get:
      x-aws-operation-name: DescribeDefaultClusterParameters
      operationId: GET DescribeDefaultClusterParameters
      description: <p>Returns a list of parameter settings for the specified parameter
        group family.</p> <p> For more information about parameters and
        parameter groups, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon
        Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster
        Management Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeDefaultClusterParametersResult"
      parameters:
        - name: ParameterGroupFamily
          in: query
          required: true
          description: The name of the cluster parameter group family.
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of response records to return in each call.
            If the number of remaining response records exceeds the specified
            <code>MaxRecords</code> value, a value is returned in a
            <code>marker</code> field of the response. You can retrieve the next
            set of records by retrying the command with the returned marker
            value. </p> <p>Default: <code>100</code> </p> <p>Constraints:
            minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: "An optional parameter that specifies the starting point to return a
            set of response records. When the results of a
            <a>DescribeDefaultClusterParameters</a> request exceed the value
            specified in <code>MaxRecords</code>, AWS returns a value in the
            <code>Marker</code> field of the response. You can retrieve the next
            set of response records by providing the returned marker value in
            the <code>Marker</code> parameter and retrying the request. "
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDefaultClusterParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeDefaultClusterParameters
      operationId: POST DescribeDefaultClusterParameters
      description: <p>Returns a list of parameter settings for the specified parameter
        group family.</p> <p> For more information about parameters and
        parameter groups, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon
        Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster
        Management Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeDefaultClusterParametersResult"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeDefaultClusterParameters
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ParameterGroupFamily:
                  description: The name of the cluster parameter group family.
                  type: string
                MaxRecords:
                  description: "<p>The maximum number of response records to return in each
                    call. If the number of remaining response records exceeds
                    the specified <code>MaxRecords</code> value, a value is
                    returned in a <code>marker</code> field of the response. You
                    can retrieve the next set of records by retrying the command
                    with the returned marker value. </p> <p>Default:
                    <code>100</code> </p> <p>Constraints: minimum 20, maximum
                    100.</p>"
                  type: integer
                Marker:
                  description: "An optional parameter that specifies the starting point to
                    return a set of response records. When the results of a
                    <a>DescribeDefaultClusterParameters</a> request exceed the
                    value specified in <code>MaxRecords</code>, AWS returns a
                    value in the <code>Marker</code> field of the response. You
                    can retrieve the next set of response records by providing
                    the returned marker value in the <code>Marker</code>
                    parameter and retrying the request. "
                  type: string
              required:
                - ParameterGroupFamily
  /#Action=DescribeEventCategories:
    get:
      x-aws-operation-name: DescribeEventCategories
      operationId: GET DescribeEventCategories
      description: Displays a list of event categories for all event source types, or for a
        specified source type. For a list of the event categories and source
        types, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-event-notifications.html">Amazon
        Redshift Event Notifications</a>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EventCategoriesMessage"
      parameters:
        - name: SourceType
          in: query
          required: false
          description: "<p>The source type, such as cluster or parameter group, to which
            the described event categories apply.</p> <p>Valid values: cluster,
            cluster-snapshot, cluster-parameter-group, and
            cluster-security-group.</p>"
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEventCategories
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeEventCategories
      operationId: POST DescribeEventCategories
      description: Displays a list of event categories for all event source types, or for a
        specified source type. For a list of the event categories and source
        types, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-event-notifications.html">Amazon
        Redshift Event Notifications</a>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EventCategoriesMessage"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEventCategories
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SourceType:
                  description: "<p>The source type, such as cluster or parameter group, to
                    which the described event categories apply.</p> <p>Valid
                    values: cluster, cluster-snapshot, cluster-parameter-group,
                    and cluster-security-group.</p>"
                  type: string
  /#Action=DescribeEventSubscriptions:
    get:
      x-aws-operation-name: DescribeEventSubscriptions
      operationId: GET DescribeEventSubscriptions
      description: <p>Lists descriptions of all the Amazon Redshift event notification
        subscriptions for a customer account. If you specify a subscription
        name, lists the description for that subscription.</p> <p>If you specify
        both tag keys and tag values in the same request, Amazon Redshift
        returns all event notification subscriptions that match any combination
        of the specified keys and values. For example, if you have
        <code>owner</code> and <code>environment</code> for tag keys, and
        <code>admin</code> and <code>test</code> for tag values, all
        subscriptions that have any combination of those values are
        returned.</p> <p>If both tag keys and values are omitted from the
        request, subscriptions are returned regardless of whether they have tag
        keys or values associated with them.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EventSubscriptionsMessage"
        "480":
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionNotFoundFault"
        "481":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: SubscriptionName
          in: query
          required: false
          description: The name of the Amazon Redshift event notification subscription to
            be described.
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of response records to return in each call.
            If the number of remaining response records exceeds the specified
            <code>MaxRecords</code> value, a value is returned in a
            <code>marker</code> field of the response. You can retrieve the next
            set of records by retrying the command with the returned marker
            value. </p> <p>Default: <code>100</code> </p> <p>Constraints:
            minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: "An optional parameter that specifies the starting point to return a
            set of response records. When the results of a
            DescribeEventSubscriptions request exceed the value specified in
            <code>MaxRecords</code>, AWS returns a value in the
            <code>Marker</code> field of the response. You can retrieve the next
            set of response records by providing the returned marker value in
            the <code>Marker</code> parameter and retrying the request. "
          schema:
            type: string
        - name: TagKeys
          in: query
          required: false
          description: A tag key or keys for which you want to return all matching event
            notification subscriptions that are associated with the specified
            key or keys. For example, suppose that you have subscriptions that
            are tagged with keys called <code>owner</code> and
            <code>environment</code>. If you specify both of these tag keys in
            the request, Amazon Redshift returns a response with the
            subscriptions that have either or both of these tag keys associated
            with them.
          schema:
            type: array
            items:
              type: string
        - name: TagValues
          in: query
          required: false
          description: A tag value or values for which you want to return all matching
            event notification subscriptions that are associated with the
            specified tag value or values. For example, suppose that you have
            subscriptions that are tagged with values called <code>admin</code>
            and <code>test</code>. If you specify both of these tag values in
            the request, Amazon Redshift returns a response with the
            subscriptions that have either or both of these tag values
            associated with them.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEventSubscriptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeEventSubscriptions
      operationId: POST DescribeEventSubscriptions
      description: <p>Lists descriptions of all the Amazon Redshift event notification
        subscriptions for a customer account. If you specify a subscription
        name, lists the description for that subscription.</p> <p>If you specify
        both tag keys and tag values in the same request, Amazon Redshift
        returns all event notification subscriptions that match any combination
        of the specified keys and values. For example, if you have
        <code>owner</code> and <code>environment</code> for tag keys, and
        <code>admin</code> and <code>test</code> for tag values, all
        subscriptions that have any combination of those values are
        returned.</p> <p>If both tag keys and values are omitted from the
        request, subscriptions are returned regardless of whether they have tag
        keys or values associated with them.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EventSubscriptionsMessage"
        "480":
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionNotFoundFault"
        "481":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEventSubscriptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SubscriptionName:
                  description: The name of the Amazon Redshift event notification
                    subscription to be described.
                  type: string
                MaxRecords:
                  description: "<p>The maximum number of response records to return in each
                    call. If the number of remaining response records exceeds
                    the specified <code>MaxRecords</code> value, a value is
                    returned in a <code>marker</code> field of the response. You
                    can retrieve the next set of records by retrying the command
                    with the returned marker value. </p> <p>Default:
                    <code>100</code> </p> <p>Constraints: minimum 20, maximum
                    100.</p>"
                  type: integer
                Marker:
                  description: "An optional parameter that specifies the starting point to
                    return a set of response records. When the results of a
                    DescribeEventSubscriptions request exceed the value
                    specified in <code>MaxRecords</code>, AWS returns a value in
                    the <code>Marker</code> field of the response. You can
                    retrieve the next set of response records by providing the
                    returned marker value in the <code>Marker</code> parameter
                    and retrying the request. "
                  type: string
                TagKeys:
                  description: A tag key or keys for which you want to return all matching
                    event notification subscriptions that are associated with
                    the specified key or keys. For example, suppose that you
                    have subscriptions that are tagged with keys called
                    <code>owner</code> and <code>environment</code>. If you
                    specify both of these tag keys in the request, Amazon
                    Redshift returns a response with the subscriptions that have
                    either or both of these tag keys associated with them.
                  type: array
                  items:
                    type: string
                TagValues:
                  description: A tag value or values for which you want to return all
                    matching event notification subscriptions that are
                    associated with the specified tag value or values. For
                    example, suppose that you have subscriptions that are tagged
                    with values called <code>admin</code> and <code>test</code>.
                    If you specify both of these tag values in the request,
                    Amazon Redshift returns a response with the subscriptions
                    that have either or both of these tag values associated with
                    them.
                  type: array
                  items:
                    type: string
  /#Action=DescribeEvents:
    get:
      x-aws-operation-name: DescribeEvents
      operationId: GET DescribeEvents
      description: Returns events related to clusters, security groups, snapshots, and
        parameter groups for the past 14 days. Events specific to a particular
        cluster, security group, snapshot or parameter group can be obtained by
        providing the name as a parameter. By default, the past hour of events
        are returned.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EventsMessage"
      parameters:
        - name: SourceIdentifier
          in: query
          required: false
          description: <p>The identifier of the event source for which events will be
            returned. If this parameter is not specified, then all sources are
            included in the response.</p> <p>Constraints:</p> <p>If
            <i>SourceIdentifier</i> is supplied, <i>SourceType</i> must also be
            provided.</p> <ul> <li> <p>Specify a cluster identifier when
            <i>SourceType</i> is <code>cluster</code>.</p> </li> <li> <p>Specify
            a cluster security group name when <i>SourceType</i> is
            <code>cluster-security-group</code>.</p> </li> <li> <p>Specify a
            cluster parameter group name when <i>SourceType</i> is
            <code>cluster-parameter-group</code>.</p> </li> <li> <p>Specify a
            cluster snapshot identifier when <i>SourceType</i> is
            <code>cluster-snapshot</code>.</p> </li> </ul>
          schema:
            type: string
        - name: SourceType
          in: query
          required: false
          description: <p>The event source to retrieve events for. If no value is
            specified, all events are returned.</p> <p>Constraints:</p> <p>If
            <i>SourceType</i> is supplied, <i>SourceIdentifier</i> must also be
            provided.</p> <ul> <li> <p>Specify <code>cluster</code> when
            <i>SourceIdentifier</i> is a cluster identifier.</p> </li> <li>
            <p>Specify <code>cluster-security-group</code> when
            <i>SourceIdentifier</i> is a cluster security group name.</p> </li>
            <li> <p>Specify <code>cluster-parameter-group</code> when
            <i>SourceIdentifier</i> is a cluster parameter group name.</p> </li>
            <li> <p>Specify <code>cluster-snapshot</code> when
            <i>SourceIdentifier</i> is a cluster snapshot identifier.</p> </li>
            </ul>
          schema:
            type: string
            enum:
              - cluster
              - cluster-parameter-group
              - cluster-security-group
              - cluster-snapshot
        - name: StartTime
          in: query
          required: false
          description: '<p>The beginning of the time interval to retrieve events for,
            specified in ISO 8601 format. For more information about ISO 8601,
            go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601
            Wikipedia page.</a> </p> <p>Example: <code>2009-07-08T18:00Z</code>
            </p>'
          schema:
            type: string
            format: date-time
        - name: EndTime
          in: query
          required: false
          description: '<p>The end of the time interval for which to retrieve events,
            specified in ISO 8601 format. For more information about ISO 8601,
            go to the <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601
            Wikipedia page.</a> </p> <p>Example: <code>2009-07-08T18:00Z</code>
            </p>'
          schema:
            type: string
            format: date-time
        - name: Duration
          in: query
          required: false
          description: "<p>The number of minutes prior to the time of the request for which
            to retrieve events. For example, if the request is sent at 18:00 and
            you specify a duration of 60, then only events which have occurred
            after 17:00 will be returned.</p> <p>Default: <code>60</code> </p>"
          schema:
            type: integer
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of response records to return in each call.
            If the number of remaining response records exceeds the specified
            <code>MaxRecords</code> value, a value is returned in a
            <code>marker</code> field of the response. You can retrieve the next
            set of records by retrying the command with the returned marker
            value. </p> <p>Default: <code>100</code> </p> <p>Constraints:
            minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: "An optional parameter that specifies the starting point to return a
            set of response records. When the results of a <a>DescribeEvents</a>
            request exceed the value specified in <code>MaxRecords</code>, AWS
            returns a value in the <code>Marker</code> field of the response.
            You can retrieve the next set of response records by providing the
            returned marker value in the <code>Marker</code> parameter and
            retrying the request. "
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEvents
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeEvents
      operationId: POST DescribeEvents
      description: Returns events related to clusters, security groups, snapshots, and
        parameter groups for the past 14 days. Events specific to a particular
        cluster, security group, snapshot or parameter group can be obtained by
        providing the name as a parameter. By default, the past hour of events
        are returned.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EventsMessage"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEvents
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SourceIdentifier:
                  description: <p>The identifier of the event source for which events will
                    be returned. If this parameter is not specified, then all
                    sources are included in the response.</p>
                    <p>Constraints:</p> <p>If <i>SourceIdentifier</i> is
                    supplied, <i>SourceType</i> must also be provided.</p> <ul>
                    <li> <p>Specify a cluster identifier when <i>SourceType</i>
                    is <code>cluster</code>.</p> </li> <li> <p>Specify a cluster
                    security group name when <i>SourceType</i> is
                    <code>cluster-security-group</code>.</p> </li> <li>
                    <p>Specify a cluster parameter group name when
                    <i>SourceType</i> is
                    <code>cluster-parameter-group</code>.</p> </li> <li>
                    <p>Specify a cluster snapshot identifier when
                    <i>SourceType</i> is <code>cluster-snapshot</code>.</p>
                    </li> </ul>
                  type: string
                SourceType:
                  description: <p>The event source to retrieve events for. If no value is
                    specified, all events are returned.</p> <p>Constraints:</p>
                    <p>If <i>SourceType</i> is supplied, <i>SourceIdentifier</i>
                    must also be provided.</p> <ul> <li> <p>Specify
                    <code>cluster</code> when <i>SourceIdentifier</i> is a
                    cluster identifier.</p> </li> <li> <p>Specify
                    <code>cluster-security-group</code> when
                    <i>SourceIdentifier</i> is a cluster security group
                    name.</p> </li> <li> <p>Specify
                    <code>cluster-parameter-group</code> when
                    <i>SourceIdentifier</i> is a cluster parameter group
                    name.</p> </li> <li> <p>Specify
                    <code>cluster-snapshot</code> when <i>SourceIdentifier</i>
                    is a cluster snapshot identifier.</p> </li> </ul>
                  type: string
                  enum:
                    - cluster
                    - cluster-parameter-group
                    - cluster-security-group
                    - cluster-snapshot
                StartTime:
                  description: '<p>The beginning of the time interval to retrieve events
                    for, specified in ISO 8601 format. For more information
                    about ISO 8601, go to the <a
                    href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601
                    Wikipedia page.</a> </p> <p>Example:
                    <code>2009-07-08T18:00Z</code> </p>'
                  type: string
                  format: date-time
                EndTime:
                  description: '<p>The end of the time interval for which to retrieve
                    events, specified in ISO 8601 format. For more information
                    about ISO 8601, go to the <a
                    href="http://en.wikipedia.org/wiki/ISO_8601">ISO8601
                    Wikipedia page.</a> </p> <p>Example:
                    <code>2009-07-08T18:00Z</code> </p>'
                  type: string
                  format: date-time
                Duration:
                  description: "<p>The number of minutes prior to the time of the request
                    for which to retrieve events. For example, if the request is
                    sent at 18:00 and you specify a duration of 60, then only
                    events which have occurred after 17:00 will be returned.</p>
                    <p>Default: <code>60</code> </p>"
                  type: integer
                MaxRecords:
                  description: "<p>The maximum number of response records to return in each
                    call. If the number of remaining response records exceeds
                    the specified <code>MaxRecords</code> value, a value is
                    returned in a <code>marker</code> field of the response. You
                    can retrieve the next set of records by retrying the command
                    with the returned marker value. </p> <p>Default:
                    <code>100</code> </p> <p>Constraints: minimum 20, maximum
                    100.</p>"
                  type: integer
                Marker:
                  description: "An optional parameter that specifies the starting point to
                    return a set of response records. When the results of a
                    <a>DescribeEvents</a> request exceed the value specified in
                    <code>MaxRecords</code>, AWS returns a value in the
                    <code>Marker</code> field of the response. You can retrieve
                    the next set of response records by providing the returned
                    marker value in the <code>Marker</code> parameter and
                    retrying the request. "
                  type: string
  /#Action=DescribeHsmClientCertificates:
    get:
      x-aws-operation-name: DescribeHsmClientCertificates
      operationId: GET DescribeHsmClientCertificates
      description: <p>Returns information about the specified HSM client certificate. If no
        certificate ID is specified, returns information about all the HSM
        certificates owned by your AWS customer account.</p> <p>If you specify
        both tag keys and tag values in the same request, Amazon Redshift
        returns all HSM client certificates that match any combination of the
        specified keys and values. For example, if you have <code>owner</code>
        and <code>environment</code> for tag keys, and <code>admin</code> and
        <code>test</code> for tag values, all HSM client certificates that have
        any combination of those values are returned.</p> <p>If both tag keys
        and values are omitted from the request, HSM client certificates are
        returned regardless of whether they have tag keys or values associated
        with them.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmClientCertificateMessage"
        "480":
          description: HsmClientCertificateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmClientCertificateNotFoundFault"
        "481":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: HsmClientCertificateIdentifier
          in: query
          required: false
          description: The identifier of a specific HSM client certificate for which you
            want information. If no identifier is specified, information is
            returned for all HSM client certificates owned by your AWS customer
            account.
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of response records to return in each call.
            If the number of remaining response records exceeds the specified
            <code>MaxRecords</code> value, a value is returned in a
            <code>marker</code> field of the response. You can retrieve the next
            set of records by retrying the command with the returned marker
            value. </p> <p>Default: <code>100</code> </p> <p>Constraints:
            minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: "An optional parameter that specifies the starting point to return a
            set of response records. When the results of a
            <a>DescribeHsmClientCertificates</a> request exceed the value
            specified in <code>MaxRecords</code>, AWS returns a value in the
            <code>Marker</code> field of the response. You can retrieve the next
            set of response records by providing the returned marker value in
            the <code>Marker</code> parameter and retrying the request. "
          schema:
            type: string
        - name: TagKeys
          in: query
          required: false
          description: A tag key or keys for which you want to return all matching HSM
            client certificates that are associated with the specified key or
            keys. For example, suppose that you have HSM client certificates
            that are tagged with keys called <code>owner</code> and
            <code>environment</code>. If you specify both of these tag keys in
            the request, Amazon Redshift returns a response with the HSM client
            certificates that have either or both of these tag keys associated
            with them.
          schema:
            type: array
            items:
              type: string
        - name: TagValues
          in: query
          required: false
          description: A tag value or values for which you want to return all matching HSM
            client certificates that are associated with the specified tag value
            or values. For example, suppose that you have HSM client
            certificates that are tagged with values called <code>admin</code>
            and <code>test</code>. If you specify both of these tag values in
            the request, Amazon Redshift returns a response with the HSM client
            certificates that have either or both of these tag values associated
            with them.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeHsmClientCertificates
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeHsmClientCertificates
      operationId: POST DescribeHsmClientCertificates
      description: <p>Returns information about the specified HSM client certificate. If no
        certificate ID is specified, returns information about all the HSM
        certificates owned by your AWS customer account.</p> <p>If you specify
        both tag keys and tag values in the same request, Amazon Redshift
        returns all HSM client certificates that match any combination of the
        specified keys and values. For example, if you have <code>owner</code>
        and <code>environment</code> for tag keys, and <code>admin</code> and
        <code>test</code> for tag values, all HSM client certificates that have
        any combination of those values are returned.</p> <p>If both tag keys
        and values are omitted from the request, HSM client certificates are
        returned regardless of whether they have tag keys or values associated
        with them.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmClientCertificateMessage"
        "480":
          description: HsmClientCertificateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmClientCertificateNotFoundFault"
        "481":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeHsmClientCertificates
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                HsmClientCertificateIdentifier:
                  description: The identifier of a specific HSM client certificate for
                    which you want information. If no identifier is specified,
                    information is returned for all HSM client certificates
                    owned by your AWS customer account.
                  type: string
                MaxRecords:
                  description: "<p>The maximum number of response records to return in each
                    call. If the number of remaining response records exceeds
                    the specified <code>MaxRecords</code> value, a value is
                    returned in a <code>marker</code> field of the response. You
                    can retrieve the next set of records by retrying the command
                    with the returned marker value. </p> <p>Default:
                    <code>100</code> </p> <p>Constraints: minimum 20, maximum
                    100.</p>"
                  type: integer
                Marker:
                  description: "An optional parameter that specifies the starting point to
                    return a set of response records. When the results of a
                    <a>DescribeHsmClientCertificates</a> request exceed the
                    value specified in <code>MaxRecords</code>, AWS returns a
                    value in the <code>Marker</code> field of the response. You
                    can retrieve the next set of response records by providing
                    the returned marker value in the <code>Marker</code>
                    parameter and retrying the request. "
                  type: string
                TagKeys:
                  description: A tag key or keys for which you want to return all matching
                    HSM client certificates that are associated with the
                    specified key or keys. For example, suppose that you have
                    HSM client certificates that are tagged with keys called
                    <code>owner</code> and <code>environment</code>. If you
                    specify both of these tag keys in the request, Amazon
                    Redshift returns a response with the HSM client certificates
                    that have either or both of these tag keys associated with
                    them.
                  type: array
                  items:
                    type: string
                TagValues:
                  description: A tag value or values for which you want to return all
                    matching HSM client certificates that are associated with
                    the specified tag value or values. For example, suppose that
                    you have HSM client certificates that are tagged with values
                    called <code>admin</code> and <code>test</code>. If you
                    specify both of these tag values in the request, Amazon
                    Redshift returns a response with the HSM client certificates
                    that have either or both of these tag values associated with
                    them.
                  type: array
                  items:
                    type: string
  /#Action=DescribeHsmConfigurations:
    get:
      x-aws-operation-name: DescribeHsmConfigurations
      operationId: GET DescribeHsmConfigurations
      description: <p>Returns information about the specified Amazon Redshift HSM
        configuration. If no configuration ID is specified, returns information
        about all the HSM configurations owned by your AWS customer account.</p>
        <p>If you specify both tag keys and tag values in the same request,
        Amazon Redshift returns all HSM connections that match any combination
        of the specified keys and values. For example, if you have
        <code>owner</code> and <code>environment</code> for tag keys, and
        <code>admin</code> and <code>test</code> for tag values, all HSM
        connections that have any combination of those values are returned.</p>
        <p>If both tag keys and values are omitted from the request, HSM
        connections are returned regardless of whether they have tag keys or
        values associated with them.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmConfigurationMessage"
        "480":
          description: HsmConfigurationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmConfigurationNotFoundFault"
        "481":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: HsmConfigurationIdentifier
          in: query
          required: false
          description: The identifier of a specific Amazon Redshift HSM configuration to be
            described. If no identifier is specified, information is returned
            for all HSM configurations owned by your AWS customer account.
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of response records to return in each call.
            If the number of remaining response records exceeds the specified
            <code>MaxRecords</code> value, a value is returned in a
            <code>marker</code> field of the response. You can retrieve the next
            set of records by retrying the command with the returned marker
            value. </p> <p>Default: <code>100</code> </p> <p>Constraints:
            minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: "An optional parameter that specifies the starting point to return a
            set of response records. When the results of a
            <a>DescribeHsmConfigurations</a> request exceed the value specified
            in <code>MaxRecords</code>, AWS returns a value in the
            <code>Marker</code> field of the response. You can retrieve the next
            set of response records by providing the returned marker value in
            the <code>Marker</code> parameter and retrying the request. "
          schema:
            type: string
        - name: TagKeys
          in: query
          required: false
          description: A tag key or keys for which you want to return all matching HSM
            configurations that are associated with the specified key or keys.
            For example, suppose that you have HSM configurations that are
            tagged with keys called <code>owner</code> and
            <code>environment</code>. If you specify both of these tag keys in
            the request, Amazon Redshift returns a response with the HSM
            configurations that have either or both of these tag keys associated
            with them.
          schema:
            type: array
            items:
              type: string
        - name: TagValues
          in: query
          required: false
          description: A tag value or values for which you want to return all matching HSM
            configurations that are associated with the specified tag value or
            values. For example, suppose that you have HSM configurations that
            are tagged with values called <code>admin</code> and
            <code>test</code>. If you specify both of these tag values in the
            request, Amazon Redshift returns a response with the HSM
            configurations that have either or both of these tag values
            associated with them.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeHsmConfigurations
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeHsmConfigurations
      operationId: POST DescribeHsmConfigurations
      description: <p>Returns information about the specified Amazon Redshift HSM
        configuration. If no configuration ID is specified, returns information
        about all the HSM configurations owned by your AWS customer account.</p>
        <p>If you specify both tag keys and tag values in the same request,
        Amazon Redshift returns all HSM connections that match any combination
        of the specified keys and values. For example, if you have
        <code>owner</code> and <code>environment</code> for tag keys, and
        <code>admin</code> and <code>test</code> for tag values, all HSM
        connections that have any combination of those values are returned.</p>
        <p>If both tag keys and values are omitted from the request, HSM
        connections are returned regardless of whether they have tag keys or
        values associated with them.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmConfigurationMessage"
        "480":
          description: HsmConfigurationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmConfigurationNotFoundFault"
        "481":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeHsmConfigurations
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                HsmConfigurationIdentifier:
                  description: The identifier of a specific Amazon Redshift HSM
                    configuration to be described. If no identifier is
                    specified, information is returned for all HSM
                    configurations owned by your AWS customer account.
                  type: string
                MaxRecords:
                  description: "<p>The maximum number of response records to return in each
                    call. If the number of remaining response records exceeds
                    the specified <code>MaxRecords</code> value, a value is
                    returned in a <code>marker</code> field of the response. You
                    can retrieve the next set of records by retrying the command
                    with the returned marker value. </p> <p>Default:
                    <code>100</code> </p> <p>Constraints: minimum 20, maximum
                    100.</p>"
                  type: integer
                Marker:
                  description: "An optional parameter that specifies the starting point to
                    return a set of response records. When the results of a
                    <a>DescribeHsmConfigurations</a> request exceed the value
                    specified in <code>MaxRecords</code>, AWS returns a value in
                    the <code>Marker</code> field of the response. You can
                    retrieve the next set of response records by providing the
                    returned marker value in the <code>Marker</code> parameter
                    and retrying the request. "
                  type: string
                TagKeys:
                  description: A tag key or keys for which you want to return all matching
                    HSM configurations that are associated with the specified
                    key or keys. For example, suppose that you have HSM
                    configurations that are tagged with keys called
                    <code>owner</code> and <code>environment</code>. If you
                    specify both of these tag keys in the request, Amazon
                    Redshift returns a response with the HSM configurations that
                    have either or both of these tag keys associated with them.
                  type: array
                  items:
                    type: string
                TagValues:
                  description: A tag value or values for which you want to return all
                    matching HSM configurations that are associated with the
                    specified tag value or values. For example, suppose that you
                    have HSM configurations that are tagged with values called
                    <code>admin</code> and <code>test</code>. If you specify
                    both of these tag values in the request, Amazon Redshift
                    returns a response with the HSM configurations that have
                    either or both of these tag values associated with them.
                  type: array
                  items:
                    type: string
  /#Action=DescribeLoggingStatus:
    get:
      x-aws-operation-name: DescribeLoggingStatus
      operationId: GET DescribeLoggingStatus
      description: Describes whether information, such as queries and connection attempts,
        is being logged for the specified Amazon Redshift cluster.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoggingStatus"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: "<p>The identifier of the cluster from which to get the logging
            status.</p> <p>Example: <code>examplecluster</code> </p>"
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeLoggingStatus
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeLoggingStatus
      operationId: POST DescribeLoggingStatus
      description: Describes whether information, such as queries and connection attempts,
        is being logged for the specified Amazon Redshift cluster.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoggingStatus"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeLoggingStatus
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterIdentifier:
                  description: "<p>The identifier of the cluster from which to get the
                    logging status.</p> <p>Example: <code>examplecluster</code>
                    </p>"
                  type: string
              required:
                - ClusterIdentifier
  /#Action=DescribeNodeConfigurationOptions:
    get:
      x-aws-operation-name: DescribeNodeConfigurationOptions
      operationId: GET DescribeNodeConfigurationOptions
      description: Returns properties of possible node configurations such as node type,
        number of nodes, and disk usage for the specified action type.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeConfigurationOptionsMessage"
        "480":
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotNotFoundFault"
        "481":
          description: InvalidClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSnapshotStateFault"
      parameters:
        - name: ActionType
          in: query
          required: true
          description: The action type to evaluate for possible node configurations.
            Currently, it must be "restore-cluster".
          schema:
            type: string
            enum:
              - restore-cluster
        - name: SnapshotIdentifier
          in: query
          required: false
          description: The identifier of the snapshot to evaluate for possible node
            configurations.
          schema:
            type: string
        - name: OwnerAccount
          in: query
          required: false
          description: The AWS customer account used to create or copy the snapshot.
            Required if you are restoring a snapshot you do not own, optional if
            you own the snapshot.
          schema:
            type: string
        - name: Filter
          in: query
          required: false
          description: A set of name, operator, and value items to filter the results.
          schema:
            type: array
            items:
              type: string
        - name: Marker
          in: query
          required: false
          description: "An optional parameter that specifies the starting point to return a
            set of response records. When the results of a
            <a>DescribeNodeConfigurationOptions</a> request exceed the value
            specified in <code>MaxRecords</code>, AWS returns a value in the
            <code>Marker</code> field of the response. You can retrieve the next
            set of response records by providing the returned marker value in
            the <code>Marker</code> parameter and retrying the request. "
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of response records to return in each call.
            If the number of remaining response records exceeds the specified
            <code>MaxRecords</code> value, a value is returned in a
            <code>marker</code> field of the response. You can retrieve the next
            set of records by retrying the command with the returned marker
            value. </p> <p>Default: <code>500</code> </p> <p>Constraints:
            minimum 100, maximum 500.</p>"
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeNodeConfigurationOptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeNodeConfigurationOptions
      operationId: POST DescribeNodeConfigurationOptions
      description: Returns properties of possible node configurations such as node type,
        number of nodes, and disk usage for the specified action type.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NodeConfigurationOptionsMessage"
        "480":
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotNotFoundFault"
        "481":
          description: InvalidClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSnapshotStateFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeNodeConfigurationOptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ActionType:
                  description: The action type to evaluate for possible node
                    configurations. Currently, it must be "restore-cluster".
                  type: string
                  enum:
                    - restore-cluster
                SnapshotIdentifier:
                  description: The identifier of the snapshot to evaluate for possible node
                    configurations.
                  type: string
                OwnerAccount:
                  description: The AWS customer account used to create or copy the
                    snapshot. Required if you are restoring a snapshot you do
                    not own, optional if you own the snapshot.
                  type: string
                Filter:
                  description: A set of name, operator, and value items to filter the
                    results.
                  type: array
                  items:
                    type: string
                Marker:
                  description: "An optional parameter that specifies the starting point to
                    return a set of response records. When the results of a
                    <a>DescribeNodeConfigurationOptions</a> request exceed the
                    value specified in <code>MaxRecords</code>, AWS returns a
                    value in the <code>Marker</code> field of the response. You
                    can retrieve the next set of response records by providing
                    the returned marker value in the <code>Marker</code>
                    parameter and retrying the request. "
                  type: string
                MaxRecords:
                  description: "<p>The maximum number of response records to return in each
                    call. If the number of remaining response records exceeds
                    the specified <code>MaxRecords</code> value, a value is
                    returned in a <code>marker</code> field of the response. You
                    can retrieve the next set of records by retrying the command
                    with the returned marker value. </p> <p>Default:
                    <code>500</code> </p> <p>Constraints: minimum 100, maximum
                    500.</p>"
                  type: integer
              required:
                - ActionType
  /#Action=DescribeOrderableClusterOptions:
    get:
      x-aws-operation-name: DescribeOrderableClusterOptions
      operationId: GET DescribeOrderableClusterOptions
      description: Returns a list of orderable cluster options. Before you create a new
        cluster you can use this operation to find what options are available,
        such as the EC2 Availability Zones (AZ) in the specific AWS Region that
        you can specify, and the node types you can request. The node types
        differ by available storage, memory, CPU and price. With the cost
        involved you might want to obtain a list of cluster options in the
        specific region and specify values when creating a cluster. For more
        information about managing clusters, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon
        Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OrderableClusterOptionsMessage"
      parameters:
        - name: ClusterVersion
          in: query
          required: false
          description: "<p>The version filter value. Specify this parameter to show only
            the available offerings matching the specified version.</p>
            <p>Default: All versions.</p> <p>Constraints: Must be one of the
            version returned from <a>DescribeClusterVersions</a>.</p>"
          schema:
            type: string
        - name: NodeType
          in: query
          required: false
          description: The node type filter value. Specify this parameter to show only the
            available offerings matching the specified node type.
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of response records to return in each call.
            If the number of remaining response records exceeds the specified
            <code>MaxRecords</code> value, a value is returned in a
            <code>marker</code> field of the response. You can retrieve the next
            set of records by retrying the command with the returned marker
            value. </p> <p>Default: <code>100</code> </p> <p>Constraints:
            minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: "An optional parameter that specifies the starting point to return a
            set of response records. When the results of a
            <a>DescribeOrderableClusterOptions</a> request exceed the value
            specified in <code>MaxRecords</code>, AWS returns a value in the
            <code>Marker</code> field of the response. You can retrieve the next
            set of response records by providing the returned marker value in
            the <code>Marker</code> parameter and retrying the request. "
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeOrderableClusterOptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeOrderableClusterOptions
      operationId: POST DescribeOrderableClusterOptions
      description: Returns a list of orderable cluster options. Before you create a new
        cluster you can use this operation to find what options are available,
        such as the EC2 Availability Zones (AZ) in the specific AWS Region that
        you can specify, and the node types you can request. The node types
        differ by available storage, memory, CPU and price. With the cost
        involved you might want to obtain a list of cluster options in the
        specific region and specify values when creating a cluster. For more
        information about managing clusters, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon
        Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OrderableClusterOptionsMessage"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeOrderableClusterOptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterVersion:
                  description: "<p>The version filter value. Specify this parameter to show
                    only the available offerings matching the specified
                    version.</p> <p>Default: All versions.</p> <p>Constraints:
                    Must be one of the version returned from
                    <a>DescribeClusterVersions</a>.</p>"
                  type: string
                NodeType:
                  description: The node type filter value. Specify this parameter to show
                    only the available offerings matching the specified node
                    type.
                  type: string
                MaxRecords:
                  description: "<p>The maximum number of response records to return in each
                    call. If the number of remaining response records exceeds
                    the specified <code>MaxRecords</code> value, a value is
                    returned in a <code>marker</code> field of the response. You
                    can retrieve the next set of records by retrying the command
                    with the returned marker value. </p> <p>Default:
                    <code>100</code> </p> <p>Constraints: minimum 20, maximum
                    100.</p>"
                  type: integer
                Marker:
                  description: "An optional parameter that specifies the starting point to
                    return a set of response records. When the results of a
                    <a>DescribeOrderableClusterOptions</a> request exceed the
                    value specified in <code>MaxRecords</code>, AWS returns a
                    value in the <code>Marker</code> field of the response. You
                    can retrieve the next set of response records by providing
                    the returned marker value in the <code>Marker</code>
                    parameter and retrying the request. "
                  type: string
  /#Action=DescribeReservedNodeOfferings:
    get:
      x-aws-operation-name: DescribeReservedNodeOfferings
      operationId: GET DescribeReservedNodeOfferings
      description: <p>Returns a list of the available reserved node offerings by Amazon
        Redshift with their descriptions including the node type, the fixed and
        recurring costs of reserving the node and duration the node will be
        reserved for you. These descriptions help you determine which reserve
        node offering you want to purchase. You then use the unique offering ID
        in you call to <a>PurchaseReservedNodeOffering</a> to reserve one or
        more nodes for your Amazon Redshift cluster. </p> <p> For more
        information about reserved node offerings, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/purchase-reserved-node-instance.html">Purchasing
        Reserved Nodes</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedNodeOfferingsMessage"
        "480":
          description: ReservedNodeOfferingNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedNodeOfferingNotFoundFault"
        "481":
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationFault"
        "482":
          description: DependentServiceUnavailableFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DependentServiceUnavailableFault"
      parameters:
        - name: ReservedNodeOfferingId
          in: query
          required: false
          description: The unique identifier for the offering.
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of response records to return in each call.
            If the number of remaining response records exceeds the specified
            <code>MaxRecords</code> value, a value is returned in a
            <code>marker</code> field of the response. You can retrieve the next
            set of records by retrying the command with the returned marker
            value. </p> <p>Default: <code>100</code> </p> <p>Constraints:
            minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: "An optional parameter that specifies the starting point to return a
            set of response records. When the results of a
            <a>DescribeReservedNodeOfferings</a> request exceed the value
            specified in <code>MaxRecords</code>, AWS returns a value in the
            <code>Marker</code> field of the response. You can retrieve the next
            set of response records by providing the returned marker value in
            the <code>Marker</code> parameter and retrying the request. "
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeReservedNodeOfferings
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeReservedNodeOfferings
      operationId: POST DescribeReservedNodeOfferings
      description: <p>Returns a list of the available reserved node offerings by Amazon
        Redshift with their descriptions including the node type, the fixed and
        recurring costs of reserving the node and duration the node will be
        reserved for you. These descriptions help you determine which reserve
        node offering you want to purchase. You then use the unique offering ID
        in you call to <a>PurchaseReservedNodeOffering</a> to reserve one or
        more nodes for your Amazon Redshift cluster. </p> <p> For more
        information about reserved node offerings, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/purchase-reserved-node-instance.html">Purchasing
        Reserved Nodes</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedNodeOfferingsMessage"
        "480":
          description: ReservedNodeOfferingNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedNodeOfferingNotFoundFault"
        "481":
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationFault"
        "482":
          description: DependentServiceUnavailableFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DependentServiceUnavailableFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeReservedNodeOfferings
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ReservedNodeOfferingId:
                  description: The unique identifier for the offering.
                  type: string
                MaxRecords:
                  description: "<p>The maximum number of response records to return in each
                    call. If the number of remaining response records exceeds
                    the specified <code>MaxRecords</code> value, a value is
                    returned in a <code>marker</code> field of the response. You
                    can retrieve the next set of records by retrying the command
                    with the returned marker value. </p> <p>Default:
                    <code>100</code> </p> <p>Constraints: minimum 20, maximum
                    100.</p>"
                  type: integer
                Marker:
                  description: "An optional parameter that specifies the starting point to
                    return a set of response records. When the results of a
                    <a>DescribeReservedNodeOfferings</a> request exceed the
                    value specified in <code>MaxRecords</code>, AWS returns a
                    value in the <code>Marker</code> field of the response. You
                    can retrieve the next set of response records by providing
                    the returned marker value in the <code>Marker</code>
                    parameter and retrying the request. "
                  type: string
  /#Action=DescribeReservedNodes:
    get:
      x-aws-operation-name: DescribeReservedNodes
      operationId: GET DescribeReservedNodes
      description: Returns the descriptions of the reserved nodes.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedNodesMessage"
        "480":
          description: ReservedNodeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedNodeNotFoundFault"
        "481":
          description: DependentServiceUnavailableFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DependentServiceUnavailableFault"
      parameters:
        - name: ReservedNodeId
          in: query
          required: false
          description: Identifier for the node reservation.
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of response records to return in each call.
            If the number of remaining response records exceeds the specified
            <code>MaxRecords</code> value, a value is returned in a
            <code>marker</code> field of the response. You can retrieve the next
            set of records by retrying the command with the returned marker
            value. </p> <p>Default: <code>100</code> </p> <p>Constraints:
            minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: "An optional parameter that specifies the starting point to return a
            set of response records. When the results of a
            <a>DescribeReservedNodes</a> request exceed the value specified in
            <code>MaxRecords</code>, AWS returns a value in the
            <code>Marker</code> field of the response. You can retrieve the next
            set of response records by providing the returned marker value in
            the <code>Marker</code> parameter and retrying the request. "
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeReservedNodes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeReservedNodes
      operationId: POST DescribeReservedNodes
      description: Returns the descriptions of the reserved nodes.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedNodesMessage"
        "480":
          description: ReservedNodeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedNodeNotFoundFault"
        "481":
          description: DependentServiceUnavailableFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DependentServiceUnavailableFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeReservedNodes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ReservedNodeId:
                  description: Identifier for the node reservation.
                  type: string
                MaxRecords:
                  description: "<p>The maximum number of response records to return in each
                    call. If the number of remaining response records exceeds
                    the specified <code>MaxRecords</code> value, a value is
                    returned in a <code>marker</code> field of the response. You
                    can retrieve the next set of records by retrying the command
                    with the returned marker value. </p> <p>Default:
                    <code>100</code> </p> <p>Constraints: minimum 20, maximum
                    100.</p>"
                  type: integer
                Marker:
                  description: "An optional parameter that specifies the starting point to
                    return a set of response records. When the results of a
                    <a>DescribeReservedNodes</a> request exceed the value
                    specified in <code>MaxRecords</code>, AWS returns a value in
                    the <code>Marker</code> field of the response. You can
                    retrieve the next set of response records by providing the
                    returned marker value in the <code>Marker</code> parameter
                    and retrying the request. "
                  type: string
  /#Action=DescribeResize:
    get:
      x-aws-operation-name: DescribeResize
      operationId: GET DescribeResize
      description: <p>Returns information about the last resize operation for the specified
        cluster. If no resize operation has ever been initiated for the
        specified cluster, a <code>HTTP 404</code> error is returned. If a
        resize operation was initiated and completed, the status of the resize
        remains as <code>SUCCEEDED</code> until the next resize. </p> <p>A
        resize operation can be requested using <a>ModifyCluster</a> and
        specifying a different number or type of nodes for the cluster. </p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResizeProgressMessage"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "481":
          description: ResizeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResizeNotFoundFault"
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: <p>The unique identifier of a cluster whose resize progress you are
            requesting. This parameter is case-sensitive.</p> <p>By default,
            resize operations for all clusters defined for an AWS account are
            returned.</p>
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeResize
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeResize
      operationId: POST DescribeResize
      description: <p>Returns information about the last resize operation for the specified
        cluster. If no resize operation has ever been initiated for the
        specified cluster, a <code>HTTP 404</code> error is returned. If a
        resize operation was initiated and completed, the status of the resize
        remains as <code>SUCCEEDED</code> until the next resize. </p> <p>A
        resize operation can be requested using <a>ModifyCluster</a> and
        specifying a different number or type of nodes for the cluster. </p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResizeProgressMessage"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "481":
          description: ResizeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResizeNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeResize
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterIdentifier:
                  description: <p>The unique identifier of a cluster whose resize progress
                    you are requesting. This parameter is case-sensitive.</p>
                    <p>By default, resize operations for all clusters defined
                    for an AWS account are returned.</p>
                  type: string
              required:
                - ClusterIdentifier
  /#Action=DescribeSnapshotCopyGrants:
    get:
      x-aws-operation-name: DescribeSnapshotCopyGrants
      operationId: GET DescribeSnapshotCopyGrants
      description: <p>Returns a list of snapshot copy grants owned by the AWS account in
        the destination region.</p> <p> For more information about managing
        snapshot copy grants, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html">Amazon
        Redshift Database Encryption</a> in the <i>Amazon Redshift Cluster
        Management Guide</i>. </p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotCopyGrantMessage"
        "480":
          description: SnapshotCopyGrantNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotCopyGrantNotFoundFault"
        "481":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: SnapshotCopyGrantName
          in: query
          required: false
          description: The name of the snapshot copy grant.
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "<p>The maximum number of response records to return in each call.
            If the number of remaining response records exceeds the specified
            <code>MaxRecords</code> value, a value is returned in a
            <code>marker</code> field of the response. You can retrieve the next
            set of records by retrying the command with the returned marker
            value. </p> <p>Default: <code>100</code> </p> <p>Constraints:
            minimum 20, maximum 100.</p>"
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: "<p>An optional parameter that specifies the starting point to
            return a set of response records. When the results of a
            <code>DescribeSnapshotCopyGrant</code> request exceed the value
            specified in <code>MaxRecords</code>, AWS returns a value in the
            <code>Marker</code> field of the response. You can retrieve the next
            set of response records by providing the returned marker value in
            the <code>Marker</code> parameter and retrying the request. </p>
            <p>Constraints: You can specify either the
            <b>SnapshotCopyGrantName</b> parameter or the <b>Marker</b>
            parameter, but not both. </p>"
          schema:
            type: string
        - name: TagKeys
          in: query
          required: false
          description: A tag key or keys for which you want to return all matching
            resources that are associated with the specified key or keys. For
            example, suppose that you have resources tagged with keys called
            <code>owner</code> and <code>environment</code>. If you specify both
            of these tag keys in the request, Amazon Redshift returns a response
            with all resources that have either or both of these tag keys
            associated with them.
          schema:
            type: array
            items:
              type: string
        - name: TagValues
          in: query
          required: false
          description: A tag value or values for which you want to return all matching
            resources that are associated with the specified value or values.
            For example, suppose that you have resources tagged with values
            called <code>admin</code> and <code>test</code>. If you specify both
            of these tag values in the request, Amazon Redshift returns a
            response with all resources that have either or both of these tag
            values associated with them.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeSnapshotCopyGrants
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeSnapshotCopyGrants
      operationId: POST DescribeSnapshotCopyGrants
      description: <p>Returns a list of snapshot copy grants owned by the AWS account in
        the destination region.</p> <p> For more information about managing
        snapshot copy grants, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html">Amazon
        Redshift Database Encryption</a> in the <i>Amazon Redshift Cluster
        Management Guide</i>. </p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotCopyGrantMessage"
        "480":
          description: SnapshotCopyGrantNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotCopyGrantNotFoundFault"
        "481":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeSnapshotCopyGrants
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SnapshotCopyGrantName:
                  description: The name of the snapshot copy grant.
                  type: string
                MaxRecords:
                  description: "<p>The maximum number of response records to return in each
                    call. If the number of remaining response records exceeds
                    the specified <code>MaxRecords</code> value, a value is
                    returned in a <code>marker</code> field of the response. You
                    can retrieve the next set of records by retrying the command
                    with the returned marker value. </p> <p>Default:
                    <code>100</code> </p> <p>Constraints: minimum 20, maximum
                    100.</p>"
                  type: integer
                Marker:
                  description: "<p>An optional parameter that specifies the starting point
                    to return a set of response records. When the results of a
                    <code>DescribeSnapshotCopyGrant</code> request exceed the
                    value specified in <code>MaxRecords</code>, AWS returns a
                    value in the <code>Marker</code> field of the response. You
                    can retrieve the next set of response records by providing
                    the returned marker value in the <code>Marker</code>
                    parameter and retrying the request. </p> <p>Constraints: You
                    can specify either the <b>SnapshotCopyGrantName</b>
                    parameter or the <b>Marker</b> parameter, but not both.
                    </p>"
                  type: string
                TagKeys:
                  description: A tag key or keys for which you want to return all matching
                    resources that are associated with the specified key or
                    keys. For example, suppose that you have resources tagged
                    with keys called <code>owner</code> and
                    <code>environment</code>. If you specify both of these tag
                    keys in the request, Amazon Redshift returns a response with
                    all resources that have either or both of these tag keys
                    associated with them.
                  type: array
                  items:
                    type: string
                TagValues:
                  description: A tag value or values for which you want to return all
                    matching resources that are associated with the specified
                    value or values. For example, suppose that you have
                    resources tagged with values called <code>admin</code> and
                    <code>test</code>. If you specify both of these tag values
                    in the request, Amazon Redshift returns a response with all
                    resources that have either or both of these tag values
                    associated with them.
                  type: array
                  items:
                    type: string
  /#Action=DescribeSnapshotSchedules:
    get:
      x-aws-operation-name: DescribeSnapshotSchedules
      operationId: GET DescribeSnapshotSchedules
      description: "Returns a list of snapshot schedules. "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeSnapshotSchedulesOutputMessage"
      parameters:
        - name: ClusterIdentifier
          in: query
          required: false
          description: The unique identifier for the cluster whose snapshot schedules you
            want to view.
          schema:
            type: string
        - name: ScheduleIdentifier
          in: query
          required: false
          description: A unique identifier for a snapshot schedule.
          schema:
            type: string
        - name: TagKeys
          in: query
          required: false
          description: The key value for a snapshot schedule tag.
          schema:
            type: array
            items:
              type: string
        - name: TagValues
          in: query
          required: false
          description: The value corresponding to the key of the snapshot schedule tag.
          schema:
            type: array
            items:
              type: string
        - name: Marker
          in: query
          required: false
          description: A value that indicates the starting point for the next set of
            response records in a subsequent request. If a value is returned in
            a response, you can retrieve the next set of records by providing
            this returned marker value in the <code>marker</code> parameter and
            retrying the command. If the <code>marker</code> field is empty, all
            response records have been retrieved for the request.
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: The maximum number or response records to return in each call. If
            the number of remaining response records exceeds the specified
            <code>MaxRecords</code> value, a value is returned in a
            <code>marker</code> field of the response. You can retrieve the next
            set of records by retrying the command with the returned
            <code>marker</code> value.
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeSnapshotSchedules
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeSnapshotSchedules
      operationId: POST DescribeSnapshotSchedules
      description: "Returns a list of snapshot schedules. "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeSnapshotSchedulesOutputMessage"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeSnapshotSchedules
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterIdentifier:
                  description: The unique identifier for the cluster whose snapshot
                    schedules you want to view.
                  type: string
                ScheduleIdentifier:
                  description: A unique identifier for a snapshot schedule.
                  type: string
                TagKeys:
                  description: The key value for a snapshot schedule tag.
                  type: array
                  items:
                    type: string
                TagValues:
                  description: The value corresponding to the key of the snapshot schedule
                    tag.
                  type: array
                  items:
                    type: string
                Marker:
                  description: A value that indicates the starting point for the next set
                    of response records in a subsequent request. If a value is
                    returned in a response, you can retrieve the next set of
                    records by providing this returned marker value in the
                    <code>marker</code> parameter and retrying the command. If
                    the <code>marker</code> field is empty, all response records
                    have been retrieved for the request.
                  type: string
                MaxRecords:
                  description: The maximum number or response records to return in each
                    call. If the number of remaining response records exceeds
                    the specified <code>MaxRecords</code> value, a value is
                    returned in a <code>marker</code> field of the response. You
                    can retrieve the next set of records by retrying the command
                    with the returned <code>marker</code> value.
                  type: integer
  /#Action=DescribeStorage:
    get:
      x-aws-operation-name: DescribeStorage
      operationId: GET DescribeStorage
      description: Returns the total amount of snapshot usage and provisioned storage in
        megabytes.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomerStorageMessage"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeStorage
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeStorage
      operationId: POST DescribeStorage
      description: Returns the total amount of snapshot usage and provisioned storage in
        megabytes.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomerStorageMessage"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeStorage
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
  /#Action=DescribeTableRestoreStatus:
    get:
      x-aws-operation-name: DescribeTableRestoreStatus
      operationId: GET DescribeTableRestoreStatus
      description: Lists the status of one or more table restore requests made using the
        <a>RestoreTableFromClusterSnapshot</a> API action. If you don't specify
        a value for the <code>TableRestoreRequestId</code> parameter, then
        <code>DescribeTableRestoreStatus</code> returns the status of all table
        restore requests ordered by the date and time of the request in
        ascending order. Otherwise <code>DescribeTableRestoreStatus</code>
        returns the status of the table specified by
        <code>TableRestoreRequestId</code>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TableRestoreStatusMessage"
        "480":
          description: TableRestoreNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TableRestoreNotFoundFault"
        "481":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
      parameters:
        - name: ClusterIdentifier
          in: query
          required: false
          description: The Amazon Redshift cluster that the table is being restored to.
          schema:
            type: string
        - name: TableRestoreRequestId
          in: query
          required: false
          description: The identifier of the table restore request to return status for. If
            you don't specify a <code>TableRestoreRequestId</code> value, then
            <code>DescribeTableRestoreStatus</code> returns the status of all
            in-progress table restore requests.
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: The maximum number of records to include in the response. If more
            records exist than the specified <code>MaxRecords</code> value, a
            pagination token called a marker is included in the response so that
            the remaining results can be retrieved.
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: An optional pagination token provided by a previous
            <code>DescribeTableRestoreStatus</code> request. If this parameter
            is specified, the response includes only records beyond the marker,
            up to the value specified by the <code>MaxRecords</code> parameter.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeTableRestoreStatus
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeTableRestoreStatus
      operationId: POST DescribeTableRestoreStatus
      description: Lists the status of one or more table restore requests made using the
        <a>RestoreTableFromClusterSnapshot</a> API action. If you don't specify
        a value for the <code>TableRestoreRequestId</code> parameter, then
        <code>DescribeTableRestoreStatus</code> returns the status of all table
        restore requests ordered by the date and time of the request in
        ascending order. Otherwise <code>DescribeTableRestoreStatus</code>
        returns the status of the table specified by
        <code>TableRestoreRequestId</code>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TableRestoreStatusMessage"
        "480":
          description: TableRestoreNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TableRestoreNotFoundFault"
        "481":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeTableRestoreStatus
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterIdentifier:
                  description: The Amazon Redshift cluster that the table is being restored
                    to.
                  type: string
                TableRestoreRequestId:
                  description: The identifier of the table restore request to return status
                    for. If you don't specify a
                    <code>TableRestoreRequestId</code> value, then
                    <code>DescribeTableRestoreStatus</code> returns the status
                    of all in-progress table restore requests.
                  type: string
                MaxRecords:
                  description: The maximum number of records to include in the response. If
                    more records exist than the specified
                    <code>MaxRecords</code> value, a pagination token called a
                    marker is included in the response so that the remaining
                    results can be retrieved.
                  type: integer
                Marker:
                  description: An optional pagination token provided by a previous
                    <code>DescribeTableRestoreStatus</code> request. If this
                    parameter is specified, the response includes only records
                    beyond the marker, up to the value specified by the
                    <code>MaxRecords</code> parameter.
                  type: string
  /#Action=DescribeTags:
    get:
      x-aws-operation-name: DescribeTags
      operationId: GET DescribeTags
      description: "<p>Returns a list of tags. You can return tags from a specific resource
        by specifying an ARN, or you can return all tags for a given type of
        resource, such as clusters, snapshots, and so on.</p> <p>The following
        are limitations for <code>DescribeTags</code>: </p> <ul> <li> <p>You
        cannot specify an ARN and a resource-type value together in the same
        request.</p> </li> <li> <p>You cannot use the <code>MaxRecords</code>
        and <code>Marker</code> parameters together with the ARN parameter.</p>
        </li> <li> <p>The <code>MaxRecords</code> parameter can be a range from
        10 to 50 results to return in a request.</p> </li> </ul> <p>If you
        specify both tag keys and tag values in the same request, Amazon
        Redshift returns all resources that match any combination of the
        specified keys and values. For example, if you have <code>owner</code>
        and <code>environment</code> for tag keys, and <code>admin</code> and
        <code>test</code> for tag values, all resources that have any
        combination of those values are returned.</p> <p>If both tag keys and
        values are omitted from the request, resources are returned regardless
        of whether they have tag keys or values associated with them.</p>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TaggedResourceListMessage"
        "480":
          description: ResourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundFault"
        "481":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: ResourceName
          in: query
          required: false
          description: "The Amazon Resource Name (ARN) for which you want to describe the
            tag or tags. For example,
            <code>arn:aws:redshift:us-east-1:123456789:cluster:t1</code>. "
          schema:
            type: string
        - name: ResourceType
          in: query
          required: false
          description: '<p>The type of resource with which you want to view tags. Valid
            resource types are: </p> <ul> <li> <p>Cluster</p> </li> <li>
            <p>CIDR/IP</p> </li> <li> <p>EC2 security group</p> </li> <li>
            <p>Snapshot</p> </li> <li> <p>Cluster security group</p> </li> <li>
            <p>Subnet group</p> </li> <li> <p>HSM connection</p> </li> <li>
            <p>HSM certificate</p> </li> <li> <p>Parameter group</p> </li> <li>
            <p>Snapshot copy grant</p> </li> </ul> <p>For more information about
            Amazon Redshift resource types and constructing ARNs, go to <a
            href="https://docs.aws.amazon.com/redshift/latest/mgmt/redshift-iam-access-control-overview.html#redshift-iam-access-control-specify-actions">Specifying
            Policy Elements: Actions, Effects, Resources, and Principals</a> in
            the Amazon Redshift Cluster Management Guide. </p>'
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: "The maximum number or response records to return in each call. If
            the number of remaining response records exceeds the specified
            <code>MaxRecords</code> value, a value is returned in a
            <code>marker</code> field of the response. You can retrieve the next
            set of records by retrying the command with the returned
            <code>marker</code> value. "
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: "A value that indicates the starting point for the next set of
            response records in a subsequent request. If a value is returned in
            a response, you can retrieve the next set of records by providing
            this returned marker value in the <code>marker</code> parameter and
            retrying the command. If the <code>marker</code> field is empty, all
            response records have been retrieved for the request. "
          schema:
            type: string
        - name: TagKeys
          in: query
          required: false
          description: A tag key or keys for which you want to return all matching
            resources that are associated with the specified key or keys. For
            example, suppose that you have resources tagged with keys called
            <code>owner</code> and <code>environment</code>. If you specify both
            of these tag keys in the request, Amazon Redshift returns a response
            with all resources that have either or both of these tag keys
            associated with them.
          schema:
            type: array
            items:
              type: string
        - name: TagValues
          in: query
          required: false
          description: A tag value or values for which you want to return all matching
            resources that are associated with the specified value or values.
            For example, suppose that you have resources tagged with values
            called <code>admin</code> and <code>test</code>. If you specify both
            of these tag values in the request, Amazon Redshift returns a
            response with all resources that have either or both of these tag
            values associated with them.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeTags
      operationId: POST DescribeTags
      description: "<p>Returns a list of tags. You can return tags from a specific resource
        by specifying an ARN, or you can return all tags for a given type of
        resource, such as clusters, snapshots, and so on.</p> <p>The following
        are limitations for <code>DescribeTags</code>: </p> <ul> <li> <p>You
        cannot specify an ARN and a resource-type value together in the same
        request.</p> </li> <li> <p>You cannot use the <code>MaxRecords</code>
        and <code>Marker</code> parameters together with the ARN parameter.</p>
        </li> <li> <p>The <code>MaxRecords</code> parameter can be a range from
        10 to 50 results to return in a request.</p> </li> </ul> <p>If you
        specify both tag keys and tag values in the same request, Amazon
        Redshift returns all resources that match any combination of the
        specified keys and values. For example, if you have <code>owner</code>
        and <code>environment</code> for tag keys, and <code>admin</code> and
        <code>test</code> for tag values, all resources that have any
        combination of those values are returned.</p> <p>If both tag keys and
        values are omitted from the request, resources are returned regardless
        of whether they have tag keys or values associated with them.</p>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TaggedResourceListMessage"
        "480":
          description: ResourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundFault"
        "481":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ResourceName:
                  description: "The Amazon Resource Name (ARN) for which you want to
                    describe the tag or tags. For example,
                    <code>arn:aws:redshift:us-east-1:123456789:cluster:t1</code\
                    >. "
                  type: string
                ResourceType:
                  description: '<p>The type of resource with which you want to view tags.
                    Valid resource types are: </p> <ul> <li> <p>Cluster</p>
                    </li> <li> <p>CIDR/IP</p> </li> <li> <p>EC2 security
                    group</p> </li> <li> <p>Snapshot</p> </li> <li> <p>Cluster
                    security group</p> </li> <li> <p>Subnet group</p> </li> <li>
                    <p>HSM connection</p> </li> <li> <p>HSM certificate</p>
                    </li> <li> <p>Parameter group</p> </li> <li> <p>Snapshot
                    copy grant</p> </li> </ul> <p>For more information about
                    Amazon Redshift resource types and constructing ARNs, go to
                    <a
                    href="https://docs.aws.amazon.com/redshift/latest/mgmt/redshift-iam-access-control-overview.html#redshift-iam-access-control-specify-actions">Specifying
                    Policy Elements: Actions, Effects, Resources, and
                    Principals</a> in the Amazon Redshift Cluster Management
                    Guide. </p>'
                  type: string
                MaxRecords:
                  description: "The maximum number or response records to return in each
                    call. If the number of remaining response records exceeds
                    the specified <code>MaxRecords</code> value, a value is
                    returned in a <code>marker</code> field of the response. You
                    can retrieve the next set of records by retrying the command
                    with the returned <code>marker</code> value. "
                  type: integer
                Marker:
                  description: "A value that indicates the starting point for the next set
                    of response records in a subsequent request. If a value is
                    returned in a response, you can retrieve the next set of
                    records by providing this returned marker value in the
                    <code>marker</code> parameter and retrying the command. If
                    the <code>marker</code> field is empty, all response records
                    have been retrieved for the request. "
                  type: string
                TagKeys:
                  description: A tag key or keys for which you want to return all matching
                    resources that are associated with the specified key or
                    keys. For example, suppose that you have resources tagged
                    with keys called <code>owner</code> and
                    <code>environment</code>. If you specify both of these tag
                    keys in the request, Amazon Redshift returns a response with
                    all resources that have either or both of these tag keys
                    associated with them.
                  type: array
                  items:
                    type: string
                TagValues:
                  description: A tag value or values for which you want to return all
                    matching resources that are associated with the specified
                    value or values. For example, suppose that you have
                    resources tagged with values called <code>admin</code> and
                    <code>test</code>. If you specify both of these tag values
                    in the request, Amazon Redshift returns a response with all
                    resources that have either or both of these tag values
                    associated with them.
                  type: array
                  items:
                    type: string
  /#Action=DisableLogging:
    get:
      x-aws-operation-name: DisableLogging
      operationId: GET DisableLogging
      description: Stops logging information, such as queries and connection attempts, for
        the specified Amazon Redshift cluster.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoggingStatus"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: "<p>The identifier of the cluster on which logging is to be
            stopped.</p> <p>Example: <code>examplecluster</code> </p>"
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DisableLogging
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DisableLogging
      operationId: POST DisableLogging
      description: Stops logging information, such as queries and connection attempts, for
        the specified Amazon Redshift cluster.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoggingStatus"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DisableLogging
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterIdentifier:
                  description: "<p>The identifier of the cluster on which logging is to be
                    stopped.</p> <p>Example: <code>examplecluster</code> </p>"
                  type: string
              required:
                - ClusterIdentifier
  /#Action=DisableSnapshotCopy:
    get:
      x-aws-operation-name: DisableSnapshotCopy
      operationId: GET DisableSnapshotCopy
      description: <p>Disables the automatic copying of snapshots from one region to
        another region for a specified cluster.</p> <p>If your cluster and its
        snapshots are encrypted using a customer master key (CMK) from AWS KMS,
        use <a>DeleteSnapshotCopyGrant</a> to delete the grant that grants
        Amazon Redshift permission to the CMK in the destination region. </p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DisableSnapshotCopyResult"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "481":
          description: SnapshotCopyAlreadyDisabledFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotCopyAlreadyDisabledFault"
        "482":
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterStateFault"
        "483":
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperation"
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: "<p>The unique identifier of the source cluster that you want to
            disable copying of snapshots to a destination region.</p>
            <p>Constraints: Must be the valid name of an existing cluster that
            has cross-region snapshot copy enabled.</p>"
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DisableSnapshotCopy
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DisableSnapshotCopy
      operationId: POST DisableSnapshotCopy
      description: <p>Disables the automatic copying of snapshots from one region to
        another region for a specified cluster.</p> <p>If your cluster and its
        snapshots are encrypted using a customer master key (CMK) from AWS KMS,
        use <a>DeleteSnapshotCopyGrant</a> to delete the grant that grants
        Amazon Redshift permission to the CMK in the destination region. </p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DisableSnapshotCopyResult"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "481":
          description: SnapshotCopyAlreadyDisabledFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotCopyAlreadyDisabledFault"
        "482":
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterStateFault"
        "483":
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperation"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DisableSnapshotCopy
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterIdentifier:
                  description: "<p>The unique identifier of the source cluster that you
                    want to disable copying of snapshots to a destination
                    region.</p> <p>Constraints: Must be the valid name of an
                    existing cluster that has cross-region snapshot copy
                    enabled.</p>"
                  type: string
              required:
                - ClusterIdentifier
  /#Action=EnableLogging:
    get:
      x-aws-operation-name: EnableLogging
      operationId: GET EnableLogging
      description: Starts logging information, such as queries and connection attempts, for
        the specified Amazon Redshift cluster.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoggingStatus"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "481":
          description: BucketNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/BucketNotFoundFault"
        "482":
          description: InsufficientS3BucketPolicyFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientS3BucketPolicyFault"
        "483":
          description: InvalidS3KeyPrefixFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidS3KeyPrefixFault"
        "484":
          description: InvalidS3BucketNameFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidS3BucketNameFault"
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: "<p>The identifier of the cluster on which logging is to be
            started.</p> <p>Example: <code>examplecluster</code> </p>"
          schema:
            type: string
        - name: BucketName
          in: query
          required: true
          description: <p>The name of an existing S3 bucket where the log files are to be
            stored.</p> <p>Constraints:</p> <ul> <li> <p>Must be in the same
            region as the cluster</p> </li> <li> <p>The cluster must have read
            bucket and put object permissions</p> </li> </ul>
          schema:
            type: string
        - name: S3KeyPrefix
          in: query
          required: false
          description: "<p>The prefix applied to the log file names.</p>
            <p>Constraints:</p> <ul> <li> <p>Cannot exceed 512 characters</p>
            </li> <li> <p>Cannot contain spaces( ), double quotes (\"), single
            quotes ('), a backslash (\\), or control characters. The hexadecimal
            codes for invalid characters are: </p> <ul> <li> <p>x00 to x20</p>
            </li> <li> <p>x22</p> </li> <li> <p>x27</p> </li> <li> <p>x5c</p>
            </li> <li> <p>x7f or larger</p> </li> </ul> </li> </ul>"
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - EnableLogging
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: EnableLogging
      operationId: POST EnableLogging
      description: Starts logging information, such as queries and connection attempts, for
        the specified Amazon Redshift cluster.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoggingStatus"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "481":
          description: BucketNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/BucketNotFoundFault"
        "482":
          description: InsufficientS3BucketPolicyFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientS3BucketPolicyFault"
        "483":
          description: InvalidS3KeyPrefixFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidS3KeyPrefixFault"
        "484":
          description: InvalidS3BucketNameFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidS3BucketNameFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - EnableLogging
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterIdentifier:
                  description: "<p>The identifier of the cluster on which logging is to be
                    started.</p> <p>Example: <code>examplecluster</code> </p>"
                  type: string
                BucketName:
                  description: <p>The name of an existing S3 bucket where the log files are
                    to be stored.</p> <p>Constraints:</p> <ul> <li> <p>Must be
                    in the same region as the cluster</p> </li> <li> <p>The
                    cluster must have read bucket and put object permissions</p>
                    </li> </ul>
                  type: string
                S3KeyPrefix:
                  description: "<p>The prefix applied to the log file names.</p>
                    <p>Constraints:</p> <ul> <li> <p>Cannot exceed 512
                    characters</p> </li> <li> <p>Cannot contain spaces( ),
                    double quotes (\"), single quotes ('), a backslash (\\), or
                    control characters. The hexadecimal codes for invalid
                    characters are: </p> <ul> <li> <p>x00 to x20</p> </li> <li>
                    <p>x22</p> </li> <li> <p>x27</p> </li> <li> <p>x5c</p> </li>
                    <li> <p>x7f or larger</p> </li> </ul> </li> </ul>"
                  type: string
              required:
                - ClusterIdentifier
                - BucketName
  /#Action=EnableSnapshotCopy:
    get:
      x-aws-operation-name: EnableSnapshotCopy
      operationId: GET EnableSnapshotCopy
      description: Enables the automatic copy of snapshots from one region to another
        region for a specified cluster.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EnableSnapshotCopyResult"
        "480":
          description: IncompatibleOrderableOptions
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/IncompatibleOrderableOptions"
        "481":
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterStateFault"
        "482":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "483":
          description: CopyToRegionDisabledFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CopyToRegionDisabledFault"
        "484":
          description: SnapshotCopyAlreadyEnabledFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotCopyAlreadyEnabledFault"
        "485":
          description: UnknownSnapshotCopyRegionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnknownSnapshotCopyRegionFault"
        "486":
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperation"
        "487":
          description: SnapshotCopyGrantNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotCopyGrantNotFoundFault"
        "488":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "489":
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DependentServiceRequestThrottlingFault"
        "490":
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRetentionPeriodFault"
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: "<p>The unique identifier of the source cluster to copy snapshots
            from.</p> <p>Constraints: Must be the valid name of an existing
            cluster that does not already have cross-region snapshot copy
            enabled.</p>"
          schema:
            type: string
        - name: DestinationRegion
          in: query
          required: true
          description: '<p>The destination AWS Region that you want to copy snapshots
            to.</p> <p>Constraints: Must be the name of a valid AWS Region. For
            more information, see <a
            href="https://docs.aws.amazon.com/general/latest/gr/rande.html#redshift_region">Regions
            and Endpoints</a> in the Amazon Web Services General Reference.
            </p>'
          schema:
            type: string
        - name: RetentionPeriod
          in: query
          required: false
          description: "<p>The number of days to retain automated snapshots in the
            destination region after they are copied from the source region.</p>
            <p>Default: 7.</p> <p>Constraints: Must be at least 1 and no more
            than 35.</p>"
          schema:
            type: integer
        - name: SnapshotCopyGrantName
          in: query
          required: false
          description: The name of the snapshot copy grant to use when snapshots of an AWS
            KMS-encrypted cluster are copied to the destination region.
          schema:
            type: string
        - name: ManualSnapshotRetentionPeriod
          in: query
          required: false
          description: <p>The number of days to retain newly copied snapshots in the
            destination AWS Region after they are copied from the source AWS
            Region. If the value is -1, the manual snapshot is retained
            indefinitely. </p> <p>The value must be either -1 or an integer
            between 1 and 3,653.</p>
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - EnableSnapshotCopy
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: EnableSnapshotCopy
      operationId: POST EnableSnapshotCopy
      description: Enables the automatic copy of snapshots from one region to another
        region for a specified cluster.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EnableSnapshotCopyResult"
        "480":
          description: IncompatibleOrderableOptions
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/IncompatibleOrderableOptions"
        "481":
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterStateFault"
        "482":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "483":
          description: CopyToRegionDisabledFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CopyToRegionDisabledFault"
        "484":
          description: SnapshotCopyAlreadyEnabledFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotCopyAlreadyEnabledFault"
        "485":
          description: UnknownSnapshotCopyRegionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnknownSnapshotCopyRegionFault"
        "486":
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperation"
        "487":
          description: SnapshotCopyGrantNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotCopyGrantNotFoundFault"
        "488":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "489":
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DependentServiceRequestThrottlingFault"
        "490":
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRetentionPeriodFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - EnableSnapshotCopy
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterIdentifier:
                  description: "<p>The unique identifier of the source cluster to copy
                    snapshots from.</p> <p>Constraints: Must be the valid name
                    of an existing cluster that does not already have
                    cross-region snapshot copy enabled.</p>"
                  type: string
                DestinationRegion:
                  description: '<p>The destination AWS Region that you want to copy
                    snapshots to.</p> <p>Constraints: Must be the name of a
                    valid AWS Region. For more information, see <a
                    href="https://docs.aws.amazon.com/general/latest/gr/rande.html#redshift_region">Regions
                    and Endpoints</a> in the Amazon Web Services General
                    Reference. </p>'
                  type: string
                RetentionPeriod:
                  description: "<p>The number of days to retain automated snapshots in the
                    destination region after they are copied from the source
                    region.</p> <p>Default: 7.</p> <p>Constraints: Must be at
                    least 1 and no more than 35.</p>"
                  type: integer
                SnapshotCopyGrantName:
                  description: The name of the snapshot copy grant to use when snapshots of
                    an AWS KMS-encrypted cluster are copied to the destination
                    region.
                  type: string
                ManualSnapshotRetentionPeriod:
                  description: <p>The number of days to retain newly copied snapshots in
                    the destination AWS Region after they are copied from the
                    source AWS Region. If the value is -1, the manual snapshot
                    is retained indefinitely. </p> <p>The value must be either
                    -1 or an integer between 1 and 3,653.</p>
                  type: integer
              required:
                - ClusterIdentifier
                - DestinationRegion
  /#Action=GetClusterCredentials:
    get:
      x-aws-operation-name: GetClusterCredentials
      operationId: GET GetClusterCredentials
      description: <p>Returns a database user name and temporary password with temporary
        authorization to log on to an Amazon Redshift database. The action
        returns the database user name prefixed with <code>IAM:</code> if
        <code>AutoCreate</code> is <code>False</code> or <code>IAMA:</code> if
        <code>AutoCreate</code> is <code>True</code>. You can optionally specify
        one or more database user groups that the user will join at log on. By
        default, the temporary credentials expire in 900 seconds. You can
        optionally specify a duration between 900 seconds (15 minutes) and 3600
        seconds (60 minutes). For more information, see <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/generating-user-credentials.html">Using
        IAM Authentication to Generate Database User Credentials</a> in the
        Amazon Redshift Cluster Management Guide.</p> <p>The AWS Identity and
        Access Management (IAM)user or role that executes GetClusterCredentials
        must have an IAM policy attached that allows access to all necessary
        actions and resources. For more information about permissions, see <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/redshift-iam-access-control-identity-based.html#redshift-policy-resources.getclustercredentials-resources">Resource
        Policies for GetClusterCredentials</a> in the Amazon Redshift Cluster
        Management Guide.</p> <p>If the <code>DbGroups</code> parameter is
        specified, the IAM policy must allow the <code>redshift:JoinGroup</code>
        action with access to the listed <code>dbgroups</code>. </p> <p>In
        addition, if the <code>AutoCreate</code> parameter is set to
        <code>True</code>, then the policy must include the
        <code>redshift:CreateClusterUser</code> privilege.</p> <p>If the
        <code>DbName</code> parameter is specified, the IAM policy must allow
        access to the resource <code>dbname</code> for the specified database
        name. </p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterCredentials"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "481":
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationFault"
      parameters:
        - name: DbUser
          in: query
          required: true
          description: "<p>The name of a database user. If a user name matching
            <code>DbUser</code> exists in the database, the temporary user
            credentials have the same permissions as the existing user. If
            <code>DbUser</code> doesn't exist in the database and
            <code>Autocreate</code> is <code>True</code>, a new user is created
            using the value for <code>DbUser</code> with PUBLIC permissions. If
            a database user matching the value for <code>DbUser</code> doesn't
            exist and <code>Autocreate</code> is <code>False</code>, then the
            command succeeds but the connection attempt will fail because the
            user doesn't exist in the database.</p> <p>For more information, see
            <a
            href=\"https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_USER\
            .html\">CREATE USER</a> in the Amazon Redshift Database Developer
            Guide. </p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 64
            alphanumeric characters or hyphens. The user name can't be
            <code>PUBLIC</code>.</p> </li> <li> <p>Must contain only lowercase
            letters, numbers, underscore, plus sign, period (dot), at symbol
            (@), or hyphen.</p> </li> <li> <p>First character must be a
            letter.</p> </li> <li> <p>Must not contain a colon ( : ) or slash (
            / ). </p> </li> <li> <p>Cannot be a reserved word. A list of
            reserved words can be found in <a
            href=\"http://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.\
            html\">Reserved Words</a> in the Amazon Redshift Database Developer
            Guide.</p> </li> </ul>"
          schema:
            type: string
        - name: DbName
          in: query
          required: false
          description: '<p>The name of a database that <code>DbUser</code> is authorized to
            log on to. If <code>DbName</code> is not specified,
            <code>DbUser</code> can log on to any existing database.</p>
            <p>Constraints:</p> <ul> <li> <p>Must be 1 to 64 alphanumeric
            characters or hyphens</p> </li> <li> <p>Must contain only lowercase
            letters, numbers, underscore, plus sign, period (dot), at symbol
            (@), or hyphen.</p> </li> <li> <p>First character must be a
            letter.</p> </li> <li> <p>Must not contain a colon ( : ) or slash (
            / ). </p> </li> <li> <p>Cannot be a reserved word. A list of
            reserved words can be found in <a
            href="http://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html">Reserved
            Words</a> in the Amazon Redshift Database Developer Guide.</p> </li>
            </ul>'
          schema:
            type: string
        - name: ClusterIdentifier
          in: query
          required: true
          description: The unique identifier of the cluster that contains the database for
            which your are requesting credentials. This parameter is case
            sensitive.
          schema:
            type: string
        - name: DurationSeconds
          in: query
          required: false
          description: "<p>The number of seconds until the returned temporary password
            expires.</p> <p>Constraint: minimum 900, maximum 3600.</p>
            <p>Default: 900</p>"
          schema:
            type: integer
        - name: AutoCreate
          in: query
          required: false
          description: Create a database user with the name specified for the user named in
            <code>DbUser</code> if one does not exist.
          schema:
            type: boolean
        - name: DbGroups
          in: query
          required: false
          description: '<p>A list of the names of existing database groups that the user
            named in <code>DbUser</code> will join for the current session, in
            addition to any group memberships for an existing user. If not
            specified, a new user is added only to PUBLIC.</p> <p>Database group
            name constraints</p> <ul> <li> <p>Must be 1 to 64 alphanumeric
            characters or hyphens</p> </li> <li> <p>Must contain only lowercase
            letters, numbers, underscore, plus sign, period (dot), at symbol
            (@), or hyphen.</p> </li> <li> <p>First character must be a
            letter.</p> </li> <li> <p>Must not contain a colon ( : ) or slash (
            / ). </p> </li> <li> <p>Cannot be a reserved word. A list of
            reserved words can be found in <a
            href="http://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html">Reserved
            Words</a> in the Amazon Redshift Database Developer Guide.</p> </li>
            </ul>'
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - GetClusterCredentials
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: GetClusterCredentials
      operationId: POST GetClusterCredentials
      description: <p>Returns a database user name and temporary password with temporary
        authorization to log on to an Amazon Redshift database. The action
        returns the database user name prefixed with <code>IAM:</code> if
        <code>AutoCreate</code> is <code>False</code> or <code>IAMA:</code> if
        <code>AutoCreate</code> is <code>True</code>. You can optionally specify
        one or more database user groups that the user will join at log on. By
        default, the temporary credentials expire in 900 seconds. You can
        optionally specify a duration between 900 seconds (15 minutes) and 3600
        seconds (60 minutes). For more information, see <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/generating-user-credentials.html">Using
        IAM Authentication to Generate Database User Credentials</a> in the
        Amazon Redshift Cluster Management Guide.</p> <p>The AWS Identity and
        Access Management (IAM)user or role that executes GetClusterCredentials
        must have an IAM policy attached that allows access to all necessary
        actions and resources. For more information about permissions, see <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/redshift-iam-access-control-identity-based.html#redshift-policy-resources.getclustercredentials-resources">Resource
        Policies for GetClusterCredentials</a> in the Amazon Redshift Cluster
        Management Guide.</p> <p>If the <code>DbGroups</code> parameter is
        specified, the IAM policy must allow the <code>redshift:JoinGroup</code>
        action with access to the listed <code>dbgroups</code>. </p> <p>In
        addition, if the <code>AutoCreate</code> parameter is set to
        <code>True</code>, then the policy must include the
        <code>redshift:CreateClusterUser</code> privilege.</p> <p>If the
        <code>DbName</code> parameter is specified, the IAM policy must allow
        access to the resource <code>dbname</code> for the specified database
        name. </p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterCredentials"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "481":
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - GetClusterCredentials
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                DbUser:
                  description: "<p>The name of a database user. If a user name matching
                    <code>DbUser</code> exists in the database, the temporary
                    user credentials have the same permissions as the existing
                    user. If <code>DbUser</code> doesn't exist in the database
                    and <code>Autocreate</code> is <code>True</code>, a new user
                    is created using the value for <code>DbUser</code> with
                    PUBLIC permissions. If a database user matching the value
                    for <code>DbUser</code> doesn't exist and
                    <code>Autocreate</code> is <code>False</code>, then the
                    command succeeds but the connection attempt will fail
                    because the user doesn't exist in the database.</p> <p>For
                    more information, see <a
                    href=\"https://docs.aws.amazon.com/redshift/latest/dg/r_CRE\
                    ATE_USER.html\">CREATE USER</a> in the Amazon Redshift
                    Database Developer Guide. </p> <p>Constraints:</p> <ul> <li>
                    <p>Must be 1 to 64 alphanumeric characters or hyphens. The
                    user name can't be <code>PUBLIC</code>.</p> </li> <li>
                    <p>Must contain only lowercase letters, numbers, underscore,
                    plus sign, period (dot), at symbol (@), or hyphen.</p> </li>
                    <li> <p>First character must be a letter.</p> </li> <li>
                    <p>Must not contain a colon ( : ) or slash ( / ). </p> </li>
                    <li> <p>Cannot be a reserved word. A list of reserved words
                    can be found in <a
                    href=\"http://docs.aws.amazon.com/redshift/latest/dg/r_pg_k\
                    eywords.html\">Reserved Words</a> in the Amazon Redshift
                    Database Developer Guide.</p> </li> </ul>"
                  type: string
                DbName:
                  description: '<p>The name of a database that <code>DbUser</code> is
                    authorized to log on to. If <code>DbName</code> is not
                    specified, <code>DbUser</code> can log on to any existing
                    database.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to
                    64 alphanumeric characters or hyphens</p> </li> <li> <p>Must
                    contain only lowercase letters, numbers, underscore, plus
                    sign, period (dot), at symbol (@), or hyphen.</p> </li> <li>
                    <p>First character must be a letter.</p> </li> <li> <p>Must
                    not contain a colon ( : ) or slash ( / ). </p> </li> <li>
                    <p>Cannot be a reserved word. A list of reserved words can
                    be found in <a
                    href="http://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html">Reserved
                    Words</a> in the Amazon Redshift Database Developer
                    Guide.</p> </li> </ul>'
                  type: string
                ClusterIdentifier:
                  description: The unique identifier of the cluster that contains the
                    database for which your are requesting credentials. This
                    parameter is case sensitive.
                  type: string
                DurationSeconds:
                  description: "<p>The number of seconds until the returned temporary
                    password expires.</p> <p>Constraint: minimum 900, maximum
                    3600.</p> <p>Default: 900</p>"
                  type: integer
                AutoCreate:
                  description: Create a database user with the name specified for the user
                    named in <code>DbUser</code> if one does not exist.
                  type: boolean
                DbGroups:
                  description: '<p>A list of the names of existing database groups that the
                    user named in <code>DbUser</code> will join for the current
                    session, in addition to any group memberships for an
                    existing user. If not specified, a new user is added only to
                    PUBLIC.</p> <p>Database group name constraints</p> <ul> <li>
                    <p>Must be 1 to 64 alphanumeric characters or hyphens</p>
                    </li> <li> <p>Must contain only lowercase letters, numbers,
                    underscore, plus sign, period (dot), at symbol (@), or
                    hyphen.</p> </li> <li> <p>First character must be a
                    letter.</p> </li> <li> <p>Must not contain a colon ( : ) or
                    slash ( / ). </p> </li> <li> <p>Cannot be a reserved word. A
                    list of reserved words can be found in <a
                    href="http://docs.aws.amazon.com/redshift/latest/dg/r_pg_keywords.html">Reserved
                    Words</a> in the Amazon Redshift Database Developer
                    Guide.</p> </li> </ul>'
                  type: array
                  items:
                    type: string
              required:
                - DbUser
                - ClusterIdentifier
  /#Action=GetReservedNodeExchangeOfferings:
    get:
      x-aws-operation-name: GetReservedNodeExchangeOfferings
      operationId: GET GetReservedNodeExchangeOfferings
      description: Returns an array of DC2 ReservedNodeOfferings that matches the payment
        type, term, and usage price of the given DC1 reserved node.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetReservedNodeExchangeOfferingsOutputM\
                  essage"
        "480":
          description: ReservedNodeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedNodeNotFoundFault"
        "481":
          description: InvalidReservedNodeStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidReservedNodeStateFault"
        "482":
          description: ReservedNodeAlreadyMigratedFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedNodeAlreadyMigratedFault"
        "483":
          description: ReservedNodeOfferingNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedNodeOfferingNotFoundFault"
        "484":
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationFault"
        "485":
          description: DependentServiceUnavailableFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DependentServiceUnavailableFault"
      parameters:
        - name: ReservedNodeId
          in: query
          required: true
          description: A string representing the node identifier for the DC1 Reserved Node
            to be exchanged.
          schema:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: An integer setting the maximum number of ReservedNodeOfferings to
            retrieve.
          schema:
            type: integer
        - name: Marker
          in: query
          required: false
          description: A value that indicates the starting point for the next set of
            ReservedNodeOfferings.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - GetReservedNodeExchangeOfferings
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: GetReservedNodeExchangeOfferings
      operationId: POST GetReservedNodeExchangeOfferings
      description: Returns an array of DC2 ReservedNodeOfferings that matches the payment
        type, term, and usage price of the given DC1 reserved node.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetReservedNodeExchangeOfferingsOutputM\
                  essage"
        "480":
          description: ReservedNodeNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedNodeNotFoundFault"
        "481":
          description: InvalidReservedNodeStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidReservedNodeStateFault"
        "482":
          description: ReservedNodeAlreadyMigratedFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedNodeAlreadyMigratedFault"
        "483":
          description: ReservedNodeOfferingNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedNodeOfferingNotFoundFault"
        "484":
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationFault"
        "485":
          description: DependentServiceUnavailableFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DependentServiceUnavailableFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - GetReservedNodeExchangeOfferings
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ReservedNodeId:
                  description: A string representing the node identifier for the DC1
                    Reserved Node to be exchanged.
                  type: string
                MaxRecords:
                  description: An integer setting the maximum number of
                    ReservedNodeOfferings to retrieve.
                  type: integer
                Marker:
                  description: A value that indicates the starting point for the next set
                    of ReservedNodeOfferings.
                  type: string
              required:
                - ReservedNodeId
  /#Action=ModifyCluster:
    get:
      x-aws-operation-name: ModifyCluster
      operationId: GET ModifyCluster
      description: <p>Modifies the settings for a cluster. For example, you can add another
        security or parameter group, update the preferred maintenance window, or
        change the master user password. Resetting a cluster password or
        modifying the security groups associated with a cluster do not need a
        reboot. However, modifying a parameter group requires a reboot for
        parameters to take effect. For more information about managing clusters,
        go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon
        Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.</p> <p>You can also change node type and the number of nodes
        to scale up or down the cluster. When resizing a cluster, you must
        specify both the number of nodes and the node type even if one of the
        parameters does not change.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyClusterResult"
        "480":
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterStateFault"
        "481":
          description: InvalidClusterSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSecurityGroupStateFault"
        "482":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "483":
          description: NumberOfNodesQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NumberOfNodesQuotaExceededFault"
        "484":
          description: NumberOfNodesPerClusterLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NumberOfNodesPerClusterLimitExceededFau\
                  lt"
        "485":
          description: ClusterSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSecurityGroupNotFoundFault"
        "486":
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterParameterGroupNotFoundFault"
        "487":
          description: InsufficientClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientClusterCapacityFault"
        "488":
          description: UnsupportedOptionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedOptionFault"
        "489":
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperation"
        "490":
          description: HsmClientCertificateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmClientCertificateNotFoundFault"
        "491":
          description: HsmConfigurationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmConfigurationNotFoundFault"
        "492":
          description: ClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterAlreadyExistsFault"
        "493":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "494":
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DependentServiceRequestThrottlingFault"
        "495":
          description: InvalidElasticIpFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidElasticIpFault"
        "496":
          description: TableLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TableLimitExceededFault"
        "497":
          description: InvalidClusterTrackFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterTrackFault"
        "498":
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRetentionPeriodFault"
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: "<p>The unique identifier of the cluster to be modified.</p>
            <p>Example: <code>examplecluster</code> </p>"
          schema:
            type: string
        - name: ClusterType
          in: query
          required: false
          description: "<p>The new cluster type.</p> <p>When you submit your cluster resize
            request, your existing cluster goes into a read-only mode. After
            Amazon Redshift provisions a new cluster based on your resize
            requirements, there will be outage for a period while the old
            cluster is deleted and your connection is switched to the new
            cluster. You can use <a>DescribeResize</a> to track the progress of
            the resize request. </p> <p>Valid Values: <code> multi-node |
            single-node </code> </p>"
          schema:
            type: string
        - name: NodeType
          in: query
          required: false
          description: "<p>The new node type of the cluster. If you specify a new node
            type, you must also specify the number of nodes parameter.</p>
            <p>When you submit your request to resize a cluster, Amazon Redshift
            sets access permissions for the cluster to read-only. After Amazon
            Redshift provisions a new cluster according to your resize
            requirements, there will be a temporary outage while the old cluster
            is deleted and your connection is switched to the new cluster. When
            the new connection is complete, the original access permissions for
            the cluster are restored. You can use <a>DescribeResize</a> to track
            the progress of the resize request. </p> <p>Valid Values:
            <code>ds2.xlarge</code> | <code>ds2.8xlarge</code> |
            <code>dc1.large</code> | <code>dc1.8xlarge</code> |
            <code>dc2.large</code> | <code>dc2.8xlarge</code> </p>"
          schema:
            type: string
        - name: NumberOfNodes
          in: query
          required: false
          description: "<p>The new number of nodes of the cluster. If you specify a new
            number of nodes, you must also specify the node type parameter.</p>
            <p>When you submit your request to resize a cluster, Amazon Redshift
            sets access permissions for the cluster to read-only. After Amazon
            Redshift provisions a new cluster according to your resize
            requirements, there will be a temporary outage while the old cluster
            is deleted and your connection is switched to the new cluster. When
            the new connection is complete, the original access permissions for
            the cluster are restored. You can use <a>DescribeResize</a> to track
            the progress of the resize request. </p> <p>Valid Values: Integer
            greater than <code>0</code>.</p>"
          schema:
            type: integer
        - name: ClusterSecurityGroups
          in: query
          required: false
          description: <p>A list of cluster security groups to be authorized on this
            cluster. This change is asynchronously applied as soon as
            possible.</p> <p>Security groups currently associated with the
            cluster, and not in the list of groups to apply, will be revoked
            from the cluster.</p> <p>Constraints:</p> <ul> <li> <p>Must be 1 to
            255 alphanumeric characters or hyphens</p> </li> <li> <p>First
            character must be a letter</p> </li> <li> <p>Cannot end with a
            hyphen or contain two consecutive hyphens</p> </li> </ul>
          schema:
            type: array
            items:
              type: string
        - name: VpcSecurityGroupIds
          in: query
          required: false
          description: A list of virtual private cloud (VPC) security groups to be
            associated with the cluster. This change is asynchronously applied
            as soon as possible.
          schema:
            type: array
            items:
              type: string
        - name: MasterUserPassword
          in: query
          required: false
          description: "<p>The new password for the cluster master user. This change is
            asynchronously applied as soon as possible. Between the time of the
            request and the completion of the request, the
            <code>MasterUserPassword</code> element exists in the
            <code>PendingModifiedValues</code> element of the operation
            response. </p> <note> <p>Operations never return the password, so
            this operation provides a way to regain access to the master user
            account for a cluster if the password is lost.</p> </note>
            <p>Default: Uses existing setting.</p> <p>Constraints:</p> <ul> <li>
            <p>Must be between 8 and 64 characters in length.</p> </li> <li>
            <p>Must contain at least one uppercase letter.</p> </li> <li>
            <p>Must contain at least one lowercase letter.</p> </li> <li>
            <p>Must contain one number.</p> </li> <li> <p>Can be any printable
            ASCII character (ASCII code 33 to 126) except ' (single quote), \"
            (double quote), \\, /, @, or space.</p> </li> </ul>"
          schema:
            type: string
        - name: ClusterParameterGroupName
          in: query
          required: false
          description: "<p>The name of the cluster parameter group to apply to this
            cluster. This change is applied only after the cluster is rebooted.
            To reboot a cluster use <a>RebootCluster</a>. </p> <p>Default: Uses
            existing setting.</p> <p>Constraints: The cluster parameter group
            must be in the same parameter group family that matches the cluster
            version.</p>"
          schema:
            type: string
        - name: AutomatedSnapshotRetentionPeriod
          in: query
          required: false
          description: "<p>The number of days that automated snapshots are retained. If the
            value is 0, automated snapshots are disabled. Even if automated
            snapshots are disabled, you can still create manual snapshots when
            you want with <a>CreateClusterSnapshot</a>. </p> <p>If you decrease
            the automated snapshot retention period from its current value,
            existing automated snapshots that fall outside of the new retention
            period will be immediately deleted.</p> <p>Default: Uses existing
            setting.</p> <p>Constraints: Must be a value from 0 to 35.</p>"
          schema:
            type: integer
        - name: ManualSnapshotRetentionPeriod
          in: query
          required: false
          description: <p>The default for number of days that a newly created manual
            snapshot is retained. If the value is -1, the manual snapshot is
            retained indefinitely. This value doesn't retroactively change the
            retention periods of existing manual snapshots.</p> <p>The value
            must be either -1 or an integer between 1 and 3,653.</p> <p>The
            default value is -1.</p>
          schema:
            type: integer
        - name: PreferredMaintenanceWindow
          in: query
          required: false
          description: "<p>The weekly time range (in UTC) during which system maintenance
            can occur, if necessary. If system maintenance is necessary during
            the window, it may result in an outage.</p> <p>This maintenance
            window change is made immediately. If the new maintenance window
            indicates the current time, there must be at least 120 minutes
            between the current time and end of the window in order to ensure
            that pending changes are applied.</p> <p>Default: Uses existing
            setting.</p> <p>Format: ddd:hh24:mi-ddd:hh24:mi, for example
            <code>wed:07:30-wed:08:00</code>.</p> <p>Valid Days: Mon | Tue | Wed
            | Thu | Fri | Sat | Sun</p> <p>Constraints: Must be at least 30
            minutes.</p>"
          schema:
            type: string
        - name: ClusterVersion
          in: query
          required: false
          description: '<p>The new version number of the Amazon Redshift engine to upgrade
            to.</p> <p>For major version upgrades, if a non-default cluster
            parameter group is currently in use, a new cluster parameter group
            in the cluster parameter group family for the new version must be
            specified. The new cluster parameter group can be the default for
            that cluster parameter group family. For more information about
            parameters and parameter groups, go to <a
            href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon
            Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster
            Management Guide</i>.</p> <p>Example: <code>1.0</code> </p>'
          schema:
            type: string
        - name: AllowVersionUpgrade
          in: query
          required: false
          description: "<p>If <code>true</code>, major version upgrades will be applied
            automatically to the cluster during the maintenance window. </p>
            <p>Default: <code>false</code> </p>"
          schema:
            type: boolean
        - name: HsmClientCertificateIdentifier
          in: query
          required: false
          description: Specifies the name of the HSM client certificate the Amazon Redshift
            cluster uses to retrieve the data encryption keys stored in an HSM.
          schema:
            type: string
        - name: HsmConfigurationIdentifier
          in: query
          required: false
          description: Specifies the name of the HSM configuration that contains the
            information the Amazon Redshift cluster can use to retrieve and
            store keys in an HSM.
          schema:
            type: string
        - name: NewClusterIdentifier
          in: query
          required: false
          description: "<p>The new identifier for the cluster.</p> <p>Constraints:</p> <ul>
            <li> <p>Must contain from 1 to 63 alphanumeric characters or
            hyphens.</p> </li> <li> <p>Alphabetic characters must be
            lowercase.</p> </li> <li> <p>First character must be a letter.</p>
            </li> <li> <p>Cannot end with a hyphen or contain two consecutive
            hyphens.</p> </li> <li> <p>Must be unique for all clusters within an
            AWS account.</p> </li> </ul> <p>Example: <code>examplecluster</code>
            </p>"
          schema:
            type: string
        - name: PubliclyAccessible
          in: query
          required: false
          description: If <code>true</code>, the cluster can be accessed from a public
            network. Only clusters in VPCs can be set to be publicly available.
          schema:
            type: boolean
        - name: ElasticIp
          in: query
          required: false
          description: '<p>The Elastic IP (EIP) address for the cluster.</p>
            <p>Constraints: The cluster must be provisioned in EC2-VPC and
            publicly-accessible through an Internet gateway. For more
            information about provisioning clusters in EC2-VPC, go to <a
            href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#cluster-platforms">Supported
            Platforms to Launch Your Cluster</a> in the Amazon Redshift Cluster
            Management Guide.</p>'
          schema:
            type: string
        - name: EnhancedVpcRouting
          in: query
          required: false
          description: '<p>An option that specifies whether to create the cluster with
            enhanced VPC routing enabled. To create a cluster that uses enhanced
            VPC routing, the cluster must be in a VPC. For more information, see
            <a
            href="https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html">Enhanced
            VPC Routing</a> in the Amazon Redshift Cluster Management Guide.</p>
            <p>If this option is <code>true</code>, enhanced VPC routing is
            enabled. </p> <p>Default: false</p>'
          schema:
            type: boolean
        - name: MaintenanceTrackName
          in: query
          required: false
          description: The name for the maintenance track that you want to assign for the
            cluster. This name change is asynchronous. The new track name stays
            in the <code>PendingModifiedValues</code> for the cluster until the
            next maintenance window. When the maintenance track changes, the
            cluster is switched to the latest cluster release available for the
            maintenance track. At this point, the maintenance track name is
            applied.
          schema:
            type: string
        - name: Encrypted
          in: query
          required: false
          description: Indicates whether the cluster is encrypted. If the cluster is
            encrypted and you provide a value for the <code>KmsKeyId</code>
            parameter, we will encrypt the cluster with the provided
            <code>KmsKeyId</code>. If you don't provide a <code>KmsKeyId</code>,
            we will encrypt with the default key. In the China region we will
            use legacy encryption if you specify that the cluster is encrypted.
          schema:
            type: boolean
        - name: KmsKeyId
          in: query
          required: false
          description: The AWS Key Management Service (KMS) key ID of the encryption key
            that you want to use to encrypt data in the cluster.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyCluster
      operationId: POST ModifyCluster
      description: <p>Modifies the settings for a cluster. For example, you can add another
        security or parameter group, update the preferred maintenance window, or
        change the master user password. Resetting a cluster password or
        modifying the security groups associated with a cluster do not need a
        reboot. However, modifying a parameter group requires a reboot for
        parameters to take effect. For more information about managing clusters,
        go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon
        Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.</p> <p>You can also change node type and the number of nodes
        to scale up or down the cluster. When resizing a cluster, you must
        specify both the number of nodes and the node type even if one of the
        parameters does not change.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyClusterResult"
        "480":
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterStateFault"
        "481":
          description: InvalidClusterSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSecurityGroupStateFault"
        "482":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "483":
          description: NumberOfNodesQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NumberOfNodesQuotaExceededFault"
        "484":
          description: NumberOfNodesPerClusterLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NumberOfNodesPerClusterLimitExceededFau\
                  lt"
        "485":
          description: ClusterSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSecurityGroupNotFoundFault"
        "486":
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterParameterGroupNotFoundFault"
        "487":
          description: InsufficientClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientClusterCapacityFault"
        "488":
          description: UnsupportedOptionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedOptionFault"
        "489":
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperation"
        "490":
          description: HsmClientCertificateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmClientCertificateNotFoundFault"
        "491":
          description: HsmConfigurationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmConfigurationNotFoundFault"
        "492":
          description: ClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterAlreadyExistsFault"
        "493":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "494":
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DependentServiceRequestThrottlingFault"
        "495":
          description: InvalidElasticIpFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidElasticIpFault"
        "496":
          description: TableLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TableLimitExceededFault"
        "497":
          description: InvalidClusterTrackFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterTrackFault"
        "498":
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRetentionPeriodFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterIdentifier:
                  description: "<p>The unique identifier of the cluster to be modified.</p>
                    <p>Example: <code>examplecluster</code> </p>"
                  type: string
                ClusterType:
                  description: "<p>The new cluster type.</p> <p>When you submit your
                    cluster resize request, your existing cluster goes into a
                    read-only mode. After Amazon Redshift provisions a new
                    cluster based on your resize requirements, there will be
                    outage for a period while the old cluster is deleted and
                    your connection is switched to the new cluster. You can use
                    <a>DescribeResize</a> to track the progress of the resize
                    request. </p> <p>Valid Values: <code> multi-node |
                    single-node </code> </p>"
                  type: string
                NodeType:
                  description: "<p>The new node type of the cluster. If you specify a new
                    node type, you must also specify the number of nodes
                    parameter.</p> <p>When you submit your request to resize a
                    cluster, Amazon Redshift sets access permissions for the
                    cluster to read-only. After Amazon Redshift provisions a new
                    cluster according to your resize requirements, there will be
                    a temporary outage while the old cluster is deleted and your
                    connection is switched to the new cluster. When the new
                    connection is complete, the original access permissions for
                    the cluster are restored. You can use <a>DescribeResize</a>
                    to track the progress of the resize request. </p> <p>Valid
                    Values: <code>ds2.xlarge</code> | <code>ds2.8xlarge</code> |
                    <code>dc1.large</code> | <code>dc1.8xlarge</code> |
                    <code>dc2.large</code> | <code>dc2.8xlarge</code> </p>"
                  type: string
                NumberOfNodes:
                  description: "<p>The new number of nodes of the cluster. If you specify a
                    new number of nodes, you must also specify the node type
                    parameter.</p> <p>When you submit your request to resize a
                    cluster, Amazon Redshift sets access permissions for the
                    cluster to read-only. After Amazon Redshift provisions a new
                    cluster according to your resize requirements, there will be
                    a temporary outage while the old cluster is deleted and your
                    connection is switched to the new cluster. When the new
                    connection is complete, the original access permissions for
                    the cluster are restored. You can use <a>DescribeResize</a>
                    to track the progress of the resize request. </p> <p>Valid
                    Values: Integer greater than <code>0</code>.</p>"
                  type: integer
                ClusterSecurityGroups:
                  description: <p>A list of cluster security groups to be authorized on
                    this cluster. This change is asynchronously applied as soon
                    as possible.</p> <p>Security groups currently associated
                    with the cluster, and not in the list of groups to apply,
                    will be revoked from the cluster.</p> <p>Constraints:</p>
                    <ul> <li> <p>Must be 1 to 255 alphanumeric characters or
                    hyphens</p> </li> <li> <p>First character must be a
                    letter</p> </li> <li> <p>Cannot end with a hyphen or contain
                    two consecutive hyphens</p> </li> </ul>
                  type: array
                  items:
                    type: string
                VpcSecurityGroupIds:
                  description: A list of virtual private cloud (VPC) security groups to be
                    associated with the cluster. This change is asynchronously
                    applied as soon as possible.
                  type: array
                  items:
                    type: string
                MasterUserPassword:
                  description: "<p>The new password for the cluster master user. This
                    change is asynchronously applied as soon as possible.
                    Between the time of the request and the completion of the
                    request, the <code>MasterUserPassword</code> element exists
                    in the <code>PendingModifiedValues</code> element of the
                    operation response. </p> <note> <p>Operations never return
                    the password, so this operation provides a way to regain
                    access to the master user account for a cluster if the
                    password is lost.</p> </note> <p>Default: Uses existing
                    setting.</p> <p>Constraints:</p> <ul> <li> <p>Must be
                    between 8 and 64 characters in length.</p> </li> <li>
                    <p>Must contain at least one uppercase letter.</p> </li>
                    <li> <p>Must contain at least one lowercase letter.</p>
                    </li> <li> <p>Must contain one number.</p> </li> <li> <p>Can
                    be any printable ASCII character (ASCII code 33 to 126)
                    except ' (single quote), \" (double quote), \\, /, @, or
                    space.</p> </li> </ul>"
                  type: string
                ClusterParameterGroupName:
                  description: "<p>The name of the cluster parameter group to apply to this
                    cluster. This change is applied only after the cluster is
                    rebooted. To reboot a cluster use <a>RebootCluster</a>. </p>
                    <p>Default: Uses existing setting.</p> <p>Constraints: The
                    cluster parameter group must be in the same parameter group
                    family that matches the cluster version.</p>"
                  type: string
                AutomatedSnapshotRetentionPeriod:
                  description: "<p>The number of days that automated snapshots are
                    retained. If the value is 0, automated snapshots are
                    disabled. Even if automated snapshots are disabled, you can
                    still create manual snapshots when you want with
                    <a>CreateClusterSnapshot</a>. </p> <p>If you decrease the
                    automated snapshot retention period from its current value,
                    existing automated snapshots that fall outside of the new
                    retention period will be immediately deleted.</p>
                    <p>Default: Uses existing setting.</p> <p>Constraints: Must
                    be a value from 0 to 35.</p>"
                  type: integer
                ManualSnapshotRetentionPeriod:
                  description: <p>The default for number of days that a newly created
                    manual snapshot is retained. If the value is -1, the manual
                    snapshot is retained indefinitely. This value doesn't
                    retroactively change the retention periods of existing
                    manual snapshots.</p> <p>The value must be either -1 or an
                    integer between 1 and 3,653.</p> <p>The default value is
                    -1.</p>
                  type: integer
                PreferredMaintenanceWindow:
                  description: "<p>The weekly time range (in UTC) during which system
                    maintenance can occur, if necessary. If system maintenance
                    is necessary during the window, it may result in an
                    outage.</p> <p>This maintenance window change is made
                    immediately. If the new maintenance window indicates the
                    current time, there must be at least 120 minutes between the
                    current time and end of the window in order to ensure that
                    pending changes are applied.</p> <p>Default: Uses existing
                    setting.</p> <p>Format: ddd:hh24:mi-ddd:hh24:mi, for example
                    <code>wed:07:30-wed:08:00</code>.</p> <p>Valid Days: Mon |
                    Tue | Wed | Thu | Fri | Sat | Sun</p> <p>Constraints: Must
                    be at least 30 minutes.</p>"
                  type: string
                ClusterVersion:
                  description: '<p>The new version number of the Amazon Redshift engine to
                    upgrade to.</p> <p>For major version upgrades, if a
                    non-default cluster parameter group is currently in use, a
                    new cluster parameter group in the cluster parameter group
                    family for the new version must be specified. The new
                    cluster parameter group can be the default for that cluster
                    parameter group family. For more information about
                    parameters and parameter groups, go to <a
                    href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon
                    Redshift Parameter Groups</a> in the <i>Amazon Redshift
                    Cluster Management Guide</i>.</p> <p>Example:
                    <code>1.0</code> </p>'
                  type: string
                AllowVersionUpgrade:
                  description: "<p>If <code>true</code>, major version upgrades will be
                    applied automatically to the cluster during the maintenance
                    window. </p> <p>Default: <code>false</code> </p>"
                  type: boolean
                HsmClientCertificateIdentifier:
                  description: Specifies the name of the HSM client certificate the Amazon
                    Redshift cluster uses to retrieve the data encryption keys
                    stored in an HSM.
                  type: string
                HsmConfigurationIdentifier:
                  description: Specifies the name of the HSM configuration that contains
                    the information the Amazon Redshift cluster can use to
                    retrieve and store keys in an HSM.
                  type: string
                NewClusterIdentifier:
                  description: "<p>The new identifier for the cluster.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63
                    alphanumeric characters or hyphens.</p> </li> <li>
                    <p>Alphabetic characters must be lowercase.</p> </li> <li>
                    <p>First character must be a letter.</p> </li> <li>
                    <p>Cannot end with a hyphen or contain two consecutive
                    hyphens.</p> </li> <li> <p>Must be unique for all clusters
                    within an AWS account.</p> </li> </ul> <p>Example:
                    <code>examplecluster</code> </p>"
                  type: string
                PubliclyAccessible:
                  description: If <code>true</code>, the cluster can be accessed from a
                    public network. Only clusters in VPCs can be set to be
                    publicly available.
                  type: boolean
                ElasticIp:
                  description: '<p>The Elastic IP (EIP) address for the cluster.</p>
                    <p>Constraints: The cluster must be provisioned in EC2-VPC
                    and publicly-accessible through an Internet gateway. For
                    more information about provisioning clusters in EC2-VPC, go
                    to <a
                    href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#cluster-platforms">Supported
                    Platforms to Launch Your Cluster</a> in the Amazon Redshift
                    Cluster Management Guide.</p>'
                  type: string
                EnhancedVpcRouting:
                  description: '<p>An option that specifies whether to create the cluster
                    with enhanced VPC routing enabled. To create a cluster that
                    uses enhanced VPC routing, the cluster must be in a VPC. For
                    more information, see <a
                    href="https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html">Enhanced
                    VPC Routing</a> in the Amazon Redshift Cluster Management
                    Guide.</p> <p>If this option is <code>true</code>, enhanced
                    VPC routing is enabled. </p> <p>Default: false</p>'
                  type: boolean
                MaintenanceTrackName:
                  description: The name for the maintenance track that you want to assign
                    for the cluster. This name change is asynchronous. The new
                    track name stays in the <code>PendingModifiedValues</code>
                    for the cluster until the next maintenance window. When the
                    maintenance track changes, the cluster is switched to the
                    latest cluster release available for the maintenance track.
                    At this point, the maintenance track name is applied.
                  type: string
                Encrypted:
                  description: Indicates whether the cluster is encrypted. If the cluster
                    is encrypted and you provide a value for the
                    <code>KmsKeyId</code> parameter, we will encrypt the cluster
                    with the provided <code>KmsKeyId</code>. If you don't
                    provide a <code>KmsKeyId</code>, we will encrypt with the
                    default key. In the China region we will use legacy
                    encryption if you specify that the cluster is encrypted.
                  type: boolean
                KmsKeyId:
                  description: The AWS Key Management Service (KMS) key ID of the
                    encryption key that you want to use to encrypt data in the
                    cluster.
                  type: string
              required:
                - ClusterIdentifier
  /#Action=ModifyClusterDbRevision:
    get:
      x-aws-operation-name: ModifyClusterDbRevision
      operationId: GET ModifyClusterDbRevision
      description: Modifies the database revision of a cluster. The database revision is a
        unique revision of the database running in a cluster.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyClusterDbRevisionResult"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "481":
          description: ClusterOnLatestRevisionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterOnLatestRevisionFault"
        "482":
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterStateFault"
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: "<p>The unique identifier of a cluster whose database revision you
            want to modify. </p> <p>Example: <code>examplecluster</code> </p>"
          schema:
            type: string
        - name: RevisionTarget
          in: query
          required: true
          description: The identifier of the database revision. You can retrieve this value
            from the response to the <a>DescribeClusterDbRevisions</a> request.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyClusterDbRevision
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyClusterDbRevision
      operationId: POST ModifyClusterDbRevision
      description: Modifies the database revision of a cluster. The database revision is a
        unique revision of the database running in a cluster.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyClusterDbRevisionResult"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "481":
          description: ClusterOnLatestRevisionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterOnLatestRevisionFault"
        "482":
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterStateFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyClusterDbRevision
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterIdentifier:
                  description: "<p>The unique identifier of a cluster whose database
                    revision you want to modify. </p> <p>Example:
                    <code>examplecluster</code> </p>"
                  type: string
                RevisionTarget:
                  description: The identifier of the database revision. You can retrieve
                    this value from the response to the
                    <a>DescribeClusterDbRevisions</a> request.
                  type: string
              required:
                - ClusterIdentifier
                - RevisionTarget
  /#Action=ModifyClusterIamRoles:
    get:
      x-aws-operation-name: ModifyClusterIamRoles
      operationId: GET ModifyClusterIamRoles
      description: <p>Modifies the list of AWS Identity and Access Management (IAM) roles
        that can be used by the cluster to access other AWS services.</p> <p>A
        cluster can have up to 10 IAM roles associated at any time.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyClusterIamRolesResult"
        "480":
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterStateFault"
        "481":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: The unique identifier of the cluster for which you want to associate
            or disassociate IAM roles.
          schema:
            type: string
        - name: AddIamRoles
          in: query
          required: false
          description: Zero or more IAM roles to associate with the cluster. The roles must
            be in their Amazon Resource Name (ARN) format. You can associate up
            to 10 IAM roles with a single cluster in a single request.
          schema:
            type: array
            items:
              type: string
        - name: RemoveIamRoles
          in: query
          required: false
          description: Zero or more IAM roles in ARN format to disassociate from the
            cluster. You can disassociate up to 10 IAM roles from a single
            cluster in a single request.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyClusterIamRoles
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyClusterIamRoles
      operationId: POST ModifyClusterIamRoles
      description: <p>Modifies the list of AWS Identity and Access Management (IAM) roles
        that can be used by the cluster to access other AWS services.</p> <p>A
        cluster can have up to 10 IAM roles associated at any time.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyClusterIamRolesResult"
        "480":
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterStateFault"
        "481":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyClusterIamRoles
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterIdentifier:
                  description: The unique identifier of the cluster for which you want to
                    associate or disassociate IAM roles.
                  type: string
                AddIamRoles:
                  description: Zero or more IAM roles to associate with the cluster. The
                    roles must be in their Amazon Resource Name (ARN) format.
                    You can associate up to 10 IAM roles with a single cluster
                    in a single request.
                  type: array
                  items:
                    type: string
                RemoveIamRoles:
                  description: Zero or more IAM roles in ARN format to disassociate from
                    the cluster. You can disassociate up to 10 IAM roles from a
                    single cluster in a single request.
                  type: array
                  items:
                    type: string
              required:
                - ClusterIdentifier
  /#Action=ModifyClusterMaintenance:
    get:
      x-aws-operation-name: ModifyClusterMaintenance
      operationId: GET ModifyClusterMaintenance
      description: "Modifies the maintenance settings of a cluster. For example, you can
        defer a maintenance window. You can also update or cancel a deferment. "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyClusterMaintenanceResult"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: A unique identifier for the cluster.
          schema:
            type: string
        - name: DeferMaintenance
          in: query
          required: false
          description: "A boolean indicating whether to enable the deferred maintenance
            window. "
          schema:
            type: boolean
        - name: DeferMaintenanceIdentifier
          in: query
          required: false
          description: A unique identifier for the deferred maintenance window.
          schema:
            type: string
        - name: DeferMaintenanceStartTime
          in: query
          required: false
          description: A timestamp indicating the start time for the deferred maintenance
            window.
          schema:
            type: string
            format: date-time
        - name: DeferMaintenanceEndTime
          in: query
          required: false
          description: A timestamp indicating end time for the deferred maintenance window.
            If you specify an end time, you can't specify a duration.
          schema:
            type: string
            format: date-time
        - name: DeferMaintenanceDuration
          in: query
          required: false
          description: An integer indicating the duration of the maintenance window in
            days. If you specify a duration, you can't specify an end time. The
            duration must be 45 days or less.
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyClusterMaintenance
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyClusterMaintenance
      operationId: POST ModifyClusterMaintenance
      description: "Modifies the maintenance settings of a cluster. For example, you can
        defer a maintenance window. You can also update or cancel a deferment. "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyClusterMaintenanceResult"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyClusterMaintenance
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterIdentifier:
                  description: A unique identifier for the cluster.
                  type: string
                DeferMaintenance:
                  description: "A boolean indicating whether to enable the deferred
                    maintenance window. "
                  type: boolean
                DeferMaintenanceIdentifier:
                  description: A unique identifier for the deferred maintenance window.
                  type: string
                DeferMaintenanceStartTime:
                  description: A timestamp indicating the start time for the deferred
                    maintenance window.
                  type: string
                  format: date-time
                DeferMaintenanceEndTime:
                  description: A timestamp indicating end time for the deferred maintenance
                    window. If you specify an end time, you can't specify a
                    duration.
                  type: string
                  format: date-time
                DeferMaintenanceDuration:
                  description: An integer indicating the duration of the maintenance window
                    in days. If you specify a duration, you can't specify an end
                    time. The duration must be 45 days or less.
                  type: integer
              required:
                - ClusterIdentifier
  /#Action=ModifyClusterParameterGroup:
    get:
      x-aws-operation-name: ModifyClusterParameterGroup
      operationId: GET ModifyClusterParameterGroup
      description: <p>Modifies the parameters of a parameter group.</p> <p> For more
        information about parameters and parameter groups, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon
        Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster
        Management Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterParameterGroupNameMessage"
        "480":
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterParameterGroupNotFoundFault"
        "481":
          description: InvalidClusterParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterParameterGroupStateFault"
      parameters:
        - name: ParameterGroupName
          in: query
          required: true
          description: The name of the parameter group to be modified.
          schema:
            type: string
        - name: Parameters
          in: query
          required: true
          description: <p>An array of parameters to be modified. A maximum of 20 parameters
            can be modified in a single request.</p> <p>For each parameter to be
            modified, you must supply at least the parameter name and parameter
            value; other name-value pairs of the parameter are optional.</p>
            <p>For the workload management (WLM) configuration, you must supply
            all the name-value pairs in the wlm_json_configuration
            parameter.</p>
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyClusterParameterGroup
      operationId: POST ModifyClusterParameterGroup
      description: <p>Modifies the parameters of a parameter group.</p> <p> For more
        information about parameters and parameter groups, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Amazon
        Redshift Parameter Groups</a> in the <i>Amazon Redshift Cluster
        Management Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterParameterGroupNameMessage"
        "480":
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterParameterGroupNotFoundFault"
        "481":
          description: InvalidClusterParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterParameterGroupStateFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ParameterGroupName:
                  description: The name of the parameter group to be modified.
                  type: string
                Parameters:
                  description: <p>An array of parameters to be modified. A maximum of 20
                    parameters can be modified in a single request.</p> <p>For
                    each parameter to be modified, you must supply at least the
                    parameter name and parameter value; other name-value pairs
                    of the parameter are optional.</p> <p>For the workload
                    management (WLM) configuration, you must supply all the
                    name-value pairs in the wlm_json_configuration
                    parameter.</p>
                  type: array
                  items:
                    type: string
              required:
                - ParameterGroupName
                - Parameters
  /#Action=ModifyClusterSnapshot:
    get:
      x-aws-operation-name: ModifyClusterSnapshot
      operationId: GET ModifyClusterSnapshot
      description: Modifies the settings for a snapshot.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyClusterSnapshotResult"
        "480":
          description: InvalidClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSnapshotStateFault"
        "481":
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotNotFoundFault"
        "482":
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRetentionPeriodFault"
      parameters:
        - name: SnapshotIdentifier
          in: query
          required: true
          description: The identifier of the snapshot whose setting you want to modify.
          schema:
            type: string
        - name: ManualSnapshotRetentionPeriod
          in: query
          required: false
          description: <p>The number of days that a manual snapshot is retained. If the
            value is -1, the manual snapshot is retained indefinitely.</p> <p>If
            the manual snapshot falls outside of the new retention period, you
            can specify the force option to immediately delete the snapshot.</p>
            <p>The value must be either -1 or an integer between 1 and
            3,653.</p>
          schema:
            type: integer
        - name: Force
          in: query
          required: false
          description: A Boolean option to override an exception if the retention period
            has already passed.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyClusterSnapshot
      operationId: POST ModifyClusterSnapshot
      description: Modifies the settings for a snapshot.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyClusterSnapshotResult"
        "480":
          description: InvalidClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSnapshotStateFault"
        "481":
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotNotFoundFault"
        "482":
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRetentionPeriodFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SnapshotIdentifier:
                  description: The identifier of the snapshot whose setting you want to
                    modify.
                  type: string
                ManualSnapshotRetentionPeriod:
                  description: <p>The number of days that a manual snapshot is retained. If
                    the value is -1, the manual snapshot is retained
                    indefinitely.</p> <p>If the manual snapshot falls outside of
                    the new retention period, you can specify the force option
                    to immediately delete the snapshot.</p> <p>The value must be
                    either -1 or an integer between 1 and 3,653.</p>
                  type: integer
                Force:
                  description: A Boolean option to override an exception if the retention
                    period has already passed.
                  type: boolean
              required:
                - SnapshotIdentifier
  /#Action=ModifyClusterSnapshotSchedule:
    get:
      x-aws-operation-name: ModifyClusterSnapshotSchedule
      operationId: GET ModifyClusterSnapshotSchedule
      description: Modifies a snapshot schedule for a cluster.
      responses:
        "200":
          description: Success
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "481":
          description: SnapshotScheduleNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotScheduleNotFoundFault"
        "482":
          description: InvalidClusterSnapshotScheduleStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSnapshotScheduleStateFault"
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: "A unique identifier for the cluster whose snapshot schedule you
            want to modify. "
          schema:
            type: string
        - name: ScheduleIdentifier
          in: query
          required: false
          description: A unique alphanumeric identifier for the schedule that you want to
            associate with the cluster.
          schema:
            type: string
        - name: DisassociateSchedule
          in: query
          required: false
          description: A boolean to indicate whether to remove the assoiciation between the
            cluster and the schedule.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyClusterSnapshotSchedule
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyClusterSnapshotSchedule
      operationId: POST ModifyClusterSnapshotSchedule
      description: Modifies a snapshot schedule for a cluster.
      responses:
        "200":
          description: Success
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "481":
          description: SnapshotScheduleNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotScheduleNotFoundFault"
        "482":
          description: InvalidClusterSnapshotScheduleStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSnapshotScheduleStateFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyClusterSnapshotSchedule
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterIdentifier:
                  description: "A unique identifier for the cluster whose snapshot schedule
                    you want to modify. "
                  type: string
                ScheduleIdentifier:
                  description: A unique alphanumeric identifier for the schedule that you
                    want to associate with the cluster.
                  type: string
                DisassociateSchedule:
                  description: A boolean to indicate whether to remove the assoiciation
                    between the cluster and the schedule.
                  type: boolean
              required:
                - ClusterIdentifier
  /#Action=ModifyClusterSubnetGroup:
    get:
      x-aws-operation-name: ModifyClusterSubnetGroup
      operationId: GET ModifyClusterSubnetGroup
      description: Modifies a cluster subnet group to include the specified list of VPC
        subnets. The operation replaces the existing list of subnets with the
        new list of subnets.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyClusterSubnetGroupResult"
        "480":
          description: ClusterSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSubnetGroupNotFoundFault"
        "481":
          description: ClusterSubnetQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSubnetQuotaExceededFault"
        "482":
          description: SubnetAlreadyInUse
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubnetAlreadyInUse"
        "483":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
        "484":
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperation"
        "485":
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DependentServiceRequestThrottlingFault"
      parameters:
        - name: ClusterSubnetGroupName
          in: query
          required: true
          description: The name of the subnet group to be modified.
          schema:
            type: string
        - name: Description
          in: query
          required: false
          description: A text description of the subnet group to be modified.
          schema:
            type: string
        - name: SubnetIds
          in: query
          required: true
          description: An array of VPC subnet IDs. A maximum of 20 subnets can be modified
            in a single request.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyClusterSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyClusterSubnetGroup
      operationId: POST ModifyClusterSubnetGroup
      description: Modifies a cluster subnet group to include the specified list of VPC
        subnets. The operation replaces the existing list of subnets with the
        new list of subnets.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyClusterSubnetGroupResult"
        "480":
          description: ClusterSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSubnetGroupNotFoundFault"
        "481":
          description: ClusterSubnetQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSubnetQuotaExceededFault"
        "482":
          description: SubnetAlreadyInUse
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubnetAlreadyInUse"
        "483":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
        "484":
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperation"
        "485":
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DependentServiceRequestThrottlingFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyClusterSubnetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterSubnetGroupName:
                  description: The name of the subnet group to be modified.
                  type: string
                Description:
                  description: A text description of the subnet group to be modified.
                  type: string
                SubnetIds:
                  description: An array of VPC subnet IDs. A maximum of 20 subnets can be
                    modified in a single request.
                  type: array
                  items:
                    type: string
              required:
                - ClusterSubnetGroupName
                - SubnetIds
  /#Action=ModifyEventSubscription:
    get:
      x-aws-operation-name: ModifyEventSubscription
      operationId: GET ModifyEventSubscription
      description: Modifies an existing Amazon Redshift event notification subscription.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyEventSubscriptionResult"
        "480":
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionNotFoundFault"
        "481":
          description: SNSInvalidTopicFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SNSInvalidTopicFault"
        "482":
          description: SNSNoAuthorizationFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SNSNoAuthorizationFault"
        "483":
          description: SNSTopicArnNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SNSTopicArnNotFoundFault"
        "484":
          description: SubscriptionEventIdNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionEventIdNotFoundFault"
        "485":
          description: SubscriptionCategoryNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionCategoryNotFoundFault"
        "486":
          description: SubscriptionSeverityNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionSeverityNotFoundFault"
        "487":
          description: SourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SourceNotFoundFault"
        "488":
          description: InvalidSubscriptionStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubscriptionStateFault"
      parameters:
        - name: SubscriptionName
          in: query
          required: true
          description: The name of the modified Amazon Redshift event notification
            subscription.
          schema:
            type: string
        - name: SnsTopicArn
          in: query
          required: false
          description: The Amazon Resource Name (ARN) of the SNS topic to be used by the
            event notification subscription.
          schema:
            type: string
        - name: SourceType
          in: query
          required: false
          description: "<p>The type of source that will be generating the events. For
            example, if you want to be notified of events generated by a
            cluster, you would set this parameter to cluster. If this value is
            not specified, events are returned for all Amazon Redshift objects
            in your AWS account. You must specify a source type in order to
            specify source IDs.</p> <p>Valid values: cluster,
            cluster-parameter-group, cluster-security-group, and
            cluster-snapshot.</p>"
          schema:
            type: string
        - name: SourceIds
          in: query
          required: false
          description: "<p>A list of one or more identifiers of Amazon Redshift source
            objects. All of the objects must be of the same type as was
            specified in the source type parameter. The event subscription will
            return only events generated by the specified objects. If not
            specified, then events are returned for all objects within the
            source type specified.</p> <p>Example: my-cluster-1,
            my-cluster-2</p> <p>Example: my-snapshot-20131010</p>"
          schema:
            type: array
            items:
              type: string
        - name: EventCategories
          in: query
          required: false
          description: "<p>Specifies the Amazon Redshift event categories to be published
            by the event notification subscription.</p> <p>Values:
            configuration, management, monitoring, security</p>"
          schema:
            type: array
            items:
              type: string
        - name: Severity
          in: query
          required: false
          description: "<p>Specifies the Amazon Redshift event severity to be published by
            the event notification subscription.</p> <p>Values: ERROR, INFO</p>"
          schema:
            type: string
        - name: Enabled
          in: query
          required: false
          description: "A Boolean value indicating if the subscription is enabled.
            <code>true</code> indicates the subscription is enabled "
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyEventSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyEventSubscription
      operationId: POST ModifyEventSubscription
      description: Modifies an existing Amazon Redshift event notification subscription.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyEventSubscriptionResult"
        "480":
          description: SubscriptionNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionNotFoundFault"
        "481":
          description: SNSInvalidTopicFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SNSInvalidTopicFault"
        "482":
          description: SNSNoAuthorizationFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SNSNoAuthorizationFault"
        "483":
          description: SNSTopicArnNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SNSTopicArnNotFoundFault"
        "484":
          description: SubscriptionEventIdNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionEventIdNotFoundFault"
        "485":
          description: SubscriptionCategoryNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionCategoryNotFoundFault"
        "486":
          description: SubscriptionSeverityNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubscriptionSeverityNotFoundFault"
        "487":
          description: SourceNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SourceNotFoundFault"
        "488":
          description: InvalidSubscriptionStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubscriptionStateFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyEventSubscription
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SubscriptionName:
                  description: The name of the modified Amazon Redshift event notification
                    subscription.
                  type: string
                SnsTopicArn:
                  description: The Amazon Resource Name (ARN) of the SNS topic to be used
                    by the event notification subscription.
                  type: string
                SourceType:
                  description: "<p>The type of source that will be generating the events.
                    For example, if you want to be notified of events generated
                    by a cluster, you would set this parameter to cluster. If
                    this value is not specified, events are returned for all
                    Amazon Redshift objects in your AWS account. You must
                    specify a source type in order to specify source IDs.</p>
                    <p>Valid values: cluster, cluster-parameter-group,
                    cluster-security-group, and cluster-snapshot.</p>"
                  type: string
                SourceIds:
                  description: "<p>A list of one or more identifiers of Amazon Redshift
                    source objects. All of the objects must be of the same type
                    as was specified in the source type parameter. The event
                    subscription will return only events generated by the
                    specified objects. If not specified, then events are
                    returned for all objects within the source type
                    specified.</p> <p>Example: my-cluster-1, my-cluster-2</p>
                    <p>Example: my-snapshot-20131010</p>"
                  type: array
                  items:
                    type: string
                EventCategories:
                  description: "<p>Specifies the Amazon Redshift event categories to be
                    published by the event notification subscription.</p>
                    <p>Values: configuration, management, monitoring,
                    security</p>"
                  type: array
                  items:
                    type: string
                Severity:
                  description: "<p>Specifies the Amazon Redshift event severity to be
                    published by the event notification subscription.</p>
                    <p>Values: ERROR, INFO</p>"
                  type: string
                Enabled:
                  description: "A Boolean value indicating if the subscription is enabled.
                    <code>true</code> indicates the subscription is enabled "
                  type: boolean
              required:
                - SubscriptionName
  /#Action=ModifySnapshotCopyRetentionPeriod:
    get:
      x-aws-operation-name: ModifySnapshotCopyRetentionPeriod
      operationId: GET ModifySnapshotCopyRetentionPeriod
      description: "Modifies the number of days to retain snapshots in the destination AWS
        Region after they are copied from the source AWS Region. By default,
        this operation only changes the retention period of copied automated
        snapshots. The retention periods for both new and existing copied
        automated snapshots are updated with the new retention period. You can
        set the manual option to change only the retention periods of copied
        manual snapshots. If you set this option, only newly copied manual
        snapshots have the new retention period. "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifySnapshotCopyRetentionPeriodResult"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "481":
          description: SnapshotCopyDisabledFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotCopyDisabledFault"
        "482":
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperation"
        "483":
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterStateFault"
        "484":
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRetentionPeriodFault"
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: "<p>The unique identifier of the cluster for which you want to
            change the retention period for either automated or manual snapshots
            that are copied to a destination AWS Region.</p> <p>Constraints:
            Must be the valid name of an existing cluster that has cross-region
            snapshot copy enabled.</p>"
          schema:
            type: string
        - name: RetentionPeriod
          in: query
          required: true
          description: "<p>The number of days to retain automated snapshots in the
            destination AWS Region after they are copied from the source AWS
            Region.</p> <p>By default, this only changes the retention period of
            copied automated snapshots. </p> <p>If you decrease the retention
            period for automated snapshots that are copied to a destination AWS
            Region, Amazon Redshift deletes any existing automated snapshots
            that were copied to the destination AWS Region and that fall outside
            of the new retention period.</p> <p>Constraints: Must be at least 1
            and no more than 35 for automated snapshots. </p> <p>If you specify
            the <code>manual</code> option, only newly copied manual snapshots
            will have the new retention period. </p> <p>If you specify the value
            of -1 newly copied manual snapshots are retained indefinitely.</p>
            <p>Constraints: The number of days must be either -1 or an integer
            between 1 and 3,653 for manual snapshots.</p>"
          schema:
            type: integer
        - name: Manual
          in: query
          required: false
          description: Indicates whether to apply the snapshot retention period to newly
            copied manual snapshots instead of automated snapshots.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifySnapshotCopyRetentionPeriod
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifySnapshotCopyRetentionPeriod
      operationId: POST ModifySnapshotCopyRetentionPeriod
      description: "Modifies the number of days to retain snapshots in the destination AWS
        Region after they are copied from the source AWS Region. By default,
        this operation only changes the retention period of copied automated
        snapshots. The retention periods for both new and existing copied
        automated snapshots are updated with the new retention period. You can
        set the manual option to change only the retention periods of copied
        manual snapshots. If you set this option, only newly copied manual
        snapshots have the new retention period. "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifySnapshotCopyRetentionPeriodResult"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "481":
          description: SnapshotCopyDisabledFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotCopyDisabledFault"
        "482":
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperation"
        "483":
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterStateFault"
        "484":
          description: InvalidRetentionPeriodFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRetentionPeriodFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifySnapshotCopyRetentionPeriod
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterIdentifier:
                  description: "<p>The unique identifier of the cluster for which you want
                    to change the retention period for either automated or
                    manual snapshots that are copied to a destination AWS
                    Region.</p> <p>Constraints: Must be the valid name of an
                    existing cluster that has cross-region snapshot copy
                    enabled.</p>"
                  type: string
                RetentionPeriod:
                  description: "<p>The number of days to retain automated snapshots in the
                    destination AWS Region after they are copied from the source
                    AWS Region.</p> <p>By default, this only changes the
                    retention period of copied automated snapshots. </p> <p>If
                    you decrease the retention period for automated snapshots
                    that are copied to a destination AWS Region, Amazon Redshift
                    deletes any existing automated snapshots that were copied to
                    the destination AWS Region and that fall outside of the new
                    retention period.</p> <p>Constraints: Must be at least 1 and
                    no more than 35 for automated snapshots. </p> <p>If you
                    specify the <code>manual</code> option, only newly copied
                    manual snapshots will have the new retention period. </p>
                    <p>If you specify the value of -1 newly copied manual
                    snapshots are retained indefinitely.</p> <p>Constraints: The
                    number of days must be either -1 or an integer between 1 and
                    3,653 for manual snapshots.</p>"
                  type: integer
                Manual:
                  description: Indicates whether to apply the snapshot retention period to
                    newly copied manual snapshots instead of automated
                    snapshots.
                  type: boolean
              required:
                - ClusterIdentifier
                - RetentionPeriod
  /#Action=ModifySnapshotSchedule:
    get:
      x-aws-operation-name: ModifySnapshotSchedule
      operationId: GET ModifySnapshotSchedule
      description: Modifies a snapshot schedule. Any schedule associated with a cluster is
        modified asynchronously.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotSchedule"
        "480":
          description: InvalidScheduleFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidScheduleFault"
        "481":
          description: SnapshotScheduleNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotScheduleNotFoundFault"
        "482":
          description: SnapshotScheduleUpdateInProgressFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotScheduleUpdateInProgressFault"
      parameters:
        - name: ScheduleIdentifier
          in: query
          required: true
          description: A unique alphanumeric identifier of the schedule to modify.
          schema:
            type: string
        - name: ScheduleDefinitions
          in: query
          required: true
          description: An updated list of schedule definitions. A schedule definition is
            made up of schedule expressions, for example, "cron(30 12 *)" or
            "rate(12 hours)".
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifySnapshotSchedule
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifySnapshotSchedule
      operationId: POST ModifySnapshotSchedule
      description: Modifies a snapshot schedule. Any schedule associated with a cluster is
        modified asynchronously.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotSchedule"
        "480":
          description: InvalidScheduleFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidScheduleFault"
        "481":
          description: SnapshotScheduleNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotScheduleNotFoundFault"
        "482":
          description: SnapshotScheduleUpdateInProgressFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotScheduleUpdateInProgressFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifySnapshotSchedule
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ScheduleIdentifier:
                  description: A unique alphanumeric identifier of the schedule to modify.
                  type: string
                ScheduleDefinitions:
                  description: An updated list of schedule definitions. A schedule
                    definition is made up of schedule expressions, for example,
                    "cron(30 12 *)" or "rate(12 hours)".
                  type: array
                  items:
                    type: string
              required:
                - ScheduleIdentifier
                - ScheduleDefinitions
  /#Action=PurchaseReservedNodeOffering:
    get:
      x-aws-operation-name: PurchaseReservedNodeOffering
      operationId: GET PurchaseReservedNodeOffering
      description: <p>Allows you to purchase reserved nodes. Amazon Redshift offers a
        predefined set of reserved node offerings. You can purchase one or more
        of the offerings. You can call the <a>DescribeReservedNodeOfferings</a>
        API to obtain the available reserved node offerings. You can call this
        API by providing a specific reserved node offering and the number of
        nodes you want to reserve. </p> <p> For more information about reserved
        node offerings, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/purchase-reserved-node-instance.html">Purchasing
        Reserved Nodes</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PurchaseReservedNodeOfferingResult"
        "480":
          description: ReservedNodeOfferingNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedNodeOfferingNotFoundFault"
        "481":
          description: ReservedNodeAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedNodeAlreadyExistsFault"
        "482":
          description: ReservedNodeQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedNodeQuotaExceededFault"
        "483":
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationFault"
      parameters:
        - name: ReservedNodeOfferingId
          in: query
          required: true
          description: The unique identifier of the reserved node offering you want to
            purchase.
          schema:
            type: string
        - name: NodeCount
          in: query
          required: false
          description: "<p>The number of reserved nodes that you want to purchase.</p>
            <p>Default: <code>1</code> </p>"
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - PurchaseReservedNodeOffering
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: PurchaseReservedNodeOffering
      operationId: POST PurchaseReservedNodeOffering
      description: <p>Allows you to purchase reserved nodes. Amazon Redshift offers a
        predefined set of reserved node offerings. You can purchase one or more
        of the offerings. You can call the <a>DescribeReservedNodeOfferings</a>
        API to obtain the available reserved node offerings. You can call this
        API by providing a specific reserved node offering and the number of
        nodes you want to reserve. </p> <p> For more information about reserved
        node offerings, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/purchase-reserved-node-instance.html">Purchasing
        Reserved Nodes</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PurchaseReservedNodeOfferingResult"
        "480":
          description: ReservedNodeOfferingNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedNodeOfferingNotFoundFault"
        "481":
          description: ReservedNodeAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedNodeAlreadyExistsFault"
        "482":
          description: ReservedNodeQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ReservedNodeQuotaExceededFault"
        "483":
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - PurchaseReservedNodeOffering
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ReservedNodeOfferingId:
                  description: The unique identifier of the reserved node offering you want
                    to purchase.
                  type: string
                NodeCount:
                  description: "<p>The number of reserved nodes that you want to
                    purchase.</p> <p>Default: <code>1</code> </p>"
                  type: integer
              required:
                - ReservedNodeOfferingId
  /#Action=RebootCluster:
    get:
      x-aws-operation-name: RebootCluster
      operationId: GET RebootCluster
      description: 'Reboots a cluster. This action is taken as soon as possible. It results
        in a momentary outage to the cluster, during which the cluster status is
        set to <code>rebooting</code>. A cluster event is created when the
        reboot is completed. Any pending cluster modifications (see
        <a>ModifyCluster</a>) are applied at this reboot. For more information
        about managing clusters, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon
        Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>. '
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RebootClusterResult"
        "480":
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterStateFault"
        "481":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: The cluster identifier.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RebootCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RebootCluster
      operationId: POST RebootCluster
      description: 'Reboots a cluster. This action is taken as soon as possible. It results
        in a momentary outage to the cluster, during which the cluster status is
        set to <code>rebooting</code>. A cluster event is created when the
        reboot is completed. Any pending cluster modifications (see
        <a>ModifyCluster</a>) are applied at this reboot. For more information
        about managing clusters, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html">Amazon
        Redshift Clusters</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>. '
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RebootClusterResult"
        "480":
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterStateFault"
        "481":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RebootCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterIdentifier:
                  description: The cluster identifier.
                  type: string
              required:
                - ClusterIdentifier
  /#Action=ResetClusterParameterGroup:
    get:
      x-aws-operation-name: ResetClusterParameterGroup
      operationId: GET ResetClusterParameterGroup
      description: 'Sets one or more parameters of the specified parameter group to their
        default values and sets the source values of the parameters to
        "engine-default". To reset the entire parameter group specify the
        <i>ResetAllParameters</i> parameter. For parameter changes to take
        effect you must reboot any associated clusters. '
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterParameterGroupNameMessage"
        "480":
          description: InvalidClusterParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterParameterGroupStateFault"
        "481":
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterParameterGroupNotFoundFault"
      parameters:
        - name: ParameterGroupName
          in: query
          required: true
          description: The name of the cluster parameter group to be reset.
          schema:
            type: string
        - name: ResetAllParameters
          in: query
          required: false
          description: "<p>If <code>true</code>, all parameters in the specified parameter
            group will be reset to their default values. </p> <p>Default:
            <code>true</code> </p>"
          schema:
            type: boolean
        - name: Parameters
          in: query
          required: false
          description: "<p>An array of names of parameters to be reset. If
            <i>ResetAllParameters</i> option is not used, then at least one
            parameter name must be supplied. </p> <p>Constraints: A maximum of
            20 parameters can be reset in a single request.</p>"
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ResetClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ResetClusterParameterGroup
      operationId: POST ResetClusterParameterGroup
      description: 'Sets one or more parameters of the specified parameter group to their
        default values and sets the source values of the parameters to
        "engine-default". To reset the entire parameter group specify the
        <i>ResetAllParameters</i> parameter. For parameter changes to take
        effect you must reboot any associated clusters. '
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterParameterGroupNameMessage"
        "480":
          description: InvalidClusterParameterGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterParameterGroupStateFault"
        "481":
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterParameterGroupNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ResetClusterParameterGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ParameterGroupName:
                  description: The name of the cluster parameter group to be reset.
                  type: string
                ResetAllParameters:
                  description: "<p>If <code>true</code>, all parameters in the specified
                    parameter group will be reset to their default values. </p>
                    <p>Default: <code>true</code> </p>"
                  type: boolean
                Parameters:
                  description: "<p>An array of names of parameters to be reset. If
                    <i>ResetAllParameters</i> option is not used, then at least
                    one parameter name must be supplied. </p> <p>Constraints: A
                    maximum of 20 parameters can be reset in a single
                    request.</p>"
                  type: array
                  items:
                    type: string
              required:
                - ParameterGroupName
  /#Action=ResizeCluster:
    get:
      x-aws-operation-name: ResizeCluster
      operationId: GET ResizeCluster
      description: <p>Changes the size of the cluster. You can change the cluster's type,
        or change the number or type of nodes. The default behavior is to use
        the elastic resize method. With an elastic resize, your cluster is
        available for read and write operations more quickly than with the
        classic resize method. </p> <p>Elastic resize operations have the
        following restrictions:</p> <ul> <li> <p>You can only resize clusters of
        the following types:</p> <ul> <li> <p>dc2.large</p> </li> <li>
        <p>dc2.8xlarge</p> </li> <li> <p>ds2.xlarge</p> </li> <li>
        <p>ds2.8xlarge</p> </li> </ul> </li> <li> <p>The type of nodes that you
        add must match the node type for the cluster.</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResizeClusterResult"
        "480":
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterStateFault"
        "481":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "482":
          description: NumberOfNodesQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NumberOfNodesQuotaExceededFault"
        "483":
          description: NumberOfNodesPerClusterLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NumberOfNodesPerClusterLimitExceededFau\
                  lt"
        "484":
          description: InsufficientClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientClusterCapacityFault"
        "485":
          description: UnsupportedOptionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedOptionFault"
        "486":
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationFault"
        "487":
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperation"
        "488":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: The unique identifier for the cluster to resize.
          schema:
            type: string
        - name: ClusterType
          in: query
          required: false
          description: The new cluster type for the specified cluster.
          schema:
            type: string
        - name: NodeType
          in: query
          required: false
          description: The new node type for the nodes you are adding. If not specified,
            the cluster's current node type is used.
          schema:
            type: string
        - name: NumberOfNodes
          in: query
          required: true
          description: The new number of nodes for the cluster.
          schema:
            type: integer
        - name: Classic
          in: query
          required: false
          description: "A boolean value indicating whether the resize operation is using
            the classic resize process. If you don't provide this parameter or
            set the value to <code>false</code>, the resize type is elastic. "
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ResizeCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ResizeCluster
      operationId: POST ResizeCluster
      description: <p>Changes the size of the cluster. You can change the cluster's type,
        or change the number or type of nodes. The default behavior is to use
        the elastic resize method. With an elastic resize, your cluster is
        available for read and write operations more quickly than with the
        classic resize method. </p> <p>Elastic resize operations have the
        following restrictions:</p> <ul> <li> <p>You can only resize clusters of
        the following types:</p> <ul> <li> <p>dc2.large</p> </li> <li>
        <p>dc2.8xlarge</p> </li> <li> <p>ds2.xlarge</p> </li> <li>
        <p>ds2.8xlarge</p> </li> </ul> </li> <li> <p>The type of nodes that you
        add must match the node type for the cluster.</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResizeClusterResult"
        "480":
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterStateFault"
        "481":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "482":
          description: NumberOfNodesQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NumberOfNodesQuotaExceededFault"
        "483":
          description: NumberOfNodesPerClusterLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NumberOfNodesPerClusterLimitExceededFau\
                  lt"
        "484":
          description: InsufficientClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientClusterCapacityFault"
        "485":
          description: UnsupportedOptionFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedOptionFault"
        "486":
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationFault"
        "487":
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperation"
        "488":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ResizeCluster
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterIdentifier:
                  description: The unique identifier for the cluster to resize.
                  type: string
                ClusterType:
                  description: The new cluster type for the specified cluster.
                  type: string
                NodeType:
                  description: The new node type for the nodes you are adding. If not
                    specified, the cluster's current node type is used.
                  type: string
                NumberOfNodes:
                  description: The new number of nodes for the cluster.
                  type: integer
                Classic:
                  description: "A boolean value indicating whether the resize operation is
                    using the classic resize process. If you don't provide this
                    parameter or set the value to <code>false</code>, the resize
                    type is elastic. "
                  type: boolean
              required:
                - ClusterIdentifier
                - NumberOfNodes
  /#Action=RestoreFromClusterSnapshot:
    get:
      x-aws-operation-name: RestoreFromClusterSnapshot
      operationId: GET RestoreFromClusterSnapshot
      description: <p>Creates a new cluster from a snapshot. By default, Amazon Redshift
        creates the resulting cluster with the same configuration as the
        original cluster from which the snapshot was created, except that the
        new cluster is created with the default cluster security and parameter
        groups. After Amazon Redshift creates the cluster, you can use the
        <a>ModifyCluster</a> API to associate a different security group and
        different parameter group with the restored cluster. If you are using a
        DS node type, you can also choose to change to another DS node type of
        the same size during restore.</p> <p>If you restore a cluster into a
        VPC, you must provide a cluster subnet group where you want the cluster
        restored.</p> <p> For more information about working with snapshots, go
        to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon
        Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RestoreFromClusterSnapshotResult"
        "480":
          description: AccessToSnapshotDeniedFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessToSnapshotDeniedFault"
        "481":
          description: ClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterAlreadyExistsFault"
        "482":
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotNotFoundFault"
        "483":
          description: ClusterQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterQuotaExceededFault"
        "484":
          description: InsufficientClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientClusterCapacityFault"
        "485":
          description: InvalidClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSnapshotStateFault"
        "486":
          description: InvalidRestoreFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRestoreFault"
        "487":
          description: NumberOfNodesQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NumberOfNodesQuotaExceededFault"
        "488":
          description: NumberOfNodesPerClusterLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NumberOfNodesPerClusterLimitExceededFau\
                  lt"
        "489":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "490":
          description: InvalidClusterSubnetGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSubnetGroupStateFault"
        "491":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
        "492":
          description: ClusterSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSubnetGroupNotFoundFault"
        "493":
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperation"
        "494":
          description: HsmClientCertificateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmClientCertificateNotFoundFault"
        "495":
          description: HsmConfigurationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmConfigurationNotFoundFault"
        "496":
          description: InvalidElasticIpFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidElasticIpFault"
        "497":
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterParameterGroupNotFoundFault"
        "498":
          description: ClusterSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSecurityGroupNotFoundFault"
        "499":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "500":
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DependentServiceRequestThrottlingFault"
        "501":
          description: InvalidClusterTrackFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterTrackFault"
        "502":
          description: SnapshotScheduleNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotScheduleNotFoundFault"
        "503":
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededFault"
        "504":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: <p>The identifier of the cluster that will be created from restoring
            the snapshot.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from
            1 to 63 alphanumeric characters or hyphens.</p> </li> <li>
            <p>Alphabetic characters must be lowercase.</p> </li> <li> <p>First
            character must be a letter.</p> </li> <li> <p>Cannot end with a
            hyphen or contain two consecutive hyphens.</p> </li> <li> <p>Must be
            unique for all clusters within an AWS account.</p> </li> </ul>
          schema:
            type: string
        - name: SnapshotIdentifier
          in: query
          required: true
          description: "<p>The name of the snapshot from which to create the new cluster.
            This parameter isn't case sensitive.</p> <p>Example:
            <code>my-snapshot-id</code> </p>"
          schema:
            type: string
        - name: SnapshotClusterIdentifier
          in: query
          required: false
          description: The name of the cluster the source snapshot was created from. This
            parameter is required if your IAM user has a policy containing a
            snapshot resource element that specifies anything other than * for
            the cluster name.
          schema:
            type: string
        - name: Port
          in: query
          required: false
          description: "<p>The port number on which the cluster accepts connections.</p>
            <p>Default: The same port as the original cluster.</p>
            <p>Constraints: Must be between <code>1115</code> and
            <code>65535</code>.</p>"
          schema:
            type: integer
        - name: AvailabilityZone
          in: query
          required: false
          description: "<p>The Amazon EC2 Availability Zone in which to restore the
            cluster.</p> <p>Default: A random, system-chosen Availability
            Zone.</p> <p>Example: <code>us-east-1a</code> </p>"
          schema:
            type: string
        - name: AllowVersionUpgrade
          in: query
          required: false
          description: "<p>If <code>true</code>, major version upgrades can be applied
            during the maintenance window to the Amazon Redshift engine that is
            running on the cluster. </p> <p>Default: <code>true</code> </p>"
          schema:
            type: boolean
        - name: ClusterSubnetGroupName
          in: query
          required: false
          description: <p>The name of the subnet group where you want to cluster
            restored.</p> <p>A snapshot of cluster in VPC can be restored only
            in VPC. Therefore, you must provide subnet group name where you want
            the cluster restored.</p>
          schema:
            type: string
        - name: PubliclyAccessible
          in: query
          required: false
          description: "If <code>true</code>, the cluster can be accessed from a public
            network. "
          schema:
            type: boolean
        - name: OwnerAccount
          in: query
          required: false
          description: The AWS customer account used to create or copy the snapshot.
            Required if you are restoring a snapshot you do not own, optional if
            you own the snapshot.
          schema:
            type: string
        - name: HsmClientCertificateIdentifier
          in: query
          required: false
          description: Specifies the name of the HSM client certificate the Amazon Redshift
            cluster uses to retrieve the data encryption keys stored in an HSM.
          schema:
            type: string
        - name: HsmConfigurationIdentifier
          in: query
          required: false
          description: Specifies the name of the HSM configuration that contains the
            information the Amazon Redshift cluster can use to retrieve and
            store keys in an HSM.
          schema:
            type: string
        - name: ElasticIp
          in: query
          required: false
          description: The elastic IP (EIP) address for the cluster.
          schema:
            type: string
        - name: ClusterParameterGroupName
          in: query
          required: false
          description: '<p>The name of the parameter group to be associated with this
            cluster.</p> <p>Default: The default Amazon Redshift cluster
            parameter group. For information about the default parameter group,
            go to <a
            href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Working
            with Amazon Redshift Parameter Groups</a>.</p> <p>Constraints:</p>
            <ul> <li> <p>Must be 1 to 255 alphanumeric characters or
            hyphens.</p> </li> <li> <p>First character must be a letter.</p>
            </li> <li> <p>Cannot end with a hyphen or contain two consecutive
            hyphens.</p> </li> </ul>'
          schema:
            type: string
        - name: ClusterSecurityGroups
          in: query
          required: false
          description: "<p>A list of security groups to be associated with this
            cluster.</p> <p>Default: The default cluster security group for
            Amazon Redshift.</p> <p>Cluster security groups only apply to
            clusters outside of VPCs.</p>"
          schema:
            type: array
            items:
              type: string
        - name: VpcSecurityGroupIds
          in: query
          required: false
          description: "<p>A list of Virtual Private Cloud (VPC) security groups to be
            associated with the cluster.</p> <p>Default: The default VPC
            security group is associated with the cluster.</p> <p>VPC security
            groups only apply to clusters in VPCs.</p>"
          schema:
            type: array
            items:
              type: string
        - name: PreferredMaintenanceWindow
          in: query
          required: false
          description: '<p>The weekly time range (in UTC) during which automated cluster
            maintenance can occur.</p> <p> Format:
            <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p> Default: The value
            selected for the cluster from which the snapshot was taken. For more
            information about the time blocks for each region, see <a
            href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#rs-maintenance-windows">Maintenance
            Windows</a> in Amazon Redshift Cluster Management Guide. </p>
            <p>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</p>
            <p>Constraints: Minimum 30-minute window.</p>'
          schema:
            type: string
        - name: AutomatedSnapshotRetentionPeriod
          in: query
          required: false
          description: "<p>The number of days that automated snapshots are retained. If the
            value is 0, automated snapshots are disabled. Even if automated
            snapshots are disabled, you can still create manual snapshots when
            you want with <a>CreateClusterSnapshot</a>. </p> <p>Default: The
            value selected for the cluster from which the snapshot was
            taken.</p> <p>Constraints: Must be a value from 0 to 35.</p>"
          schema:
            type: integer
        - name: ManualSnapshotRetentionPeriod
          in: query
          required: false
          description: <p>The default number of days to retain a manual snapshot. If the
            value is -1, the snapshot is retained indefinitely. This setting
            doesn't change the retention period of existing snapshots.</p>
            <p>The value must be either -1 or an integer between 1 and
            3,653.</p>
          schema:
            type: integer
        - name: KmsKeyId
          in: query
          required: false
          description: The AWS Key Management Service (KMS) key ID of the encryption key
            that you want to use to encrypt data in the cluster that you restore
            from a shared snapshot.
          schema:
            type: string
        - name: NodeType
          in: query
          required: false
          description: "<p>The node type that the restored cluster will be provisioned
            with.</p> <p>Default: The node type of the cluster from which the
            snapshot was taken. You can modify this if you are using any DS node
            type. In that case, you can choose to restore into another DS node
            type of the same size. For example, you can restore ds1.8xlarge into
            ds2.8xlarge, or ds1.xlarge into ds2.xlarge. If you have a DC
            instance type, you must restore into that same instance type and
            size. In other words, you can only restore a dc1.large instance type
            into another dc1.large instance type or dc2.large instance type. You
            can't restore dc1.8xlarge to dc2.8xlarge. First restore to a
            dc1.8xlareg cluster, then resize to a dc2.8large cluster. For more
            information about node types, see <a
            href=\"https://docs.aws.amazon.com/redshift/latest/mgmt/working-wit\
            h-clusters.html#rs-about-clusters-and-nodes\"> About Clusters and
            Nodes</a> in the <i>Amazon Redshift Cluster Management Guide</i>.
            </p>"
          schema:
            type: string
        - name: EnhancedVpcRouting
          in: query
          required: false
          description: '<p>An option that specifies whether to create the cluster with
            enhanced VPC routing enabled. To create a cluster that uses enhanced
            VPC routing, the cluster must be in a VPC. For more information, see
            <a
            href="https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html">Enhanced
            VPC Routing</a> in the Amazon Redshift Cluster Management Guide.</p>
            <p>If this option is <code>true</code>, enhanced VPC routing is
            enabled. </p> <p>Default: false</p>'
          schema:
            type: boolean
        - name: AdditionalInfo
          in: query
          required: false
          description: Reserved.
          schema:
            type: string
        - name: IamRoles
          in: query
          required: false
          description: <p>A list of AWS Identity and Access Management (IAM) roles that can
            be used by the cluster to access other AWS services. You must supply
            the IAM roles in their Amazon Resource Name (ARN) format. You can
            supply up to 10 IAM roles in a single request.</p> <p>A cluster can
            have up to 10 IAM roles associated at any time.</p>
          schema:
            type: array
            items:
              type: string
        - name: MaintenanceTrackName
          in: query
          required: false
          description: The name of the maintenance track for the restored cluster. When you
            take a snapshot, the snapshot inherits the
            <code>MaintenanceTrack</code> value from the cluster. The snapshot
            might be on a different track than the cluster that was the source
            for the snapshot. For example, suppose that you take a snapshot of a
            cluster that is on the current track and then change the cluster to
            be on the trailing track. In this case, the snapshot and the source
            cluster are on different tracks.
          schema:
            type: string
        - name: SnapshotScheduleIdentifier
          in: query
          required: false
          description: A unique identifier for the snapshot schedule.
          schema:
            type: string
        - name: NumberOfNodes
          in: query
          required: false
          description: The number of nodes specified when provisioning the restored cluster.
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RestoreFromClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RestoreFromClusterSnapshot
      operationId: POST RestoreFromClusterSnapshot
      description: <p>Creates a new cluster from a snapshot. By default, Amazon Redshift
        creates the resulting cluster with the same configuration as the
        original cluster from which the snapshot was created, except that the
        new cluster is created with the default cluster security and parameter
        groups. After Amazon Redshift creates the cluster, you can use the
        <a>ModifyCluster</a> API to associate a different security group and
        different parameter group with the restored cluster. If you are using a
        DS node type, you can also choose to change to another DS node type of
        the same size during restore.</p> <p>If you restore a cluster into a
        VPC, you must provide a cluster subnet group where you want the cluster
        restored.</p> <p> For more information about working with snapshots, go
        to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon
        Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RestoreFromClusterSnapshotResult"
        "480":
          description: AccessToSnapshotDeniedFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessToSnapshotDeniedFault"
        "481":
          description: ClusterAlreadyExistsFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterAlreadyExistsFault"
        "482":
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotNotFoundFault"
        "483":
          description: ClusterQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterQuotaExceededFault"
        "484":
          description: InsufficientClusterCapacityFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientClusterCapacityFault"
        "485":
          description: InvalidClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSnapshotStateFault"
        "486":
          description: InvalidRestoreFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRestoreFault"
        "487":
          description: NumberOfNodesQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NumberOfNodesQuotaExceededFault"
        "488":
          description: NumberOfNodesPerClusterLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NumberOfNodesPerClusterLimitExceededFau\
                  lt"
        "489":
          description: InvalidVPCNetworkStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCNetworkStateFault"
        "490":
          description: InvalidClusterSubnetGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSubnetGroupStateFault"
        "491":
          description: InvalidSubnet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnet"
        "492":
          description: ClusterSubnetGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSubnetGroupNotFoundFault"
        "493":
          description: UnauthorizedOperation
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperation"
        "494":
          description: HsmClientCertificateNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmClientCertificateNotFoundFault"
        "495":
          description: HsmConfigurationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HsmConfigurationNotFoundFault"
        "496":
          description: InvalidElasticIpFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidElasticIpFault"
        "497":
          description: ClusterParameterGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterParameterGroupNotFoundFault"
        "498":
          description: ClusterSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSecurityGroupNotFoundFault"
        "499":
          description: LimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "500":
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DependentServiceRequestThrottlingFault"
        "501":
          description: InvalidClusterTrackFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterTrackFault"
        "502":
          description: SnapshotScheduleNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SnapshotScheduleNotFoundFault"
        "503":
          description: TagLimitExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TagLimitExceededFault"
        "504":
          description: InvalidTagFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTagFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RestoreFromClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterIdentifier:
                  description: <p>The identifier of the cluster that will be created from
                    restoring the snapshot.</p> <p>Constraints:</p> <ul> <li>
                    <p>Must contain from 1 to 63 alphanumeric characters or
                    hyphens.</p> </li> <li> <p>Alphabetic characters must be
                    lowercase.</p> </li> <li> <p>First character must be a
                    letter.</p> </li> <li> <p>Cannot end with a hyphen or
                    contain two consecutive hyphens.</p> </li> <li> <p>Must be
                    unique for all clusters within an AWS account.</p> </li>
                    </ul>
                  type: string
                SnapshotIdentifier:
                  description: "<p>The name of the snapshot from which to create the new
                    cluster. This parameter isn't case sensitive.</p>
                    <p>Example: <code>my-snapshot-id</code> </p>"
                  type: string
                SnapshotClusterIdentifier:
                  description: The name of the cluster the source snapshot was created
                    from. This parameter is required if your IAM user has a
                    policy containing a snapshot resource element that specifies
                    anything other than * for the cluster name.
                  type: string
                Port:
                  description: "<p>The port number on which the cluster accepts
                    connections.</p> <p>Default: The same port as the original
                    cluster.</p> <p>Constraints: Must be between
                    <code>1115</code> and <code>65535</code>.</p>"
                  type: integer
                AvailabilityZone:
                  description: "<p>The Amazon EC2 Availability Zone in which to restore the
                    cluster.</p> <p>Default: A random, system-chosen
                    Availability Zone.</p> <p>Example: <code>us-east-1a</code>
                    </p>"
                  type: string
                AllowVersionUpgrade:
                  description: "<p>If <code>true</code>, major version upgrades can be
                    applied during the maintenance window to the Amazon Redshift
                    engine that is running on the cluster. </p> <p>Default:
                    <code>true</code> </p>"
                  type: boolean
                ClusterSubnetGroupName:
                  description: <p>The name of the subnet group where you want to cluster
                    restored.</p> <p>A snapshot of cluster in VPC can be
                    restored only in VPC. Therefore, you must provide subnet
                    group name where you want the cluster restored.</p>
                  type: string
                PubliclyAccessible:
                  description: "If <code>true</code>, the cluster can be accessed from a
                    public network. "
                  type: boolean
                OwnerAccount:
                  description: The AWS customer account used to create or copy the
                    snapshot. Required if you are restoring a snapshot you do
                    not own, optional if you own the snapshot.
                  type: string
                HsmClientCertificateIdentifier:
                  description: Specifies the name of the HSM client certificate the Amazon
                    Redshift cluster uses to retrieve the data encryption keys
                    stored in an HSM.
                  type: string
                HsmConfigurationIdentifier:
                  description: Specifies the name of the HSM configuration that contains
                    the information the Amazon Redshift cluster can use to
                    retrieve and store keys in an HSM.
                  type: string
                ElasticIp:
                  description: The elastic IP (EIP) address for the cluster.
                  type: string
                ClusterParameterGroupName:
                  description: '<p>The name of the parameter group to be associated with
                    this cluster.</p> <p>Default: The default Amazon Redshift
                    cluster parameter group. For information about the default
                    parameter group, go to <a
                    href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-parameter-groups.html">Working
                    with Amazon Redshift Parameter Groups</a>.</p>
                    <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255
                    alphanumeric characters or hyphens.</p> </li> <li> <p>First
                    character must be a letter.</p> </li> <li> <p>Cannot end
                    with a hyphen or contain two consecutive hyphens.</p> </li>
                    </ul>'
                  type: string
                ClusterSecurityGroups:
                  description: "<p>A list of security groups to be associated with this
                    cluster.</p> <p>Default: The default cluster security group
                    for Amazon Redshift.</p> <p>Cluster security groups only
                    apply to clusters outside of VPCs.</p>"
                  type: array
                  items:
                    type: string
                VpcSecurityGroupIds:
                  description: "<p>A list of Virtual Private Cloud (VPC) security groups to
                    be associated with the cluster.</p> <p>Default: The default
                    VPC security group is associated with the cluster.</p>
                    <p>VPC security groups only apply to clusters in VPCs.</p>"
                  type: array
                  items:
                    type: string
                PreferredMaintenanceWindow:
                  description: '<p>The weekly time range (in UTC) during which automated
                    cluster maintenance can occur.</p> <p> Format:
                    <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p> Default: The
                    value selected for the cluster from which the snapshot was
                    taken. For more information about the time blocks for each
                    region, see <a
                    href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html#rs-maintenance-windows">Maintenance
                    Windows</a> in Amazon Redshift Cluster Management Guide.
                    </p> <p>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat |
                    Sun</p> <p>Constraints: Minimum 30-minute window.</p>'
                  type: string
                AutomatedSnapshotRetentionPeriod:
                  description: "<p>The number of days that automated snapshots are
                    retained. If the value is 0, automated snapshots are
                    disabled. Even if automated snapshots are disabled, you can
                    still create manual snapshots when you want with
                    <a>CreateClusterSnapshot</a>. </p> <p>Default: The value
                    selected for the cluster from which the snapshot was
                    taken.</p> <p>Constraints: Must be a value from 0 to
                    35.</p>"
                  type: integer
                ManualSnapshotRetentionPeriod:
                  description: <p>The default number of days to retain a manual snapshot.
                    If the value is -1, the snapshot is retained indefinitely.
                    This setting doesn't change the retention period of existing
                    snapshots.</p> <p>The value must be either -1 or an integer
                    between 1 and 3,653.</p>
                  type: integer
                KmsKeyId:
                  description: The AWS Key Management Service (KMS) key ID of the
                    encryption key that you want to use to encrypt data in the
                    cluster that you restore from a shared snapshot.
                  type: string
                NodeType:
                  description: "<p>The node type that the restored cluster will be
                    provisioned with.</p> <p>Default: The node type of the
                    cluster from which the snapshot was taken. You can modify
                    this if you are using any DS node type. In that case, you
                    can choose to restore into another DS node type of the same
                    size. For example, you can restore ds1.8xlarge into
                    ds2.8xlarge, or ds1.xlarge into ds2.xlarge. If you have a DC
                    instance type, you must restore into that same instance type
                    and size. In other words, you can only restore a dc1.large
                    instance type into another dc1.large instance type or
                    dc2.large instance type. You can't restore dc1.8xlarge to
                    dc2.8xlarge. First restore to a dc1.8xlareg cluster, then
                    resize to a dc2.8large cluster. For more information about
                    node types, see <a
                    href=\"https://docs.aws.amazon.com/redshift/latest/mgmt/wor\
                    king-with-clusters.html#rs-about-clusters-and-nodes\"> About
                    Clusters and Nodes</a> in the <i>Amazon Redshift Cluster
                    Management Guide</i>. </p>"
                  type: string
                EnhancedVpcRouting:
                  description: '<p>An option that specifies whether to create the cluster
                    with enhanced VPC routing enabled. To create a cluster that
                    uses enhanced VPC routing, the cluster must be in a VPC. For
                    more information, see <a
                    href="https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-routing.html">Enhanced
                    VPC Routing</a> in the Amazon Redshift Cluster Management
                    Guide.</p> <p>If this option is <code>true</code>, enhanced
                    VPC routing is enabled. </p> <p>Default: false</p>'
                  type: boolean
                AdditionalInfo:
                  description: Reserved.
                  type: string
                IamRoles:
                  description: <p>A list of AWS Identity and Access Management (IAM) roles
                    that can be used by the cluster to access other AWS
                    services. You must supply the IAM roles in their Amazon
                    Resource Name (ARN) format. You can supply up to 10 IAM
                    roles in a single request.</p> <p>A cluster can have up to
                    10 IAM roles associated at any time.</p>
                  type: array
                  items:
                    type: string
                MaintenanceTrackName:
                  description: The name of the maintenance track for the restored cluster.
                    When you take a snapshot, the snapshot inherits the
                    <code>MaintenanceTrack</code> value from the cluster. The
                    snapshot might be on a different track than the cluster that
                    was the source for the snapshot. For example, suppose that
                    you take a snapshot of a cluster that is on the current
                    track and then change the cluster to be on the trailing
                    track. In this case, the snapshot and the source cluster are
                    on different tracks.
                  type: string
                SnapshotScheduleIdentifier:
                  description: A unique identifier for the snapshot schedule.
                  type: string
                NumberOfNodes:
                  description: The number of nodes specified when provisioning the restored
                    cluster.
                  type: integer
              required:
                - ClusterIdentifier
                - SnapshotIdentifier
  /#Action=RestoreTableFromClusterSnapshot:
    get:
      x-aws-operation-name: RestoreTableFromClusterSnapshot
      operationId: GET RestoreTableFromClusterSnapshot
      description: <p>Creates a new table from a table in an Amazon Redshift cluster
        snapshot. You must create the new table within the Amazon Redshift
        cluster that the snapshot was taken from.</p> <p>You cannot use
        <code>RestoreTableFromClusterSnapshot</code> to restore a table with the
        same name as an existing table in an Amazon Redshift cluster. That is,
        you cannot overwrite an existing table in a cluster with a restored
        table. If you want to replace your original table with a new, restored
        table, then rename or drop your original table before you call
        <code>RestoreTableFromClusterSnapshot</code>. When you have renamed your
        original table, then you can pass the original name of the table as the
        <code>NewTableName</code> parameter value in the call to
        <code>RestoreTableFromClusterSnapshot</code>. This way, you can replace
        the original table with the table created from the snapshot.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RestoreTableFromClusterSnapshotResult"
        "480":
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotNotFoundFault"
        "481":
          description: InProgressTableRestoreQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InProgressTableRestoreQuotaExceededFault"
        "482":
          description: InvalidClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSnapshotStateFault"
        "483":
          description: InvalidTableRestoreArgumentFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTableRestoreArgumentFault"
        "484":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "485":
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterStateFault"
        "486":
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationFault"
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: The identifier of the Amazon Redshift cluster to restore the table
            to.
          schema:
            type: string
        - name: SnapshotIdentifier
          in: query
          required: true
          description: The identifier of the snapshot to restore the table from. This
            snapshot must have been created from the Amazon Redshift cluster
            specified by the <code>ClusterIdentifier</code> parameter.
          schema:
            type: string
        - name: SourceDatabaseName
          in: query
          required: true
          description: The name of the source database that contains the table to restore
            from.
          schema:
            type: string
        - name: SourceSchemaName
          in: query
          required: false
          description: The name of the source schema that contains the table to restore
            from. If you do not specify a <code>SourceSchemaName</code> value,
            the default is <code>public</code>.
          schema:
            type: string
        - name: SourceTableName
          in: query
          required: true
          description: The name of the source table to restore from.
          schema:
            type: string
        - name: TargetDatabaseName
          in: query
          required: false
          description: The name of the database to restore the table to.
          schema:
            type: string
        - name: TargetSchemaName
          in: query
          required: false
          description: The name of the schema to restore the table to.
          schema:
            type: string
        - name: NewTableName
          in: query
          required: true
          description: The name of the table to create as a result of the current request.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RestoreTableFromClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RestoreTableFromClusterSnapshot
      operationId: POST RestoreTableFromClusterSnapshot
      description: <p>Creates a new table from a table in an Amazon Redshift cluster
        snapshot. You must create the new table within the Amazon Redshift
        cluster that the snapshot was taken from.</p> <p>You cannot use
        <code>RestoreTableFromClusterSnapshot</code> to restore a table with the
        same name as an existing table in an Amazon Redshift cluster. That is,
        you cannot overwrite an existing table in a cluster with a restored
        table. If you want to replace your original table with a new, restored
        table, then rename or drop your original table before you call
        <code>RestoreTableFromClusterSnapshot</code>. When you have renamed your
        original table, then you can pass the original name of the table as the
        <code>NewTableName</code> parameter value in the call to
        <code>RestoreTableFromClusterSnapshot</code>. This way, you can replace
        the original table with the table created from the snapshot.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RestoreTableFromClusterSnapshotResult"
        "480":
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotNotFoundFault"
        "481":
          description: InProgressTableRestoreQuotaExceededFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InProgressTableRestoreQuotaExceededFault"
        "482":
          description: InvalidClusterSnapshotStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSnapshotStateFault"
        "483":
          description: InvalidTableRestoreArgumentFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTableRestoreArgumentFault"
        "484":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "485":
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterStateFault"
        "486":
          description: UnsupportedOperationFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedOperationFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RestoreTableFromClusterSnapshot
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterIdentifier:
                  description: The identifier of the Amazon Redshift cluster to restore the
                    table to.
                  type: string
                SnapshotIdentifier:
                  description: The identifier of the snapshot to restore the table from.
                    This snapshot must have been created from the Amazon
                    Redshift cluster specified by the
                    <code>ClusterIdentifier</code> parameter.
                  type: string
                SourceDatabaseName:
                  description: The name of the source database that contains the table to
                    restore from.
                  type: string
                SourceSchemaName:
                  description: The name of the source schema that contains the table to
                    restore from. If you do not specify a
                    <code>SourceSchemaName</code> value, the default is
                    <code>public</code>.
                  type: string
                SourceTableName:
                  description: The name of the source table to restore from.
                  type: string
                TargetDatabaseName:
                  description: The name of the database to restore the table to.
                  type: string
                TargetSchemaName:
                  description: The name of the schema to restore the table to.
                  type: string
                NewTableName:
                  description: The name of the table to create as a result of the current
                    request.
                  type: string
              required:
                - ClusterIdentifier
                - SnapshotIdentifier
                - SourceDatabaseName
                - SourceTableName
                - NewTableName
  /#Action=RevokeClusterSecurityGroupIngress:
    get:
      x-aws-operation-name: RevokeClusterSecurityGroupIngress
      operationId: GET RevokeClusterSecurityGroupIngress
      description: 'Revokes an ingress rule in an Amazon Redshift security group for a
        previously authorized IP range or Amazon EC2 security group. To add an
        ingress rule, see <a>AuthorizeClusterSecurityGroupIngress</a>. For
        information about managing security groups, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Amazon
        Redshift Cluster Security Groups</a> in the <i>Amazon Redshift Cluster
        Management Guide</i>. '
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RevokeClusterSecurityGroupIngressResult"
        "480":
          description: ClusterSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSecurityGroupNotFoundFault"
        "481":
          description: AuthorizationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationNotFoundFault"
        "482":
          description: InvalidClusterSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSecurityGroupStateFault"
      parameters:
        - name: ClusterSecurityGroupName
          in: query
          required: true
          description: The name of the security Group from which to revoke the ingress rule.
          schema:
            type: string
        - name: CIDRIP
          in: query
          required: false
          description: "The IP range for which to revoke access. This range must be a valid
            Classless Inter-Domain Routing (CIDR) block of IP addresses. If
            <code>CIDRIP</code> is specified, <code>EC2SecurityGroupName</code>
            and <code>EC2SecurityGroupOwnerId</code> cannot be provided. "
          schema:
            type: string
        - name: EC2SecurityGroupName
          in: query
          required: false
          description: "The name of the EC2 Security Group whose access is to be revoked.
            If <code>EC2SecurityGroupName</code> is specified,
            <code>EC2SecurityGroupOwnerId</code> must also be provided and
            <code>CIDRIP</code> cannot be provided. "
          schema:
            type: string
        - name: EC2SecurityGroupOwnerId
          in: query
          required: false
          description: "<p>The AWS account number of the owner of the security group
            specified in the <code>EC2SecurityGroupName</code> parameter. The
            AWS access key ID is not an acceptable value. If
            <code>EC2SecurityGroupOwnerId</code> is specified,
            <code>EC2SecurityGroupName</code> must also be provided. and
            <code>CIDRIP</code> cannot be provided. </p> <p>Example:
            <code>111122223333</code> </p>"
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RevokeClusterSecurityGroupIngress
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RevokeClusterSecurityGroupIngress
      operationId: POST RevokeClusterSecurityGroupIngress
      description: 'Revokes an ingress rule in an Amazon Redshift security group for a
        previously authorized IP range or Amazon EC2 security group. To add an
        ingress rule, see <a>AuthorizeClusterSecurityGroupIngress</a>. For
        information about managing security groups, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html">Amazon
        Redshift Cluster Security Groups</a> in the <i>Amazon Redshift Cluster
        Management Guide</i>. '
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RevokeClusterSecurityGroupIngressResult"
        "480":
          description: ClusterSecurityGroupNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSecurityGroupNotFoundFault"
        "481":
          description: AuthorizationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationNotFoundFault"
        "482":
          description: InvalidClusterSecurityGroupStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterSecurityGroupStateFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RevokeClusterSecurityGroupIngress
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterSecurityGroupName:
                  description: The name of the security Group from which to revoke the
                    ingress rule.
                  type: string
                CIDRIP:
                  description: "The IP range for which to revoke access. This range must be
                    a valid Classless Inter-Domain Routing (CIDR) block of IP
                    addresses. If <code>CIDRIP</code> is specified,
                    <code>EC2SecurityGroupName</code> and
                    <code>EC2SecurityGroupOwnerId</code> cannot be provided. "
                  type: string
                EC2SecurityGroupName:
                  description: "The name of the EC2 Security Group whose access is to be
                    revoked. If <code>EC2SecurityGroupName</code> is specified,
                    <code>EC2SecurityGroupOwnerId</code> must also be provided
                    and <code>CIDRIP</code> cannot be provided. "
                  type: string
                EC2SecurityGroupOwnerId:
                  description: "<p>The AWS account number of the owner of the security
                    group specified in the <code>EC2SecurityGroupName</code>
                    parameter. The AWS access key ID is not an acceptable value.
                    If <code>EC2SecurityGroupOwnerId</code> is specified,
                    <code>EC2SecurityGroupName</code> must also be provided. and
                    <code>CIDRIP</code> cannot be provided. </p> <p>Example:
                    <code>111122223333</code> </p>"
                  type: string
              required:
                - ClusterSecurityGroupName
  /#Action=RevokeSnapshotAccess:
    get:
      x-aws-operation-name: RevokeSnapshotAccess
      operationId: GET RevokeSnapshotAccess
      description: <p>Removes the ability of the specified AWS customer account to restore
        the specified snapshot. If the account is currently restoring the
        snapshot, the restore will run to completion.</p> <p> For more
        information about working with snapshots, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon
        Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RevokeSnapshotAccessResult"
        "480":
          description: AccessToSnapshotDeniedFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessToSnapshotDeniedFault"
        "481":
          description: AuthorizationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationNotFoundFault"
        "482":
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotNotFoundFault"
      parameters:
        - name: SnapshotIdentifier
          in: query
          required: true
          description: The identifier of the snapshot that the account can no longer access.
          schema:
            type: string
        - name: SnapshotClusterIdentifier
          in: query
          required: false
          description: The identifier of the cluster the snapshot was created from. This
            parameter is required if your IAM user has a policy containing a
            snapshot resource element that specifies anything other than * for
            the cluster name.
          schema:
            type: string
        - name: AccountWithRestoreAccess
          in: query
          required: true
          description: The identifier of the AWS customer account that can no longer
            restore the specified snapshot.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RevokeSnapshotAccess
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RevokeSnapshotAccess
      operationId: POST RevokeSnapshotAccess
      description: <p>Removes the ability of the specified AWS customer account to restore
        the specified snapshot. If the account is currently restoring the
        snapshot, the restore will run to completion.</p> <p> For more
        information about working with snapshots, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-snapshots.html">Amazon
        Redshift Snapshots</a> in the <i>Amazon Redshift Cluster Management
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RevokeSnapshotAccessResult"
        "480":
          description: AccessToSnapshotDeniedFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessToSnapshotDeniedFault"
        "481":
          description: AuthorizationNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AuthorizationNotFoundFault"
        "482":
          description: ClusterSnapshotNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterSnapshotNotFoundFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RevokeSnapshotAccess
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SnapshotIdentifier:
                  description: The identifier of the snapshot that the account can no
                    longer access.
                  type: string
                SnapshotClusterIdentifier:
                  description: The identifier of the cluster the snapshot was created from.
                    This parameter is required if your IAM user has a policy
                    containing a snapshot resource element that specifies
                    anything other than * for the cluster name.
                  type: string
                AccountWithRestoreAccess:
                  description: The identifier of the AWS customer account that can no
                    longer restore the specified snapshot.
                  type: string
              required:
                - SnapshotIdentifier
                - AccountWithRestoreAccess
  /#Action=RotateEncryptionKey:
    get:
      x-aws-operation-name: RotateEncryptionKey
      operationId: GET RotateEncryptionKey
      description: Rotates the encryption keys for a cluster.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RotateEncryptionKeyResult"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "481":
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterStateFault"
        "482":
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DependentServiceRequestThrottlingFault"
      parameters:
        - name: ClusterIdentifier
          in: query
          required: true
          description: "<p>The unique identifier of the cluster that you want to rotate the
            encryption keys for.</p> <p>Constraints: Must be the name of valid
            cluster that has encryption enabled.</p>"
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RotateEncryptionKey
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RotateEncryptionKey
      operationId: POST RotateEncryptionKey
      description: Rotates the encryption keys for a cluster.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RotateEncryptionKeyResult"
        "480":
          description: ClusterNotFoundFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ClusterNotFoundFault"
        "481":
          description: InvalidClusterStateFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidClusterStateFault"
        "482":
          description: DependentServiceRequestThrottlingFault
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DependentServiceRequestThrottlingFault"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RotateEncryptionKey
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ClusterIdentifier:
                  description: "<p>The unique identifier of the cluster that you want to
                    rotate the encryption keys for.</p> <p>Constraints: Must be
                    the name of valid cluster that has encryption enabled.</p>"
                  type: string
              required:
                - ClusterIdentifier
servers:
  - url: http://redshift.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Redshift multi-region endpoint
  - url: https://redshift.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Redshift multi-region endpoint
  - url: http://redshift.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Redshift endpoint for China (Beijing) and China (Ningxia)
  - url: https://redshift.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Redshift endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AcceptReservedNodeExchangeOutputMessage:
      type: object
      properties:
        ExchangedReservedNode:
          $ref: "#/components/schemas/ReservedNode"
    ReservedNodeNotFoundFault: {}
    InvalidReservedNodeStateFault: {}
    ReservedNodeAlreadyMigratedFault: {}
    ReservedNodeOfferingNotFoundFault: {}
    UnsupportedOperationFault: {}
    DependentServiceUnavailableFault: {}
    ReservedNodeAlreadyExistsFault: {}
    AuthorizeClusterSecurityGroupIngressResult:
      type: object
      properties:
        ClusterSecurityGroup:
          $ref: "#/components/schemas/ClusterSecurityGroup"
    ClusterSecurityGroupNotFoundFault: {}
    InvalidClusterSecurityGroupStateFault: {}
    AuthorizationAlreadyExistsFault: {}
    AuthorizationQuotaExceededFault: {}
    AuthorizeSnapshotAccessResult:
      type: object
      properties:
        Snapshot:
          $ref: "#/components/schemas/Snapshot"
    ClusterSnapshotNotFoundFault: {}
    DependentServiceRequestThrottlingFault: {}
    InvalidClusterSnapshotStateFault: {}
    LimitExceededFault: {}
    BatchDeleteClusterSnapshotsResult:
      type: object
      properties:
        Resources:
          $ref: "#/components/schemas/SnapshotIdentifierList"
        Errors:
          $ref: "#/components/schemas/BatchSnapshotOperationErrorList"
    DeleteClusterSnapshotMessage:
      type: object
      required:
        - SnapshotIdentifier
      properties:
        SnapshotIdentifier:
          $ref: "#/components/schemas/String"
        SnapshotClusterIdentifier:
          $ref: "#/components/schemas/String"
      description: <p/>
    BatchDeleteRequestSizeExceededFault: {}
    BatchModifyClusterSnapshotsOutputMessage:
      type: object
      properties:
        Resources:
          $ref: "#/components/schemas/SnapshotIdentifierList"
        Errors:
          $ref: "#/components/schemas/BatchSnapshotOperationErrors"
    String:
      type: string
    InvalidRetentionPeriodFault: {}
    BatchModifyClusterSnapshotsLimitExceededFault: {}
    ResizeProgressMessage:
      type: object
      properties:
        TargetNodeType:
          $ref: "#/components/schemas/String"
        TargetNumberOfNodes:
          $ref: "#/components/schemas/IntegerOptional"
        TargetClusterType:
          $ref: "#/components/schemas/String"
        Status:
          $ref: "#/components/schemas/String"
        ImportTablesCompleted:
          $ref: "#/components/schemas/ImportTablesCompleted"
        ImportTablesInProgress:
          $ref: "#/components/schemas/ImportTablesInProgress"
        ImportTablesNotStarted:
          $ref: "#/components/schemas/ImportTablesNotStarted"
        AvgResizeRateInMegaBytesPerSecond:
          $ref: "#/components/schemas/DoubleOptional"
        TotalResizeDataInMegaBytes:
          $ref: "#/components/schemas/LongOptional"
        ProgressInMegaBytes:
          $ref: "#/components/schemas/LongOptional"
        ElapsedTimeInSeconds:
          $ref: "#/components/schemas/LongOptional"
        EstimatedTimeToCompletionInSeconds:
          $ref: "#/components/schemas/LongOptional"
        ResizeType:
          $ref: "#/components/schemas/String"
        Message:
          $ref: "#/components/schemas/String"
        TargetEncryptionType:
          $ref: "#/components/schemas/String"
        DataTransferProgressPercent:
          $ref: "#/components/schemas/DoubleOptional"
      description: Describes the result of a cluster resize operation.
    ClusterNotFoundFault: {}
    ResizeNotFoundFault: {}
    InvalidClusterStateFault: {}
    CopyClusterSnapshotResult:
      type: object
      properties:
        Snapshot:
          $ref: "#/components/schemas/Snapshot"
    ClusterSnapshotAlreadyExistsFault: {}
    ClusterSnapshotQuotaExceededFault: {}
    CreateClusterResult:
      type: object
      properties:
        Cluster:
          $ref: "#/components/schemas/Cluster"
    Tag:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/String"
        Value:
          $ref: "#/components/schemas/String"
      description: A tag consisting of a name/value pair for a resource.
    ClusterAlreadyExistsFault: {}
    InsufficientClusterCapacityFault: {}
    ClusterParameterGroupNotFoundFault: {}
    ClusterQuotaExceededFault: {}
    NumberOfNodesQuotaExceededFault: {}
    NumberOfNodesPerClusterLimitExceededFault: {}
    ClusterSubnetGroupNotFoundFault: {}
    InvalidVPCNetworkStateFault: {}
    InvalidClusterSubnetGroupStateFault: {}
    InvalidSubnet: {}
    UnauthorizedOperation: {}
    HsmClientCertificateNotFoundFault: {}
    HsmConfigurationNotFoundFault: {}
    InvalidElasticIpFault: {}
    TagLimitExceededFault: {}
    InvalidTagFault: {}
    InvalidClusterTrackFault: {}
    SnapshotScheduleNotFoundFault: {}
    CreateClusterParameterGroupResult:
      type: object
      properties:
        ClusterParameterGroup:
          $ref: "#/components/schemas/ClusterParameterGroup"
    ClusterParameterGroupQuotaExceededFault: {}
    ClusterParameterGroupAlreadyExistsFault: {}
    CreateClusterSecurityGroupResult:
      type: object
      properties:
        ClusterSecurityGroup:
          $ref: "#/components/schemas/ClusterSecurityGroup"
    ClusterSecurityGroupAlreadyExistsFault: {}
    ClusterSecurityGroupQuotaExceededFault: {}
    CreateClusterSnapshotResult:
      type: object
      properties:
        Snapshot:
          $ref: "#/components/schemas/Snapshot"
    CreateClusterSubnetGroupResult:
      type: object
      properties:
        ClusterSubnetGroup:
          $ref: "#/components/schemas/ClusterSubnetGroup"
    ClusterSubnetGroupAlreadyExistsFault: {}
    ClusterSubnetGroupQuotaExceededFault: {}
    ClusterSubnetQuotaExceededFault: {}
    CreateEventSubscriptionResult:
      type: object
      properties:
        EventSubscription:
          $ref: "#/components/schemas/EventSubscription"
    EventSubscriptionQuotaExceededFault: {}
    SubscriptionAlreadyExistFault: {}
    SNSInvalidTopicFault: {}
    SNSNoAuthorizationFault: {}
    SNSTopicArnNotFoundFault: {}
    SubscriptionEventIdNotFoundFault: {}
    SubscriptionCategoryNotFoundFault: {}
    SubscriptionSeverityNotFoundFault: {}
    SourceNotFoundFault: {}
    CreateHsmClientCertificateResult:
      type: object
      properties:
        HsmClientCertificate:
          $ref: "#/components/schemas/HsmClientCertificate"
    HsmClientCertificateAlreadyExistsFault: {}
    HsmClientCertificateQuotaExceededFault: {}
    CreateHsmConfigurationResult:
      type: object
      properties:
        HsmConfiguration:
          $ref: "#/components/schemas/HsmConfiguration"
    HsmConfigurationAlreadyExistsFault: {}
    HsmConfigurationQuotaExceededFault: {}
    CreateSnapshotCopyGrantResult:
      type: object
      properties:
        SnapshotCopyGrant:
          $ref: "#/components/schemas/SnapshotCopyGrant"
    SnapshotCopyGrantAlreadyExistsFault: {}
    SnapshotCopyGrantQuotaExceededFault: {}
    SnapshotSchedule:
      type: object
      properties:
        ScheduleDefinitions:
          $ref: "#/components/schemas/ScheduleDefinitionList"
        ScheduleIdentifier:
          $ref: "#/components/schemas/String"
        ScheduleDescription:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
        NextInvocations:
          $ref: "#/components/schemas/ScheduledSnapshotTimeList"
        AssociatedClusterCount:
          $ref: "#/components/schemas/IntegerOptional"
        AssociatedClusters:
          $ref: "#/components/schemas/AssociatedClusterList"
      description: "Describes a snapshot schedule. You can set a regular interval for
        creating snapshots of a cluster. You can also schedule snapshots for
        specific dates. "
    SnapshotScheduleAlreadyExistsFault: {}
    InvalidScheduleFault: {}
    SnapshotScheduleQuotaExceededFault: {}
    ScheduleDefinitionTypeUnsupportedFault: {}
    ResourceNotFoundFault: {}
    DeleteClusterResult:
      type: object
      properties:
        Cluster:
          $ref: "#/components/schemas/Cluster"
    InvalidClusterParameterGroupStateFault: {}
    DeleteClusterSnapshotResult:
      type: object
      properties:
        Snapshot:
          $ref: "#/components/schemas/Snapshot"
    InvalidClusterSubnetStateFault: {}
    SubscriptionNotFoundFault: {}
    InvalidSubscriptionStateFault: {}
    InvalidHsmClientCertificateStateFault: {}
    InvalidHsmConfigurationStateFault: {}
    InvalidSnapshotCopyGrantStateFault: {}
    SnapshotCopyGrantNotFoundFault: {}
    InvalidClusterSnapshotScheduleStateFault: {}
    AccountAttributeList:
      type: object
      properties:
        AccountAttributes:
          $ref: "#/components/schemas/AttributeList"
    ClusterDbRevisionsMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        ClusterDbRevisions:
          $ref: "#/components/schemas/ClusterDbRevisionsList"
    ClusterParameterGroupsMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        ParameterGroups:
          $ref: "#/components/schemas/ParameterGroupList"
      description: "Contains the output from the <a>DescribeClusterParameterGroups</a>
        action. "
    ClusterParameterGroupDetails:
      type: object
      properties:
        Parameters:
          $ref: "#/components/schemas/ParametersList"
        Marker:
          $ref: "#/components/schemas/String"
      description: "Contains the output from the <a>DescribeClusterParameters</a> action. "
    ClusterSecurityGroupMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        ClusterSecurityGroups:
          $ref: "#/components/schemas/ClusterSecurityGroups"
      description: <p/>
    SnapshotMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        Snapshots:
          $ref: "#/components/schemas/SnapshotList"
      description: "Contains the output from the <a>DescribeClusterSnapshots</a> action. "
    SnapshotSortingEntity:
      type: object
      required:
        - Attribute
      properties:
        Attribute:
          $ref: "#/components/schemas/SnapshotAttributeToSortBy"
        SortOrder:
          $ref: "#/components/schemas/SortByOrder"
      description: Describes a sorting entity
    ClusterSubnetGroupMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        ClusterSubnetGroups:
          $ref: "#/components/schemas/ClusterSubnetGroups"
      description: "Contains the output from the <a>DescribeClusterSubnetGroups</a> action.
        "
    TrackListMessage:
      type: object
      properties:
        MaintenanceTracks:
          $ref: "#/components/schemas/TrackList"
        Marker:
          $ref: "#/components/schemas/String"
    ClusterVersionsMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        ClusterVersions:
          $ref: "#/components/schemas/ClusterVersionList"
      description: "Contains the output from the <a>DescribeClusterVersions</a> action. "
    ClustersMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        Clusters:
          $ref: "#/components/schemas/ClusterList"
      description: "Contains the output from the <a>DescribeClusters</a> action. "
    DescribeDefaultClusterParametersResult:
      type: object
      properties:
        DefaultClusterParameters:
          $ref: "#/components/schemas/DefaultClusterParameters"
    EventCategoriesMessage:
      type: object
      properties:
        EventCategoriesMapList:
          $ref: "#/components/schemas/EventCategoriesMapList"
      description: <p/>
    EventSubscriptionsMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        EventSubscriptionsList:
          $ref: "#/components/schemas/EventSubscriptionsList"
      description: <p/>
    EventsMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        Events:
          $ref: "#/components/schemas/EventList"
      description: <p/>
    HsmClientCertificateMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        HsmClientCertificates:
          $ref: "#/components/schemas/HsmClientCertificateList"
      description: <p/>
    HsmConfigurationMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        HsmConfigurations:
          $ref: "#/components/schemas/HsmConfigurationList"
      description: <p/>
    LoggingStatus:
      type: object
      properties:
        LoggingEnabled:
          $ref: "#/components/schemas/Boolean"
        BucketName:
          $ref: "#/components/schemas/String"
        S3KeyPrefix:
          $ref: "#/components/schemas/String"
        LastSuccessfulDeliveryTime:
          $ref: "#/components/schemas/TStamp"
        LastFailureTime:
          $ref: "#/components/schemas/TStamp"
        LastFailureMessage:
          $ref: "#/components/schemas/String"
      description: Describes the status of logging for a cluster.
    NodeConfigurationOptionsMessage:
      type: object
      properties:
        NodeConfigurationOptionList:
          $ref: "#/components/schemas/NodeConfigurationOptionList"
        Marker:
          $ref: "#/components/schemas/String"
    NodeConfigurationOptionsFilter:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/NodeConfigurationOptionsFilterName"
        Operator:
          $ref: "#/components/schemas/OperatorType"
        Values:
          $ref: "#/components/schemas/ValueStringList"
      description: A set of elements to filter the returned node configurations.
    OrderableClusterOptionsMessage:
      type: object
      properties:
        OrderableClusterOptions:
          $ref: "#/components/schemas/OrderableClusterOptionsList"
        Marker:
          $ref: "#/components/schemas/String"
      description: "Contains the output from the <a>DescribeOrderableClusterOptions</a>
        action. "
    ReservedNodeOfferingsMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        ReservedNodeOfferings:
          $ref: "#/components/schemas/ReservedNodeOfferingList"
      description: <p/>
    ReservedNodesMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        ReservedNodes:
          $ref: "#/components/schemas/ReservedNodeList"
      description: <p/>
    SnapshotCopyGrantMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        SnapshotCopyGrants:
          $ref: "#/components/schemas/SnapshotCopyGrantList"
      description: <p/>
    DescribeSnapshotSchedulesOutputMessage:
      type: object
      properties:
        SnapshotSchedules:
          $ref: "#/components/schemas/SnapshotScheduleList"
        Marker:
          $ref: "#/components/schemas/String"
    CustomerStorageMessage:
      type: object
      properties:
        TotalBackupSizeInMegaBytes:
          $ref: "#/components/schemas/Double"
        TotalProvisionedStorageInMegaBytes:
          $ref: "#/components/schemas/Double"
    TableRestoreStatusMessage:
      type: object
      properties:
        TableRestoreStatusDetails:
          $ref: "#/components/schemas/TableRestoreStatusList"
        Marker:
          $ref: "#/components/schemas/String"
      description: <p/>
    TableRestoreNotFoundFault: {}
    TaggedResourceListMessage:
      type: object
      properties:
        TaggedResources:
          $ref: "#/components/schemas/TaggedResourceList"
        Marker:
          $ref: "#/components/schemas/String"
      description: <p/>
    DisableSnapshotCopyResult:
      type: object
      properties:
        Cluster:
          $ref: "#/components/schemas/Cluster"
    SnapshotCopyAlreadyDisabledFault: {}
    BucketNotFoundFault: {}
    InsufficientS3BucketPolicyFault: {}
    InvalidS3KeyPrefixFault: {}
    InvalidS3BucketNameFault: {}
    EnableSnapshotCopyResult:
      type: object
      properties:
        Cluster:
          $ref: "#/components/schemas/Cluster"
    IncompatibleOrderableOptions: {}
    CopyToRegionDisabledFault: {}
    SnapshotCopyAlreadyEnabledFault: {}
    UnknownSnapshotCopyRegionFault: {}
    ClusterCredentials:
      type: object
      properties:
        DbUser:
          $ref: "#/components/schemas/String"
        DbPassword:
          $ref: "#/components/schemas/SensitiveString"
        Expiration:
          $ref: "#/components/schemas/TStamp"
      description: "Temporary credentials with authorization to log on to an Amazon
        Redshift database. "
    GetReservedNodeExchangeOfferingsOutputMessage:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/String"
        ReservedNodeOfferings:
          $ref: "#/components/schemas/ReservedNodeOfferingList"
    ModifyClusterResult:
      type: object
      properties:
        Cluster:
          $ref: "#/components/schemas/Cluster"
    UnsupportedOptionFault: {}
    TableLimitExceededFault: {}
    ModifyClusterDbRevisionResult:
      type: object
      properties:
        Cluster:
          $ref: "#/components/schemas/Cluster"
    ClusterOnLatestRevisionFault: {}
    ModifyClusterIamRolesResult:
      type: object
      properties:
        Cluster:
          $ref: "#/components/schemas/Cluster"
    ModifyClusterMaintenanceResult:
      type: object
      properties:
        Cluster:
          $ref: "#/components/schemas/Cluster"
    ClusterParameterGroupNameMessage:
      type: object
      properties:
        ParameterGroupName:
          $ref: "#/components/schemas/String"
        ParameterGroupStatus:
          $ref: "#/components/schemas/String"
      description: <p/>
    Parameter:
      type: object
      properties:
        ParameterName:
          $ref: "#/components/schemas/String"
        ParameterValue:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        Source:
          $ref: "#/components/schemas/String"
        DataType:
          $ref: "#/components/schemas/String"
        AllowedValues:
          $ref: "#/components/schemas/String"
        ApplyType:
          $ref: "#/components/schemas/ParameterApplyType"
        IsModifiable:
          $ref: "#/components/schemas/Boolean"
        MinimumEngineVersion:
          $ref: "#/components/schemas/String"
      description: Describes a parameter in a cluster parameter group.
    ModifyClusterSnapshotResult:
      type: object
      properties:
        Snapshot:
          $ref: "#/components/schemas/Snapshot"
    ModifyClusterSubnetGroupResult:
      type: object
      properties:
        ClusterSubnetGroup:
          $ref: "#/components/schemas/ClusterSubnetGroup"
    SubnetAlreadyInUse: {}
    ModifyEventSubscriptionResult:
      type: object
      properties:
        EventSubscription:
          $ref: "#/components/schemas/EventSubscription"
    ModifySnapshotCopyRetentionPeriodResult:
      type: object
      properties:
        Cluster:
          $ref: "#/components/schemas/Cluster"
    SnapshotCopyDisabledFault: {}
    SnapshotScheduleUpdateInProgressFault: {}
    PurchaseReservedNodeOfferingResult:
      type: object
      properties:
        ReservedNode:
          $ref: "#/components/schemas/ReservedNode"
    ReservedNodeQuotaExceededFault: {}
    RebootClusterResult:
      type: object
      properties:
        Cluster:
          $ref: "#/components/schemas/Cluster"
    ResizeClusterResult:
      type: object
      properties:
        Cluster:
          $ref: "#/components/schemas/Cluster"
    RestoreFromClusterSnapshotResult:
      type: object
      properties:
        Cluster:
          $ref: "#/components/schemas/Cluster"
    AccessToSnapshotDeniedFault: {}
    InvalidRestoreFault: {}
    RestoreTableFromClusterSnapshotResult:
      type: object
      properties:
        TableRestoreStatus:
          $ref: "#/components/schemas/TableRestoreStatus"
    InProgressTableRestoreQuotaExceededFault: {}
    InvalidTableRestoreArgumentFault: {}
    RevokeClusterSecurityGroupIngressResult:
      type: object
      properties:
        ClusterSecurityGroup:
          $ref: "#/components/schemas/ClusterSecurityGroup"
    AuthorizationNotFoundFault: {}
    RevokeSnapshotAccessResult:
      type: object
      properties:
        Snapshot:
          $ref: "#/components/schemas/Snapshot"
    RotateEncryptionKeyResult:
      type: object
      properties:
        Cluster:
          $ref: "#/components/schemas/Cluster"
    AcceptReservedNodeExchangeInputMessage:
      type: object
      required:
        - ReservedNodeId
        - TargetReservedNodeOfferingId
      properties:
        ReservedNodeId:
          $ref: "#/components/schemas/String"
        TargetReservedNodeOfferingId:
          $ref: "#/components/schemas/String"
    ReservedNode:
      type: object
      properties:
        ReservedNodeId:
          $ref: "#/components/schemas/String"
        ReservedNodeOfferingId:
          $ref: "#/components/schemas/String"
        NodeType:
          $ref: "#/components/schemas/String"
        StartTime:
          $ref: "#/components/schemas/TStamp"
        Duration:
          $ref: "#/components/schemas/Integer"
        FixedPrice:
          $ref: "#/components/schemas/Double"
        UsagePrice:
          $ref: "#/components/schemas/Double"
        CurrencyCode:
          $ref: "#/components/schemas/String"
        NodeCount:
          $ref: "#/components/schemas/Integer"
        State:
          $ref: "#/components/schemas/String"
        OfferingType:
          $ref: "#/components/schemas/String"
        RecurringCharges:
          $ref: "#/components/schemas/RecurringChargeList"
        ReservedNodeOfferingType:
          $ref: "#/components/schemas/ReservedNodeOfferingType"
      description: "Describes a reserved node. You can call the
        <a>DescribeReservedNodeOfferings</a> API to obtain the available
        reserved node offerings. "
    AttributeValueList:
      type: array
      items:
        $ref: "#/components/schemas/AttributeValueTarget"
    AccountAttribute:
      type: object
      properties:
        AttributeName:
          $ref: "#/components/schemas/String"
        AttributeValues:
          $ref: "#/components/schemas/AttributeValueList"
      description: "A name value pair that describes an aspect of an account. "
    AttributeList:
      type: array
      items:
        $ref: "#/components/schemas/AccountAttribute"
    AccountWithRestoreAccess:
      type: object
      properties:
        AccountId:
          $ref: "#/components/schemas/String"
        AccountAlias:
          $ref: "#/components/schemas/String"
      description: Describes an AWS customer account authorized to restore a snapshot.
    AccountsWithRestoreAccessList:
      type: array
      items:
        $ref: "#/components/schemas/AccountWithRestoreAccess"
    ActionType:
      type: string
      enum:
        - restore-cluster
    ClusterAssociatedToSchedule:
      type: object
      properties:
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
        ScheduleAssociationState:
          $ref: "#/components/schemas/ScheduleState"
      description: <p/>
    AssociatedClusterList:
      type: array
      items:
        $ref: "#/components/schemas/ClusterAssociatedToSchedule"
    AttributeNameList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    AttributeValueTarget:
      type: object
      properties:
        AttributeValue:
          $ref: "#/components/schemas/String"
      description: Describes an attribute value.
    AuthorizeClusterSecurityGroupIngressMessage:
      type: object
      required:
        - ClusterSecurityGroupName
      properties:
        ClusterSecurityGroupName:
          $ref: "#/components/schemas/String"
        CIDRIP:
          $ref: "#/components/schemas/String"
        EC2SecurityGroupName:
          $ref: "#/components/schemas/String"
        EC2SecurityGroupOwnerId:
          $ref: "#/components/schemas/String"
      description: <p/>
    ClusterSecurityGroup:
      type: object
      properties:
        ClusterSecurityGroupName:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        EC2SecurityGroups:
          $ref: "#/components/schemas/EC2SecurityGroupList"
        IPRanges:
          $ref: "#/components/schemas/IPRangeList"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: Describes a security group.
    AuthorizeSnapshotAccessMessage:
      type: object
      required:
        - SnapshotIdentifier
        - AccountWithRestoreAccess
      properties:
        SnapshotIdentifier:
          $ref: "#/components/schemas/String"
        SnapshotClusterIdentifier:
          $ref: "#/components/schemas/String"
        AccountWithRestoreAccess:
          $ref: "#/components/schemas/String"
      description: <p/>
    Snapshot:
      type: object
      properties:
        SnapshotIdentifier:
          $ref: "#/components/schemas/String"
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
        SnapshotCreateTime:
          $ref: "#/components/schemas/TStamp"
        Status:
          $ref: "#/components/schemas/String"
        Port:
          $ref: "#/components/schemas/Integer"
        AvailabilityZone:
          $ref: "#/components/schemas/String"
        ClusterCreateTime:
          $ref: "#/components/schemas/TStamp"
        MasterUsername:
          $ref: "#/components/schemas/String"
        ClusterVersion:
          $ref: "#/components/schemas/String"
        SnapshotType:
          $ref: "#/components/schemas/String"
        NodeType:
          $ref: "#/components/schemas/String"
        NumberOfNodes:
          $ref: "#/components/schemas/Integer"
        DBName:
          $ref: "#/components/schemas/String"
        VpcId:
          $ref: "#/components/schemas/String"
        Encrypted:
          $ref: "#/components/schemas/Boolean"
        KmsKeyId:
          $ref: "#/components/schemas/String"
        EncryptedWithHSM:
          $ref: "#/components/schemas/Boolean"
        AccountsWithRestoreAccess:
          $ref: "#/components/schemas/AccountsWithRestoreAccessList"
        OwnerAccount:
          $ref: "#/components/schemas/String"
        TotalBackupSizeInMegaBytes:
          $ref: "#/components/schemas/Double"
        ActualIncrementalBackupSizeInMegaBytes:
          $ref: "#/components/schemas/Double"
        BackupProgressInMegaBytes:
          $ref: "#/components/schemas/Double"
        CurrentBackupRateInMegaBytesPerSecond:
          $ref: "#/components/schemas/Double"
        EstimatedSecondsToCompletion:
          $ref: "#/components/schemas/Long"
        ElapsedTimeInSeconds:
          $ref: "#/components/schemas/Long"
        SourceRegion:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
        RestorableNodeTypes:
          $ref: "#/components/schemas/RestorableNodeTypeList"
        EnhancedVpcRouting:
          $ref: "#/components/schemas/Boolean"
        MaintenanceTrackName:
          $ref: "#/components/schemas/String"
        ManualSnapshotRetentionPeriod:
          $ref: "#/components/schemas/IntegerOptional"
        ManualSnapshotRemainingDays:
          $ref: "#/components/schemas/IntegerOptional"
        SnapshotRetentionStartTime:
          $ref: "#/components/schemas/TStamp"
      description: Describes a snapshot.
    SupportedPlatformsList:
      type: array
      items:
        $ref: "#/components/schemas/SupportedPlatform"
    AvailabilityZone:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/String"
        SupportedPlatforms:
          $ref: "#/components/schemas/SupportedPlatformsList"
      description: Describes an availability zone.
    AvailabilityZoneList:
      type: array
      items:
        $ref: "#/components/schemas/AvailabilityZone"
    DeleteClusterSnapshotMessageList:
      type: array
      items:
        $ref: "#/components/schemas/DeleteClusterSnapshotMessage"
    BatchDeleteClusterSnapshotsRequest:
      type: object
      required:
        - Identifiers
      properties:
        Identifiers:
          $ref: "#/components/schemas/DeleteClusterSnapshotMessageList"
    SnapshotIdentifierList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    BatchSnapshotOperationErrorList:
      type: array
      items:
        $ref: "#/components/schemas/SnapshotErrorMessage"
    IntegerOptional:
      type: integer
    Boolean:
      type: boolean
    BatchModifyClusterSnapshotsMessage:
      type: object
      required:
        - SnapshotIdentifierList
      properties:
        SnapshotIdentifierList:
          $ref: "#/components/schemas/SnapshotIdentifierList"
        ManualSnapshotRetentionPeriod:
          $ref: "#/components/schemas/IntegerOptional"
        Force:
          $ref: "#/components/schemas/Boolean"
    BatchSnapshotOperationErrors:
      type: array
      items:
        $ref: "#/components/schemas/SnapshotErrorMessage"
    SnapshotErrorMessage:
      type: object
      properties:
        SnapshotIdentifier:
          $ref: "#/components/schemas/String"
        SnapshotClusterIdentifier:
          $ref: "#/components/schemas/String"
        FailureCode:
          $ref: "#/components/schemas/String"
        FailureReason:
          $ref: "#/components/schemas/String"
      description: Describes the errors returned by a snapshot.
    BooleanOptional:
      type: boolean
    CancelResizeMessage:
      type: object
      required:
        - ClusterIdentifier
      properties:
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
    Endpoint:
      type: object
      properties:
        Address:
          $ref: "#/components/schemas/String"
        Port:
          $ref: "#/components/schemas/Integer"
      description: Describes a connection endpoint.
    TStamp:
      type: string
      format: date-time
    Integer:
      type: integer
    ClusterSecurityGroupMembershipList:
      type: array
      items:
        $ref: "#/components/schemas/ClusterSecurityGroupMembership"
    VpcSecurityGroupMembershipList:
      type: array
      items:
        $ref: "#/components/schemas/VpcSecurityGroupMembership"
    ClusterParameterGroupStatusList:
      type: array
      items:
        $ref: "#/components/schemas/ClusterParameterGroupStatus"
    PendingModifiedValues:
      type: object
      properties:
        MasterUserPassword:
          $ref: "#/components/schemas/String"
        NodeType:
          $ref: "#/components/schemas/String"
        NumberOfNodes:
          $ref: "#/components/schemas/IntegerOptional"
        ClusterType:
          $ref: "#/components/schemas/String"
        ClusterVersion:
          $ref: "#/components/schemas/String"
        AutomatedSnapshotRetentionPeriod:
          $ref: "#/components/schemas/IntegerOptional"
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
        PubliclyAccessible:
          $ref: "#/components/schemas/BooleanOptional"
        EnhancedVpcRouting:
          $ref: "#/components/schemas/BooleanOptional"
        MaintenanceTrackName:
          $ref: "#/components/schemas/String"
        EncryptionType:
          $ref: "#/components/schemas/String"
      description: Describes cluster attributes that are in a pending state. A change to
        one or more the attributes was requested and is in progress or will be
        applied.
    RestoreStatus:
      type: object
      properties:
        Status:
          $ref: "#/components/schemas/String"
        CurrentRestoreRateInMegaBytesPerSecond:
          $ref: "#/components/schemas/Double"
        SnapshotSizeInMegaBytes:
          $ref: "#/components/schemas/Long"
        ProgressInMegaBytes:
          $ref: "#/components/schemas/Long"
        ElapsedTimeInSeconds:
          $ref: "#/components/schemas/Long"
        EstimatedTimeToCompletionInSeconds:
          $ref: "#/components/schemas/Long"
      description: Describes the status of a cluster restore action. Returns null if the
        cluster was not created by restoring a snapshot.
    DataTransferProgress:
      type: object
      properties:
        Status:
          $ref: "#/components/schemas/String"
        CurrentRateInMegaBytesPerSecond:
          $ref: "#/components/schemas/DoubleOptional"
        TotalDataInMegaBytes:
          $ref: "#/components/schemas/Long"
        DataTransferredInMegaBytes:
          $ref: "#/components/schemas/Long"
        EstimatedTimeToCompletionInSeconds:
          $ref: "#/components/schemas/LongOptional"
        ElapsedTimeInSeconds:
          $ref: "#/components/schemas/LongOptional"
      description: Describes the status of a cluster while it is in the process of resizing
        with an incremental resize.
    HsmStatus:
      type: object
      properties:
        HsmClientCertificateIdentifier:
          $ref: "#/components/schemas/String"
        HsmConfigurationIdentifier:
          $ref: "#/components/schemas/String"
        Status:
          $ref: "#/components/schemas/String"
      description: Describes the status of changes to HSM settings.
    ClusterSnapshotCopyStatus:
      type: object
      properties:
        DestinationRegion:
          $ref: "#/components/schemas/String"
        RetentionPeriod:
          $ref: "#/components/schemas/Long"
        ManualSnapshotRetentionPeriod:
          $ref: "#/components/schemas/Integer"
        SnapshotCopyGrantName:
          $ref: "#/components/schemas/String"
      description: Returns the destination region and retention period that are configured
        for cross-region snapshot copy.
    ClusterNodesList:
      type: array
      items:
        $ref: "#/components/schemas/ClusterNode"
    ElasticIpStatus:
      type: object
      properties:
        ElasticIp:
          $ref: "#/components/schemas/String"
        Status:
          $ref: "#/components/schemas/String"
      description: Describes the status of the elastic IP (EIP) address.
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
    ClusterIamRoleList:
      type: array
      items:
        $ref: "#/components/schemas/ClusterIamRole"
    PendingActionsList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    DeferredMaintenanceWindowsList:
      type: array
      items:
        $ref: "#/components/schemas/DeferredMaintenanceWindow"
    ScheduleState:
      type: string
      enum:
        - MODIFYING
        - ACTIVE
        - FAILED
    ResizeInfo:
      type: object
      properties:
        ResizeType:
          $ref: "#/components/schemas/String"
        AllowCancelResize:
          $ref: "#/components/schemas/Boolean"
      description: Describes a resize operation.
    Cluster:
      type: object
      properties:
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
        NodeType:
          $ref: "#/components/schemas/String"
        ClusterStatus:
          $ref: "#/components/schemas/String"
        ClusterAvailabilityStatus:
          $ref: "#/components/schemas/String"
        ModifyStatus:
          $ref: "#/components/schemas/String"
        MasterUsername:
          $ref: "#/components/schemas/String"
        DBName:
          $ref: "#/components/schemas/String"
        Endpoint:
          $ref: "#/components/schemas/Endpoint"
        ClusterCreateTime:
          $ref: "#/components/schemas/TStamp"
        AutomatedSnapshotRetentionPeriod:
          $ref: "#/components/schemas/Integer"
        ManualSnapshotRetentionPeriod:
          $ref: "#/components/schemas/Integer"
        ClusterSecurityGroups:
          $ref: "#/components/schemas/ClusterSecurityGroupMembershipList"
        VpcSecurityGroups:
          $ref: "#/components/schemas/VpcSecurityGroupMembershipList"
        ClusterParameterGroups:
          $ref: "#/components/schemas/ClusterParameterGroupStatusList"
        ClusterSubnetGroupName:
          $ref: "#/components/schemas/String"
        VpcId:
          $ref: "#/components/schemas/String"
        AvailabilityZone:
          $ref: "#/components/schemas/String"
        PreferredMaintenanceWindow:
          $ref: "#/components/schemas/String"
        PendingModifiedValues:
          $ref: "#/components/schemas/PendingModifiedValues"
        ClusterVersion:
          $ref: "#/components/schemas/String"
        AllowVersionUpgrade:
          $ref: "#/components/schemas/Boolean"
        NumberOfNodes:
          $ref: "#/components/schemas/Integer"
        PubliclyAccessible:
          $ref: "#/components/schemas/Boolean"
        Encrypted:
          $ref: "#/components/schemas/Boolean"
        RestoreStatus:
          $ref: "#/components/schemas/RestoreStatus"
        DataTransferProgress:
          $ref: "#/components/schemas/DataTransferProgress"
        HsmStatus:
          $ref: "#/components/schemas/HsmStatus"
        ClusterSnapshotCopyStatus:
          $ref: "#/components/schemas/ClusterSnapshotCopyStatus"
        ClusterPublicKey:
          $ref: "#/components/schemas/String"
        ClusterNodes:
          $ref: "#/components/schemas/ClusterNodesList"
        ElasticIpStatus:
          $ref: "#/components/schemas/ElasticIpStatus"
        ClusterRevisionNumber:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
        KmsKeyId:
          $ref: "#/components/schemas/String"
        EnhancedVpcRouting:
          $ref: "#/components/schemas/Boolean"
        IamRoles:
          $ref: "#/components/schemas/ClusterIamRoleList"
        PendingActions:
          $ref: "#/components/schemas/PendingActionsList"
        MaintenanceTrackName:
          $ref: "#/components/schemas/String"
        ElasticResizeNumberOfNodeOptions:
          $ref: "#/components/schemas/String"
        DeferredMaintenanceWindows:
          $ref: "#/components/schemas/DeferredMaintenanceWindowsList"
        SnapshotScheduleIdentifier:
          $ref: "#/components/schemas/String"
        SnapshotScheduleState:
          $ref: "#/components/schemas/ScheduleState"
        ExpectedNextSnapshotScheduleTime:
          $ref: "#/components/schemas/TStamp"
        ExpectedNextSnapshotScheduleTimeStatus:
          $ref: "#/components/schemas/String"
        NextMaintenanceWindowStartTime:
          $ref: "#/components/schemas/TStamp"
        ResizeInfo:
          $ref: "#/components/schemas/ResizeInfo"
      description: Describes a cluster.
    SensitiveString:
      type: string
      format: password
    RevisionTargetsList:
      type: array
      items:
        $ref: "#/components/schemas/RevisionTarget"
    ClusterDbRevision:
      type: object
      properties:
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
        CurrentDatabaseRevision:
          $ref: "#/components/schemas/String"
        DatabaseRevisionReleaseDate:
          $ref: "#/components/schemas/TStamp"
        RevisionTargets:
          $ref: "#/components/schemas/RevisionTargetsList"
      description: Describes a <code>ClusterDbRevision</code>.
    ClusterDbRevisionsList:
      type: array
      items:
        $ref: "#/components/schemas/ClusterDbRevision"
    ClusterIamRole:
      type: object
      properties:
        IamRoleArn:
          $ref: "#/components/schemas/String"
        ApplyStatus:
          $ref: "#/components/schemas/String"
      description: An AWS Identity and Access Management (IAM) role that can be used by the
        associated Amazon Redshift cluster to access other AWS services.
    ClusterList:
      type: array
      items:
        $ref: "#/components/schemas/Cluster"
    ClusterNode:
      type: object
      properties:
        NodeRole:
          $ref: "#/components/schemas/String"
        PrivateIPAddress:
          $ref: "#/components/schemas/String"
        PublicIPAddress:
          $ref: "#/components/schemas/String"
      description: The identifier of a node in a cluster.
    ClusterParameterGroup:
      type: object
      properties:
        ParameterGroupName:
          $ref: "#/components/schemas/String"
        ParameterGroupFamily:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: Describes a parameter group.
    ParametersList:
      type: array
      items:
        $ref: "#/components/schemas/Parameter"
    ClusterParameterStatusList:
      type: array
      items:
        $ref: "#/components/schemas/ClusterParameterStatus"
    ClusterParameterGroupStatus:
      type: object
      properties:
        ParameterGroupName:
          $ref: "#/components/schemas/String"
        ParameterApplyStatus:
          $ref: "#/components/schemas/String"
        ClusterParameterStatusList:
          $ref: "#/components/schemas/ClusterParameterStatusList"
      description: Describes the status of a parameter group.
    ParameterGroupList:
      type: array
      items:
        $ref: "#/components/schemas/ClusterParameterGroup"
    ClusterParameterStatus:
      type: object
      properties:
        ParameterName:
          $ref: "#/components/schemas/String"
        ParameterApplyStatus:
          $ref: "#/components/schemas/String"
        ParameterApplyErrorDescription:
          $ref: "#/components/schemas/String"
      description: Describes the status of a parameter group.
    EC2SecurityGroupList:
      type: array
      items:
        $ref: "#/components/schemas/EC2SecurityGroup"
    IPRangeList:
      type: array
      items:
        $ref: "#/components/schemas/IPRange"
    ClusterSecurityGroupMembership:
      type: object
      properties:
        ClusterSecurityGroupName:
          $ref: "#/components/schemas/String"
        Status:
          $ref: "#/components/schemas/String"
      description: Describes a cluster security group.
    ClusterSecurityGroups:
      type: array
      items:
        $ref: "#/components/schemas/ClusterSecurityGroup"
    ClusterSecurityGroupNameList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    Long:
      type: integer
    SubnetList:
      type: array
      items:
        $ref: "#/components/schemas/Subnet"
    ClusterSubnetGroup:
      type: object
      properties:
        ClusterSubnetGroupName:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        VpcId:
          $ref: "#/components/schemas/String"
        SubnetGroupStatus:
          $ref: "#/components/schemas/String"
        Subnets:
          $ref: "#/components/schemas/SubnetList"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: Describes a subnet group.
    ClusterSubnetGroups:
      type: array
      items:
        $ref: "#/components/schemas/ClusterSubnetGroup"
    ClusterVersion:
      type: object
      properties:
        ClusterVersion:
          $ref: "#/components/schemas/String"
        ClusterParameterGroupFamily:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
      description: Describes a cluster version, including the parameter group family and
        description of the version.
    ClusterVersionList:
      type: array
      items:
        $ref: "#/components/schemas/ClusterVersion"
    CopyClusterSnapshotMessage:
      type: object
      required:
        - SourceSnapshotIdentifier
        - TargetSnapshotIdentifier
      properties:
        SourceSnapshotIdentifier:
          $ref: "#/components/schemas/String"
        SourceSnapshotClusterIdentifier:
          $ref: "#/components/schemas/String"
        TargetSnapshotIdentifier:
          $ref: "#/components/schemas/String"
        ManualSnapshotRetentionPeriod:
          $ref: "#/components/schemas/IntegerOptional"
      description: <p/>
    VpcSecurityGroupIdList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    IamRoleArnList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    CreateClusterMessage:
      type: object
      required:
        - ClusterIdentifier
        - NodeType
        - MasterUsername
        - MasterUserPassword
      properties:
        DBName:
          $ref: "#/components/schemas/String"
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
        ClusterType:
          $ref: "#/components/schemas/String"
        NodeType:
          $ref: "#/components/schemas/String"
        MasterUsername:
          $ref: "#/components/schemas/String"
        MasterUserPassword:
          $ref: "#/components/schemas/String"
        ClusterSecurityGroups:
          $ref: "#/components/schemas/ClusterSecurityGroupNameList"
        VpcSecurityGroupIds:
          $ref: "#/components/schemas/VpcSecurityGroupIdList"
        ClusterSubnetGroupName:
          $ref: "#/components/schemas/String"
        AvailabilityZone:
          $ref: "#/components/schemas/String"
        PreferredMaintenanceWindow:
          $ref: "#/components/schemas/String"
        ClusterParameterGroupName:
          $ref: "#/components/schemas/String"
        AutomatedSnapshotRetentionPeriod:
          $ref: "#/components/schemas/IntegerOptional"
        ManualSnapshotRetentionPeriod:
          $ref: "#/components/schemas/IntegerOptional"
        Port:
          $ref: "#/components/schemas/IntegerOptional"
        ClusterVersion:
          $ref: "#/components/schemas/String"
        AllowVersionUpgrade:
          $ref: "#/components/schemas/BooleanOptional"
        NumberOfNodes:
          $ref: "#/components/schemas/IntegerOptional"
        PubliclyAccessible:
          $ref: "#/components/schemas/BooleanOptional"
        Encrypted:
          $ref: "#/components/schemas/BooleanOptional"
        HsmClientCertificateIdentifier:
          $ref: "#/components/schemas/String"
        HsmConfigurationIdentifier:
          $ref: "#/components/schemas/String"
        ElasticIp:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
        KmsKeyId:
          $ref: "#/components/schemas/String"
        EnhancedVpcRouting:
          $ref: "#/components/schemas/BooleanOptional"
        AdditionalInfo:
          $ref: "#/components/schemas/String"
        IamRoles:
          $ref: "#/components/schemas/IamRoleArnList"
        MaintenanceTrackName:
          $ref: "#/components/schemas/String"
        SnapshotScheduleIdentifier:
          $ref: "#/components/schemas/String"
      description: <p/>
    CreateClusterParameterGroupMessage:
      type: object
      required:
        - ParameterGroupName
        - ParameterGroupFamily
        - Description
      properties:
        ParameterGroupName:
          $ref: "#/components/schemas/String"
        ParameterGroupFamily:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: <p/>
    CreateClusterSecurityGroupMessage:
      type: object
      required:
        - ClusterSecurityGroupName
        - Description
      properties:
        ClusterSecurityGroupName:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: <p/>
    CreateClusterSnapshotMessage:
      type: object
      required:
        - SnapshotIdentifier
        - ClusterIdentifier
      properties:
        SnapshotIdentifier:
          $ref: "#/components/schemas/String"
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
        ManualSnapshotRetentionPeriod:
          $ref: "#/components/schemas/IntegerOptional"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: <p/>
    SubnetIdentifierList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    CreateClusterSubnetGroupMessage:
      type: object
      required:
        - ClusterSubnetGroupName
        - Description
        - SubnetIds
      properties:
        ClusterSubnetGroupName:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        SubnetIds:
          $ref: "#/components/schemas/SubnetIdentifierList"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: <p/>
    SourceIdsList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    EventCategoriesList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    CreateEventSubscriptionMessage:
      type: object
      required:
        - SubscriptionName
        - SnsTopicArn
      properties:
        SubscriptionName:
          $ref: "#/components/schemas/String"
        SnsTopicArn:
          $ref: "#/components/schemas/String"
        SourceType:
          $ref: "#/components/schemas/String"
        SourceIds:
          $ref: "#/components/schemas/SourceIdsList"
        EventCategories:
          $ref: "#/components/schemas/EventCategoriesList"
        Severity:
          $ref: "#/components/schemas/String"
        Enabled:
          $ref: "#/components/schemas/BooleanOptional"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: <p/>
    EventSubscription:
      type: object
      properties:
        CustomerAwsId:
          $ref: "#/components/schemas/String"
        CustSubscriptionId:
          $ref: "#/components/schemas/String"
        SnsTopicArn:
          $ref: "#/components/schemas/String"
        Status:
          $ref: "#/components/schemas/String"
        SubscriptionCreationTime:
          $ref: "#/components/schemas/TStamp"
        SourceType:
          $ref: "#/components/schemas/String"
        SourceIdsList:
          $ref: "#/components/schemas/SourceIdsList"
        EventCategoriesList:
          $ref: "#/components/schemas/EventCategoriesList"
        Severity:
          $ref: "#/components/schemas/String"
        Enabled:
          $ref: "#/components/schemas/Boolean"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: Describes event subscriptions.
    CreateHsmClientCertificateMessage:
      type: object
      required:
        - HsmClientCertificateIdentifier
      properties:
        HsmClientCertificateIdentifier:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: <p/>
    HsmClientCertificate:
      type: object
      properties:
        HsmClientCertificateIdentifier:
          $ref: "#/components/schemas/String"
        HsmClientCertificatePublicKey:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: Returns information about an HSM client certificate. The certificate is
        stored in a secure Hardware Storage Module (HSM), and used by the Amazon
        Redshift cluster to encrypt data files.
    CreateHsmConfigurationMessage:
      type: object
      required:
        - HsmConfigurationIdentifier
        - Description
        - HsmIpAddress
        - HsmPartitionName
        - HsmPartitionPassword
        - HsmServerPublicCertificate
      properties:
        HsmConfigurationIdentifier:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        HsmIpAddress:
          $ref: "#/components/schemas/String"
        HsmPartitionName:
          $ref: "#/components/schemas/String"
        HsmPartitionPassword:
          $ref: "#/components/schemas/String"
        HsmServerPublicCertificate:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: <p/>
    HsmConfiguration:
      type: object
      properties:
        HsmConfigurationIdentifier:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        HsmIpAddress:
          $ref: "#/components/schemas/String"
        HsmPartitionName:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: Returns information about an HSM configuration, which is an object that
        describes to Amazon Redshift clusters the information they require to
        connect to an HSM where they can store database encryption keys.
    CreateSnapshotCopyGrantMessage:
      type: object
      required:
        - SnapshotCopyGrantName
      properties:
        SnapshotCopyGrantName:
          $ref: "#/components/schemas/String"
        KmsKeyId:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: The result of the <code>CreateSnapshotCopyGrant</code> action.
    SnapshotCopyGrant:
      type: object
      properties:
        SnapshotCopyGrantName:
          $ref: "#/components/schemas/String"
        KmsKeyId:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: <p>The snapshot copy grant that grants Amazon Redshift permission to
        encrypt copied snapshots with the specified customer master key (CMK)
        from AWS KMS in the destination region.</p> <p> For more information
        about managing snapshot copy grants, go to <a
        href="https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html">Amazon
        Redshift Database Encryption</a> in the <i>Amazon Redshift Cluster
        Management Guide</i>. </p>
    ScheduleDefinitionList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    CreateSnapshotScheduleMessage:
      type: object
      properties:
        ScheduleDefinitions:
          $ref: "#/components/schemas/ScheduleDefinitionList"
        ScheduleIdentifier:
          $ref: "#/components/schemas/String"
        ScheduleDescription:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
        DryRun:
          $ref: "#/components/schemas/BooleanOptional"
        NextInvocations:
          $ref: "#/components/schemas/IntegerOptional"
    CreateTagsMessage:
      type: object
      required:
        - ResourceName
        - Tags
      properties:
        ResourceName:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: "Contains the output from the <code>CreateTags</code> action. "
    Double:
      type: number
      format: double
    DoubleOptional:
      type: number
      format: double
    LongOptional:
      type: integer
    DbGroupList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    DefaultClusterParameters:
      type: object
      properties:
        ParameterGroupFamily:
          $ref: "#/components/schemas/String"
        Marker:
          $ref: "#/components/schemas/String"
        Parameters:
          $ref: "#/components/schemas/ParametersList"
      description: Describes the default cluster parameters for a parameter group family.
    DeferredMaintenanceWindow:
      type: object
      properties:
        DeferMaintenanceIdentifier:
          $ref: "#/components/schemas/String"
        DeferMaintenanceStartTime:
          $ref: "#/components/schemas/TStamp"
        DeferMaintenanceEndTime:
          $ref: "#/components/schemas/TStamp"
      description: Describes a deferred maintenance window
    DeleteClusterMessage:
      type: object
      required:
        - ClusterIdentifier
      properties:
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
        SkipFinalClusterSnapshot:
          $ref: "#/components/schemas/Boolean"
        FinalClusterSnapshotIdentifier:
          $ref: "#/components/schemas/String"
        FinalClusterSnapshotRetentionPeriod:
          $ref: "#/components/schemas/IntegerOptional"
      description: <p/>
    DeleteClusterParameterGroupMessage:
      type: object
      required:
        - ParameterGroupName
      properties:
        ParameterGroupName:
          $ref: "#/components/schemas/String"
      description: <p/>
    DeleteClusterSecurityGroupMessage:
      type: object
      required:
        - ClusterSecurityGroupName
      properties:
        ClusterSecurityGroupName:
          $ref: "#/components/schemas/String"
      description: <p/>
    DeleteClusterSubnetGroupMessage:
      type: object
      required:
        - ClusterSubnetGroupName
      properties:
        ClusterSubnetGroupName:
          $ref: "#/components/schemas/String"
      description: <p/>
    DeleteEventSubscriptionMessage:
      type: object
      required:
        - SubscriptionName
      properties:
        SubscriptionName:
          $ref: "#/components/schemas/String"
      description: <p/>
    DeleteHsmClientCertificateMessage:
      type: object
      required:
        - HsmClientCertificateIdentifier
      properties:
        HsmClientCertificateIdentifier:
          $ref: "#/components/schemas/String"
      description: <p/>
    DeleteHsmConfigurationMessage:
      type: object
      required:
        - HsmConfigurationIdentifier
      properties:
        HsmConfigurationIdentifier:
          $ref: "#/components/schemas/String"
      description: <p/>
    DeleteSnapshotCopyGrantMessage:
      type: object
      required:
        - SnapshotCopyGrantName
      properties:
        SnapshotCopyGrantName:
          $ref: "#/components/schemas/String"
      description: The result of the <code>DeleteSnapshotCopyGrant</code> action.
    DeleteSnapshotScheduleMessage:
      type: object
      required:
        - ScheduleIdentifier
      properties:
        ScheduleIdentifier:
          $ref: "#/components/schemas/String"
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    DeleteTagsMessage:
      type: object
      required:
        - ResourceName
        - TagKeys
      properties:
        ResourceName:
          $ref: "#/components/schemas/String"
        TagKeys:
          $ref: "#/components/schemas/TagKeyList"
      description: "Contains the output from the <code>DeleteTags</code> action. "
    DescribeAccountAttributesMessage:
      type: object
      properties:
        AttributeNames:
          $ref: "#/components/schemas/AttributeNameList"
    DescribeClusterDbRevisionsMessage:
      type: object
      properties:
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
    TagValueList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    DescribeClusterParameterGroupsMessage:
      type: object
      properties:
        ParameterGroupName:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
        TagKeys:
          $ref: "#/components/schemas/TagKeyList"
        TagValues:
          $ref: "#/components/schemas/TagValueList"
      description: <p/>
    DescribeClusterParametersMessage:
      type: object
      required:
        - ParameterGroupName
      properties:
        ParameterGroupName:
          $ref: "#/components/schemas/String"
        Source:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
      description: <p/>
    DescribeClusterSecurityGroupsMessage:
      type: object
      properties:
        ClusterSecurityGroupName:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
        TagKeys:
          $ref: "#/components/schemas/TagKeyList"
        TagValues:
          $ref: "#/components/schemas/TagValueList"
      description: <p/>
    SnapshotSortingEntityList:
      type: array
      items:
        $ref: "#/components/schemas/SnapshotSortingEntity"
    DescribeClusterSnapshotsMessage:
      type: object
      properties:
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
        SnapshotIdentifier:
          $ref: "#/components/schemas/String"
        SnapshotType:
          $ref: "#/components/schemas/String"
        StartTime:
          $ref: "#/components/schemas/TStamp"
        EndTime:
          $ref: "#/components/schemas/TStamp"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
        OwnerAccount:
          $ref: "#/components/schemas/String"
        TagKeys:
          $ref: "#/components/schemas/TagKeyList"
        TagValues:
          $ref: "#/components/schemas/TagValueList"
        ClusterExists:
          $ref: "#/components/schemas/BooleanOptional"
        SortingEntities:
          $ref: "#/components/schemas/SnapshotSortingEntityList"
      description: <p/>
    DescribeClusterSubnetGroupsMessage:
      type: object
      properties:
        ClusterSubnetGroupName:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
        TagKeys:
          $ref: "#/components/schemas/TagKeyList"
        TagValues:
          $ref: "#/components/schemas/TagValueList"
      description: <p/>
    DescribeClusterTracksMessage:
      type: object
      properties:
        MaintenanceTrackName:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
    DescribeClusterVersionsMessage:
      type: object
      properties:
        ClusterVersion:
          $ref: "#/components/schemas/String"
        ClusterParameterGroupFamily:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
      description: <p/>
    DescribeClustersMessage:
      type: object
      properties:
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
        TagKeys:
          $ref: "#/components/schemas/TagKeyList"
        TagValues:
          $ref: "#/components/schemas/TagValueList"
      description: <p/>
    DescribeDefaultClusterParametersMessage:
      type: object
      required:
        - ParameterGroupFamily
      properties:
        ParameterGroupFamily:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
      description: <p/>
    DescribeEventCategoriesMessage:
      type: object
      properties:
        SourceType:
          $ref: "#/components/schemas/String"
      description: <p/>
    DescribeEventSubscriptionsMessage:
      type: object
      properties:
        SubscriptionName:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
        TagKeys:
          $ref: "#/components/schemas/TagKeyList"
        TagValues:
          $ref: "#/components/schemas/TagValueList"
      description: <p/>
    SourceType:
      type: string
      enum:
        - cluster
        - cluster-parameter-group
        - cluster-security-group
        - cluster-snapshot
    DescribeEventsMessage:
      type: object
      properties:
        SourceIdentifier:
          $ref: "#/components/schemas/String"
        SourceType:
          $ref: "#/components/schemas/SourceType"
        StartTime:
          $ref: "#/components/schemas/TStamp"
        EndTime:
          $ref: "#/components/schemas/TStamp"
        Duration:
          $ref: "#/components/schemas/IntegerOptional"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
      description: <p/>
    DescribeHsmClientCertificatesMessage:
      type: object
      properties:
        HsmClientCertificateIdentifier:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
        TagKeys:
          $ref: "#/components/schemas/TagKeyList"
        TagValues:
          $ref: "#/components/schemas/TagValueList"
      description: <p/>
    DescribeHsmConfigurationsMessage:
      type: object
      properties:
        HsmConfigurationIdentifier:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
        TagKeys:
          $ref: "#/components/schemas/TagKeyList"
        TagValues:
          $ref: "#/components/schemas/TagValueList"
      description: <p/>
    DescribeLoggingStatusMessage:
      type: object
      required:
        - ClusterIdentifier
      properties:
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
      description: <p/>
    NodeConfigurationOptionsFilterList:
      type: array
      items:
        $ref: "#/components/schemas/NodeConfigurationOptionsFilter"
    DescribeNodeConfigurationOptionsMessage:
      type: object
      required:
        - ActionType
      properties:
        ActionType:
          $ref: "#/components/schemas/ActionType"
        SnapshotIdentifier:
          $ref: "#/components/schemas/String"
        OwnerAccount:
          $ref: "#/components/schemas/String"
        Filters:
          $ref: "#/components/schemas/NodeConfigurationOptionsFilterList"
        Marker:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
    DescribeOrderableClusterOptionsMessage:
      type: object
      properties:
        ClusterVersion:
          $ref: "#/components/schemas/String"
        NodeType:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
      description: <p/>
    DescribeReservedNodeOfferingsMessage:
      type: object
      properties:
        ReservedNodeOfferingId:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
      description: <p/>
    DescribeReservedNodesMessage:
      type: object
      properties:
        ReservedNodeId:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
      description: <p/>
    DescribeResizeMessage:
      type: object
      required:
        - ClusterIdentifier
      properties:
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
      description: <p/>
    DescribeSnapshotCopyGrantsMessage:
      type: object
      properties:
        SnapshotCopyGrantName:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
        TagKeys:
          $ref: "#/components/schemas/TagKeyList"
        TagValues:
          $ref: "#/components/schemas/TagValueList"
      description: The result of the <code>DescribeSnapshotCopyGrants</code> action.
    DescribeSnapshotSchedulesMessage:
      type: object
      properties:
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
        ScheduleIdentifier:
          $ref: "#/components/schemas/String"
        TagKeys:
          $ref: "#/components/schemas/TagKeyList"
        TagValues:
          $ref: "#/components/schemas/TagValueList"
        Marker:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
    SnapshotScheduleList:
      type: array
      items:
        $ref: "#/components/schemas/SnapshotSchedule"
    DescribeTableRestoreStatusMessage:
      type: object
      properties:
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
        TableRestoreRequestId:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
      description: <p/>
    DescribeTagsMessage:
      type: object
      properties:
        ResourceName:
          $ref: "#/components/schemas/String"
        ResourceType:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
        TagKeys:
          $ref: "#/components/schemas/TagKeyList"
        TagValues:
          $ref: "#/components/schemas/TagValueList"
      description: <p/>
    DisableLoggingMessage:
      type: object
      required:
        - ClusterIdentifier
      properties:
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
      description: <p/>
    DisableSnapshotCopyMessage:
      type: object
      required:
        - ClusterIdentifier
      properties:
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
      description: <p/>
    EC2SecurityGroup:
      type: object
      properties:
        Status:
          $ref: "#/components/schemas/String"
        EC2SecurityGroupName:
          $ref: "#/components/schemas/String"
        EC2SecurityGroupOwnerId:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: Describes an Amazon EC2 security group.
    UpdateTarget:
      type: object
      properties:
        MaintenanceTrackName:
          $ref: "#/components/schemas/String"
        DatabaseVersion:
          $ref: "#/components/schemas/String"
        SupportedOperations:
          $ref: "#/components/schemas/SupportedOperationList"
      description: A maintenance track that you can switch the current track to.
    EligibleTracksToUpdateList:
      type: array
      items:
        $ref: "#/components/schemas/UpdateTarget"
    EnableLoggingMessage:
      type: object
      required:
        - ClusterIdentifier
        - BucketName
      properties:
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
        BucketName:
          $ref: "#/components/schemas/String"
        S3KeyPrefix:
          $ref: "#/components/schemas/String"
      description: <p/>
    EnableSnapshotCopyMessage:
      type: object
      required:
        - ClusterIdentifier
        - DestinationRegion
      properties:
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
        DestinationRegion:
          $ref: "#/components/schemas/String"
        RetentionPeriod:
          $ref: "#/components/schemas/IntegerOptional"
        SnapshotCopyGrantName:
          $ref: "#/components/schemas/String"
        ManualSnapshotRetentionPeriod:
          $ref: "#/components/schemas/IntegerOptional"
      description: <p/>
    Event:
      type: object
      properties:
        SourceIdentifier:
          $ref: "#/components/schemas/String"
        SourceType:
          $ref: "#/components/schemas/SourceType"
        Message:
          $ref: "#/components/schemas/String"
        EventCategories:
          $ref: "#/components/schemas/EventCategoriesList"
        Severity:
          $ref: "#/components/schemas/String"
        Date:
          $ref: "#/components/schemas/TStamp"
        EventId:
          $ref: "#/components/schemas/String"
      description: Describes an event.
    EventInfoMapList:
      type: array
      items:
        $ref: "#/components/schemas/EventInfoMap"
    EventCategoriesMap:
      type: object
      properties:
        SourceType:
          $ref: "#/components/schemas/String"
        Events:
          $ref: "#/components/schemas/EventInfoMapList"
      description: Describes event categories.
    EventCategoriesMapList:
      type: array
      items:
        $ref: "#/components/schemas/EventCategoriesMap"
    EventInfoMap:
      type: object
      properties:
        EventId:
          $ref: "#/components/schemas/String"
        EventCategories:
          $ref: "#/components/schemas/EventCategoriesList"
        EventDescription:
          $ref: "#/components/schemas/String"
        Severity:
          $ref: "#/components/schemas/String"
      description: Describes event information.
    EventList:
      type: array
      items:
        $ref: "#/components/schemas/Event"
    EventSubscriptionsList:
      type: array
      items:
        $ref: "#/components/schemas/EventSubscription"
    GetClusterCredentialsMessage:
      type: object
      required:
        - DbUser
        - ClusterIdentifier
      properties:
        DbUser:
          $ref: "#/components/schemas/String"
        DbName:
          $ref: "#/components/schemas/String"
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
        DurationSeconds:
          $ref: "#/components/schemas/IntegerOptional"
        AutoCreate:
          $ref: "#/components/schemas/BooleanOptional"
        DbGroups:
          $ref: "#/components/schemas/DbGroupList"
      description: The request parameters to get cluster credentials.
    GetReservedNodeExchangeOfferingsInputMessage:
      type: object
      required:
        - ReservedNodeId
      properties:
        ReservedNodeId:
          $ref: "#/components/schemas/String"
        MaxRecords:
          $ref: "#/components/schemas/IntegerOptional"
        Marker:
          $ref: "#/components/schemas/String"
      description: <p/>
    ReservedNodeOfferingList:
      type: array
      items:
        $ref: "#/components/schemas/ReservedNodeOffering"
    HsmClientCertificateList:
      type: array
      items:
        $ref: "#/components/schemas/HsmClientCertificate"
    HsmConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/HsmConfiguration"
    IPRange:
      type: object
      properties:
        Status:
          $ref: "#/components/schemas/String"
        CIDRIP:
          $ref: "#/components/schemas/String"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: Describes an IP range used in a security group.
    ImportTablesCompleted:
      type: array
      items:
        $ref: "#/components/schemas/String"
    ImportTablesInProgress:
      type: array
      items:
        $ref: "#/components/schemas/String"
    ImportTablesNotStarted:
      type: array
      items:
        $ref: "#/components/schemas/String"
    MaintenanceTrack:
      type: object
      properties:
        MaintenanceTrackName:
          $ref: "#/components/schemas/String"
        DatabaseVersion:
          $ref: "#/components/schemas/String"
        UpdateTargets:
          $ref: "#/components/schemas/EligibleTracksToUpdateList"
      description: "Defines a maintenance track that determines which Amazon Redshift
        version to apply during a maintenance window. If the value for
        <code>MaintenanceTrack</code> is <code>current</code>, the cluster is
        updated to the most recently certified maintenance release. If the value
        is <code>trailing</code>, the cluster is updated to the previously
        certified maintenance release. "
    ModifyClusterDbRevisionMessage:
      type: object
      required:
        - ClusterIdentifier
        - RevisionTarget
      properties:
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
        RevisionTarget:
          $ref: "#/components/schemas/String"
    ModifyClusterIamRolesMessage:
      type: object
      required:
        - ClusterIdentifier
      properties:
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
        AddIamRoles:
          $ref: "#/components/schemas/IamRoleArnList"
        RemoveIamRoles:
          $ref: "#/components/schemas/IamRoleArnList"
      description: <p/>
    ModifyClusterMaintenanceMessage:
      type: object
      required:
        - ClusterIdentifier
      properties:
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
        DeferMaintenance:
          $ref: "#/components/schemas/BooleanOptional"
        DeferMaintenanceIdentifier:
          $ref: "#/components/schemas/String"
        DeferMaintenanceStartTime:
          $ref: "#/components/schemas/TStamp"
        DeferMaintenanceEndTime:
          $ref: "#/components/schemas/TStamp"
        DeferMaintenanceDuration:
          $ref: "#/components/schemas/IntegerOptional"
    ModifyClusterMessage:
      type: object
      required:
        - ClusterIdentifier
      properties:
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
        ClusterType:
          $ref: "#/components/schemas/String"
        NodeType:
          $ref: "#/components/schemas/String"
        NumberOfNodes:
          $ref: "#/components/schemas/IntegerOptional"
        ClusterSecurityGroups:
          $ref: "#/components/schemas/ClusterSecurityGroupNameList"
        VpcSecurityGroupIds:
          $ref: "#/components/schemas/VpcSecurityGroupIdList"
        MasterUserPassword:
          $ref: "#/components/schemas/String"
        ClusterParameterGroupName:
          $ref: "#/components/schemas/String"
        AutomatedSnapshotRetentionPeriod:
          $ref: "#/components/schemas/IntegerOptional"
        ManualSnapshotRetentionPeriod:
          $ref: "#/components/schemas/IntegerOptional"
        PreferredMaintenanceWindow:
          $ref: "#/components/schemas/String"
        ClusterVersion:
          $ref: "#/components/schemas/String"
        AllowVersionUpgrade:
          $ref: "#/components/schemas/BooleanOptional"
        HsmClientCertificateIdentifier:
          $ref: "#/components/schemas/String"
        HsmConfigurationIdentifier:
          $ref: "#/components/schemas/String"
        NewClusterIdentifier:
          $ref: "#/components/schemas/String"
        PubliclyAccessible:
          $ref: "#/components/schemas/BooleanOptional"
        ElasticIp:
          $ref: "#/components/schemas/String"
        EnhancedVpcRouting:
          $ref: "#/components/schemas/BooleanOptional"
        MaintenanceTrackName:
          $ref: "#/components/schemas/String"
        Encrypted:
          $ref: "#/components/schemas/BooleanOptional"
        KmsKeyId:
          $ref: "#/components/schemas/String"
      description: <p/>
    ModifyClusterParameterGroupMessage:
      type: object
      required:
        - ParameterGroupName
        - Parameters
      properties:
        ParameterGroupName:
          $ref: "#/components/schemas/String"
        Parameters:
          $ref: "#/components/schemas/ParametersList"
      description: <p/>
    ModifyClusterSnapshotMessage:
      type: object
      required:
        - SnapshotIdentifier
      properties:
        SnapshotIdentifier:
          $ref: "#/components/schemas/String"
        ManualSnapshotRetentionPeriod:
          $ref: "#/components/schemas/IntegerOptional"
        Force:
          $ref: "#/components/schemas/Boolean"
    ModifyClusterSnapshotScheduleMessage:
      type: object
      required:
        - ClusterIdentifier
      properties:
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
        ScheduleIdentifier:
          $ref: "#/components/schemas/String"
        DisassociateSchedule:
          $ref: "#/components/schemas/BooleanOptional"
    ModifyClusterSubnetGroupMessage:
      type: object
      required:
        - ClusterSubnetGroupName
        - SubnetIds
      properties:
        ClusterSubnetGroupName:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        SubnetIds:
          $ref: "#/components/schemas/SubnetIdentifierList"
      description: <p/>
    ModifyEventSubscriptionMessage:
      type: object
      required:
        - SubscriptionName
      properties:
        SubscriptionName:
          $ref: "#/components/schemas/String"
        SnsTopicArn:
          $ref: "#/components/schemas/String"
        SourceType:
          $ref: "#/components/schemas/String"
        SourceIds:
          $ref: "#/components/schemas/SourceIdsList"
        EventCategories:
          $ref: "#/components/schemas/EventCategoriesList"
        Severity:
          $ref: "#/components/schemas/String"
        Enabled:
          $ref: "#/components/schemas/BooleanOptional"
      description: <p/>
    ModifySnapshotCopyRetentionPeriodMessage:
      type: object
      required:
        - ClusterIdentifier
        - RetentionPeriod
      properties:
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
        RetentionPeriod:
          $ref: "#/components/schemas/Integer"
        Manual:
          $ref: "#/components/schemas/Boolean"
      description: <p/>
    ModifySnapshotScheduleMessage:
      type: object
      required:
        - ScheduleIdentifier
        - ScheduleDefinitions
      properties:
        ScheduleIdentifier:
          $ref: "#/components/schemas/String"
        ScheduleDefinitions:
          $ref: "#/components/schemas/ScheduleDefinitionList"
    NodeConfigurationOption:
      type: object
      properties:
        NodeType:
          $ref: "#/components/schemas/String"
        NumberOfNodes:
          $ref: "#/components/schemas/Integer"
        EstimatedDiskUtilizationPercent:
          $ref: "#/components/schemas/DoubleOptional"
      description: A list of node configurations.
    NodeConfigurationOptionList:
      type: array
      items:
        $ref: "#/components/schemas/NodeConfigurationOption"
    NodeConfigurationOptionsFilterName:
      type: string
      enum:
        - NodeType
        - NumberOfNodes
        - EstimatedDiskUtilizationPercent
    OperatorType:
      type: string
      enum:
        - eq
        - lt
        - gt
        - le
        - ge
        - in
        - between
    ValueStringList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    OrderableClusterOption:
      type: object
      properties:
        ClusterVersion:
          $ref: "#/components/schemas/String"
        ClusterType:
          $ref: "#/components/schemas/String"
        NodeType:
          $ref: "#/components/schemas/String"
        AvailabilityZones:
          $ref: "#/components/schemas/AvailabilityZoneList"
      description: Describes an orderable cluster option.
    OrderableClusterOptionsList:
      type: array
      items:
        $ref: "#/components/schemas/OrderableClusterOption"
    ParameterApplyType:
      type: string
      enum:
        - static
        - dynamic
    PurchaseReservedNodeOfferingMessage:
      type: object
      required:
        - ReservedNodeOfferingId
      properties:
        ReservedNodeOfferingId:
          $ref: "#/components/schemas/String"
        NodeCount:
          $ref: "#/components/schemas/IntegerOptional"
      description: <p/>
    RebootClusterMessage:
      type: object
      required:
        - ClusterIdentifier
      properties:
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
      description: <p/>
    RecurringCharge:
      type: object
      properties:
        RecurringChargeAmount:
          $ref: "#/components/schemas/Double"
        RecurringChargeFrequency:
          $ref: "#/components/schemas/String"
      description: Describes a recurring charge.
    RecurringChargeList:
      type: array
      items:
        $ref: "#/components/schemas/RecurringCharge"
    ReservedNodeOfferingType:
      type: string
      enum:
        - Regular
        - Upgradable
    ReservedNodeList:
      type: array
      items:
        $ref: "#/components/schemas/ReservedNode"
    ReservedNodeOffering:
      type: object
      properties:
        ReservedNodeOfferingId:
          $ref: "#/components/schemas/String"
        NodeType:
          $ref: "#/components/schemas/String"
        Duration:
          $ref: "#/components/schemas/Integer"
        FixedPrice:
          $ref: "#/components/schemas/Double"
        UsagePrice:
          $ref: "#/components/schemas/Double"
        CurrencyCode:
          $ref: "#/components/schemas/String"
        OfferingType:
          $ref: "#/components/schemas/String"
        RecurringCharges:
          $ref: "#/components/schemas/RecurringChargeList"
        ReservedNodeOfferingType:
          $ref: "#/components/schemas/ReservedNodeOfferingType"
      description: Describes a reserved node offering.
    ResetClusterParameterGroupMessage:
      type: object
      required:
        - ParameterGroupName
      properties:
        ParameterGroupName:
          $ref: "#/components/schemas/String"
        ResetAllParameters:
          $ref: "#/components/schemas/Boolean"
        Parameters:
          $ref: "#/components/schemas/ParametersList"
      description: <p/>
    ResizeClusterMessage:
      type: object
      required:
        - ClusterIdentifier
        - NumberOfNodes
      properties:
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
        ClusterType:
          $ref: "#/components/schemas/String"
        NodeType:
          $ref: "#/components/schemas/String"
        NumberOfNodes:
          $ref: "#/components/schemas/Integer"
        Classic:
          $ref: "#/components/schemas/BooleanOptional"
    RestorableNodeTypeList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    RestoreFromClusterSnapshotMessage:
      type: object
      required:
        - ClusterIdentifier
        - SnapshotIdentifier
      properties:
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
        SnapshotIdentifier:
          $ref: "#/components/schemas/String"
        SnapshotClusterIdentifier:
          $ref: "#/components/schemas/String"
        Port:
          $ref: "#/components/schemas/IntegerOptional"
        AvailabilityZone:
          $ref: "#/components/schemas/String"
        AllowVersionUpgrade:
          $ref: "#/components/schemas/BooleanOptional"
        ClusterSubnetGroupName:
          $ref: "#/components/schemas/String"
        PubliclyAccessible:
          $ref: "#/components/schemas/BooleanOptional"
        OwnerAccount:
          $ref: "#/components/schemas/String"
        HsmClientCertificateIdentifier:
          $ref: "#/components/schemas/String"
        HsmConfigurationIdentifier:
          $ref: "#/components/schemas/String"
        ElasticIp:
          $ref: "#/components/schemas/String"
        ClusterParameterGroupName:
          $ref: "#/components/schemas/String"
        ClusterSecurityGroups:
          $ref: "#/components/schemas/ClusterSecurityGroupNameList"
        VpcSecurityGroupIds:
          $ref: "#/components/schemas/VpcSecurityGroupIdList"
        PreferredMaintenanceWindow:
          $ref: "#/components/schemas/String"
        AutomatedSnapshotRetentionPeriod:
          $ref: "#/components/schemas/IntegerOptional"
        ManualSnapshotRetentionPeriod:
          $ref: "#/components/schemas/IntegerOptional"
        KmsKeyId:
          $ref: "#/components/schemas/String"
        NodeType:
          $ref: "#/components/schemas/String"
        EnhancedVpcRouting:
          $ref: "#/components/schemas/BooleanOptional"
        AdditionalInfo:
          $ref: "#/components/schemas/String"
        IamRoles:
          $ref: "#/components/schemas/IamRoleArnList"
        MaintenanceTrackName:
          $ref: "#/components/schemas/String"
        SnapshotScheduleIdentifier:
          $ref: "#/components/schemas/String"
        NumberOfNodes:
          $ref: "#/components/schemas/IntegerOptional"
      description: <p/>
    RestoreTableFromClusterSnapshotMessage:
      type: object
      required:
        - ClusterIdentifier
        - SnapshotIdentifier
        - SourceDatabaseName
        - SourceTableName
        - NewTableName
      properties:
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
        SnapshotIdentifier:
          $ref: "#/components/schemas/String"
        SourceDatabaseName:
          $ref: "#/components/schemas/String"
        SourceSchemaName:
          $ref: "#/components/schemas/String"
        SourceTableName:
          $ref: "#/components/schemas/String"
        TargetDatabaseName:
          $ref: "#/components/schemas/String"
        TargetSchemaName:
          $ref: "#/components/schemas/String"
        NewTableName:
          $ref: "#/components/schemas/String"
      description: <p/>
    TableRestoreStatus:
      type: object
      properties:
        TableRestoreRequestId:
          $ref: "#/components/schemas/String"
        Status:
          $ref: "#/components/schemas/TableRestoreStatusType"
        Message:
          $ref: "#/components/schemas/String"
        RequestTime:
          $ref: "#/components/schemas/TStamp"
        ProgressInMegaBytes:
          $ref: "#/components/schemas/LongOptional"
        TotalDataInMegaBytes:
          $ref: "#/components/schemas/LongOptional"
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
        SnapshotIdentifier:
          $ref: "#/components/schemas/String"
        SourceDatabaseName:
          $ref: "#/components/schemas/String"
        SourceSchemaName:
          $ref: "#/components/schemas/String"
        SourceTableName:
          $ref: "#/components/schemas/String"
        TargetDatabaseName:
          $ref: "#/components/schemas/String"
        TargetSchemaName:
          $ref: "#/components/schemas/String"
        NewTableName:
          $ref: "#/components/schemas/String"
      description: Describes the status of a <a>RestoreTableFromClusterSnapshot</a>
        operation.
    RevisionTarget:
      type: object
      properties:
        DatabaseRevision:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        DatabaseRevisionReleaseDate:
          $ref: "#/components/schemas/TStamp"
      description: Describes a <code>RevisionTarget</code>.
    RevokeClusterSecurityGroupIngressMessage:
      type: object
      required:
        - ClusterSecurityGroupName
      properties:
        ClusterSecurityGroupName:
          $ref: "#/components/schemas/String"
        CIDRIP:
          $ref: "#/components/schemas/String"
        EC2SecurityGroupName:
          $ref: "#/components/schemas/String"
        EC2SecurityGroupOwnerId:
          $ref: "#/components/schemas/String"
      description: <p/>
    RevokeSnapshotAccessMessage:
      type: object
      required:
        - SnapshotIdentifier
        - AccountWithRestoreAccess
      properties:
        SnapshotIdentifier:
          $ref: "#/components/schemas/String"
        SnapshotClusterIdentifier:
          $ref: "#/components/schemas/String"
        AccountWithRestoreAccess:
          $ref: "#/components/schemas/String"
      description: <p/>
    RotateEncryptionKeyMessage:
      type: object
      required:
        - ClusterIdentifier
      properties:
        ClusterIdentifier:
          $ref: "#/components/schemas/String"
      description: <p/>
    ScheduledSnapshotTimeList:
      type: array
      items:
        $ref: "#/components/schemas/TStamp"
    SnapshotAttributeToSortBy:
      type: string
      enum:
        - SOURCE_TYPE
        - TOTAL_SIZE
        - CREATE_TIME
    SnapshotCopyGrantList:
      type: array
      items:
        $ref: "#/components/schemas/SnapshotCopyGrant"
    SnapshotList:
      type: array
      items:
        $ref: "#/components/schemas/Snapshot"
    SortByOrder:
      type: string
      enum:
        - ASC
        - DESC
    Subnet:
      type: object
      properties:
        SubnetIdentifier:
          $ref: "#/components/schemas/String"
        SubnetAvailabilityZone:
          $ref: "#/components/schemas/AvailabilityZone"
        SubnetStatus:
          $ref: "#/components/schemas/String"
      description: Describes a subnet.
    SupportedOperation:
      type: object
      properties:
        OperationName:
          $ref: "#/components/schemas/String"
      description: Describes the operations that are allowed on a maintenance track.
    SupportedOperationList:
      type: array
      items:
        $ref: "#/components/schemas/SupportedOperation"
    SupportedPlatform:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/String"
      description: A list of supported platforms for orderable clusters.
    TableRestoreStatusType:
      type: string
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCEEDED
        - FAILED
        - CANCELED
    TableRestoreStatusList:
      type: array
      items:
        $ref: "#/components/schemas/TableRestoreStatus"
    TaggedResource:
      type: object
      properties:
        Tag:
          $ref: "#/components/schemas/Tag"
        ResourceName:
          $ref: "#/components/schemas/String"
        ResourceType:
          $ref: "#/components/schemas/String"
      description: A tag and its associated resource.
    TaggedResourceList:
      type: array
      items:
        $ref: "#/components/schemas/TaggedResource"
    TrackList:
      type: array
      items:
        $ref: "#/components/schemas/MaintenanceTrack"
    VpcSecurityGroupMembership:
      type: object
      properties:
        VpcSecurityGroupId:
          $ref: "#/components/schemas/String"
        Status:
          $ref: "#/components/schemas/String"
      description: Describes the members of a VPC security group.
