openapi: 3.0.0
info:
  contact:
    email: developers@squareup.com
    name: Square Developer Platform
    url: https://squareup.com/developers
  description: Client library for accessing the Square Connect APIs
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://connect.squareup.com/tos
  title: Square Connect
  version: "2.0"
  x-apisguru-categories:
    - payment
  x-logo:
    url: http://square.github.io/images/logo.png
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/square/connect-api-specification/master/api.json
      version: "2.0"
  x-providerName: squareup.com
externalDocs:
  description: "Read the official documentation here:"
  url: https://docs.connect.squareup.com/
paths:
  /v1/me:
    get:
      deprecated: true
      description: Get a business's information.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-merchantid
      operationId: RetrieveBusiness
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Merchant"
      security:
        - oauth2:
            - MERCHANT_PROFILE_READ
      summary: Get a business's information.
      tags:
        - V1Locations
  /v1/me/employees:
    get:
      deprecated: false
      description: Provides summary information for all of a business's employees.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-employees
      operationId: ListEmployees
      parameters:
        - description: "The order in which employees are listed in the response, based on
            their created_at field.      Default value: ASC "
          in: query
          name: order
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - description: If filtering results by their updated_at field, the beginning of the
            requested reporting period, in ISO 8601 format
          in: query
          name: begin_updated_at
          required: false
          schema:
            type: string
        - description: If filtering results by there updated_at field, the end of the
            requested reporting period, in ISO 8601 format.
          in: query
          name: end_updated_at
          required: false
          schema:
            type: string
        - description: If filtering results by their created_at field, the beginning of the
            requested reporting period, in ISO 8601 format.
          in: query
          name: begin_created_at
          required: false
          schema:
            type: string
        - description: If filtering results by their created_at field, the end of the
            requested reporting period, in ISO 8601 format.
          in: query
          name: end_created_at
          required: false
          schema:
            type: string
        - description: If provided, the endpoint returns only employee entities with the
            specified status (ACTIVE or INACTIVE).
          in: query
          name: status
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
        - description: If provided, the endpoint returns only employee entities with the
            specified external_id.
          in: query
          name: external_id
          schema:
            type: string
        - description: The maximum integer number of employee entities to return in a
            single response. Default 100, maximum 200.
          in: query
          name: limit
          schema:
            type: integer
            maximum: 200
        - description: |-
            A pagination cursor to retrieve the next set of results for your
            original query to the endpoint.
          in: query
          name: batch_token
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers:
            Link:
              description: "If returned, there are too many items to return in one request
                and you must paginate with the supplied link. "
              schema:
                type: string
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/v1Employee"
                type: array
      security:
        - oauth2:
            - EMPLOYEES_READ
      summary: Provides summary information for all of a business's employees.
      tags:
        - V1Employees
    post:
      deprecated: false
      description: Creates an employee for a business.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#post-employees
      operationId: CreateEmployee
      requestBody:
        $ref: "#/components/requestBodies/v1Employee"
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Employee"
      security:
        - oauth2:
            - EMPLOYEES_WRITE
      summary: Creates an employee for a business.
      tags:
        - V1Employees
  "/v1/me/employees/{employee_id}":
    get:
      deprecated: false
      description: Provides the details for a single employee.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-employeeid
      operationId: RetrieveEmployee
      parameters:
        - description: The employee's ID.
          in: path
          name: employee_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Employee"
      security:
        - oauth2:
            - EMPLOYEES_READ
      summary: Provides the details for a single employee.
      tags:
        - V1Employees
    put:
      deprecated: false
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#put-employeeid
      operationId: UpdateEmployee
      parameters:
        - description: The ID of the role to modify.
          in: path
          name: employee_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/v1Employee"
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Employee"
      security:
        - oauth2:
            - EMPLOYEES_WRITE
      summary: V1 UpdateEmployee
      tags:
        - V1Employees
  /v1/me/locations:
    get:
      deprecated: true
      description: Provides details for a business's locations, including their IDs.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-locations
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/v1Merchant"
                type: array
      security:
        - oauth2:
            - MERCHANT_PROFILE_READ
      summary: Provides details for a business's locations, including their IDs.
      tags:
        - V1Locations
  /v1/me/roles:
    get:
      deprecated: false
      description: Provides summary information for all of a business's employee roles.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-roles
      operationId: ListEmployeeRoles
      parameters:
        - description: "The order in which employees are listed in the response, based on
            their created_at field.Default value: ASC "
          in: query
          name: order
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - description: The maximum integer number of employee entities to return in a
            single response. Default 100, maximum 200.
          in: query
          name: limit
          schema:
            type: integer
            maximum: 200
        - description: |-
            A pagination cursor to retrieve the next set of results for your
            original query to the endpoint.
          in: query
          name: batch_token
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers:
            Link:
              description: If returned, there are too many items to return in one request
                and you must paginate with the supplied link.
              schema:
                type: string
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/v1EmployeeRole"
                type: array
      security:
        - oauth2:
            - EMPLOYEES_READ
      summary: Provides summary information for all of a business's employee roles.
      tags:
        - V1Employees
    post:
      deprecated: false
      description: Creates an employee role you can then assign to employees.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#post-roles
      operationId: CreateEmployeeRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1EmployeeRole"
        description: An EmployeeRole object with a name and permissions, and an optional
          owner flag.
        required: true
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1EmployeeRole"
      security:
        - oauth2:
            - EMPLOYEES_WRITE
      summary: Creates an employee role you can then assign to employees.
      tags:
        - V1Employees
  "/v1/me/roles/{role_id}":
    get:
      deprecated: false
      description: Provides the details for a single employee role.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-roleid
      operationId: RetrieveEmployeeRole
      parameters:
        - description: The role's ID.
          in: path
          name: role_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1EmployeeRole"
      security:
        - oauth2:
            - EMPLOYEES_READ
      summary: Provides the details for a single employee role.
      tags:
        - V1Employees
    put:
      deprecated: false
      description: Modifies the details of an employee role.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#put-roleid
      operationId: UpdateEmployeeRole
      parameters:
        - description: The ID of the role to modify.
          in: path
          name: role_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1EmployeeRole"
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        required: true
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1EmployeeRole"
      security:
        - oauth2:
            - EMPLOYEES_WRITE
      summary: Modifies the details of an employee role.
      tags:
        - V1Employees
  /v1/me/timecards:
    get:
      deprecated: false
      description: Provides summary information for all of a business's employee timecards.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-timecards
      operationId: ListTimecards
      parameters:
        - description: The order in which timecards are listed in the response, based on
            their created_at field.
          in: query
          name: order
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - description: If provided, the endpoint returns only timecards for the employee
            with the specified ID.
          in: query
          name: employee_id
          required: false
          schema:
            type: string
        - description: If filtering results by their clockin_time field, the beginning of
            the requested reporting period, in ISO 8601 format.
          in: query
          name: begin_clockin_time
          required: false
          schema:
            type: string
        - description: If filtering results by their clockin_time field, the end of the
            requested reporting period, in ISO 8601 format.
          in: query
          name: end_clockin_time
          required: false
          schema:
            type: string
        - description: If filtering results by their clockout_time field, the beginning of
            the requested reporting period, in ISO 8601 format.
          in: query
          name: begin_clockout_time
          required: false
          schema:
            type: string
        - description: If filtering results by their clockout_time field, the end of the
            requested reporting period, in ISO 8601 format.
          in: query
          name: end_clockout_time
          required: false
          schema:
            type: string
        - description: If filtering results by their updated_at field, the beginning of the
            requested reporting period, in ISO 8601 format.
          in: query
          name: begin_updated_at
          required: false
          schema:
            type: string
        - description: If filtering results by their updated_at field, the end of the
            requested reporting period, in ISO 8601 format.
          in: query
          name: end_updated_at
          required: false
          schema:
            type: string
        - description: If true, only deleted timecards are returned. If false, only valid
            timecards are returned.If you don't provide this parameter, both
            valid and deleted timecards are returned.
          in: query
          name: deleted
          required: false
          schema:
            type: boolean
        - description: The maximum integer number of employee entities to return in a
            single response. Default 100, maximum 200.
          in: query
          name: limit
          schema:
            type: integer
            maximum: 200
        - description: |-
            A pagination cursor to retrieve the next set of results for your
            original query to the endpoint.
          in: query
          name: batch_token
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers:
            Link:
              description: "If returned, there are too many items to return in one request
                and you must paginate with the supplied link. "
              schema:
                type: string
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/v1Timecard"
                type: array
      security:
        - oauth2:
            - TIMECARDS_READ
      summary: Provides summary information for all of a business's employee timecards.
      tags:
        - V1Employees
    post:
      deprecated: false
      description: Creates a timecard for an employee. Each timecard corresponds to a
        single shift.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#post-timecards
      operationId: CreateTimecard
      requestBody:
        $ref: "#/components/requestBodies/v1Timecard"
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Timecard"
      security:
        - oauth2:
            - TIMECARDS_WRITE
      summary: Creates a timecard for an employee. Each timecard corresponds to a
        single shift.
      tags:
        - V1Employees
  "/v1/me/timecards/{timecard_id}":
    delete:
      deprecated: false
      description: Deletes a timecard. Deleted timecards are still accessible from Connect
        API endpoints, but the value of their deleted field is set to true. See
        Handling deleted timecards for more information.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#delete-timecardid
      operationId: DeleteTimecard
      parameters:
        - description: The ID of the timecard to delete.
          in: path
          name: timecard_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                type: object
      security:
        - oauth2:
            - TIMECARDS_WRITE
      summary: Deletes a timecard. Deleted timecards are still accessible from Connect
        API endpoints, but the value of their deleted field is set to true. See
        Handling deleted timecards for more information.
      tags:
        - V1Employees
    get:
      deprecated: false
      description: Provides the details for a single timecard.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-timecardid
      operationId: RetrieveTimecard
      parameters:
        - description: The timecard's ID.
          in: path
          name: timecard_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Timecard"
      security:
        - oauth2:
            - TIMECARDS_READ
      summary: Provides the details for a single timecard.
      tags:
        - V1Employees
    put:
      deprecated: false
      description: Modifies a timecard's details. This creates an API_EDIT event for the
        timecard. You can view a timecard's event history with the List Timecard
        Events endpoint.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#put-timecardid
      operationId: UpdateTimecard
      parameters:
        - description: TThe ID of the timecard to modify.
          in: path
          name: timecard_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/v1Timecard"
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Timecard"
      security:
        - oauth2:
            - TIMECARDS_WRITE
      summary: Modifies a timecard's details. This creates an API_EDIT event for the
        timecard. You can view a timecard's event history with the List Timecard
        Events endpoint.
      tags:
        - V1Employees
  "/v1/me/timecards/{timecard_id}/events":
    get:
      deprecated: false
      description: Provides summary information for all events associated with a particular
        timecard.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-events
      operationId: ListTimecardEvents
      parameters:
        - description: The ID of the timecard to list events for.
          in: path
          name: timecard_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers:
            Link:
              description: "If returned, there are too many items to return in one request
                and you must paginate with the supplied link. "
              schema:
                type: string
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/v1TimecardEvent"
                type: array
      security:
        - oauth2:
            - TIMECARDS_READ
      summary: Provides summary information for all events associated with a particular
        timecard.
      tags:
        - V1Employees
  "/v1/{location_id}/bank-accounts":
    get:
      deprecated: false
      description: Provides non-confidential details for all of a location's associated
        bank accounts. This endpoint does not provide full bank account numbers,
        and there is no way to obtain a full bank account number with the
        Connect API.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-bankaccounts
      operationId: ListBankAccounts
      parameters:
        - description: The ID of the location to list bank accounts for.
          in: path
          name: location_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/v1BankAccount"
                type: array
      security:
        - oauth2:
            - BANK_ACCOUNTS_READ
      summary: Provides non-confidential details for all of a location's associated
        bank accounts. This endpoint does not provide full bank account numbers,
        and there is no way to obtain a full bank account number with the
        Connect API.
      tags:
        - V1Transactions
  "/v1/{location_id}/bank-accounts/{bank_account_id}":
    get:
      deprecated: false
      description: Provides non-confidential details for a merchant's associated bank
        account. This endpoint does not provide full bank account numbers, and
        there is no way to obtain a full bank account number with the Connect
        API.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-bankaccountid
      operationId: RetrieveBankAccount
      parameters:
        - description: The ID of the bank account's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The bank account's Square-issued ID. You obtain this value from
            Settlement objects returned.
          in: path
          name: bank_account_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1BankAccount"
      security:
        - oauth2:
            - BANK_ACCOUNTS_READ
      summary: Provides non-confidential details for a merchant's associated bank
        account. This endpoint does not provide full bank account numbers, and
        there is no way to obtain a full bank account number with the Connect
        API.
      tags:
        - V1Transactions
  "/v1/{location_id}/cash-drawer-shifts":
    get:
      deprecated: false
      description: Provides the details for all of a location's cash drawer shifts during a
        date range. The date range you specify cannot exceed 90 days.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-cashdrawershifts
      operationId: ListCashDrawerShifts
      parameters:
        - description: The ID of the location to list cash drawer shifts for.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: "The order in which cash drawer shifts are listed in the response,
            based on their created_at field. Default value: ASC"
          in: query
          name: order
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - description: "The beginning of the requested reporting period, in ISO 8601
            format. Default value: The current time minus 90 days."
          in: query
          name: begin_time
          required: false
          schema:
            type: string
        - description: "The beginning of the requested reporting period, in ISO 8601
            format. Default value: The current time."
          in: query
          name: end_time
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers:
            Link:
              description: "If returned, there are too many items to return in one request
                and you must paginate with the supplied link. "
              schema:
                type: string
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/v1CashDrawerShift"
                type: array
      security:
        - oauth2:
            - PAYMENTS_READ
      summary: Provides the details for all of a location's cash drawer shifts during a
        date range. The date range you specify cannot exceed 90 days.
      tags:
        - V1Employees
  "/v1/{location_id}/cash-drawer-shifts/{shift_id}":
    get:
      deprecated: false
      description: Provides the details for a single cash drawer shift, including all
        events that occurred during the shift.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-cashdrawershiftid
      operationId: RetrieveCashDrawerShift
      parameters:
        - description: The ID of the location to list cash drawer shifts for.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The shift's ID.
          in: path
          name: shift_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1CashDrawerShift"
      security:
        - oauth2:
            - TIMECARDS_READ
      summary: Provides the details for a single cash drawer shift, including all
        events that occurred during the shift.
      tags:
        - V1Employees
  "/v1/{location_id}/categories":
    get:
      deprecated: false
      description: Lists all of a location's item categories.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-categories
      operationId: ListCategories
      parameters:
        - description: The ID of the location to list categories for.
          in: path
          name: location_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers:
            Link:
              description: "If returned, there are too many items to return in one request
                and you must paginate with the supplied link. "
              schema:
                type: string
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/v1Category"
                type: array
      security:
        - oauth2:
            - ITEMS_READ
      summary: Lists all of a location's item categories.
      tags:
        - V1Items
    post:
      deprecated: false
      description: Creates an item category.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#post-categories
      operationId: CreateCategory
      parameters:
        - description: The ID of the location to create an item for.
          in: path
          name: location_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/v1Category"
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Category"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Creates an item category.
      tags:
        - V1Items
  "/v1/{location_id}/categories/{category_id}":
    delete:
      deprecated: false
      description: Deletes an existing item category.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#delete-categoryid
      operationId: DeleteCategory
      parameters:
        - description: The ID of the item's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The ID of the category to delete.
          in: path
          name: category_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Category"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Deletes an existing item category.
      tags:
        - V1Items
    put:
      deprecated: false
      description: Modifies the details of an existing item category.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#put-categoryid
      operationId: UpdateCategory
      parameters:
        - description: The ID of the category's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The ID of the category to edit.
          in: path
          name: category_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/v1Category"
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Category"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Modifies the details of an existing item category.
      tags:
        - V1Items
  "/v1/{location_id}/discounts":
    get:
      deprecated: false
      description: Lists all of a location's discounts.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-discounts
      operationId: ListDiscounts
      parameters:
        - description: The ID of the location to list categories for.
          in: path
          name: location_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers:
            Link:
              description: "If returned, there are too many items to return in one request
                and you must paginate with the supplied link. "
              schema:
                type: string
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/v1Discount"
                type: array
      security:
        - oauth2:
            - ITEMS_READ
      summary: Lists all of a location's discounts.
      tags:
        - V1Items
    post:
      deprecated: false
      description: Creates a discount.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#post-discounts
      operationId: CreateDiscount
      parameters:
        - description: The ID of the location to create an item for.
          in: path
          name: location_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/v1Discount"
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Discount"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Creates a discount.
      tags:
        - V1Items
  "/v1/{location_id}/discounts/{discount_id}":
    delete:
      deprecated: false
      description: Deletes an existing discount.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#delete-discountid
      operationId: DeleteDiscount
      parameters:
        - description: The ID of the item's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The ID of the discount to delete.
          in: path
          name: discount_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Discount"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Deletes an existing discount.
      tags:
        - V1Items
    put:
      deprecated: false
      description: Modifies the details of an existing discount.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#put-discountid
      operationId: UpdateDiscount
      parameters:
        - description: The ID of the category's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The ID of the discount to edit.
          in: path
          name: discount_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/v1Discount"
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Discount"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Modifies the details of an existing discount.
      tags:
        - V1Items
  "/v1/{location_id}/fees":
    get:
      deprecated: false
      description: Lists all of a location's fees (taxes).
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-fees
      operationId: ListFees
      parameters:
        - description: The ID of the location to list fees for.
          in: path
          name: location_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers:
            Link:
              description: "If returned, there are too many items to return in one request
                and you must paginate with the supplied link. "
              schema:
                type: string
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/v1Fee"
                type: array
      security:
        - oauth2:
            - ITEMS_READ
      summary: Lists all of a location's fees (taxes).
      tags:
        - V1Items
    post:
      deprecated: false
      description: Creates a fee (tax).
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#post-fees
      operationId: CreateFee
      parameters:
        - description: The ID of the location to create a fee for.
          in: path
          name: location_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/v1Fee"
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Fee"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Creates a fee (tax).
      tags:
        - V1Items
  "/v1/{location_id}/fees/{fee_id}":
    delete:
      deprecated: false
      description: Deletes an existing fee (tax).
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#delete-feeid
      operationId: DeleteFee
      parameters:
        - description: The ID of the fee's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The ID of the fee to delete.
          in: path
          name: fee_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Fee"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Deletes an existing fee (tax).
      tags:
        - V1Items
    put:
      deprecated: false
      description: Modifies the details of an existing fee (tax).
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#put-feeid
      operationId: UpdateFee
      parameters:
        - description: The ID of the fee's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The ID of the fee to edit.
          in: path
          name: fee_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/v1Fee"
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Fee"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Modifies the details of an existing fee (tax).
      tags:
        - V1Items
  "/v1/{location_id}/inventory":
    get:
      deprecated: false
      description: Provides inventory information for all of a merchant's inventory-enabled
        item variations.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-inventory
      operationId: ListInventory
      parameters:
        - description: The ID of the item's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The maximum number of inventory entries to return in a single
            response. This value cannot exceed 1000.
          in: query
          name: limit
          required: false
          schema:
            type: integer
            maximum: 1000
        - description: |-
            A pagination cursor to retrieve the next set of results for your
            original query to the endpoint.
          in: query
          name: batch_token
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/v1InventoryEntry"
                type: array
      security:
        - oauth2:
            - ITEMS_READ
      summary: Provides inventory information for all of a merchant's inventory-enabled
        item variations.
      tags:
        - V1Items
  "/v1/{location_id}/inventory/{variation_id}":
    post:
      deprecated: false
      description: Adjusts an item variation's current available inventory.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#post-inventory-variationid
      operationId: AdjustInventory
      parameters:
        - description: The ID of the item's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The ID of the variation to adjust inventory information for.
          in: path
          name: variation_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1AdjustInventoryRequest"
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        required: true
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1InventoryEntry"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Adjusts an item variation's current available inventory.
      tags:
        - V1Items
  "/v1/{location_id}/items":
    get:
      deprecated: false
      description: Provides summary information for all of a location's items.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-items
      operationId: ListItems
      parameters:
        - description: The ID of the location to list items for.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: |-
            A pagination cursor to retrieve the next set of results for your
            original query to the endpoint.
          in: query
          name: batch_token
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers:
            Link:
              description: "If returned, there are too many items to return in one request
                and you must paginate with the supplied link. "
              schema:
                type: string
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/v1Item"
                type: array
      security:
        - oauth2:
            - ITEMS_READ
      summary: Provides summary information for all of a location's items.
      tags:
        - V1Items
    post:
      deprecated: false
      description: Creates an item and at least one variation for it.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#post-items
      operationId: CreateItem
      parameters:
        - description: The ID of the location to create an item for.
          in: path
          name: location_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/v1Item"
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Item"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Creates an item and at least one variation for it.
      tags:
        - V1Items
  "/v1/{location_id}/items/{item_id}":
    delete:
      deprecated: false
      description: Deletes an existing item and all item variations associated with it.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#delete-itemid
      operationId: DeleteItem
      parameters:
        - description: The ID of the item's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The ID of the item to modify.
          in: path
          name: item_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Item"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Deletes an existing item and all item variations associated with it.
      tags:
        - V1Items
    get:
      deprecated: false
      description: Provides the details for a single item, including associated modifier
        lists and fees.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-itemid
      operationId: RetrieveItem
      parameters:
        - description: The ID of the item's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The item's ID.
          in: path
          name: item_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Item"
      security:
        - oauth2:
            - ITEMS_READ
      summary: Provides the details for a single item, including associated modifier
        lists and fees.
      tags:
        - V1Items
    put:
      deprecated: false
      description: Modifies the core details of an existing item.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#put-itemid
      operationId: UpdateItem
      parameters:
        - description: The ID of the item's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The ID of the item to modify.
          in: path
          name: item_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/v1Item"
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Item"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Modifies the core details of an existing item.
      tags:
        - V1Items
  "/v1/{location_id}/items/{item_id}/fees/{fee_id}":
    delete:
      deprecated: false
      description: Removes a fee assocation from an item, meaning the fee is no longer
        automatically applied to the item in Square Register.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#delete-itemid-feeid
      operationId: RemoveFee
      parameters:
        - description: The ID of the fee's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The ID of the item to add the fee to.
          in: path
          name: item_id
          required: true
          schema:
            type: string
        - description: The ID of the fee to apply.
          in: path
          name: fee_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Item"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Removes a fee assocation from an item, meaning the fee is no longer
        automatically applied to the item in Square Register.
      tags:
        - V1Items
    put:
      deprecated: false
      description: Associates a fee with an item, meaning the fee is automatically applied
        to the item in Square Register.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#put-itemid-feeid
      operationId: ApplyFee
      parameters:
        - description: The ID of the fee's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The ID of the item to add the fee to.
          in: path
          name: item_id
          required: true
          schema:
            type: string
        - description: The ID of the fee to apply.
          in: path
          name: fee_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Item"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Associates a fee with an item, meaning the fee is automatically applied
        to the item in Square Register.
      tags:
        - V1Items
  "/v1/{location_id}/items/{item_id}/modifier-lists/{modifier_list_id}":
    delete:
      deprecated: false
      description: Removes a modifier list association from an item, meaning modifier
        options from the list can no longer be applied to the item.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#delete-itemid-modifierlistid
      operationId: RemoveModifierList
      parameters:
        - description: The ID of the item's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The ID of the modifier list to remove.
          in: path
          name: modifier_list_id
          required: true
          schema:
            type: string
        - description: The ID of the item to remove the modifier list from.
          in: path
          name: item_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Item"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Removes a modifier list association from an item, meaning modifier
        options from the list can no longer be applied to the item.
      tags:
        - V1Items
    put:
      deprecated: false
      description: Associates a modifier list with an item, meaning modifier options from
        the list can be applied to the item.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#put-itemid-modifierlistid
      operationId: ApplyModifierList
      parameters:
        - description: The ID of the item's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The ID of the modifier list to apply.
          in: path
          name: modifier_list_id
          required: true
          schema:
            type: string
        - description: The ID of the item to add the modifier list to.
          in: path
          name: item_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Item"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Associates a modifier list with an item, meaning modifier options from
        the list can be applied to the item.
      tags:
        - V1Items
  "/v1/{location_id}/items/{item_id}/variations":
    post:
      deprecated: false
      description: Creates an item variation for an existing item.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#post-variations
      operationId: CreateVariation
      parameters:
        - description: The ID of the item's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The item's ID.
          in: path
          name: item_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/v1Variation"
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Variation"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Creates an item variation for an existing item.
      tags:
        - V1Items
  "/v1/{location_id}/items/{item_id}/variations/{variation_id}":
    delete:
      deprecated: false
      description: Deletes an existing item variation from an item.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#delete-variationid
      operationId: DeleteVariation
      parameters:
        - description: The ID of the item's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The ID of the item to delete.
          in: path
          name: item_id
          required: true
          schema:
            type: string
        - description: The ID of the variation to delete.
          in: path
          name: variation_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Variation"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Deletes an existing item variation from an item.
      tags:
        - V1Items
    put:
      deprecated: false
      description: Modifies the details of an existing item variation.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#put-variationid
      operationId: UpdateVariation
      parameters:
        - description: The ID of the item's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The ID of the item to modify.
          in: path
          name: item_id
          required: true
          schema:
            type: string
        - description: The ID of the variation to modify.
          in: path
          name: variation_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/v1Variation"
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Variation"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Modifies the details of an existing item variation.
      tags:
        - V1Items
  "/v1/{location_id}/modifier-lists":
    get:
      deprecated: false
      description: Lists all of a location's modifier lists.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-modifierlists
      operationId: ListModifierLists
      parameters:
        - description: The ID of the location to list modifier lists for.
          in: path
          name: location_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/v1ModifierList"
                type: array
      security:
        - oauth2:
            - ITEMS_READ
      summary: Lists all of a location's modifier lists.
      tags:
        - V1Items
    post:
      deprecated: false
      description: Creates an item modifier list and at least one modifier option for it.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#post-modifierlists
      operationId: CreateModifierList
      parameters:
        - description: The ID of the location to create a modifier list for.
          in: path
          name: location_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1ModifierList"
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        required: true
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ModifierList"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Creates an item modifier list and at least one modifier option for it.
      tags:
        - V1Items
  "/v1/{location_id}/modifier-lists/{modifier_list_id}":
    delete:
      deprecated: false
      description: Deletes an existing item modifier list and all modifier options
        associated with it.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#delete-modifierlistid
      operationId: DeleteModifierList
      parameters:
        - description: The ID of the item's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The ID of the modifier list to delete.
          in: path
          name: modifier_list_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ModifierList"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Deletes an existing item modifier list and all modifier options
        associated with it.
      tags:
        - V1Items
    get:
      deprecated: false
      description: Provides the details for a single modifier list.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-modifierlistid
      operationId: RetrieveModifierList
      parameters:
        - description: The ID of the item's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The modifier list's ID.
          in: path
          name: modifier_list_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ModifierList"
      security:
        - oauth2:
            - ITEMS_READ
      summary: Provides the details for a single modifier list.
      tags:
        - V1Items
    put:
      deprecated: false
      description: Modifies the details of an existing item modifier list.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#put-modifierlistid
      operationId: UpdateModifierList
      parameters:
        - description: The ID of the item's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The ID of the modifier list to edit.
          in: path
          name: modifier_list_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1UpdateModifierListRequest"
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        required: true
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ModifierList"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Modifies the details of an existing item modifier list.
      tags:
        - V1Items
  "/v1/{location_id}/modifier-lists/{modifier_list_id}/modifier-options":
    post:
      deprecated: false
      description: Creates an item modifier option and adds it to a modifier list.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#post-modifieroptions
      operationId: CreateModifierOption
      parameters:
        - description: The ID of the item's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The ID of the modifier list to edit.
          in: path
          name: modifier_list_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/v1ModifierOption"
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ModifierOption"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Creates an item modifier option and adds it to a modifier list.
      tags:
        - V1Items
  "/v1/{location_id}/modifier-lists/{modifier_list_id}/modifier-options/{modifier_option_id}":
    delete:
      deprecated: false
      description: Deletes an existing item modifier option from a modifier list.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#delete-modifieroptionid
      operationId: DeleteModifierOption
      parameters:
        - description: The ID of the item's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The ID of the modifier list to delete.
          in: path
          name: modifier_list_id
          required: true
          schema:
            type: string
        - description: The ID of the modifier list to edit.
          in: path
          name: modifier_option_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ModifierOption"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Deletes an existing item modifier option from a modifier list.
      tags:
        - V1Items
    put:
      deprecated: false
      description: Modifies the details of an existing item modifier option.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#put-modifieroptionid
      operationId: UpdateModifierOption
      parameters:
        - description: The ID of the item's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The ID of the modifier list to edit.
          in: path
          name: modifier_list_id
          required: true
          schema:
            type: string
        - description: The ID of the modifier list to edit.
          in: path
          name: modifier_option_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/v1ModifierOption"
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1ModifierOption"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Modifies the details of an existing item modifier option.
      tags:
        - V1Items
  "/v1/{location_id}/orders":
    get:
      deprecated: false
      description: Provides summary information for a merchant's online store orders.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-ordrers
      operationId: ListOrders
      parameters:
        - description: The ID of the location to list online store orders for.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: TThe order in which payments are listed in the response.
          in: query
          name: order
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - description: The maximum number of payments to return in a single response. This
            value cannot exceed 200.
          in: query
          name: limit
          required: false
          schema:
            type: integer
            maximum: 200
        - description: |-
            A pagination cursor to retrieve the next set of results for your
            original query to the endpoint.
          in: query
          name: batch_token
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers:
            Link:
              description: "If returned, there are too many items to return in one request
                and you must paginate with the supplied link. "
              schema:
                type: string
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/v1Order"
                type: array
      security:
        - oauth2:
            - ORDERS_READ
      summary: Provides summary information for a merchant's online store orders.
      tags:
        - V1Transactions
  "/v1/{location_id}/orders/{order_id}":
    get:
      deprecated: false
      description: Provides comprehensive information for a single online store order,
        including the order's history.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-orderid
      operationId: RetrieveOrder
      parameters:
        - description: The ID of the order's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The order's Square-issued ID. You obtain this value from Order
            objects returned by the List Orders endpoint
          in: path
          name: order_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Order"
      security:
        - oauth2:
            - ORDERS_READ
      summary: Provides comprehensive information for a single online store order,
        including the order's history.
      tags:
        - V1Transactions
    put:
      deprecated: false
      description: "Updates the details of an online store order. Every update you perform
        on an order corresponds to one of three actions:"
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#put-orderid
      operationId: UpdateOrder
      parameters:
        - description: The ID of the order's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The order's Square-issued ID. You obtain this value from Order
            objects returned by the List Orders endpoint
          in: path
          name: order_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1UpdateOrderRequest"
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        required: true
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Order"
      security:
        - oauth2:
            - ORDERS_WRITE
      summary: "Updates the details of an online store order. Every update you perform
        on an order corresponds to one of three actions:"
      tags:
        - V1Transactions
  "/v1/{location_id}/pages":
    get:
      deprecated: false
      description: Lists all of a location's Favorites pages in Square Register.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-pages
      operationId: ListPages
      parameters:
        - description: The ID of the location to list Favorites pages for.
          in: path
          name: location_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/v1Page"
                type: array
      security:
        - oauth2:
            - ITEMS_READ
      summary: Lists all of a location's Favorites pages in Square Register.
      tags:
        - V1Items
    post:
      deprecated: false
      description: Creates a Favorites page in Square Register.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#post-pages
      operationId: CreatePage
      parameters:
        - description: The ID of the location to create an item for.
          in: path
          name: location_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/v1Page"
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Page"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Creates a Favorites page in Square Register.
      tags:
        - V1Items
  "/v1/{location_id}/pages/{page_id}":
    delete:
      deprecated: false
      description: Deletes an existing Favorites page and all of its cells.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#delete-pageid
      operationId: DeletePage
      parameters:
        - description: The ID of the Favorites page's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The ID of the page to delete.
          in: path
          name: page_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Page"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Deletes an existing Favorites page and all of its cells.
      tags:
        - V1Items
    put:
      deprecated: false
      description: Modifies the details of a Favorites page in Square Register.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#put-pageid
      operationId: UpdatePage
      parameters:
        - description: The ID of the Favorites page's associated location
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The ID of the page to modify.
          in: path
          name: page_id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/v1Page"
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Page"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Modifies the details of a Favorites page in Square Register.
      tags:
        - V1Items
  "/v1/{location_id}/pages/{page_id}/cells":
    delete:
      deprecated: false
      description: Deletes a cell from a Favorites page in Square Register.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#delete-cells
      operationId: DeletePageCell
      parameters:
        - description: The ID of the Favorites page's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The ID of the page to delete.
          in: path
          name: page_id
          required: true
          schema:
            type: string
        - description: The row of the cell to clear. Always an integer between 0 and 4,
            inclusive. Row 0 is the top row.
          in: query
          name: row
          required: false
          schema:
            type: string
        - description: The column of the cell to clear. Always an integer between 0 and 4,
            inclusive. Column 0 is the leftmost column.
          in: query
          name: column
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Page"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Deletes a cell from a Favorites page in Square Register.
      tags:
        - V1Items
    put:
      deprecated: false
      description: Modifies a cell of a Favorites page in Square Register.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#put-cells
      operationId: UpdatePageCell
      parameters:
        - description: The ID of the Favorites page's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The ID of the page the cell belongs to.
          in: path
          name: page_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1PageCell"
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        required: true
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Page"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: Modifies a cell of a Favorites page in Square Register.
      tags:
        - V1Items
  "/v1/{location_id}/payments":
    get:
      deprecated: false
      description: Provides summary information for all payments taken by a merchant or any
        of the merchant's mobile staff during a date range. Date ranges cannot
        exceed one year in length. See Date ranges for details of inclusive and
        exclusive dates.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-payments
      operationId: ListPayments
      parameters:
        - description: The ID of the location to list payments for. If you specify me, this
            endpoint returns payments aggregated from all of the business's
            locations.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The order in which payments are listed in the response.
          in: query
          name: order
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - description: "The beginning of the requested reporting period, in ISO 8601
            format. If this value is before January 1, 2013
            (2013-01-01T00:00:00Z), this endpoint returns an error. Default
            value: The current time minus one year."
          in: query
          name: begin_time
          required: false
          schema:
            type: string
        - description: "The end of the requested reporting period, in ISO 8601 format. If
            this value is more than one year greater than begin_time, this
            endpoint returns an error. Default value: The current time."
          in: query
          name: end_time
          required: false
          schema:
            type: string
        - description: The maximum number of payments to return in a single response. This
            value cannot exceed 200.
          in: query
          name: limit
          schema:
            type: integer
            maximum: 200
        - description: |-
            A pagination cursor to retrieve the next set of results for your
            original query to the endpoint.
          in: query
          name: batch_token
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers:
            Link:
              description: "If returned, there are too many items to return in one request
                and you must paginate with the supplied link. "
              schema:
                type: string
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/v1Payment"
                type: array
      security:
        - oauth2:
            - PAYMENTS_READ
      summary: Provides summary information for all payments taken by a merchant or any
        of the merchant's mobile staff during a date range. Date ranges cannot
        exceed one year in length. See Date ranges for details of inclusive and
        exclusive dates.
      tags:
        - V1Transactions
  "/v1/{location_id}/payments/{payment_id}":
    get:
      deprecated: false
      description: Provides comprehensive information for a single payment.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-paymentid
      operationId: RetrievePayment
      parameters:
        - description: The ID of the payment's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The payment's Square-issued ID. You obtain this value from Payment
            objects returned by the List Payments endpoint, or Settlement
            objects returned by the List Settlements endpoint.
          in: path
          name: payment_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Payment"
      security:
        - oauth2:
            - PAYMENTS_READ
      summary: Provides comprehensive information for a single payment.
      tags:
        - V1Transactions
  "/v1/{location_id}/refunds":
    get:
      deprecated: false
      description: Provides the details for all refunds initiated by a merchant or any of
        the merchant's mobile staff during a date range. Date ranges cannot
        exceed one year in length.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-refunds
      parameters:
        - description: The ID of the location to list refunds for.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: TThe order in which payments are listed in the response.
          in: query
          name: order
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - description: "The beginning of the requested reporting period, in ISO 8601
            format. If this value is before January 1, 2013
            (2013-01-01T00:00:00Z), this endpoint returns an error. Default
            value: The current time minus one year."
          in: query
          name: begin_time
          required: false
          schema:
            type: string
        - description: "The end of the requested reporting period, in ISO 8601 format. If
            this value is more than one year greater than begin_time, this
            endpoint returns an error. Default value: The current time."
          in: query
          name: end_time
          required: false
          schema:
            type: string
        - description: The maximum number of payments to return in a single response. This
            value cannot exceed 200.
          in: query
          name: limit
          required: false
          schema:
            type: integer
            maximum: 200
        - description: |-
            A pagination cursor to retrieve the next set of results for your
            original query to the endpoint.
          in: query
          name: batch_token
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers:
            Link:
              description: "If returned, there are too many items to return in one request
                and you must paginate with the supplied link. "
              schema:
                type: string
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/v1Refund"
                type: array
      security:
        - oauth2:
            - PAYMENTS_READ
      summary: Provides the details for all refunds initiated by a merchant or any of
        the merchant's mobile staff during a date range. Date ranges cannot
        exceed one year in length.
      tags:
        - V1Transactions
    post:
      deprecated: false
      description: Issues a refund for a previously processed payment. You must issue a
        refund within 60 days of the associated payment.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#post-refunds
      parameters:
        - description: The ID of the original payment's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1CreateRefundRequest"
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        required: true
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Refund"
      security:
        - oauth2:
            - PAYMENTS_WRITE
      summary: Issues a refund for a previously processed payment. You must issue a
        refund within 60 days of the associated payment.
      tags:
        - V1Transactions
  "/v1/{location_id}/settlements":
    get:
      deprecated: false
      description: "Provides summary information for all deposits and withdrawals initiated
        by Square to a merchant's bank account during a date range. Date ranges
        cannot exceed one year in length. "
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-settlements
      operationId: ListSettlements
      parameters:
        - description: The ID of the location to list settlements for. If you specify me,
            this endpoint returns payments aggregated from all of the business's
            locations.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: TThe order in which payments are listed in the response.
          in: query
          name: order
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - description: "The beginning of the requested reporting period, in ISO 8601
            format. If this value is before January 1, 2013
            (2013-01-01T00:00:00Z), this endpoint returns an error. Default
            value: The current time minus one year."
          in: query
          name: begin_time
          required: false
          schema:
            type: string
        - description: "The end of the requested reporting period, in ISO 8601 format. If
            this value is more than one year greater than begin_time, this
            endpoint returns an error. Default value: The current time."
          in: query
          name: end_time
          required: false
          schema:
            type: string
        - description: The maximum number of payments to return in a single response. This
            value cannot exceed 200.
          in: query
          name: limit
          required: false
          schema:
            type: integer
            maximum: 200
        - description: Provide this parameter to retrieve only settlements with a
            particular status (SENT or FAILED).
          in: query
          name: status
          required: false
          schema:
            type: string
            enum:
              - SENT
              - FAILED
        - description: |-
            A pagination cursor to retrieve the next set of results for your
            original query to the endpoint.
          in: query
          name: batch_token
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers:
            Link:
              description: "If returned, there are too many items to return in one request
                and you must paginate with the supplied link. "
              schema:
                type: string
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/v1Settlement"
                type: array
      security:
        - oauth2:
            - SETTLEMENTS_READ
      summary: Provides summary information for all deposits and withdrawals initiated
        by Square to a merchant's bank account during a date range. Date ranges
        cannot exceed one year in length.
      tags:
        - V1Transactions
  "/v1/{location_id}/settlements/{settlement_id}":
    get:
      deprecated: false
      description: Provides comprehensive information for a single settlement, including
        the entries that contribute to the settlement's total.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-settlementid
      operationId: RetrieveSettlement
      parameters:
        - description: The ID of the settlements's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The settlement's Square-issued ID. You obtain this value from
            Settlement objects returned by the List Settlements endpoint.
          in: path
          name: settlement_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v1Settlement"
      security:
        - oauth2:
            - SETTLEMENTS_READ
      summary: Provides comprehensive information for a single settlement, including
        the entries that contribute to the settlement's total.
      tags:
        - V1Transactions
  /v2/catalog/batch-delete:
    post:
      description: >-
        Deletes a set of [CatalogItem](#type-catalogitem)s based on the

        provided list of target IDs and returns a set of successfully deleted IDs in

        the response. Deletion is a cascading event such that all children of the

        targeted object are also deleted. For example, deleting a CatalogItem will

        also delete all of its [CatalogItemVariation](#type-catalogitemvariation)

        children.


        `BatchDeleteCatalogObjects` succeeds even if only a portion of the targeted

        IDs can be deleted. The response will only include IDs that were

        actually deleted.
      operationId: BatchDeleteCatalogObjects
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchDeleteCatalogObjectsRequest"
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchDeleteCatalogObjectsResponse"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: BatchDeleteCatalogObjects
      tags:
        - Catalog
      x-oauthpermissions:
        - ITEMS_WRITE
  /v2/catalog/batch-retrieve:
    post:
      description: >-
        Returns a set of objects based on the provided ID.

        Each [CatalogItem](#type-catalogitem) returned in the set includes all of its

        child information including: all of its

        [CatalogItemVariation](#type-catalogitemvariation) objects, references to

        its [CatalogModifierList](#type-catalogmodifierlist) objects, and the ids of

        any [CatalogTax](#type-catalogtax) objects that apply to it.
      operationId: BatchRetrieveCatalogObjects
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchRetrieveCatalogObjectsRequest"
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchRetrieveCatalogObjectsResponse"
      security:
        - oauth2:
            - ITEMS_READ
      summary: BatchRetrieveCatalogObjects
      tags:
        - Catalog
      x-oauthpermissions:
        - ITEMS_READ
  /v2/catalog/batch-upsert:
    post:
      description: >-
        Creates or updates up to 10,000 target objects based on the provided

        list of objects. The target objects are grouped into batches and each batch is

        inserted/updated in an all-or-nothing manner. If an object within a batch is

        malformed in some way, or violates a database constraint, the entire batch

        containing that item will be disregarded. However, other batches in the same

        request may still succeed. Each batch may contain up to 1,000 objects, and

        batches will be processed in order as long as the total object count for the

        request (items, variations, modifier lists, discounts, and taxes) is no more

        than 10,000.
      operationId: BatchUpsertCatalogObjects
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchUpsertCatalogObjectsRequest"
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchUpsertCatalogObjectsResponse"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: BatchUpsertCatalogObjects
      tags:
        - Catalog
      x-oauthpermissions:
        - ITEMS_WRITE
  /v2/catalog/info:
    get:
      description: |-
        Returns information about the Square Catalog API, such as batch size
        limits for `BatchUpsertCatalogObjects`.
      operationId: CatalogInfo
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CatalogInfoResponse"
      security:
        - oauth2:
            - ITEMS_READ
      summary: CatalogInfo
      tags:
        - Catalog
      x-oauthpermissions:
        - ITEMS_READ
  /v2/catalog/list:
    get:
      description: >-
        Returns a list of [CatalogObject](#type-catalogobject)s that includes

        all objects of a set of desired types (for example, all [CatalogItem](#type-catalogitem)

        and [CatalogTax](#type-catalogtax) objects) in the catalog. The types parameter

        is specified as a comma-separated list of valid [CatalogObject](#type-catalogobject) types:

        `ITEM`, `ITEM_VARIATION`, `MODIFIER`, `MODIFIER_LIST`, `CATEGORY`, `DISCOUNT`, `TAX`.
      operationId: ListCatalog
      parameters:
        - description: >-
            The pagination cursor returned in the previous response. Leave unset
            for an initial request.

            See [Paginating results](#paginatingresults) for more information.
          in: query
          name: cursor
          required: false
          schema:
            type: string
        - description: >-
            An optional case-insensitive, comma-separated list of object types
            to retrieve, for example

            `ITEM,ITEM_VARIATION,CATEGORY`.


            The legal values are taken from the [CatalogObjectType](#type-catalogobjecttype)

            enumeration, namely `"ITEM"`, `"ITEM_VARIATION"`, `"CATEGORY"`, `"DISCOUNT"`, `"TAX"`,

            `"MODIFIER"`, or `"MODIFIER_LIST"`.
          in: query
          name: types
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCatalogResponse"
      security:
        - oauth2:
            - ITEMS_READ
      summary: ListCatalog
      tags:
        - Catalog
      x-oauthpermissions:
        - ITEMS_READ
  /v2/catalog/object:
    post:
      description: Creates or updates the target [CatalogObject](#type-catalogobject).
      operationId: UpsertCatalogObject
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpsertCatalogObjectRequest"
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpsertCatalogObjectResponse"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: UpsertCatalogObject
      tags:
        - Catalog
      x-oauthpermissions:
        - ITEMS_WRITE
  "/v2/catalog/object/{object_id}":
    delete:
      description: >-
        Deletes a single [CatalogObject](#type-catalogobject) based on the

        provided ID and returns the set of successfully deleted IDs in the response.

        Deletion is a cascading event such that all children of the targeted object

        are also deleted. For example, deleting a [CatalogItem](#type-catalogitem)

        will also delete all of its

        [CatalogItemVariation](#type-catalogitemvariation) children.
      operationId: DeleteCatalogObject
      parameters:
        - description: >-
            The ID of the [CatalogObject](#type-catalogobject) to be deleted.
            When an object is deleted, other

            objects in the graph that depend on that object will be deleted as well (for example, deleting a

            [CatalogItem](#type-catalogitem) will delete its [CatalogItemVariation](#type-catalogitemvariation)s).
          in: path
          name: object_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteCatalogObjectResponse"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: DeleteCatalogObject
      tags:
        - Catalog
      x-oauthpermissions:
        - ITEMS_WRITE
    get:
      description: >-
        Returns a single [CatalogItem](#type-catalogitem) as a

        [CatalogObject](#type-catalogobject) based on the provided ID. The returned

        object includes all of the relevant [CatalogItem](#type-catalogitem)

        information including: [CatalogItemVariation](#type-catalogitemvariation)

        children, references to its

        [CatalogModifierList](#type-catalogmodifierlist) objects, and the ids of

        any [CatalogTax](#type-catalogtax) objects that apply to it.
      operationId: RetrieveCatalogObject
      parameters:
        - description: The object ID of any type of [CatalogObject](#type-catalogobject)s
            to be retrieved.
          in: path
          name: object_id
          required: true
          schema:
            type: string
        - description: >-
            If `true`, the response will include additional objects that are
            related to the

            requested object, as follows:


            If the `object` field of the response contains a [CatalogItem](#type-catalogitem),

            its associated [CatalogCategory](#type-catalogcategory), [CatalogTax](#type-catalogtax)es, and

            [CatalogModifierList](#type-catalogmodifierlist)s will be returned in the `related_objects` field of the

            response. If the `object` field of the response contains a [CatalogItemVariation](#type-catalogitemvariation),

            its parent [CatalogItem](#type-catalogitem) will be returned in the `related_objects` field of

            the response.


            Default value: `false`
          in: query
          name: include_related_objects
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetrieveCatalogObjectResponse"
      security:
        - oauth2:
            - ITEMS_READ
      summary: RetrieveCatalogObject
      tags:
        - Catalog
      x-oauthpermissions:
        - ITEMS_READ
  /v2/catalog/search:
    post:
      description: >-
        Queries the targeted catalog using a variety of query types

        ([CatalogQuerySortedAttribute](#type-catalogquerysortedattribute),

        ([CatalogQueryExact](#type-catalogqueryexact),

        ([CatalogQueryRange](#type-catalogqueryrange),

        ([CatalogQueryText](#type-catalogquerytext),

        ([CatalogQueryItemsForTax](#type-catalogqueryitemsfortax),

        ([CatalogQueryItemsForModifierList](#type-catalogqueryitemsformodifierlist)).
      operationId: SearchCatalogObjects
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchCatalogObjectsRequest"
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchCatalogObjectsResponse"
      security:
        - oauth2:
            - ITEMS_READ
      summary: SearchCatalogObjects
      tags:
        - Catalog
      x-oauthpermissions:
        - ITEMS_READ
  /v2/catalog/update-item-modifier-lists:
    post:
      description: >-
        Updates the [CatalogModifierList](#type-catalogmodifierlist) objects

        that apply to the targeted [CatalogItem](#type-catalogitem) without having

        to perform an upsert on the entire item.
      operationId: UpdateItemModifierLists
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateItemModifierListsRequest"
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateItemModifierListsResponse"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: UpdateItemModifierLists
      tags:
        - Catalog
      x-oauthpermissions:
        - ITEMS_WRITE
  /v2/catalog/update-item-taxes:
    post:
      description: |-
        Updates the [CatalogTax](#type-catalogtax) objects that apply to the
        targeted [CatalogItem](#type-catalogitem) without having to perform an
        upsert on the entire item.
      operationId: UpdateItemTaxes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateItemTaxesRequest"
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateItemTaxesResponse"
      security:
        - oauth2:
            - ITEMS_WRITE
      summary: UpdateItemTaxes
      tags:
        - Catalog
      x-oauthpermissions:
        - ITEMS_WRITE
  /v2/customers:
    get:
      description: Lists a business's customers.
      operationId: ListCustomers
      parameters:
        - description: >-
            A pagination cursor returned by a previous call to this endpoint.

            Provide this to retrieve the next set of results for your original query.


            See [Paginating results](#paginatingresults) for more information.
          in: query
          name: cursor
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCustomersResponse"
      security:
        - oauth2:
            - CUSTOMERS_READ
      summary: ListCustomers
      tags:
        - Customers
      x-oauthpermissions:
        - CUSTOMERS_READ
    post:
      description: >-
        Creates a new customer for a business, which can have associated cards
        on file.


        You must provide __at least one__ of the following values in your request to this

        endpoint:


        - `given_name`

        - `family_name`

        - `company_name`

        - `email_address`

        - `phone_number`


        This endpoint does not accept an idempotency key. If you accidentally create

        a duplicate customer, you can delete it with the

        [DeleteCustomer](#endpoint-deletecustomer) endpoint.
      operationId: CreateCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCustomerRequest"
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCustomerResponse"
      security:
        - oauth2:
            - CUSTOMERS_WRITE
      summary: CreateCustomer
      tags:
        - Customers
      x-oauthpermissions:
        - CUSTOMERS_WRITE
  "/v2/customers/{customer_id}":
    delete:
      description: Deletes a customer from a business, along with any linked cards on file.
      operationId: DeleteCustomer
      parameters:
        - description: The ID of the customer to delete.
          in: path
          name: customer_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteCustomerResponse"
      security:
        - oauth2:
            - CUSTOMERS_WRITE
      summary: DeleteCustomer
      tags:
        - Customers
      x-oauthpermissions:
        - CUSTOMERS_WRITE
    get:
      description: Returns details for a single customer.
      operationId: RetrieveCustomer
      parameters:
        - description: The ID of the customer to retrieve.
          in: path
          name: customer_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetrieveCustomerResponse"
      security:
        - oauth2:
            - CUSTOMERS_READ
      summary: RetrieveCustomer
      tags:
        - Customers
      x-oauthpermissions:
        - CUSTOMERS_READ
    put:
      description: >-
        Updates the details of an existing customer.

        The ID of the customer may change if the customer has been merged into another customer.


        You cannot edit a customer's cards on file with this endpoint. To make changes

        to a card on file, you must delete the existing card on file with the

        [DeleteCustomerCard](#endpoint-deletecustomercard) endpoint, then create a new one with the

        [CreateCustomerCard](#endpoint-createcustomercard) endpoint.
      operationId: UpdateCustomer
      parameters:
        - description: The ID of the customer to update.
          in: path
          name: customer_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCustomerRequest"
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateCustomerResponse"
      security:
        - oauth2:
            - CUSTOMERS_WRITE
      summary: UpdateCustomer
      tags:
        - Customers
      x-oauthpermissions:
        - CUSTOMERS_WRITE
  "/v2/customers/{customer_id}/cards":
    post:
      description: |-
        Adds a card on file to an existing customer. In the United States
        Square takes care of automatically updating any cards on file that might
        have expired since you first attached them to a customer.
      operationId: CreateCustomerCard
      parameters:
        - description: The ID of the customer to link the card on file to.
          in: path
          name: customer_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCustomerCardRequest"
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCustomerCardResponse"
      security:
        - oauth2:
            - CUSTOMERS_WRITE
      summary: CreateCustomerCard
      tags:
        - Customers
      x-oauthpermissions:
        - CUSTOMERS_WRITE
  "/v2/customers/{customer_id}/cards/{card_id}":
    delete:
      description: Removes a card on file from a customer.
      operationId: DeleteCustomerCard
      parameters:
        - description: The ID of the customer that the card on file belongs to.
          in: path
          name: customer_id
          required: true
          schema:
            type: string
        - description: The ID of the card on file to delete.
          in: path
          name: card_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteCustomerCardResponse"
      security:
        - oauth2:
            - CUSTOMERS_WRITE
      summary: DeleteCustomerCard
      tags:
        - Customers
      x-oauthpermissions:
        - CUSTOMERS_WRITE
  /v2/locations:
    get:
      description: >-
        Provides the details for all of a business's locations.


        Most other Connect API endpoints have a required `location_id` path parameter.

        The `id` field of the [`Location`](#type-location) objects returned by this

        endpoint correspond to that `location_id` parameter.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLocationsResponse"
      security:
        - oauth2:
            - MERCHANT_PROFILE_READ
      summary: ListLocations
      tags:
        - Locations
      x-oauthpermissions:
        - MERCHANT_PROFILE_READ
  "/v2/locations/{location_id}/checkouts":
    post:
      description: >-
        Creates a [Checkout](#type-checkout) response that links a

        `checkoutId` and `checkout_page_url` that customers can be directed to in

        order to provide their payment information using a payment processing

        workflow hosted on connect.squareup.com.
      operationId: CreateCheckout
      parameters:
        - description: The ID of the business location to associate the checkout with.
          in: path
          name: location_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCheckoutRequest"
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCheckoutResponse"
      security:
        - oauth2:
            - PAYMENTS_WRITE
            - ORDERS_WRITE
      summary: CreateCheckout
      tags:
        - Checkout
      x-oauthpermissions:
        - PAYMENTS_WRITE
        - ORDERS_WRITE
  "/v2/locations/{location_id}/refunds":
    get:
      description: |-
        Lists refunds for one of a business's locations.

        Refunds with a `status` of `PENDING` are not currently included in this
        endpoint's response.

        Max results per [page](#paginatingresults): 50
      parameters:
        - description: The ID of the location to list refunds for.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: >-
            The beginning of the requested reporting period, in RFC 3339 format.


            See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.


            Default value: The current time minus one year.
          in: query
          name: begin_time
          required: false
          schema:
            type: string
        - description: >-
            The end of the requested reporting period, in RFC 3339 format.


            See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.


            Default value: The current time.
          in: query
          name: end_time
          required: false
          schema:
            type: string
        - description: |-
            The order in which results are listed in the response (`ASC` for
            oldest first, `DESC` for newest first).

            Default value: `DESC`
          in: query
          name: sort_order
          required: false
          schema:
            type: string
            enum:
              - DESC
              - ASC
        - description: >-
            A pagination cursor returned by a previous call to this endpoint.

            Provide this to retrieve the next set of results for your original query.


            See [Paginating results](#paginatingresults) for more information.
          in: query
          name: cursor
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRefundsResponse"
      security:
        - oauth2:
            - PAYMENTS_READ
      summary: ListRefunds
      tags:
        - Transactions
      x-oauthpermissions:
        - PAYMENTS_READ
  "/v2/locations/{location_id}/transactions":
    get:
      description: |-
        Lists transactions for a particular location.

        Max results per [page](#paginatingresults): 50
      operationId: ListTransactions
      parameters:
        - description: The ID of the location to list transactions for.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: >-
            The beginning of the requested reporting period, in RFC 3339 format.


            See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.


            Default value: The current time minus one year.
          in: query
          name: begin_time
          required: false
          schema:
            type: string
        - description: >-
            The end of the requested reporting period, in RFC 3339 format.


            See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.


            Default value: The current time.
          in: query
          name: end_time
          required: false
          schema:
            type: string
        - description: |-
            The order in which results are listed in the response (`ASC` for
            oldest first, `DESC` for newest first).

            Default value: `DESC`
          in: query
          name: sort_order
          required: false
          schema:
            type: string
            enum:
              - DESC
              - ASC
        - description: >-
            A pagination cursor returned by a previous call to this endpoint.

            Provide this to retrieve the next set of results for your original query.


            See [Paginating results](#paginatingresults) for more information.
          in: query
          name: cursor
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTransactionsResponse"
      security:
        - oauth2:
            - PAYMENTS_READ
      summary: ListTransactions
      tags:
        - Transactions
      x-oauthpermissions:
        - PAYMENTS_READ
    post:
      description: >-
        Charges a card represented by a card nonce or a customer's card on file.


        Your request to this endpoint must include _either_:


        - A value for the `card_nonce` parameter (to charge a card nonce generated

        with the `SqPaymentForm`)

        - Values for the `customer_card_id` and `customer_id` parameters (to charge

        a customer's card on file)


        In order for an e-commerce payment to potentially qualify for

        [Square chargeback protection](https://squareup.com/help/article/5394), you

        _must_ provide values for the following parameters in your request:


        - `buyer_email_address`

        - At least one of `billing_address` or `shipping_address`


        When this response is returned, the amount of Square's processing fee might not yet be

        calculated. To obtain the processing fee, wait about ten seconds and call

        [RetrieveTransaction](#endpoint-retrievetransaction). See the `processing_fee_money`

        field of each [Tender included](#type-tender) in the transaction.
      operationId: Charge
      parameters:
        - description: The ID of the location to associate the created transaction with.
          in: path
          name: location_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChargeRequest"
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChargeResponse"
      security:
        - oauth2:
            - PAYMENTS_WRITE
      summary: Charge
      tags:
        - Transactions
      x-oauthpermissions:
        - PAYMENTS_WRITE
  "/v2/locations/{location_id}/transactions/{transaction_id}":
    get:
      description: Retrieves details for a single transaction.
      operationId: RetrieveTransaction
      parameters:
        - description: The ID of the transaction's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The ID of the transaction to retrieve.
          in: path
          name: transaction_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetrieveTransactionResponse"
      security:
        - oauth2:
            - PAYMENTS_READ
      summary: RetrieveTransaction
      tags:
        - Transactions
      x-oauthpermissions:
        - PAYMENTS_READ
  "/v2/locations/{location_id}/transactions/{transaction_id}/capture":
    post:
      description: >-
        Captures a transaction that was created with the
        [Charge](#endpoint-charge)

        endpoint with a `delay_capture` value of `true`.


        See [Delayed capture transactions](/articles/delayed-capture-transactions/)

        for more information.
      operationId: CaptureTransaction
      parameters:
        - description: ""
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: transaction_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CaptureTransactionResponse"
      security:
        - oauth2:
            - PAYMENTS_WRITE
      summary: CaptureTransaction
      tags:
        - Transactions
      x-oauthpermissions:
        - PAYMENTS_WRITE
  "/v2/locations/{location_id}/transactions/{transaction_id}/refund":
    post:
      description: >-
        Initiates a refund for a previously charged tender.


        You must issue a refund within 120 days of the associated payment. See

        (this article)[https://squareup.com/help/us/en/article/5060] for more information

        on refund behavior.
      parameters:
        - description: The ID of the original transaction's associated location.
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: The ID of the original transaction that includes the tender to
            refund.
          in: path
          name: transaction_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRefundRequest"
        description: |-
          An object containing the fields to POST for the request.

          See the corresponding object definition for field details.
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRefundResponse"
      security:
        - oauth2:
            - PAYMENTS_WRITE
      summary: CreateRefund
      tags:
        - Transactions
      x-oauthpermissions:
        - PAYMENTS_WRITE
  "/v2/locations/{location_id}/transactions/{transaction_id}/void":
    post:
      description: >-
        Cancels a transaction that was created with the
        [Charge](#endpoint-charge)

        endpoint with a `delay_capture` value of `true`.


        See [Delayed capture transactions](/articles/delayed-capture-transactions/)

        for more information.
      operationId: VoidTransaction
      parameters:
        - description: ""
          in: path
          name: location_id
          required: true
          schema:
            type: string
        - description: ""
          in: path
          name: transaction_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VoidTransactionResponse"
      security:
        - oauth2:
            - PAYMENTS_WRITE
      summary: VoidTransaction
      tags:
        - Transactions
      x-oauthpermissions:
        - PAYMENTS_WRITE
servers:
  - url: https://connect.squareup.com
components:
  requestBodies:
    v1Category:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/v1Category"
      description: |-
        An object containing the fields to POST for the request.

        See the corresponding object definition for field details.
      required: true
    v1Timecard:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/v1Timecard"
      description: |-
        An object containing the fields to POST for the request.

        See the corresponding object definition for field details.
      required: true
    v1Variation:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/v1Variation"
      description: |-
        An object containing the fields to POST for the request.

        See the corresponding object definition for field details.
      required: true
    v1Employee:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/v1Employee"
      description: |-
        An object containing the fields to POST for the request.

        See the corresponding object definition for field details.
      required: true
    v1Page:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/v1Page"
      description: |-
        An object containing the fields to POST for the request.

        See the corresponding object definition for field details.
      required: true
    v1Discount:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/v1Discount"
      description: |-
        An object containing the fields to POST for the request.

        See the corresponding object definition for field details.
      required: true
    v1Fee:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/v1Fee"
      description: |-
        An object containing the fields to POST for the request.

        See the corresponding object definition for field details.
      required: true
    v1Item:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/v1Item"
      description: |-
        An object containing the fields to POST for the request.

        See the corresponding object definition for field details.
      required: true
    v1ModifierOption:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/v1ModifierOption"
      description: |-
        An object containing the fields to POST for the request.

        See the corresponding object definition for field details.
      required: true
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://connect.squareup.com/oauth2/authorize
          tokenUrl: https://connect.squareup.com/oauth2/token
          scopes:
            BANK_ACCOUNTS_READ: GET endpoints related to a merchant's bank accounts
            CUSTOMERS_READ: " GET endpoints related to customer management"
            CUSTOMERS_WRITE: POST, PUT, and DELETE endpoints related to customer management
            EMPLOYEES_READ: GET endpoints related to employee management
            EMPLOYEES_WRITE: POST, PUT, and DELETE endpoints related to employee management
            ITEMS_READ: GET endpoints related to a merchant's item library
            ITEMS_WRITE: POST, PUT, and DELETE endpoints related to a merchant's item
              library
            MERCHANT_PROFILE_READ: GET endpoints related to a merchant's business and location
              entities. Almost all Connect API applications need this permission
              in order to obtain a merchant's location IDs
            ORDERS_READ: GET endpoints related to a merchant's orders
            ORDERS_WRITE: POST, PUT, and DELETE endpoints related to a merchant's orders
            PAYMENTS_READ: GET endpoints related to transactions and refunds
            PAYMENTS_WRITE: POST, PUT, and DELETE endpoints related to transactions and
              refunds. E-commerce applications must request this permission
            SETTLEMENTS_READ: GET endpoints related to settlements (deposits)
            TIMECARDS_READ: GET endpoints related to employee timecards
            TIMECARDS_WRITE: POST, PUT, and DELETE endpoints related to employee timecards
  schemas:
    Address:
      description: Represents a physical address.
      properties:
        address_line_1:
          description: >-
            The first line of the address.


            Fields that start with `address_line` provide the address's most specific

            details, like street number, street name, and building name. They do *not*

            provide less specific details like city, state/province, or country (these

            details are provided in other fields).
          type: string
        address_line_2:
          description: The second line of the address, if any.
          type: string
        address_line_3:
          description: The third line of the address, if any.
          type: string
        administrative_district_level_1:
          description: |-
            A civil entity within the address's country. In the US, this
            is the state.
          type: string
        administrative_district_level_2:
          description: >-
            A civil entity within the address's
            `administrative_district_level_1`.

            In the US, this is the county.
          type: string
        administrative_district_level_3:
          description: >-
            A civil entity within the address's
            `administrative_district_level_2`,

            if any.
          type: string
        country:
          description: The address's country, in ISO 3166-1-alpha-2 format.
          enum:
            - ZZ
            - AD
            - AE
            - AF
            - AG
            - AI
            - AL
            - AM
            - AO
            - AQ
            - AR
            - AS
            - AT
            - AU
            - AW
            - AX
            - AZ
            - BA
            - BB
            - BD
            - BE
            - BF
            - BG
            - BH
            - BI
            - BJ
            - BL
            - BM
            - BN
            - BO
            - BQ
            - BR
            - BS
            - BT
            - BV
            - BW
            - BY
            - BZ
            - CA
            - CC
            - CD
            - CF
            - CG
            - CH
            - CI
            - CK
            - CL
            - CM
            - CN
            - CO
            - CR
            - CU
            - CV
            - CW
            - CX
            - CY
            - CZ
            - DE
            - DJ
            - DK
            - DM
            - DO
            - DZ
            - EC
            - EE
            - EG
            - EH
            - ER
            - ES
            - ET
            - FI
            - FJ
            - FK
            - FM
            - FO
            - FR
            - GA
            - GB
            - GD
            - GE
            - GF
            - GG
            - GH
            - GI
            - GL
            - GM
            - GN
            - GP
            - GQ
            - GR
            - GS
            - GT
            - GU
            - GW
            - GY
            - HK
            - HM
            - HN
            - HR
            - HT
            - HU
            - ID
            - IE
            - IL
            - IM
            - IN
            - IO
            - IQ
            - IR
            - IS
            - IT
            - JE
            - JM
            - JO
            - JP
            - KE
            - KG
            - KH
            - KI
            - KM
            - KN
            - KP
            - KR
            - KW
            - KY
            - KZ
            - LA
            - LB
            - LC
            - LI
            - LK
            - LR
            - LS
            - LT
            - LU
            - LV
            - LY
            - MA
            - MC
            - MD
            - ME
            - MF
            - MG
            - MH
            - MK
            - ML
            - MM
            - MN
            - MO
            - MP
            - MQ
            - MR
            - MS
            - MT
            - MU
            - MV
            - MW
            - MX
            - MY
            - MZ
            - NA
            - NC
            - NE
            - NF
            - NG
            - NI
            - NL
            - NO
            - NP
            - NR
            - NU
            - NZ
            - OM
            - PA
            - PE
            - PF
            - PG
            - PH
            - PK
            - PL
            - PM
            - PN
            - PR
            - PS
            - PT
            - PW
            - PY
            - QA
            - RE
            - RO
            - RS
            - RU
            - RW
            - SA
            - SB
            - SC
            - SD
            - SE
            - SG
            - SH
            - SI
            - SJ
            - SK
            - SL
            - SM
            - SN
            - SO
            - SR
            - SS
            - ST
            - SV
            - SX
            - SY
            - SZ
            - TC
            - TD
            - TF
            - TG
            - TH
            - TJ
            - TK
            - TL
            - TM
            - TN
            - TO
            - TR
            - TT
            - TV
            - TW
            - TZ
            - UA
            - UG
            - UM
            - US
            - UY
            - UZ
            - VA
            - VC
            - VE
            - VG
            - VI
            - VN
            - VU
            - WF
            - WS
            - YE
            - YT
            - ZA
            - ZM
            - ZW
          type: string
        first_name:
          description: Optional first name when it's representing recipient.
          type: string
        last_name:
          description: Optional last name when it's representing recipient.
          type: string
        locality:
          description: The city or town of the address.
          type: string
        organization:
          description: Optional organization name when it's representing recipient.
          type: string
        postal_code:
          description: The address's postal code.
          type: string
        sublocality:
          description: A civil region within the address's `locality`, if any.
          type: string
        sublocality_2:
          description: A civil region within the address's `sublocality`, if any.
          type: string
        sublocality_3:
          description: A civil region within the address's `sublocality_2`, if any.
          type: string
      type: object
    BatchDeleteCatalogObjectsRequest:
      description: ""
      example:
        request_body:
          object_ids:
            - W62UWFY35CWMYGVWK6TWJDNI
            - AA27W3M2GGTF3H6AVPNB77CK
        request_url: https://connect.squareup.com/v2/catalog/batch-delete
      properties:
        object_ids:
          description: >-
            The IDs of the [CatalogObject](#type-catalogobject)s to be deleted.
            When an object is deleted, other objects

            in the graph that depend on that object will be deleted as well (for example, deleting a

            [CatalogItem](#type-catalogitem) will delete its [CatalogItemVariation](#type-catalogitemvariation)s).
          items:
            type: string
          type: array
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.csharp
        php: /sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.php
        python: /sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.python
        ruby: /sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsRequest.ruby
    BatchDeleteCatalogObjectsResponse:
      description: ""
      example:
        deleted_at: 2016-11-16T22:25:24.878Z
        deleted_object_ids:
          - W62UWFY35CWMYGVWK6TWJDNI
          - AA27W3M2GGTF3H6AVPNB77CK
      properties:
        deleted_at:
          description: The database [timestamp](#workingwithdates) of this deletion in RFC
            3339 format, e.g., "2016-09-04T23:59:33.123Z".
          type: string
        deleted_object_ids:
          description: The IDs of all [CatalogObject](#type-catalogobject)s deleted by this
            request.
          items:
            type: string
          type: array
        errors:
          description: The set of [Error](#type-error)s encountered.
          items:
            $ref: "#/components/schemas/Error"
          type: array
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.csharp
        php: /sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.php
        python: /sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.python
        ruby: /sdk_samples/Catalog/BatchDeleteCatalogObjects/BatchDeleteCatalogObjectsResponse.ruby
    BatchRetrieveCatalogObjectsRequest:
      description: ""
      example:
        request_body:
          include_related_objects: true
          object_ids:
            - W62UWFY35CWMYGVWK6TWJDNI
            - AA27W3M2GGTF3H6AVPNB77CK
        request_url: https://connect.squareup.com/v2/catalog/batch-retrieve
      properties:
        include_related_objects:
          description: >-
            If `true`, the response will include additional objects that are
            related to the

            requested objects, as follows:


            If the `objects` field of the response contains a [CatalogItem](#type-catalogitem),

            its associated [CatalogCategory](#type-catalogcategory), [CatalogTax](#type-catalogtax)es, and

            [CatalogModifierList](#type-catalogmodifierlist)s will be returned in the `related_objects` field of the

            response. If the `objects` field of the response contains a [CatalogItemVariation](#type-catalogitemvariation),

            its parent [CatalogItem](#type-catalogitem) will be returned in the `related_objects` field of

            the response.
          type: boolean
        object_ids:
          description: The IDs of the [CatalogObject](#type-catalogobject)s to be retrieved.
          items:
            type: string
          type: array
      required:
        - object_ids
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.csharp
        php: /sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.php
        python: /sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.python
        ruby: /sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsRequest.ruby
    BatchRetrieveCatalogObjectsResponse:
      description: ""
      example:
        objects:
          - id: W62UWFY35CWMYGVWK6TWJDNI
            is_deleted: false
            item_data:
              category_id: BJNQCF2FJ6S6UIDT65ABHLRX
              description: Hot Leaf Juice
              name: Tea
              tax_ids:
                - HURXQOOAIC4IZSI2BEXQRYFY
              variations:
                - id: 2TZFAOHWGG7PAK2QEXWYPZSP
                  is_deleted: false
                  item_variation_data:
                    item_id: W62UWFY35CWMYGVWK6TWJDNI
                    name: Mug
                    ordinal: 0
                    price_money:
                      amount: 150
                      currency: USD
                    pricing_type: FIXED_PRICING
                  present_at_all_locations: true
                  type: ITEM_VARIATION
                  updated_at: 2016-11-16T22:25:24.878Z
                  version: 1479335124878
            present_at_all_locations: true
            type: ITEM
            updated_at: 2016-11-16T22:25:24.878Z
            version: 1479335124878
          - id: AA27W3M2GGTF3H6AVPNB77CK
            is_deleted: false
            item_data:
              category_id: BJNQCF2FJ6S6UIDT65ABHLRX
              description: Hot Bean Juice
              name: Coffee
              tax_ids:
                - HURXQOOAIC4IZSI2BEXQRYFY
              variations:
                - id: LBTYIHNHU52WOIHWT7SNRIYH
                  is_deleted: false
                  item_variation_data:
                    item_id: AA27W3M2GGTF3H6AVPNB77CK
                    name: Regular
                    ordinal: 0
                    price_money:
                      amount: 250
                      currency: USD
                    pricing_type: FIXED_PRICING
                  present_at_all_locations: true
                  type: ITEM_VARIATION
                  updated_at: 2016-11-16T22:25:24.878Z
                  version: 1479335124878
                - id: PKYIC7HGGKW5CYVSCVDEIMHY
                  is_deleted: false
                  item_variation_data:
                    item_id: AA27W3M2GGTF3H6AVPNB77CK
                    name: Large
                    ordinal: 1
                    price_money:
                      amount: 350
                      currency: USD
                    pricing_type: FIXED_PRICING
                  present_at_all_locations: true
                  type: ITEM_VARIATION
                  updated_at: 2016-11-16T22:25:24.878Z
                  version: 1479335124878
            present_at_all_locations: true
            type: ITEM
            updated_at: 2016-11-16T22:25:24.878Z
            version: 1479335124878
        related_objects:
          - category_data:
              name: Beverages
            id: BJNQCF2FJ6S6UIDT65ABHLRX
            is_deleted: false
            present_at_all_locations: true
            type: CATEGORY
            updated_at: 2016-11-16T22:25:24.878Z
            version: 1479335124878
          - id: HURXQOOAIC4IZSI2BEXQRYFY
            is_deleted: false
            present_at_all_locations: true
            tax_data:
              calculation_phase: TAX_SUBTOTAL_PHASE
              enabled: true
              inclusion_type: ADDITIVE
              name: Sales Tax
              percentage: "5.0"
            type: TAX
            updated_at: 2016-11-16T22:25:24.878Z
            version: 1479335124878
      properties:
        errors:
          description: The set of [Error](#type-error)s encountered.
          items:
            $ref: "#/components/schemas/Error"
          type: array
        objects:
          description: A list of [CatalogObject](#type-catalogobject)s returned.
          items:
            $ref: "#/components/schemas/CatalogObject"
          type: array
        related_objects:
          description: A list of [CatalogObject](#type-catalogobject)s referenced by the
            object in the `objects` field.
          items:
            $ref: "#/components/schemas/CatalogObject"
          type: array
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.csharp
        php: /sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.php
        python: /sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.python
        ruby: /sdk_samples/Catalog/BatchRetrieveCatalogObjects/BatchRetrieveCatalogObjectsResponse.ruby
    BatchUpsertCatalogObjectsRequest:
      description: ""
      example:
        request_body:
          batches:
            - objects:
                - id: "#Tea"
                  item_data:
                    category_id: "#Beverages"
                    description: Hot Leaf Juice
                    name: Tea
                    tax_ids:
                      - "#SalesTax"
                    variations:
                      - id: "#Tea_Mug"
                        item_variation_data:
                          item_id: "#Tea"
                          name: Mug
                          price_money:
                            amount: 150
                            currency: USD
                          pricing_type: FIXED_PRICING
                        present_at_all_locations: true
                        type: ITEM_VARIATION
                  present_at_all_locations: true
                  type: ITEM
                - id: "#Coffee"
                  item_data:
                    category_id: "#Beverages"
                    description: Hot Bean Juice
                    name: Coffee
                    tax_ids:
                      - "#SalesTax"
                    variations:
                      - id: "#Coffee_Regular"
                        item_variation_data:
                          item_id: "#Coffee"
                          name: Regular
                          price_money:
                            amount: 250
                            currency: USD
                          pricing_type: FIXED_PRICING
                        present_at_all_locations: true
                        type: ITEM_VARIATION
                      - id: "#Coffee_Large"
                        item_variation_data:
                          item_id: "#Coffee"
                          name: Large
                          price_money:
                            amount: 350
                            currency: USD
                          pricing_type: FIXED_PRICING
                        present_at_all_locations: true
                        type: ITEM_VARIATION
                  present_at_all_locations: true
                  type: ITEM
                - category_data:
                    name: Beverages
                  id: "#Beverages"
                  present_at_all_locations: true
                  type: CATEGORY
                - id: "#SalesTax"
                  present_at_all_locations: true
                  tax_data:
                    applies_to_custom_amounts: true
                    calculation_phase: TAX_SUBTOTAL_PHASE
                    enabled: true
                    inclusion_type: ADDITIVE
                    name: Sales Tax
                    percentage: "5.0"
                  type: TAX
          idempotency_key: 789ff020-f723-43a9-b4b5-43b5dc1fa3dc
        request_url: https://connect.squareup.com/v2/catalog/batch-upsert
      properties:
        batches:
          description: >-
            A batch of [CatalogObject](#type-catalogobject)s to be
            inserted/updated atomically.

            The objects within a batch will be inserted in an all-or-nothing fashion, i.e., if an error occurs

            attempting to insert or update an object within a batch, the entire batch will be rejected. However, an error

            in one batch will not affect other batches within the same request.


            For each object, its `updated_at` field is ignored and replaced with a current [timestamp](#workingwithdates), and its

            `is_deleted` field must not be set to `true`.


            To modify an existing object, supply its ID. To create a new object, use an ID starting

            with `#`. These IDs may be used to create relationships between an object and attributes of

            other objects that reference it. For example, you can create a [CatalogItem](#type-catalogitem) with

            ID `#ABC` and a [CatalogItemVariation](#type-catalogitemvariation) with its `item_id` attribute set to

            `#ABC` in order to associate the [CatalogItemVariation](#type-catalogitemvariation) with its parent

            [CatalogItem](#type-catalogitem).


            Any `#`-prefixed IDs are valid only within a single atomic batch, and will be replaced by server-generated IDs.


            Each batch may contain up to 1,000 objects. The total number of objects across all batches for a single request

            may not exceed 10,000. If either of these limits is violated, an error will be returned and no objects will

            be inserted or updated.
          items:
            $ref: "#/components/schemas/CatalogObjectBatch"
          type: array
        idempotency_key:
          description: |-
            A value you specify that uniquely identifies this
            request among all your requests. A common way to create
            a valid idempotency key is to use a Universally unique
            identifier (UUID).

            If you're unsure whether a particular request was successful,
            you can reattempt it with the same idempotency key without
            worrying about creating duplicate objects.

            See [Idempotency keys](#idempotencykeys) for more information.
          minLength: 1
          type: string
      required:
        - idempotency_key
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.csharp
        php: /sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.php
        python: /sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.python
        ruby: /sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsRequest.ruby
    BatchUpsertCatalogObjectsResponse:
      description: ""
      example:
        id_mappings:
          - client_object_id: "#Tea"
            object_id: ZSDZN34NAXDLC6D5ZQMNSOUM
          - client_object_id: "#Coffee"
            object_id: PJMCEBHHUS3OKDB6PYUHLCPP
          - client_object_id: "#Beverages"
            object_id: LYT72K3WGJFFCIMB63XARP3I
          - client_object_id: "#SalesTax"
            object_id: XHSHLHNWSI3HVI4BW5ZUZXI3
          - client_object_id: "#Tea_Mug"
            object_id: NAYHET5R52MIYCEF34ZMAHFM
          - client_object_id: "#Coffee_Regular"
            object_id: OTYDX45SPG7LJQUVCBZI4INH
          - client_object_id: "#Coffee_Large"
            object_id: GZDA3JB37FYVOPI4AOEBOITI
        objects:
          - id: ZSDZN34NAXDLC6D5ZQMNSOUM
            is_deleted: false
            item_data:
              category_id: LYT72K3WGJFFCIMB63XARP3I
              description: Hot Leaf Juice
              name: Tea
              tax_ids:
                - XHSHLHNWSI3HVI4BW5ZUZXI3
              variations:
                - id: NAYHET5R52MIYCEF34ZMAHFM
                  is_deleted: false
                  item_variation_data:
                    item_id: ZSDZN34NAXDLC6D5ZQMNSOUM
                    name: Mug
                    ordinal: 0
                    price_money:
                      amount: 150
                      currency: USD
                    pricing_type: FIXED_PRICING
                  present_at_all_locations: true
                  type: ITEM_VARIATION
                  updated_at: 2017-05-10T18:48:39.798Z
                  version: 1494442119798
            present_at_all_locations: true
            type: ITEM
            updated_at: 2017-05-10T18:48:39.798Z
            version: 1494442119798
          - id: PJMCEBHHUS3OKDB6PYUHLCPP
            is_deleted: false
            item_data:
              category_id: LYT72K3WGJFFCIMB63XARP3I
              description: Hot Bean Juice
              name: Coffee
              tax_ids:
                - XHSHLHNWSI3HVI4BW5ZUZXI3
              variations:
                - id: OTYDX45SPG7LJQUVCBZI4INH
                  is_deleted: false
                  item_variation_data:
                    item_id: PJMCEBHHUS3OKDB6PYUHLCPP
                    name: Regular
                    ordinal: 0
                    price_money:
                      amount: 250
                      currency: USD
                    pricing_type: FIXED_PRICING
                  present_at_all_locations: true
                  type: ITEM_VARIATION
                  updated_at: 2017-05-10T18:48:39.798Z
                  version: 1494442119798
                - id: GZDA3JB37FYVOPI4AOEBOITI
                  is_deleted: false
                  item_variation_data:
                    item_id: PJMCEBHHUS3OKDB6PYUHLCPP
                    name: Large
                    ordinal: 1
                    price_money:
                      amount: 350
                      currency: USD
                    pricing_type: FIXED_PRICING
                  present_at_all_locations: true
                  type: ITEM_VARIATION
                  updated_at: 2017-05-10T18:48:39.798Z
                  version: 1494442119798
            present_at_all_locations: true
            type: ITEM
            updated_at: 2017-05-10T18:48:39.798Z
            version: 1494442119798
          - category_data:
              name: Beverages
            id: LYT72K3WGJFFCIMB63XARP3I
            is_deleted: false
            present_at_all_locations: true
            type: CATEGORY
            updated_at: 2017-05-10T18:48:39.798Z
            version: 1494442119798
          - id: XHSHLHNWSI3HVI4BW5ZUZXI3
            is_deleted: false
            present_at_all_locations: true
            tax_data:
              applies_to_custom_amounts: true
              calculation_phase: TAX_SUBTOTAL_PHASE
              enabled: true
              inclusion_type: ADDITIVE
              name: Sales Tax
              percentage: "5.0"
            type: TAX
            updated_at: 2017-05-10T18:48:39.798Z
            version: 1494442119798
      properties:
        errors:
          description: The set of [Error](#type-error)s encountered.
          items:
            $ref: "#/components/schemas/Error"
          type: array
        id_mappings:
          description: The mapping between client and server IDs for this Upsert.
          items:
            $ref: "#/components/schemas/CatalogIdMapping"
          type: array
        objects:
          description: The created [CatalogObject](#type-catalogobject)s
          items:
            $ref: "#/components/schemas/CatalogObject"
          type: array
        updated_at:
          description: The database [timestamp](#workingwithdates) of this update in RFC
            3339 format, e.g., "2016-09-04T23:59:33.123Z".
          type: string
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.csharp
        php: /sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.php
        python: /sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.python
        ruby: /sdk_samples/Catalog/BatchUpsertCatalogObjects/BatchUpsertCatalogObjectsResponse.ruby
    CaptureTransactionRequest:
      description: ""
      example:
        request_url: https://connect.squareup.com/v2/locations/LOCATION_ID/transactions/TRANSACTION_ID/capture
      properties: {}
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/CaptureTransaction/CaptureTransactionRequest.csharp
        php: /sdk_samples/CaptureTransaction/CaptureTransactionRequest.php
        python: /sdk_samples/CaptureTransaction/CaptureTransactionRequest.python
        ruby: /sdk_samples/CaptureTransaction/CaptureTransactionRequest.ruby
    CaptureTransactionResponse:
      description: >-
        Defines the fields that are included in the response body of

        a request to the [CaptureTransaction](#endpoint-capturetransaction) endpoint.
      example: {}
      properties:
        errors:
          description: Any errors that occurred during the request.
          items:
            $ref: "#/components/schemas/Error"
          type: array
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/CaptureTransaction/CaptureTransactionResponse.csharp
        php: /sdk_samples/CaptureTransaction/CaptureTransactionResponse.php
        python: /sdk_samples/CaptureTransaction/CaptureTransactionResponse.python
        ruby: /sdk_samples/CaptureTransaction/CaptureTransactionResponse.ruby
    Card:
      description: Represents the non-confidential details of a credit card.
      properties:
        billing_address:
          $ref: "#/components/schemas/Address"
        card_brand:
          description: |-
            The card's brand (such as `VISA`). See [CardBrand](#type-cardbrand)
            for all possible values.
          enum:
            - OTHER_BRAND
            - VISA
            - MASTERCARD
            - AMERICAN_EXPRESS
            - DISCOVER
            - DISCOVER_DINERS
            - JCB
            - CHINA_UNIONPAY
            - SQUARE_GIFT_CARD
          type: string
        cardholder_name:
          description: |-
            The cardholder name. This value is present only if this object
            represents a customer's card on file.
          type: string
        exp_month:
          description: >-
            The month of the card's expiration date. This value is always
            between

            `1` and `12`, inclusive.
          format: int64
          type: integer
        exp_year:
          description: The four-digit year of the card's expiration date.
          format: int64
          type: integer
        fingerprint:
          description: >-
            The unique string fingerprint for the card. 

            The fingerprint is based on the credit card number and is unique to the merchant. 

            If a card is used at multiple locations for the same merchant, it will have the same fingerprint in each case.

            Note: Fingerprint may not exist on old transactions.
          type: string
        id:
          description: The card's unique ID, if any.
          type: string
        last_4:
          description: The last 4 digits of the card's number.
          type: string
      type: object
    CardBrand:
      description: Indicates a credit card's brand, such as `VISA`.
      enum:
        - OTHER_BRAND
        - VISA
        - MASTERCARD
        - AMERICAN_EXPRESS
        - DISCOVER
        - DISCOVER_DINERS
        - JCB
        - CHINA_UNIONPAY
        - SQUARE_GIFT_CARD
      type: string
    CatalogCategory:
      description: A category to which an [CatalogItem](#type-catalogitem) belongs in the
        Catalog object model.
      example:
        object:
          category_data:
            name: Beverages
          id: "#Beverages"
          present_at_all_locations: true
          type: CATEGORY
      properties:
        name:
          description: The category's name. Searchable.
          minLength: 1
          type: string
      required:
        - name
      type: object
    CatalogDiscount:
      description: A discount in the Catalog object model.
      example:
        object:
          discount_data:
            discount_type: FIXED_PERCENTAGE
            label_color: red
            name: Welcome to the Dark(Roast) Side!
            percentage: "5.4"
            pin_required: false
          id: "#Maythe4th"
          present_at_all_locations: true
          type: DISCOUNT
      properties:
        amount_money:
          $ref: "#/components/schemas/Money"
        discount_type:
          description: >-
            Indicates whether the discount is a fixed amount or percentage, or
            entered at the time of sale.

            See [CatalogDiscountType](#type-catalogdiscounttype) for all possible values.
          enum:
            - FIXED_PERCENTAGE
            - FIXED_AMOUNT
            - VARIABLE_PERCENTAGE
            - VARIABLE_AMOUNT
          type: string
        label_color:
          description: The color of the discount's display label in the Square Point of
            Sale app.
          type: string
        name:
          description: The discount's name. Searchable.
          minLength: 1
          type: string
        percentage:
          description: >-
            The percentage of the discount as a string representation of a
            decimal number, using a `.` as the decimal

            separator and without a `%` sign. A value of `7.5` corresponds to `7.5%`. Specify a percentage of `0` if `discount_type`

            is `VARIABLE_PERCENTAGE`.


            Do not include this field for amount-based or variable discounts.
          type: string
        pin_required:
          description: >-
            Indicates whether a mobile staff member needs to enter their PIN to
            apply the

            discount to a payment in the Square Point of Sale app.
          type: boolean
      required:
        - name
      type: object
    CatalogDiscountType:
      description: How to apply a [CatalogDiscount](#type-catalogdiscount) to a
        [CatalogItem](#type-catalogitem).
      enum:
        - FIXED_PERCENTAGE
        - FIXED_AMOUNT
        - VARIABLE_PERCENTAGE
        - VARIABLE_AMOUNT
      type: string
    CatalogIdMapping:
      description: A mapping between a client-supplied temporary ID and a permanent server
        ID.
      properties:
        client_object_id:
          description: The client-supplied, temporary `#`-prefixed ID for a new
            [CatalogObject](#type-catalogobject).
          type: string
        object_id:
          description: The permanent ID for the [CatalogObject](#type-catalogobject)
            created by the server.
          type: string
      type: object
    CatalogInfoRequest:
      description: ""
      example:
        request_url: https://connect.squareup.com/v2/catalog/info
      properties: {}
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.csharp
        php: /sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.php
        python: /sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.python
        ruby: /sdk_samples/Catalog/CatalogInfo/CatalogInfoRequest.ruby
    CatalogInfoResponse:
      description: ""
      example:
        limits:
          batch_delete_max_object_ids: 200
          batch_retrieve_max_object_ids: 1000
          batch_upsert_max_objects_per_batch: 1000
          batch_upsert_max_total_objects: 10000
          search_max_page_limit: 1000
          update_item_modifier_lists_max_item_ids: 1000
          update_item_modifier_lists_max_modifier_lists_to_disable: 1000
          update_item_modifier_lists_max_modifier_lists_to_enable: 1000
          update_item_taxes_max_item_ids: 1000
          update_item_taxes_max_taxes_to_disable: 1000
          update_item_taxes_max_taxes_to_enable: 1000
      properties:
        errors:
          description: The set of [Error](#type-error)s encountered.
          items:
            $ref: "#/components/schemas/Error"
          type: array
        limits:
          $ref: "#/components/schemas/CatalogInfoResponseLimits"
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.csharp
        php: /sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.php
        python: /sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.python
        ruby: /sdk_samples/Catalog/CatalogInfo/CatalogInfoResponse.ruby
    CatalogInfoResponseLimits:
      description: ""
      properties:
        batch_delete_max_object_ids:
          description: |-
            The maximum number of object IDs that may be included in a single
            `/v2/catalog/batch-delete` request.
          type: integer
        batch_retrieve_max_object_ids:
          description: >-
            The maximum number of object IDs that may appear in a
            `/v2/catalog/batch-retrieve`

            request.
          type: integer
        batch_upsert_max_objects_per_batch:
          description: >-
            The maximum number of objects that may appear within a single batch
            in a

            `/v2/catalog/batch-upsert` request.
          type: integer
        batch_upsert_max_total_objects:
          description: >-
            The maximum number of objects that may appear across all batches in
            a

            `/v2/catalog/batch-upsert` request.
          type: integer
        search_max_page_limit:
          description: |-
            The maximum number of results that may be returned in a page of a
            `/v2/catalog/search` response.
          type: integer
        update_item_modifier_lists_max_item_ids:
          description: |-
            The maximum number of item IDs that may be included in a single
            `/v2/catalog/update-item-modifier-lists` request.
          type: integer
        update_item_modifier_lists_max_modifier_lists_to_disable:
          description: >-
            The maximum number of modifier list IDs to be disabled that may be
            included in

            a single `/v2/catalog/update-item-modifier-lists` request.
          type: integer
        update_item_modifier_lists_max_modifier_lists_to_enable:
          description: >-
            The maximum number of modifier list IDs to be enabled that may be
            included in

            a single `/v2/catalog/update-item-modifier-lists` request.
          type: integer
        update_item_taxes_max_item_ids:
          description: |-
            The maximum number of item IDs that may be included in a single
            `/v2/catalog/update-item-taxes` request.
          type: integer
        update_item_taxes_max_taxes_to_disable:
          description: >-
            The maximum number of tax IDs to be disabled that may be included in
            a single

            `/v2/catalog/update-item-taxes` request.
          type: integer
        update_item_taxes_max_taxes_to_enable:
          description: >-
            The maximum number of tax IDs to be enabled that may be included in
            a single

            `/v2/catalog/update-item-taxes` request.
          type: integer
      type: object
    CatalogItem:
      description: An item (i.e., product family) in the Catalog object model.
      example:
        object:
          id: "#Cocoa"
          item_data:
            abbreviation: Ch
            description: Hot chocolate
            name: Cocoa
            visibility: PRIVATE
          present_at_all_locations: true
          type: ITEM
      properties:
        abbreviation:
          description: The text of the item's display label in the Square Point of Sale
            app. Only up to the first five characters of the string are
            used.  Searchable.
          type: string
        available_electronically:
          description: If `true`, the item can be added to electronically fulfilled orders
            from the merchant's online store.
          type: boolean
        available_for_pickup:
          description: If `true`, the item can be added to pickup orders from the
            merchant's online store.
          type: boolean
        available_online:
          description: If `true`, the item can be added to shipping orders from the
            merchant's online store.
          type: boolean
        category_id:
          description: The ID of the item's category, if any.
          type: string
        description:
          description: The item's description. Searchable.
          type: string
        image_url:
          description: The URL of an image representing this item.
          type: string
        label_color:
          description: The color of the item's display label in the Square Point of Sale
            app.
          type: string
        modifier_list_info:
          description: >-
            A set of
            [CatalogItemModifierListInfo](#type-catalogitemmodifierlistinfo)
            objects

            representing the modifier lists that apply to this item, along with the overrides and min

            and max limits that are specific to this item. [CatalogModifierList](#type-catalogmodifierlist)s

            may also be added to or deleted from an item using `UpdateItemModifierLists`.
          items:
            $ref: "#/components/schemas/CatalogItemModifierListInfo"
          type: array
        name:
          description: The item's name. Searchable.
          minLength: 1
          type: string
        product_type:
          description: >-
            The product type of the item. May not be changed once an item has
            been created.


            Only items of product type `REGULAR` may be created by this API; items with other product

            types are read-only. See [CatalogItemProductType](#type-catalogitemproducttype) for all possible values.
          enum:
            - REGULAR
            - GIFT_CARD
            - APPOINTMENTS_SERVICE
            - RETAIL_ITEM
            - RESTAURANT_ITEM
          type: string
        skip_modifier_screen:
          description: >-
            If `false`, the Square Point of Sale app will present the
            [CatalogItem](#type-catalogitem)'s

            details screen immediately, allowing the merchant to choose [CatalogModifier](#type-catalogmodifier)s

            before adding the item to the cart.  This is the default behavior.


            If `true`, the Square Point of Sale app will immediately add the item to the cart with the pre-selected

            modifiers, and merchants can edit modifiers by drilling down onto the item's details.


            Third-party clients are encouraged to implement similar behaviors.
          type: boolean
        tax_ids:
          description: >-
            A set of IDs indicating the [CatalogTax](#type-catalogtax)es that
            are enabled for

            this item. When updating an item, any taxes listed here will be added to the item.

            [CatalogTax](#type-catalogtax)es may also be added to or deleted from an item using `UpdateItemTaxes`.
          items:
            type: string
          type: array
        variations:
          description: A list of [CatalogObject](#type-catalogobject)s containing the
            [CatalogItemVariation](#type-catalogitemvariation)s for this item.
          items:
            $ref: "#/components/schemas/CatalogObject"
          type: array
      required:
        - name
      type: object
    CatalogItemModifierListInfo:
      description: Controls the properties of a
        [CatalogModifierList](#type-catalogmodifierlist) as it applies to this
        [CatalogItem](#type-catalogitem).
      properties:
        enabled:
          description: If `true`, enable this
            [CatalogModifierList](#type-catalogmodifierlist).
          type: boolean
        max_selected_modifiers:
          description: If zero or larger, the largest number of
            [CatalogModifier](#type-catalogmodifier)s that can be selected from
            this [CatalogModifierList](#type-catalogmodifierlist).
          type: integer
        min_selected_modifiers:
          description: If zero or larger, the smallest number of
            [CatalogModifier](#type-catalogmodifier)s that must be selected from
            this [CatalogModifierList](#type-catalogmodifierlist).
          type: integer
        modifier_list_id:
          description: The ID of the [CatalogModifierList](#type-catalogmodifierlist)
            controlled by this
            [CatalogModifierListInfo](#type-catalogmodifierlistinfo).
          minLength: 1
          type: string
        modifier_overrides:
          description: A set of [CatalogModifierOverride](#type-catalogmodifieroverride)
            objects that override whether a given
            [CatalogModifier](#type-catalogmodifier) is enabled by default.
          items:
            $ref: "#/components/schemas/CatalogModifierOverride"
          type: array
      required:
        - modifier_list_id
      type: object
    CatalogItemProductType:
      description: The type of a [CatalogItem](#type-catalogitem). Connect V2 only allows
        the creation of `REGULAR` items.
      enum:
        - REGULAR
        - GIFT_CARD
        - APPOINTMENTS_SERVICE
        - RETAIL_ITEM
        - RESTAURANT_ITEM
      type: string
    CatalogItemVariation:
      description: An item variation (i.e., product) in the Catalog object model.
      example:
        object:
          id: "#Coffee_Regular"
          item_variation_data:
            name: Regular
            price_money:
              amount: 250
              currency: USD
            pricing_type: FIXED_PRICING
          present_at_all_locations: true
          type: ITEM_VARIATION
      properties:
        inventory_alert_threshold:
          description: >-
            If the inventory quantity for the variation is less than or equal to
            this value and `inventory_alert_type`

            is `LOW_QUANTITY`, the variation displays an alert in the merchant dashboard.


            This value is always an integer.
          format: int64
          type: integer
        inventory_alert_type:
          description: >-
            Indicates whether the item variation displays an alert when its
            inventory quantity is less than or equal

            to its `inventory_alert_threshold`. See [InventoryAlertType](#type-inventoryalerttype) for all possible values.
          enum:
            - NONE
            - LOW_QUANTITY
          type: string
        item_id:
          description: The ID of the [CatalogItem](#type-catalogitem) associated with this
            item variation. Searchable.
          type: string
        location_overrides:
          description: Per-[location][#type-location] price and inventory overrides.
          items:
            $ref: "#/components/schemas/ItemVariationLocationOverrides"
          type: array
        name:
          description: The item variation's name. Searchable.
          type: string
        price_money:
          $ref: "#/components/schemas/Money"
        pricing_type:
          description: >-
            Indicates whether the item variation's price is fixed or determined
            at the time

            of sale. See [CatalogPricingType](#type-catalogpricingtype) for all possible values.
          enum:
            - FIXED_PRICING
            - VARIABLE_PRICING
          type: string
        service_duration:
          description: >-
            If the [CatalogItem](#type-catalogitem) that owns this item
            variation is of type

            `APPOINTMENTS_SERVICE`, then this is the duration of the service in milliseconds. For

            example, a 30 minute appointment would have the value `1800000`, which is equal to

            30 (minutes) * 60 (seconds per minute) * 1000 (milliseconds per second).
          format: int64
          type: integer
        sku:
          description: The item variation's SKU, if any. Searchable.
          type: string
        track_inventory:
          description: If `true`, inventory tracking is active for the variation.
          type: boolean
        upc:
          description: The item variation's UPC, if any. Searchable.
          type: string
        user_data:
          description: Arbitrary user metadata to associate with the item variation. Cannot
            exceed 255 characters. Searchable.
          type: string
      type: object
    CatalogModifier:
      description: A modifier in the Catalog object model.
      example:
        object:
          item_modifier:
            name: Almond Milk
            price_money:
              amount: 250
              currency: USD
          present_at_all_locations: true
          type: MODIFIER
      properties:
        name:
          description: The modifier's name. Searchable.
          minLength: 1
          type: string
        price_money:
          $ref: "#/components/schemas/Money"
      required:
        - name
      type: object
    CatalogModifierList:
      description: >-
        A modifier list in the Catalog object model. A
        [CatalogModifierList](#type-catalogmodifierlist)

        contains [Modifier](#type-catalogmodifier)s that can be applied to a [CatalogItem](#type-catalogitem)

        at the time of sale.


        For example, a modifier list "Condiments" that would apply to a "Hot Dog" [CatalogItem](#type-catalogitem) might

        contain [CatalogModifier](#type-catalogmodifier)s "Ketchup", "Mustard", and "Relish". The

        `selection_type` field specifies whether or not multiple selections from the modifier list are allowed.
      example:
        id: "#MilkType"
        modifier_list_data:
          modifiers:
            - item_modifier:
                name: Whole Milk
                price_money:
                  amount: 0
                  currency: USD
              present_at_all_locations: true
              type: MODIFIER
            - item_modifier:
                name: Almond Milk
                price_money:
                  amount: 250
                  currency: USD
              present_at_all_locations: true
              type: MODIFIER
            - item_modifier:
                name: Soy Milk
                price_money:
                  amount: 250
                  currency: USD
              present_at_all_locations: true
              type: MODIFIER
          name: Milk Type
          selection_type: SINGLE
        present_at_all_locations: true
        type: MODIFIER_LIST
      properties:
        modifiers:
          description: >-
            The options included in the
            [CatalogModifierList](#type-catalogmodifierlist).

            You must include at least one [CatalogModifier](#type-catalogmodifier).

            Each [CatalogObject](#type-catalogobject) must have type `MODIFIER` and contain

            [CatalogModifier](#type-catalogmodifier) data.
          items:
            $ref: "#/components/schemas/CatalogObject"
          type: array
        name:
          description: The [CatalogModifierList](#type-catalogmodifierlist)'s name.
            Searchable.
          minLength: 1
          type: string
        selection_type:
          description: >-
            Indicates whether multiple options from the
            [CatalogModifierList](#type-catalogmodifierlist)

            can be applied to a single [CatalogItem](#type-catalogitem). See

            [CatalogModifierListSelectionType](#type-catalogmodifierlistselectiontype) for all possible values.
          enum:
            - SINGLE
            - MULTIPLE
          type: string
      required:
        - name
      type: object
    CatalogModifierListSelectionType:
      description: Indicates whether a [CatalogModifierList](#type-catalogmodifierlist)
        supports multiple selections.
      enum:
        - SINGLE
        - MULTIPLE
      type: string
    CatalogModifierOverride:
      description: ""
      properties:
        modifier_id:
          description: The ID of the [CatalogModifier](#type-catalogmodifier) whose default
            behavior is being overridden.
          minLength: 1
          type: string
        on_by_default:
          description: If `true`, this [CatalogModifier](#type-catalogmodifier) should be
            selected by default for this [CatalogItem](#type-catalogitem).
          type: boolean
      required:
        - modifier_id
      type: object
    CatalogObject:
      description: >-
        The wrapper object for object types in the Catalog data model. The type

        of a particular `CatalogObject` is determined by the value of

        `type` and only the corresponding data field may be set.


        - if type = `ITEM`, only `item_data` will be populated and it will contain a valid [CatalogItem](#type-catalogitem) object.

        - if type = `ITEM_VARIATION`, only `item_variation_data` will be populated and it will contain a valid [CatalogItemVariation](#type-catalogitemvariation) object.

        - if type = `MODIFIER`, only `modifier_data` will be populated and it will contain a valid [CatalogModifier](#type-catalogmodifier) object.

        - if type = `MODIFIER_LIST`, only `modifier_list_data` will be populated and it will contain a valid [CatalogModifierList](#type-catalogmodifierlist) object.

        - if type = `CATEGORY`, only `category_data` will be populated and it will contain a valid [CatalogCategory](#type-catalogcategory) object.

        - if type = `DISCOUNT`, only `discount_data` will be populated and it will contain a valid [CatalogDiscount](#type-catalogdiscount) object.

        - if type = `TAX`, only `tax_data` will be populated and it will contain a valid [CatalogTax](#type-catalogtax) object.


        For a more detailed discussion of the Catalog data model, please see the

        [Catalog Overview](https://docs.connect.squareup.com/articles/catalog-overview).
      example:
        catalog_object:
          absent_at_location_ids:
            - "{{ LOCATIONID-1 }}"
            - "{{ LOCATIONID-N }}"
          category_data: "{{ CatalogCategory object only if type=CATEGORY }}"
          connect_v1_ids:
            catalog_v1_id: "{{ itemID from Catalog v1 }}"
            location_id: "{{ location where v1 ID is used }}"
          discount_data: "{{ CatalogDiscount object only if type=DISCOUNT }}"
          id: "{{ set by Catalog during object creation }}"
          is_deleted: "{{ [true | false] }}"
          item_data: "{{ CatalogItem object only if type=ITEM }}"
          item_variation_data: "{{ CatalogItemVariation object only if type=ITEM_VARIATION }}"
          modifier_data: "{{ CatalogModifier object only if type=MODIFIER }}"
          modifier_list_data: "{{ CatalogModifierList object only if type=MODIFIER_LIST }}"
          present_at_all_locations: "{{ [true | false] }}"
          present_at_location_ids:
            - "{{ LOCATIONID-1 }}"
            - "{{ LOCATIONID-N }}"
          tax_data: "{{ CatalogTax object only if type=TAX }}"
          type: "{{ [ITEM | ITEM_VARIATION | MODIFIER | MODIFIER_LIST | CATEGORY |
            DISCOUNT | TAX] }}"
          updated_at: "{{ date & time of most recent update }}"
          version: "{{ version of the CatalogObject }}"
      properties:
        absent_at_location_ids:
          description: A list of locations where the object is not present, even if
            `present_at_all_locations` is `true`.
          items:
            type: string
          type: array
        catalog_v1_ids:
          description: >-
            The Connect V1 IDs for this object at each
            [location][#type-location] where it is present, where they

            differ from the object's Connect V2 ID. The field will only be present for objects that

            have been created or modified by legacy APIs.
          items:
            $ref: "#/components/schemas/CatalogV1Id"
          type: array
        category_data:
          $ref: "#/components/schemas/CatalogCategory"
        discount_data:
          $ref: "#/components/schemas/CatalogDiscount"
        id:
          description: >-
            An identifier to reference this object in the catalog. When a new
            CatalogObject

            is inserted, the client should set the id to a temporary identifier starting with

            a `'#'` character. Other objects being inserted or updated within the same request

            may use this identifier to refer to the new object.


            When the server receives the new object, it will supply a unique identifier that

            replaces the temporary identifier for all future references.
          minLength: 1
          type: string
        is_deleted:
          description: >-
            If `true`, the object has been deleted from the database. Must be
            `false` for new objects

            being inserted. When deleted, the `updated_at` field will equal the deletion time.
          type: boolean
        item_data:
          $ref: "#/components/schemas/CatalogItem"
        item_variation_data:
          $ref: "#/components/schemas/CatalogItemVariation"
        modifier_data:
          $ref: "#/components/schemas/CatalogModifier"
        modifier_list_data:
          $ref: "#/components/schemas/CatalogModifierList"
        present_at_all_locations:
          description: >-
            If `true`, this object is present at all locations (including future
            locations), except where specified in

            the `absent_at_location_ids` field. If `false`, this object is not present at any locations (including future locations),

            except where specified in the `present_at_location_ids` field.
          type: boolean
        present_at_location_ids:
          description: A list of locations where the object is present, even if
            `present_at_all_locations` is `false`.
          items:
            type: string
          type: array
        tax_data:
          $ref: "#/components/schemas/CatalogTax"
        type:
          description: >-
            The type of this object. Each object type has expected

            properties expressed in a structured format within its corresponding `*_data` field below.


            See [CatalogObjectType](#type-catalogobjecttype) for all possible values.
          enum:
            - ITEM
            - CATEGORY
            - ITEM_VARIATION
            - TAX
            - DISCOUNT
            - MODIFIER_LIST
            - MODIFIER
          type: string
        updated_at:
          description: >-
            Last modification [timestamp](#workingwithdates) in RFC 3339 format,
            e.g., `"2016-08-15T23:59:33.123Z"`

            would indicate the UTC time (denoted by `Z`) of August 15, 2016 at 23:59:33 and 123 milliseconds.
          type: string
        version:
          description: >-
            The version of the object. When updating an object, the version
            supplied by the

            must match the version in the database, otherwise the write will be rejected as conflicting.
          format: int64
          type: integer
      required:
        - type
        - id
      type: object
    CatalogObjectBatch:
      description: A batch of [CatalogObject](#type-catalogobject)s.
      properties:
        objects:
          description: A list of [CatalogObject](#type-catalogobject)s belonging to this
            batch.
          items:
            $ref: "#/components/schemas/CatalogObject"
          type: array
      type: object
    CatalogObjectType:
      description: >-
        Possible kinds of [CatalogObject](#type-catalogobject)s returned from
        the Catalog, each

        contaning type-specific properties in the `*_data` field corresponding to the object type.
      enum:
        - ITEM
        - CATEGORY
        - ITEM_VARIATION
        - TAX
        - DISCOUNT
        - MODIFIER_LIST
        - MODIFIER
      type: string
    CatalogPricingType:
      description: Indicates whether the price of a
        [CatalogItemVariation](#type-catalogitemvariation) should be entered
        manually at the time of sale.
      enum:
        - FIXED_PRICING
        - VARIABLE_PRICING
      type: string
    CatalogQuery:
      description: >-
        A query to be applied to a
        [SearchCatalogObjectsRequest](#type-searchcatalogobjectsrequest).

        Only one query field may be present.


        Where an attribute name is required, it should be specified as the name of any field

        marked "searchable" from the structured data types for the desired result object type(s)

        ([CatalogItem](#type-catalogitem), [CatalogItemVariation](#type-catalogitemvariation),

        [CatalogCategory](#type-catalogcategory), [CatalogTax](#type-catalogtax),

        [CatalogDiscount](#type-catalogdiscount), [CatalogModifierList](#type-catalogmodifierlist),

        [CatalogModifier](#type-catalogmodifier)).


        For example, a query that should return Items may specify attribute names from

        any of the searchable fields of the [CatalogItem](#type-catalogitem) data type, namely

        `"name"`, `"description"`, and `"abbreviation"`.
      properties:
        exact_query:
          $ref: "#/components/schemas/CatalogQueryExact"
        items_for_modifier_list_query:
          $ref: "#/components/schemas/CatalogQueryItemsForModifierList"
        items_for_tax_query:
          $ref: "#/components/schemas/CatalogQueryItemsForTax"
        prefix_query:
          $ref: "#/components/schemas/CatalogQueryPrefix"
        range_query:
          $ref: "#/components/schemas/CatalogQueryRange"
        sorted_attribute_query:
          $ref: "#/components/schemas/CatalogQuerySortedAttribute"
        text_query:
          $ref: "#/components/schemas/CatalogQueryText"
      type: object
    CatalogQueryExact:
      description: ""
      properties:
        attribute_name:
          description: The name of the attribute to be searched.
          minLength: 1
          type: string
        attribute_value:
          description: The desired value of the search attribute.
          type: string
      required:
        - attribute_name
        - attribute_value
      type: object
    CatalogQueryItemsForModifierList:
      description: ""
      properties:
        modifier_list_ids:
          description: A set of [CatalogModifierList](#type-catalogmodifierlist) IDs to be
            used to find associated [CatalogItem](#type-catalogitem)s.
          items:
            type: string
          type: array
      required:
        - modifier_list_ids
      type: object
    CatalogQueryItemsForTax:
      description: ""
      properties:
        tax_ids:
          description: A set of [CatalogTax](#type-catalogtax) IDs to be used to find
            associated [CatalogItem](#type-catalogitem)s.
          items:
            type: string
          type: array
      required:
        - tax_ids
      type: object
    CatalogQueryPrefix:
      description: ""
      properties:
        attribute_name:
          description: The name of the attribute to be searched.
          minLength: 1
          type: string
        attribute_prefix:
          description: The desired prefix of the search attribute value.
          minLength: 1
          type: string
      required:
        - attribute_name
        - attribute_prefix
      type: object
    CatalogQueryRange:
      description: ""
      properties:
        attribute_max_value:
          description: The desired maximum value for the search attribute (inclusive).
          format: int64
          type: integer
        attribute_min_value:
          description: The desired minimum value for the search attribute (inclusive).
          format: int64
          type: integer
        attribute_name:
          description: The name of the attribute to be searched.
          minLength: 1
          type: string
      required:
        - attribute_name
      type: object
    CatalogQuerySortedAttribute:
      description: ""
      properties:
        attribute_name:
          description: The attribute whose value should be used as the sort key.
          minLength: 1
          type: string
        initial_attribute_value:
          description: >-
            The first attribute value to be returned by the query. Ascending
            sorts will return only

            objects with this value or greater, while descending sorts will return only objects with this value

            or less. If unset, start at the beginning (for ascending sorts) or end (for descending sorts).
          type: string
        sort_order:
          description: The desired [SortOrder](#type-sortorder), `"ASC"` (ascending) or
            `"DESC"` (descending).
          enum:
            - DESC
            - ASC
          type: string
      required:
        - attribute_name
      type: object
    CatalogQueryText:
      description: ""
      properties:
        keywords:
          description: >-
            A list of one, two, or three search keywords. Keywords with fewer
            than three characters

            are ignored.
          items:
            type: string
          type: array
      required:
        - keywords
      type: object
    CatalogTax:
      description: A tax in the Catalog object model.
      example:
        object:
          id: "#SalesTax"
          present_at_all_locations: true
          tax_data:
            calculation_phase: TAX_SUBTOTAL_PHASE
            enabled: true
            fee_applies_to_custom_amounts: true
            inclusion_type: ADDITIVE
            name: Sales Tax
            percentage: "5.0"
          type: TAX
      properties:
        applies_to_custom_amounts:
          description: >-
            If `true`, the fee applies to custom amounts entered into the Square
            Point of Sale

            app that are not associated with a particular [CatalogItem](#type-catalogitem).
          type: boolean
        calculation_phase:
          description: Whether the tax is calculated based on a payment's subtotal or
            total. See [TaxCalculationPhase](#type-taxcalculationphase) for all
            possible values.
          enum:
            - TAX_SUBTOTAL_PHASE
            - TAX_TOTAL_PHASE
          type: string
        enabled:
          description: If `true`, the tax will be shown as enabled in the Square Point of
            Sale app.
          type: boolean
        inclusion_type:
          description: Whether the tax is `ADDITIVE` or `INCLUSIVE`. See
            [TaxInclusionType](#type-taxinclusiontype) for all possible values.
          enum:
            - ADDITIVE
            - INCLUSIVE
          type: string
        name:
          description: The tax's name. Searchable.
          minLength: 1
          type: string
        percentage:
          description: >-
            The percentage of the tax in decimal form, using a `'.'` as the
            decimal separator and without a `'%'` sign.

            A value of `7.5` corresponds to 7.5%.
          type: string
      required:
        - name
      type: object
    CatalogV1Id:
      description: An Items Connect V1 object ID along with its associated
        [location][#type-location] ID.
      properties:
        catalog_v1_id:
          description: The ID for an object in Connect V1, if different from its Connect V2
            ID.
          type: string
        location_id:
          description: The ID of the [location][#type-location] this Connect V1 ID is
            associated with.
          type: string
      type: object
    ChargeRequest:
      description: |-
        Defines the parameters that can be included in the body of
        a request to the [Charge](#endpoint-charge) endpoint.
      example:
        request_body:
          amount_money:
            amount: 5000
            currency: USD
          billing_address:
            address_line_1: 500 Electric Ave
            address_line_2: Suite 600
            administrative_district_level_1: NY
            country: US
            locality: New York
            postal_code: "10003"
          card_nonce: card_nonce_from_square_123
          delay_capture: false
          idempotency_key: 74ae1696-b1e3-4328-af6d-f1e04d947a13
          note: some optional note
          reference_id: some optional reference id
          shipping_address:
            address_line_1: 123 Main St
            administrative_district_level_1: CA
            country: US
            locality: San Francisco
            postal_code: "94114"
        request_url: /v2/locations/LOCATION_ID/transactions
      properties:
        amount_money:
          $ref: "#/components/schemas/Money"
        billing_address:
          $ref: "#/components/schemas/Address"
        buyer_email_address:
          description: >-
            The buyer's email address, if available. This value is optional,

            but this transaction is ineligible for chargeback protection if it is not

            provided.
          type: string
        card_nonce:
          description: >-
            A nonce generated from the `SqPaymentForm` that represents the card

            to charge.


            The application that provides a nonce to this endpoint must be the

            _same application_ that generated the nonce with the `SqPaymentForm`.

            Otherwise, the nonce is invalid.


            Do not provide a value for this field if you provide a value for

            `customer_card_id`.
          type: string
        customer_card_id:
          description: >-
            The ID of the customer card on file to charge. Do

            not provide a value for this field if you provide a value for `card_nonce`.


            If you provide this value, you _must_ also provide a value for

            `customer_id`.
          type: string
        customer_id:
          description: >-
            The ID of the customer to associate this transaction with. This
            field

            is required if you provide a value for `customer_card_id`, and optional

            otherwise.
          type: string
        delay_capture:
          description: >-
            If `true`, the request will only perform an Auth on the provided

            card. You can then later perform either a Capture (with the

            [CaptureTransaction](#endpoint-capturetransaction) endpoint) or a Void

            (with the [VoidTransaction](#endpoint-voidtransaction) endpoint).


            Default value: `false`
          type: boolean
        idempotency_key:
          description: |-
            A value you specify that uniquely identifies this
            transaction among transactions you've created.

            If you're unsure whether a particular transaction succeeded,
            you can reattempt it with the same idempotency key without
            worrying about double-charging the buyer.

            See [Idempotency keys](#idempotencykeys) for more information.
          type: string
        note:
          description: |-
            An optional note to associate with the transaction.

            This value cannot exceed 60 characters.
          type: string
        reference_id:
          description: >-
            An optional ID you can associate with the transaction for your own

            purposes (such as to associate the transaction with an entity ID in your

            own database).


            This value cannot exceed 40 characters.
          type: string
        shipping_address:
          $ref: "#/components/schemas/Address"
      required:
        - idempotency_key
        - amount_money
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/Charge/ChargeRequest.csharp
        php: /sdk_samples/Charge/ChargeRequest.php
        python: /sdk_samples/Charge/ChargeRequest.python
        ruby: /sdk_samples/Charge/ChargeRequest.ruby
    ChargeResponse:
      description: >-
        Defines the fields that are included in the response body of

        a request to the [Charge](#endpoint-charge) endpoint.


        One of `errors` or `transaction` is present in a given response (never both).
      example:
        transaction:
          created_at: 2016-03-10T22:57:56Z
          id: KnL67ZIwXCPtzOrqj0HrkxMF
          location_id: 18YC4JDH91E1H
          product: EXTERNAL_API
          reference_id: some optional reference id
          tenders:
            - amount_money:
                amount: 5000
                currency: USD
              card_details:
                card:
                  card_brand: VISA
                  last_4: "1111"
                entry_method: KEYED
                status: CAPTURED
              created_at: 2016-03-10T22:57:56Z
              id: MtZRYYdDrYNQbOvV7nbuBvMF
              location_id: 18YC4JDH91E1H
              note: some optional note
              transaction_id: KnL67ZIwXCPtzOrqj0HrkxMF
              type: CARD
      properties:
        errors:
          description: Any errors that occurred during the request.
          items:
            $ref: "#/components/schemas/Error"
          type: array
        transaction:
          $ref: "#/components/schemas/Transaction"
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/Charge/ChargeResponse.csharp
        php: /sdk_samples/Charge/ChargeResponse.php
        python: /sdk_samples/Charge/ChargeResponse.python
        ruby: /sdk_samples/Charge/ChargeResponse.ruby
    Checkout:
      description: |-
        Square Checkout lets merchants accept online payments for supported
        payment types using a checkout workflow hosted on squareup.com.
      properties:
        ask_for_shipping_address:
          description: >-
            If `true`, Square Checkout will collect shipping information on your

            behalf and store that information with the transaction information in your

            Square Dashboard.


            Default: `false`.
          type: boolean
        checkout_page_url:
          description: |-
            The URL that the buyer's browser should be redirected to after the
            checkout is completed.
          type: string
        created_at:
          description: The time when the checkout was created, in RFC 3339 format.
          type: string
        id:
          description: ID generated by Square Checkout when a new checkout is requested.
          type: string
        merchant_support_email:
          description: >-
            The email address to display on the Square Checkout confirmation
            page

            and confirmation email that the buyer can use to contact the merchant.


            If this value is not set, the confirmation page and email will display the

            primary email address associated with the merchant's Square account.


            Default: none; only exists if explicitly set.
          type: string
        order:
          $ref: "#/components/schemas/Order"
        pre_populate_buyer_email:
          description: |-
            If provided, the buyer's email is pre-populated on the checkout page
            as an editable text field.

            Default: none; only exists if explicitly set.
          type: string
        pre_populate_shipping_address:
          $ref: "#/components/schemas/Address"
        redirect_url:
          description: >-
            The URL to redirect to after checkout is completed with
            `checkoutId`,

            Square's `orderId`, `transactionId`, and `referenceId` appended as URL

            parameters. For example, if the provided redirect_url is

            `http://www.example.com/order-complete`, a successful transaction redirects

            the customer to:


            `http://www.example.com/order-complete?checkoutId=xxxxxx&orderId=xxxxxx&referenceId=xxxxxx&transactionId=xxxxxx`


            If you do not provide a redirect URL, Square Checkout will display an order

            confirmation page on your behalf; however Square strongly recommends that

            you provide a redirect URL so you can verify the transaction results and

            finalize the order through your existing/normal confirmation workflow.
          type: string
      type: object
    Country:
      description: >-
        Indicates the country associated with another entity, such as a
        business.

        Values are in [ISO 3166-1-alpha-2 format](http://www.iso.org/iso/home/standards/country_codes.htm).
      enum:
        - ZZ
        - AD
        - AE
        - AF
        - AG
        - AI
        - AL
        - AM
        - AO
        - AQ
        - AR
        - AS
        - AT
        - AU
        - AW
        - AX
        - AZ
        - BA
        - BB
        - BD
        - BE
        - BF
        - BG
        - BH
        - BI
        - BJ
        - BL
        - BM
        - BN
        - BO
        - BQ
        - BR
        - BS
        - BT
        - BV
        - BW
        - BY
        - BZ
        - CA
        - CC
        - CD
        - CF
        - CG
        - CH
        - CI
        - CK
        - CL
        - CM
        - CN
        - CO
        - CR
        - CU
        - CV
        - CW
        - CX
        - CY
        - CZ
        - DE
        - DJ
        - DK
        - DM
        - DO
        - DZ
        - EC
        - EE
        - EG
        - EH
        - ER
        - ES
        - ET
        - FI
        - FJ
        - FK
        - FM
        - FO
        - FR
        - GA
        - GB
        - GD
        - GE
        - GF
        - GG
        - GH
        - GI
        - GL
        - GM
        - GN
        - GP
        - GQ
        - GR
        - GS
        - GT
        - GU
        - GW
        - GY
        - HK
        - HM
        - HN
        - HR
        - HT
        - HU
        - ID
        - IE
        - IL
        - IM
        - IN
        - IO
        - IQ
        - IR
        - IS
        - IT
        - JE
        - JM
        - JO
        - JP
        - KE
        - KG
        - KH
        - KI
        - KM
        - KN
        - KP
        - KR
        - KW
        - KY
        - KZ
        - LA
        - LB
        - LC
        - LI
        - LK
        - LR
        - LS
        - LT
        - LU
        - LV
        - LY
        - MA
        - MC
        - MD
        - ME
        - MF
        - MG
        - MH
        - MK
        - ML
        - MM
        - MN
        - MO
        - MP
        - MQ
        - MR
        - MS
        - MT
        - MU
        - MV
        - MW
        - MX
        - MY
        - MZ
        - NA
        - NC
        - NE
        - NF
        - NG
        - NI
        - NL
        - NO
        - NP
        - NR
        - NU
        - NZ
        - OM
        - PA
        - PE
        - PF
        - PG
        - PH
        - PK
        - PL
        - PM
        - PN
        - PR
        - PS
        - PT
        - PW
        - PY
        - QA
        - RE
        - RO
        - RS
        - RU
        - RW
        - SA
        - SB
        - SC
        - SD
        - SE
        - SG
        - SH
        - SI
        - SJ
        - SK
        - SL
        - SM
        - SN
        - SO
        - SR
        - SS
        - ST
        - SV
        - SX
        - SY
        - SZ
        - TC
        - TD
        - TF
        - TG
        - TH
        - TJ
        - TK
        - TL
        - TM
        - TN
        - TO
        - TR
        - TT
        - TV
        - TW
        - TZ
        - UA
        - UG
        - UM
        - US
        - UY
        - UZ
        - VA
        - VC
        - VE
        - VG
        - VI
        - VN
        - VU
        - WF
        - WS
        - YE
        - YT
        - ZA
        - ZM
        - ZW
      type: string
    CreateCheckoutRequest:
      description: |-
        Defines the parameters that can be included in the body of
        a request to the [CreateCheckout](#endpoint-createcheckout) endpoint.
      example:
        request_body:
          ask_for_shipping_address: true
          idempotency_key: 86ae1696-b1e3-4328-af6d-f1e04d947ad6
          merchant_support_email: merchant+support@website.com
          order:
            discounts:
              - name: Father's day 12% OFF
                percentage: "12"
              - amount_money:
                  amount: 5500
                  currency: USD
                name: Global Sales $55 OFF
            line_items:
              - base_price_money:
                  amount: 1500
                  currency: USD
                discounts:
                  - name: 7% off previous season item
                    percentage: "7"
                  - amount_money:
                      amount: 300
                      currency: USD
                    name: $3 off Customer Discount
                name: Printed T Shirt
                quantity: "2"
              - base_price_money:
                  amount: 2500
                  currency: USD
                name: Slim Jeans
                quantity: "1"
              - base_price_money:
                  amount: 3500
                  currency: USD
                discounts:
                  - amount_money:
                      amount: 1100
                      currency: USD
                    name: $11 off Customer Discount
                name: Woven Sweater
                quantity: "3"
                taxes:
                  - name: Fair Trade Tax
                    percentage: "5"
            reference_id: reference_id
            taxes:
              - name: Sales Tax
                percentage: "8.5"
          pre_populate_buyer_email: example@email.com
          pre_populate_shipping_address:
            address_line_1: 1455 Market St.
            address_line_2: Suite 600
            administrative_district_level_1: CA
            country: US
            first_name: Jane
            last_name: Doe
            locality: San Francisco
            postal_code: "94103"
          redirect_url: https://merchant.website.com/order-confirm
        request_url: /v2/locations/LOCATION_ID/checkouts
      properties:
        ask_for_shipping_address:
          description: >-
            If `true`, Square Checkout will collect shipping information on your

            behalf and store that information with the transaction information in your

            Square Dashboard.


            Default: `false`.
          type: boolean
        idempotency_key:
          description: >-
            A unique string that identifies this checkout among others

            you've created. It can be any valid string but must be unique for every

            order sent to Square Checkout for a given location ID.


            The idempotency key is used to avoid processing the same order more than

            once. If you're unsure whether a particular checkout was created

            successfully, you can reattempt it with the same idempotency key and all the

            same other parameters without worrying about creating duplicates.


            We recommend using a random number/string generator native to the language

            you are working in to generate strings for your idempotency keys.


            See [Idempotency keys](#idempotencykeys) for more information.
          maxLength: 192
          minLength: 1
          type: string
        merchant_support_email:
          description: >-
            The email address to display on the Square Checkout confirmation
            page

            and confirmation email that the buyer can use to contact the merchant.


            If this value is not set, the confirmation page and email will display the

            primary email address associated with the merchant's Square account.


            Default: none; only exists if explicitly set.
          maxLength: 254
          type: string
        order:
          $ref: "#/components/schemas/CreateOrderRequest"
        pre_populate_buyer_email:
          description: |-
            If provided, the buyer's email is pre-populated on the checkout page
            as an editable text field.

            Default: none; only exists if explicitly set.
          maxLength: 254
          type: string
        pre_populate_shipping_address:
          $ref: "#/components/schemas/Address"
        redirect_url:
          description: >-
            The URL to redirect to after checkout is completed with
            `checkoutId`,

            Square's `orderId`, `transactionId`, and `referenceId` appended as URL

            parameters. For example, if the provided redirect_url is

            `http://www.example.com/order-complete`, a successful transaction redirects

            the customer to:


            `http://www.example.com/order-complete?checkoutId=xxxxxx&orderId=xxxxxx&referenceId=xxxxxx&transactionId=xxxxxx`


            If you do not provide a redirect URL, Square Checkout will display an order

            confirmation page on your behalf; however Square strongly recommends that

            you provide a redirect URL so you can verify the transaction results and

            finalize the order through your existing/normal confirmation workflow.


            Default: none; only exists if explicitly set.
          type: string
      required:
        - idempotency_key
        - order
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/CreateCheckout/CreateCheckoutRequest.csharp
        php: /sdk_samples/CreateCheckout/CreateCheckoutRequest.php
        python: /sdk_samples/CreateCheckout/CreateCheckoutRequest.python
        ruby: /sdk_samples/CreateCheckout/CreateCheckoutRequest.ruby
    CreateCheckoutResponse:
      description: |-
        Defines the fields that are included in the response body of
        a request to the [CreateCheckout](#endpoint-createcheckout) endpoint.
      example:
        checkout:
          ask_for_shipping_address: true
          checkout_page_url: https://connect.squareup.com/v2/checkout?c=CAISEHGimXh-C3RIT4og1a6u1qw&l=CYTKRM7R7JMV8
          created_at: 2017-06-16T22:25:35Z
          id: CAISEHGimXh-C3RIT4og1a6u1qw
          merchant_support_email: merchant+support@website.com
          order:
            line_items:
              - base_price_money:
                  amount: 1500
                  currency: USD
                discounts:
                  - applied_money:
                      amount: 210
                      currency: USD
                    name: 7% off previous season item
                    percentage: "7"
                    scope: LINE_ITEM
                    type: FIXED_PERCENTAGE
                  - applied_money:
                      amount: 335
                      currency: USD
                    name: Father's day 12% OFF
                    percentage: "12"
                    scope: ORDER
                    type: FIXED_PERCENTAGE
                  - amount_money:
                      amount: 300
                      currency: USD
                    applied_money:
                      amount: 300
                      currency: USD
                    name: $3 off Customer Discount
                    scope: LINE_ITEM
                    type: FIXED_AMOUNT
                  - amount_money:
                      amount: 5500
                      currency: USD
                    applied_money:
                      amount: 949
                      currency: USD
                    name: Global Sales $55 OFF
                    scope: ORDER
                    type: FIXED_AMOUNT
                name: Printed T Shirt
                quantity: "2"
                taxes:
                  - applied_money:
                      amount: 103
                      currency: USD
                    name: Sales Tax
                    percentage: "8.5"
                    type: ADDITIVE
                total_discount_money:
                  amount: 1794
                  currency: USD
                total_money:
                  amount: 1309
                  currency: USD
                total_tax_money:
                  amount: 103
                  currency: USD
              - base_price_money:
                  amount: 2500
                  currency: USD
                discounts:
                  - applied_money:
                      amount: 300
                      currency: USD
                    name: Father's day 12% OFF
                    percentage: "12"
                    scope: ORDER
                    type: FIXED_PERCENTAGE
                  - amount_money:
                      amount: 5500
                      currency: USD
                    applied_money:
                      amount: 968
                      currency: USD
                    name: Global Sales $55 OFF
                    scope: ORDER
                    type: FIXED_AMOUNT
                name: Slim Jeans
                quantity: "1"
                taxes:
                  - applied_money:
                      amount: 105
                      currency: USD
                    name: Sales Tax
                    percentage: "8.5"
                    type: ADDITIVE
                total_discount_money:
                  amount: 1268
                  currency: USD
                total_money:
                  amount: 1337
                  currency: USD
                total_tax_money:
                  amount: 105
                  currency: USD
              - base_price_money:
                  amount: 3500
                  currency: USD
                discounts:
                  - applied_money:
                      amount: 1260
                      currency: USD
                    name: Father's day 12% OFF
                    percentage: "12"
                    scope: ORDER
                    type: FIXED_PERCENTAGE
                  - amount_money:
                      amount: 1100
                      currency: USD
                    applied_money:
                      amount: 1100
                      currency: USD
                    name: $11 off Customer Discount
                    scope: LINE_ITEM
                    type: FIXED_AMOUNT
                  - amount_money:
                      amount: 5500
                      currency: USD
                    applied_money:
                      amount: 3583
                      currency: USD
                    name: Global Sales $55 OFF
                    scope: ORDER
                    type: FIXED_AMOUNT
                name: Wooven Sweater
                quantity: "3"
                taxes:
                  - applied_money:
                      amount: 228
                      currency: USD
                    name: Fair Trade Tax
                    percentage: "5"
                    type: ADDITIVE
                  - applied_money:
                      amount: 387
                      currency: USD
                    name: Sales Tax
                    percentage: "8.5"
                    type: ADDITIVE
                total_discount_money:
                  amount: 5943
                  currency: USD
                total_money:
                  amount: 5172
                  currency: USD
                total_tax_money:
                  amount: 615
                  currency: USD
            location_id: CYTKRM7R7JMV8
            reference_id: reference_id
            total_discount_money:
              amount: 9005
              currency: USD
            total_money:
              amount: 7818
              currency: USD
            total_tax_money:
              amount: 823
              currency: USD
          pre_populate_buyer_email: example@email.com
          pre_populate_shipping_address:
            address_line_1: 1455 Market St.
            address_line_2: Suite 600
            administrative_district_level_1: CA
            country: US
            first_name: Jane
            last_name: Doe
            locality: San Francisco
            postal_code: "94103"
          redirect_url: https://merchant.website.com/order-confirm
      properties:
        checkout:
          $ref: "#/components/schemas/Checkout"
        errors:
          description: Any errors that occurred during the request.
          items:
            $ref: "#/components/schemas/Error"
          type: array
      type: object
    CreateCustomerCardRequest:
      description: |-
        Defines the fields that are included in the request body of a request
        to the [CreateCustomerCard](#endpoint-createcustomercard) endpoint.
      example:
        request_body:
          billing_address:
            address_line_1: 500 Electric Ave
            address_line_2: Suite 600
            administrative_district_level_1: NY
            country: US
            locality: New York
            postal_code: "10003"
          card_nonce: YOUR_CARD_NONCE
          cardholder_name: Amelia Earhart
        request_url: /v2/CUSTOMER_ID
      properties:
        billing_address:
          $ref: "#/components/schemas/Address"
        card_nonce:
          description: |-
            A card nonce representing the credit card to link to the customer.

            Card nonces are generated by the `SqPaymentForm` that buyers enter
            their card information into. See
            [Embedding the payment form](/articles/adding-payment-form/) for
            more information.
          type: string
        cardholder_name:
          description: The cardholder's name.
          type: string
      required:
        - card_nonce
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.csharp
        php: /sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.php
        python: /sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.python
        ruby: /sdk_samples/CreateCustomerCard/CreateCustomerCardRequest.ruby
    CreateCustomerCardResponse:
      description: >-
        Defines the fields that are included in the response body of

        a request to the [CreateCustomerCard](#endpoint-createcustomercard) endpoint.


        One of `errors` or `card` is present in a given response (never both).
      example:
        card:
          billing_address:
            address_line_1: 500 Electric Ave
            address_line_2: Suite 600
            administrative_district_level_1: NY
            country: US
            locality: New York
            postal_code: "10003"
          card_brand: VISA
          cardholder_name: Amelia Earhart
          exp_month: 11
          exp_year: 2018
          id: icard-card_id
          last_4: "1111"
      properties:
        card:
          $ref: "#/components/schemas/Card"
        errors:
          description: Any errors that occurred during the request.
          items:
            $ref: "#/components/schemas/Error"
          type: array
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.csharp
        php: /sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.php
        python: /sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.python
        ruby: /sdk_samples/CreateCustomerCard/CreateCustomerCardResponse.ruby
    CreateCustomerRequest:
      description: |-
        Defines the body parameters that can be provided in a request to the
        [CreateCustomer](#endpoint-createcustomer) endpoint.
      example:
        request_body:
          address:
            address_line_1: 500 Electric Ave
            address_line_2: Suite 600
            administrative_district_level_1: NY
            country: US
            locality: New York
            postal_code: "10003"
          email_address: Amelia.Earhart@example.com
          family_name: Earhart
          given_name: Amelia
          note: a customer
          phone_number: 1-212-555-4240
          reference_id: YOUR_REFERENCE_ID
        request_url: /v2/customers
      properties:
        address:
          $ref: "#/components/schemas/Address"
        company_name:
          description: The name of the customer's company.
          type: string
        email_address:
          description: The customer's email address.
          type: string
        family_name:
          description: The customer's family (i.e., last) name.
          type: string
        given_name:
          description: The customer's given (i.e., first) name.
          type: string
        nickname:
          description: A nickname for the customer.
          type: string
        note:
          description: An optional note to associate with the customer.
          type: string
        phone_number:
          description: The customer's phone number.
          type: string
        reference_id:
          description: |-
            An optional second ID you can set to associate the customer with an
            entity in another system.
          type: string
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/CreateCustomer/CreateCustomerRequest.csharp
        php: /sdk_samples/CreateCustomer/CreateCustomerRequest.php
        python: /sdk_samples/CreateCustomer/CreateCustomerRequest.python
        ruby: /sdk_samples/CreateCustomer/CreateCustomerRequest.ruby
    CreateCustomerResponse:
      description: >-
        Defines the fields that are included in the response body of

        a request to the [CreateCustomer](#endpoint-createcustomer) endpoint.


        One of `errors` or `customer` is present in a given response (never both).
      example:
        customer:
          address:
            address_line_1: 500 Electric Ave
            address_line_2: Suite 600
            administrative_district_level_1: NY
            country: US
            locality: New York
            postal_code: "10003"
          created_at: 2016-03-23T20:21:54.859Z
          email_address: Amelia.Earhart@example.com
          family_name: Earhart
          given_name: Amelia
          id: JDKYHBWT1D4F8MFH63DBMEN8Y4
          note: a customer
          phone_number: 1-212-555-4240
          reference_id: YOUR_REFERENCE_ID
          updated_at: 2016-03-23T20:21:54.859Z
      properties:
        customer:
          $ref: "#/components/schemas/Customer"
        errors:
          description: Any errors that occurred during the request.
          items:
            $ref: "#/components/schemas/Error"
          type: array
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/CreateCustomer/CreateCustomerResponse.csharp
        php: /sdk_samples/CreateCustomer/CreateCustomerResponse.php
        python: /sdk_samples/CreateCustomer/CreateCustomerResponse.python
        ruby: /sdk_samples/CreateCustomer/CreateCustomerResponse.ruby
    CreateOrderRequest:
      description: |-
        Defines the parameters that can be included in the body of
        a request to the [CreateCheckout](#endpoint-createcheckout) endpoint.
      properties:
        discounts:
          description: The discounts include the custom discounts .
          items:
            $ref: "#/components/schemas/CreateOrderRequestDiscount"
          type: array
        line_items:
          description: >-
            The line items to associate with this order.


            Each line item represents a different product (or a custom monetary amount)

            to include in a purchase.
          items:
            $ref: "#/components/schemas/CreateOrderRequestLineItem"
          type: array
        reference_id:
          description: |-
            An optional ID you can associate with the order for your own
            purposes (such as to associate the order with an entity ID in your
            own database).

            This value cannot exceed 40 characters.
          maxLength: 40
          type: string
        taxes:
          description: The taxes include the custom taxes.
          items:
            $ref: "#/components/schemas/CreateOrderRequestTax"
          type: array
      required:
        - line_items
      type: object
    CreateOrderRequestDiscount:
      description: Represents a discount that to either a single line item or an entire
        order.
      properties:
        amount_money:
          $ref: "#/components/schemas/Money"
        name:
          description: The discount's name.
          maxLength: 255
          type: string
        percentage:
          description: >-
            The percentage of the discount, as a string representation of a
            decimal number.


            A value of `7.25` corresponds to a percentage of 7.25%. This value range between 0.0 up to 100.0
          type: string
      type: object
    CreateOrderRequestLineItem:
      description: >-
        Represents a line item to include in an order. Each line item describes

        a different product to purchase, with its own quantity and price details.
      properties:
        base_price_money:
          $ref: "#/components/schemas/Money"
        discounts:
          description: The discounts include the custom discounts.
          items:
            $ref: "#/components/schemas/CreateOrderRequestDiscount"
          type: array
        name:
          description: The name of the line item. This value cannot exceed 500 characters.
          maxLength: 500
          type: string
        quantity:
          description: |-
            The quantity to purchase, as a string representation of a number.
            Currently, only integer values are supported.
          minLength: 1
          type: string
        taxes:
          description: The taxes include the custom taxes.
          items:
            $ref: "#/components/schemas/CreateOrderRequestTax"
          type: array
      required:
        - quantity
      type: object
    CreateOrderRequestTax:
      description: Represents a tax that applies to either a single line item or an entire
        order.
      properties:
        name:
          description: The tax's name.
          maxLength: 255
          type: string
        percentage:
          description: >-
            The percentage of the tax, as a string representation of a decimal
            number.


            A value of `7.25` corresponds to a percentage of 7.25%. This value range between 0.0 up to 100.0
          type: string
        type:
          description: >-
            Indicates the calculation method used to apply the line item tax.


            Default: `ADDITIVE`; See [OrderLineItemTaxType](#type-orderlineitemtaxtype) for possible values.
          enum:
            - UNKNOWN
            - ADDITIVE
            - INCLUSIVE
          type: string
      type: object
    CreateRefundRequest:
      description: |-
        Defines the body parameters that can be included in
        a request to the [CreateRefund](#endpoint-createrefund) endpoint.
      example:
        request_body:
          amount_money:
            amount: 100
            currency: USD
          idempotency_key: YOUR_IDEMPOTENCY_KEY
          reason: a reason
          tender_id: TENDER_ID
        request_url: /v2/locations/LOCATION_ID/transactions/TRANSACTION_ID/refund
      properties:
        amount_money:
          $ref: "#/components/schemas/Money"
        idempotency_key:
          description: |-
            A value you specify that uniquely identifies this
            refund among refunds you've created for the tender.

            If you're unsure whether a particular refund succeeded,
            you can reattempt it with the same idempotency key without
            worrying about duplicating the refund.

            See [Idempotency keys](#idempotencykeys) for more information.
          type: string
        reason:
          description: |-
            A description of the reason for the refund.

            Default value: `Refund via API`
          type: string
        tender_id:
          description: >-
            The ID of the tender to refund.


            A [`Transaction`](#type-transaction) has one or more `tenders` (i.e., methods

            of payment) associated with it, and you refund each tender separately with

            the Connect API.
          type: string
      required:
        - idempotency_key
        - tender_id
        - amount_money
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/CreateRefund/CreateRefundRequest.csharp
        php: /sdk_samples/CreateRefund/CreateRefundRequest.php
        python: /sdk_samples/CreateRefund/CreateRefundRequest.python
        ruby: /sdk_samples/CreateRefund/CreateRefundRequest.ruby
    CreateRefundResponse:
      description: |-
        Defines the fields that are included in the response body of
        a request to the [CreateRefund](#endpoint-createrefund) endpoint.

        One of `errors` or `refund` is present in a given response (never both).
      example:
        refund:
          amount_money:
            amount: 100
            currency: USD
          created_at: 2016-02-12T00:28:18Z
          id: b27436d1-7f8e-5610-45c6-417ef71434b4-SW
          location_id: 18YC4JDH91E1H
          reason: some reason
          status: PENDING
          tender_id: TENDER_ID
          transaction_id: TRANSACTION_ID
      properties:
        errors:
          description: Any errors that occurred during the request.
          items:
            $ref: "#/components/schemas/Error"
          type: array
        refund:
          $ref: "#/components/schemas/Refund"
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/CreateRefund/CreateRefundResponse.csharp
        php: /sdk_samples/CreateRefund/CreateRefundResponse.php
        python: /sdk_samples/CreateRefund/CreateRefundResponse.python
        ruby: /sdk_samples/CreateRefund/CreateRefundResponse.ruby
    Currency:
      description: >-
        Indicates the associated currency for an amount of money. Values
        correspond

        to [ISO 4217](https://wikipedia.org/wiki/ISO_4217).
      enum:
        - AED
        - AFN
        - ALL
        - AMD
        - ANG
        - AOA
        - ARS
        - AUD
        - AWG
        - AZN
        - BAM
        - BBD
        - BDT
        - BGN
        - BHD
        - BIF
        - BMD
        - BND
        - BOB
        - BOV
        - BRL
        - BSD
        - BTN
        - BWP
        - BYR
        - BZD
        - CAD
        - CDF
        - CHE
        - CHF
        - CHW
        - CLF
        - CLP
        - CNY
        - COP
        - COU
        - CRC
        - CUC
        - CUP
        - CVE
        - CZK
        - DJF
        - DKK
        - DOP
        - DZD
        - EGP
        - ERN
        - ETB
        - EUR
        - FJD
        - FKP
        - GBP
        - GEL
        - GHS
        - GIP
        - GMD
        - GNF
        - GTQ
        - GYD
        - HKD
        - HNL
        - HRK
        - HTG
        - HUF
        - IDR
        - ILS
        - INR
        - IQD
        - IRR
        - ISK
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KMF
        - KPW
        - KRW
        - KWD
        - KYD
        - KZT
        - LAK
        - LBP
        - LKR
        - LRD
        - LSL
        - LTL
        - LVL
        - LYD
        - MAD
        - MDL
        - MGA
        - MKD
        - MMK
        - MNT
        - MOP
        - MRO
        - MUR
        - MVR
        - MWK
        - MXN
        - MXV
        - MYR
        - MZN
        - NAD
        - NGN
        - NIO
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEN
        - PGK
        - PHP
        - PKR
        - PLN
        - PYG
        - QAR
        - RON
        - RSD
        - RUB
        - RWF
        - SAR
        - SBD
        - SCR
        - SDG
        - SEK
        - SGD
        - SHP
        - SLL
        - SOS
        - SRD
        - SSP
        - STD
        - SVC
        - SYP
        - SZL
        - THB
        - TJS
        - TMT
        - TND
        - TOP
        - TRY
        - TTD
        - TWD
        - TZS
        - UAH
        - UGX
        - USD
        - USN
        - USS
        - UYI
        - UYU
        - UZS
        - VEF
        - VND
        - VUV
        - WST
        - XAF
        - XAG
        - XAU
        - XBA
        - XBB
        - XBC
        - XBD
        - XCD
        - XDR
        - XOF
        - XPD
        - XPF
        - XPT
        - XTS
        - XXX
        - YER
        - ZAR
        - ZMK
        - ZMW
        - BTC
      type: string
    Customer:
      description: |-
        Represents one of a business's customers, which can have one or more
        cards on file associated with it.
      properties:
        address:
          $ref: "#/components/schemas/Address"
        cards:
          description: The non-confidential details of the customer's cards on file.
          items:
            $ref: "#/components/schemas/Card"
          type: array
        company_name:
          description: The name of the customer's company.
          type: string
        created_at:
          description: The time when the customer was created, in RFC 3339 format.
          type: string
        email_address:
          description: The customer's email address.
          type: string
        family_name:
          description: The customer's family (i.e., last) name.
          type: string
        given_name:
          description: The customer's given (i.e., first) name.
          type: string
        groups:
          description: The groups the customer belongs to.
          items:
            $ref: "#/components/schemas/CustomerGroupInfo"
          type: array
        id:
          description: The customer's unique ID.
          type: string
        nickname:
          description: The customer's nickname.
          type: string
        note:
          description: A note to associate with the customer.
          type: string
        phone_number:
          description: The customer's phone number.
          type: string
        preferences:
          $ref: "#/components/schemas/CustomerPreferences"
        reference_id:
          description: |-
            A second ID you can set to associate the customer with an
            entity in another system.
          type: string
        updated_at:
          description: The time when the customer was last updated, in RFC 3339 format.
          type: string
      required:
        - id
        - created_at
        - updated_at
      type: object
    CustomerGroupInfo:
      description: Contains some brief information about a customer group with its
        identifier included.
      properties:
        id:
          description: The ID of the customer group.
          type: string
        name:
          description: The name of the customer group.
          type: string
      required:
        - id
        - name
      type: object
    CustomerPreferences:
      description: Represents a particular customer's preferences.
      properties:
        email_unsubscribed:
          description: The customer has unsubscribed from receiving marketing campaign
            emails.
          type: boolean
      type: object
    DeleteCatalogObjectRequest:
      description: ""
      example:
        request_url: https://connect.squareup.com/v2/catalog/object/7SB3ZQYJ5GDMVFL7JK46JCHT
      properties: {}
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.csharp
        php: /sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.php
        python: /sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.python
        ruby: /sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectRequest.ruby
    DeleteCatalogObjectResponse:
      description: ""
      example:
        deleted_at: 2016-11-16T22:25:24.878Z
        deleted_object_ids:
          - 7SB3ZQYJ5GDMVFL7JK46JCHT
          - KQLFFHA6K6J3YQAQAWDQAL57
      properties:
        deleted_at:
          description: >-
            The database [timestamp](#workingwithdates) of this deletion in RFC
            3339 format, e.g.,

            "2016-09-04T23:59:33.123Z".
          type: string
        deleted_object_ids:
          description: >-
            The IDs of all [CatalogObject](#type-catalogobject)s deleted by this
            request.

            Multiple IDs may be returned when associated objects are also deleted, for example

            a [CatalogItemVariation](#type-catalogitemvariation) will be deleted (and its ID included in this field)

            when its parent [CatalogItem](#type-catalogitem) is deleted.
          items:
            type: string
          type: array
        errors:
          description: The set of [Error](#type-error)s encountered.
          items:
            $ref: "#/components/schemas/Error"
          type: array
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.csharp
        php: /sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.php
        python: /sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.python
        ruby: /sdk_samples/Catalog/DeleteCatalogObject/DeleteCatalogObjectResponse.ruby
    DeleteCustomerCardRequest:
      description: ""
      example:
        request_url: https://connect.squareup.com/v2/customers/CUSTOMER_ID
      properties: {}
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.csharp
        php: /sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.php
        python: /sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.python
        ruby: /sdk_samples/DeleteCustomerCard/DeleteCustomerCardRequest.ruby
    DeleteCustomerCardResponse:
      description: >-
        Defines the fields that are included in the response body of

        a request to the [DeleteCustomerCard](#endpoint-deletecustomercard) endpoint.
      example: {}
      properties:
        errors:
          description: Any errors that occurred during the request.
          items:
            $ref: "#/components/schemas/Error"
          type: array
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.csharp
        php: /sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.php
        python: /sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.python
        ruby: /sdk_samples/DeleteCustomerCard/DeleteCustomerCardResponse.ruby
    DeleteCustomerRequest:
      description: ""
      example:
        request_url: https://connect.squareup.com/v2/customers/CUSTOMER_ID
      properties: {}
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/DeleteCustomer/DeleteCustomerRequest.csharp
        php: /sdk_samples/DeleteCustomer/DeleteCustomerRequest.php
        python: /sdk_samples/DeleteCustomer/DeleteCustomerRequest.python
        ruby: /sdk_samples/DeleteCustomer/DeleteCustomerRequest.ruby
    DeleteCustomerResponse:
      description: |-
        Defines the fields that are included in the response body of
        a request to the [DeleteCustomer](#endpoint-deletecustomer) endpoint.
      example: {}
      properties:
        errors:
          description: Any errors that occurred during the request.
          items:
            $ref: "#/components/schemas/Error"
          type: array
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/DeleteCustomer/DeleteCustomerResponse.csharp
        php: /sdk_samples/DeleteCustomer/DeleteCustomerResponse.php
        python: /sdk_samples/DeleteCustomer/DeleteCustomerResponse.python
        ruby: /sdk_samples/DeleteCustomer/DeleteCustomerResponse.ruby
    Device:
      properties:
        id:
          description: The device's Square-issued ID.
          type: string
        name:
          description: The device's merchant-specified name.
          type: string
      type: object
    Error:
      description: |-
        Represents an error encountered during a request to the Connect API.

        See [Handling errors](#handlingerrors) for more information.
      properties:
        category:
          description: >-
            The error's high-level category. See
            [ErrorCategory](#type-errorcategory)

            for possible values.
          enum:
            - API_ERROR
            - AUTHENTICATION_ERROR
            - INVALID_REQUEST_ERROR
            - RATE_LIMIT_ERROR
            - PAYMENT_METHOD_ERROR
            - REFUND_ERROR
          type: string
        code:
          description: >-
            The error's specific code. See [ErrorCode](#type-errorcode) for
            possible

            values
          enum:
            - INTERNAL_SERVER_ERROR
            - UNAUTHORIZED
            - ACCESS_TOKEN_EXPIRED
            - ACCESS_TOKEN_REVOKED
            - FORBIDDEN
            - INSUFFICIENT_SCOPES
            - APPLICATION_DISABLED
            - V1_APPLICATION
            - V1_ACCESS_TOKEN
            - CARD_PROCESSING_NOT_ENABLED
            - BAD_REQUEST
            - MISSING_REQUIRED_PARAMETER
            - INCORRECT_TYPE
            - INVALID_TIME
            - INVALID_TIME_RANGE
            - INVALID_VALUE
            - INVALID_CURSOR
            - UNKNOWN_QUERY_PARAMETER
            - CONFLICTING_PARAMETERS
            - EXPECTED_JSON_BODY
            - INVALID_SORT_ORDER
            - VALUE_REGEX_MISMATCH
            - VALUE_TOO_SHORT
            - VALUE_TOO_LONG
            - VALUE_TOO_LOW
            - VALUE_TOO_HIGH
            - VALUE_EMPTY
            - ARRAY_EMPTY
            - EXPECTED_BOOLEAN
            - EXPECTED_INTEGER
            - EXPECTED_FLOAT
            - EXPECTED_STRING
            - EXPECTED_OBJECT
            - EXPECTED_ARRAY
            - EXPECTED_BASE64_ENCODED_BYTE_ARRAY
            - INVALID_ARRAY_VALUE
            - INVALID_ENUM_VALUE
            - INVALID_CONTENT_TYPE
            - INVALID_FORM_VALUE
            - ONE_INSTRUMENT_EXPECTED
            - NO_FIELDS_SET
            - CARD_EXPIRED
            - INVALID_EXPIRATION
            - INVALID_EXPIRATION_YEAR
            - INVALID_EXPIRATION_DATE
            - UNSUPPORTED_CARD_BRAND
            - INVALID_CARD
            - DELAYED_TRANSACTION_EXPIRED
            - DELAYED_TRANSACTION_CANCELED
            - DELAYED_TRANSACTION_CAPTURED
            - DELAYED_TRANSACTION_FAILED
            - CARD_TOKEN_EXPIRED
            - CARD_TOKEN_USED
            - AMOUNT_TOO_HIGH
            - UNSUPPORTED_INSTRUMENT_TYPE
            - REFUND_AMOUNT_INVALID
            - REFUND_ALREADY_PENDING
            - PAYMENT_NOT_REFUNDABLE
            - INVALID_CARD_DATA
            - IDEMPOTENCY_KEY_REUSED
            - UNEXPECTED_VALUE
            - SANDBOX_NOT_SUPPORTED
            - INVALID_EMAIL_ADDRESS
            - CHECKOUT_EXPIRED
            - CARD_DECLINED
            - VERIFY_CVV_FAILURE
            - VERIFY_AVS_FAILURE
            - CARD_DECLINED_CALL_ISSUER
            - NOT_FOUND
            - REQUEST_TIMEOUT
            - CONFLICT
            - REQUEST_ENTITY_TOO_LARGE
            - UNSUPPORTED_MEDIA_TYPE
            - RATE_LIMITED
            - NOT_IMPLEMENTED
            - SERVICE_UNAVAILABLE
          type: string
        detail:
          description: A human-readable description of the error for debugging purposes.
          type: string
        field:
          description: >-
            The name of the field provided in the original request that the
            error

            pertains to, if any.
          type: string
      required:
        - category
        - code
      type: object
    ErrorCategory:
      description: |-
        Indicates which high-level category of error has occurred during a
        request to the Connect API.
      enum:
        - API_ERROR
        - AUTHENTICATION_ERROR
        - INVALID_REQUEST_ERROR
        - RATE_LIMIT_ERROR
        - PAYMENT_METHOD_ERROR
        - REFUND_ERROR
      type: string
    ErrorCode:
      description: |-
        Indicates specific errors that can occur during a request to the
        Connect API.
      enum:
        - INTERNAL_SERVER_ERROR
        - UNAUTHORIZED
        - ACCESS_TOKEN_EXPIRED
        - ACCESS_TOKEN_REVOKED
        - FORBIDDEN
        - INSUFFICIENT_SCOPES
        - APPLICATION_DISABLED
        - V1_APPLICATION
        - V1_ACCESS_TOKEN
        - CARD_PROCESSING_NOT_ENABLED
        - BAD_REQUEST
        - MISSING_REQUIRED_PARAMETER
        - INCORRECT_TYPE
        - INVALID_TIME
        - INVALID_TIME_RANGE
        - INVALID_VALUE
        - INVALID_CURSOR
        - UNKNOWN_QUERY_PARAMETER
        - CONFLICTING_PARAMETERS
        - EXPECTED_JSON_BODY
        - INVALID_SORT_ORDER
        - VALUE_REGEX_MISMATCH
        - VALUE_TOO_SHORT
        - VALUE_TOO_LONG
        - VALUE_TOO_LOW
        - VALUE_TOO_HIGH
        - VALUE_EMPTY
        - ARRAY_EMPTY
        - EXPECTED_BOOLEAN
        - EXPECTED_INTEGER
        - EXPECTED_FLOAT
        - EXPECTED_STRING
        - EXPECTED_OBJECT
        - EXPECTED_ARRAY
        - EXPECTED_BASE64_ENCODED_BYTE_ARRAY
        - INVALID_ARRAY_VALUE
        - INVALID_ENUM_VALUE
        - INVALID_CONTENT_TYPE
        - INVALID_FORM_VALUE
        - ONE_INSTRUMENT_EXPECTED
        - NO_FIELDS_SET
        - CARD_EXPIRED
        - INVALID_EXPIRATION
        - INVALID_EXPIRATION_YEAR
        - INVALID_EXPIRATION_DATE
        - UNSUPPORTED_CARD_BRAND
        - INVALID_CARD
        - DELAYED_TRANSACTION_EXPIRED
        - DELAYED_TRANSACTION_CANCELED
        - DELAYED_TRANSACTION_CAPTURED
        - DELAYED_TRANSACTION_FAILED
        - CARD_TOKEN_EXPIRED
        - CARD_TOKEN_USED
        - AMOUNT_TOO_HIGH
        - UNSUPPORTED_INSTRUMENT_TYPE
        - REFUND_AMOUNT_INVALID
        - REFUND_ALREADY_PENDING
        - PAYMENT_NOT_REFUNDABLE
        - INVALID_CARD_DATA
        - IDEMPOTENCY_KEY_REUSED
        - UNEXPECTED_VALUE
        - SANDBOX_NOT_SUPPORTED
        - INVALID_EMAIL_ADDRESS
        - CHECKOUT_EXPIRED
        - CARD_DECLINED
        - VERIFY_CVV_FAILURE
        - VERIFY_AVS_FAILURE
        - CARD_DECLINED_CALL_ISSUER
        - NOT_FOUND
        - REQUEST_TIMEOUT
        - CONFLICT
        - REQUEST_ENTITY_TOO_LARGE
        - UNSUPPORTED_MEDIA_TYPE
        - RATE_LIMITED
        - NOT_IMPLEMENTED
        - SERVICE_UNAVAILABLE
      type: string
    InventoryAlertType:
      description: Indicates whether Square should alert the merchant when the inventory
        quantity of a [CatalogItemVariation](#type-catalogitemvariation) is low.
      enum:
        - NONE
        - LOW_QUANTITY
      type: string
    ItemVariationLocationOverrides:
      description: Price and inventory alerting overrides for a
        [CatalogItemVariation](#type-catalogitemvariation) at a specific
        [location][#type-location].
      properties:
        inventory_alert_threshold:
          description: >-
            If the inventory quantity for the variation is less than or equal to
            this value and `inventory_alert_type`

            is `LOW_QUANTITY`, the variation displays an alert in the merchant dashboard.


            This value is always an integer.
          format: int64
          type: integer
        inventory_alert_type:
          description: >-
            Indicates whether the
            [CatalogItemVariation](#type-catalogitemvariation) displays an alert
            when its inventory

            quantity is less than or equal to its `inventory_alert_threshold`. See [InventoryAlertType](#type-inventoryalerttype)

            for all possible values.
          enum:
            - NONE
            - LOW_QUANTITY
          type: string
        location_id:
          description: The ID of the [location][#type-location].
          type: string
        price_money:
          $ref: "#/components/schemas/Money"
        pricing_type:
          description: >-
            The pricing type (fixed or variable) for the
            [CatalogItemVariation](#type-catalogitemvariation) at the given
            [location][#type-location].

            See [CatalogPricingType](#type-catalogpricingtype) for all possible values.
          enum:
            - FIXED_PRICING
            - VARIABLE_PRICING
          type: string
        track_inventory:
          description: If `true`, inventory tracking is active for the
            [CatalogItemVariation](#type-catalogitemvariation) at this
            [location][#type-location].
          type: boolean
      type: object
    ListCatalogRequest:
      description: ""
      example:
        request_url: https://connect.squareup.com/v2/catalog/list?types=category,tax
      properties:
        cursor:
          description: >-
            The pagination cursor returned in the previous response. Leave unset
            for an initial request.

            See [Paginating results](#paginatingresults) for more information.
          type: string
        types:
          description: >-
            An optional case-insensitive, comma-separated list of object types
            to retrieve, for example

            `ITEM,ITEM_VARIATION,CATEGORY`.


            The legal values are taken from the [CatalogObjectType](#type-catalogobjecttype)

            enumeration, namely `"ITEM"`, `"ITEM_VARIATION"`, `"CATEGORY"`, `"DISCOUNT"`, `"TAX"`,

            `"MODIFIER"`, or `"MODIFIER_LIST"`.
          type: string
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/Catalog/ListCatalog/ListCatalogRequest.csharp
        php: /sdk_samples/Catalog/ListCatalog/ListCatalogRequest.php
        python: /sdk_samples/Catalog/ListCatalog/ListCatalogRequest.python
        ruby: /sdk_samples/Catalog/ListCatalog/ListCatalogRequest.ruby
    ListCatalogResponse:
      description: ""
      example:
        objects:
          - category_data:
              name: Beverages
            id: 5ZYQZZ2IECPVJ2IJ5KQPRDC3
            is_deleted: false
            present_at_all_locations: true
            type: CATEGORY
            updated_at: 2017-02-21T14:50:26.495Z
            version: 1487688626495
          - id: L5R47DGBZOOVKCAFIXC56AEN
            is_deleted: false
            present_at_all_locations: true
            tax_data:
              calculation_phase: TAX_SUBTOTAL_PHASE
              enabled: true
              inclusion_type: ADDITIVE
              name: Sales Tax
              percentage: "5.0"
            type: TAX
            updated_at: 2017-02-21T14:50:26.495Z
            version: 1487688626495
      properties:
        cursor:
          description: >-
            The pagination cursor to be used in a subsequent request. If unset,
            this is the final response.

            See [Paginating results](#paginatingresults) for more information.
          type: string
        errors:
          description: The set of [Error](#type-error)s encountered.
          items:
            $ref: "#/components/schemas/Error"
          type: array
        objects:
          description: The [CatalogObject](#type-catalogobject)s returned.
          items:
            $ref: "#/components/schemas/CatalogObject"
          type: array
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/Catalog/ListCatalog/ListCatalogResponse.csharp
        php: /sdk_samples/Catalog/ListCatalog/ListCatalogResponse.php
        python: /sdk_samples/Catalog/ListCatalog/ListCatalogResponse.python
        ruby: /sdk_samples/Catalog/ListCatalog/ListCatalogResponse.ruby
    ListCustomersRequest:
      description: |-
        Defines the query parameters that can be provided in a request to the
        [ListCustomers](#endpoint-listcustomers) endpoint.
      example:
        request_url: https://connect.squareup.com/v2/customers
      properties:
        cursor:
          description: >-
            A pagination cursor returned by a previous call to this endpoint.

            Provide this to retrieve the next set of results for your original query.


            See [Paginating results](#paginatingresults) for more information.
          type: string
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/ListCustomers/ListCustomersRequest.csharp
        php: /sdk_samples/ListCustomers/ListCustomersRequest.php
        python: /sdk_samples/ListCustomers/ListCustomersRequest.python
        ruby: /sdk_samples/ListCustomers/ListCustomersRequest.ruby
    ListCustomersResponse:
      description: >-
        Defines the fields that are included in the response body of

        a request to the [ListCustomers](#endpoint-listcustomers) endpoint.


        One of `errors` or `customers` is present in a given response (never both).
      example:
        customers:
          - address:
              address_line_1: 500 Electric Ave
              address_line_2: Suite 600
              administrative_district_level_1: NY
              country: US
              locality: New York
              postal_code: "10003"
            created_at: 2016-03-23T20:21:54.859Z
            email_address: Amelia.Earhart@example.com
            family_name: Earhart
            given_name: Amelia
            groups:
              - id: 16894e93-96eb-4ced-b24b-f71d42bf084c
                name: Aviation Enthusiasts
            id: JDKYHBWT1D4F8MFH63DBMEN8Y4
            note: a customer
            phone_number: 1-212-555-4240
            reference_id: YOUR_REFERENCE_ID
            updated_at: 2016-03-23T20:21:55Z
      properties:
        cursor:
          description: >-
            A pagination cursor to retrieve the next set of results for your

            original query to the endpoint. This value is present only if the request

            succeeded and additional results are available.


            See [Paginating results](#paginatingresults) for more information.
          type: string
        customers:
          description: An array of `Customer` objects that match your query.
          items:
            $ref: "#/components/schemas/Customer"
          type: array
        errors:
          description: Any errors that occurred during the request.
          items:
            $ref: "#/components/schemas/Error"
          type: array
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/ListCustomers/ListCustomersResponse.csharp
        php: /sdk_samples/ListCustomers/ListCustomersResponse.php
        python: /sdk_samples/ListCustomers/ListCustomersResponse.python
        ruby: /sdk_samples/ListCustomers/ListCustomersResponse.ruby
    ListLocationsRequest:
      description: ""
      example:
        request_url: https://connect.squareup.com/v2/locations
      properties: {}
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/ListLocations/ListLocationsRequest.csharp
        php: /sdk_samples/ListLocations/ListLocationsRequest.php
        python: /sdk_samples/ListLocations/ListLocationsRequest.python
        ruby: /sdk_samples/ListLocations/ListLocationsRequest.ruby
    ListLocationsResponse:
      description: >-
        Defines the fields that are included in the response body of

        a request to the [ListLocations](#endpoint-listlocations) endpoint.


        One of `errors` or `locations` is present in a given response (never both).
      example:
        locations:
          - address:
              address_line_1: 123 Main St
              administrative_district_level_1: CA
              country: US
              locality: San Francisco
              postal_code: "94114"
            capabilities:
              - CREDIT_CARD_PROCESSING
            id: 18YC4JDH91E1H
            name: your location name
            timezone: America/Los_Angeles
      properties:
        errors:
          description: Any errors that occurred during the request.
          items:
            $ref: "#/components/schemas/Error"
          type: array
        locations:
          description: The business's locations.
          items:
            $ref: "#/components/schemas/Location"
          type: array
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/ListLocations/ListLocationsResponse.csharp
        php: /sdk_samples/ListLocations/ListLocationsResponse.php
        python: /sdk_samples/ListLocations/ListLocationsResponse.python
        ruby: /sdk_samples/ListLocations/ListLocationsResponse.ruby
    ListRefundsRequest:
      description: |-
        Defines the query parameters that can be included in
        a request to the [ListRefunds](#endpoint-listrefunds) endpoint.
      example:
        request_url: https://connect.squareup.com/v2/locations/LOCATION_ID/refunds?begin_time=2016-01-15T00:00:00Z&end_time=2016-01-31T00:00:00Z
      properties:
        begin_time:
          description: >-
            The beginning of the requested reporting period, in RFC 3339 format.


            See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.


            Default value: The current time minus one year.
          type: string
        cursor:
          description: >-
            A pagination cursor returned by a previous call to this endpoint.

            Provide this to retrieve the next set of results for your original query.


            See [Paginating results](#paginatingresults) for more information.
          type: string
        end_time:
          description: >-
            The end of the requested reporting period, in RFC 3339 format.


            See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.


            Default value: The current time.
          type: string
        sort_order:
          description: |-
            The order in which results are listed in the response (`ASC` for
            oldest first, `DESC` for newest first).

            Default value: `DESC`
          enum:
            - DESC
            - ASC
          type: string
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/ListRefunds/ListRefundsRequest.csharp
        php: /sdk_samples/ListRefunds/ListRefundsRequest.php
        python: /sdk_samples/ListRefunds/ListRefundsRequest.python
        ruby: /sdk_samples/ListRefunds/ListRefundsRequest.ruby
    ListRefundsResponse:
      description: >-
        Defines the fields that are included in the response body of

        a request to the [ListRefunds](#endpoint-listrefunds) endpoint.


        One of `errors` or `refunds` is present in a given response (never both).
      example:
        refunds:
          - amount_money:
              amount: 100
              currency: USD
            created_at: 2016-02-12T00:28:18Z
            id: b27436d1-7f8e-5610-45c6-417ef71434b4-SW
            location_id: 18YC4JDH91E1H
            reason: some reason
            status: APPROVED
            tender_id: TENDER_ID
            transaction_id: TRANSACTION_ID
      properties:
        cursor:
          description: >-
            A pagination cursor for retrieving the next set of results,

            if any remain. Provide this value as the `cursor` parameter in a subsequent

            request to this endpoint.


            See [Paginating results](#paginatingresults) for more information.
          type: string
        errors:
          description: Any errors that occurred during the request.
          items:
            $ref: "#/components/schemas/Error"
          type: array
        refunds:
          description: An array of refunds that match your query.
          items:
            $ref: "#/components/schemas/Refund"
          type: array
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/ListRefunds/ListRefundsResponse.csharp
        php: /sdk_samples/ListRefunds/ListRefundsResponse.php
        python: /sdk_samples/ListRefunds/ListRefundsResponse.python
        ruby: /sdk_samples/ListRefunds/ListRefundsResponse.ruby
    ListTransactionsRequest:
      description: >-
        Defines the query parameters that can be included in

        a request to the [ListTransactions](#endpoint-listtransactions) endpoint.
      example:
        request_url: https://connect.squareup.com/v2/locations/LOCATION_ID/transactions?begin_time=2016-01-15T00:00:00Z&end_time=2016-01-31T00:00:00Z
      properties:
        begin_time:
          description: >-
            The beginning of the requested reporting period, in RFC 3339 format.


            See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.


            Default value: The current time minus one year.
          type: string
        cursor:
          description: >-
            A pagination cursor returned by a previous call to this endpoint.

            Provide this to retrieve the next set of results for your original query.


            See [Paginating results](#paginatingresults) for more information.
          type: string
        end_time:
          description: >-
            The end of the requested reporting period, in RFC 3339 format.


            See [Date ranges](#dateranges) for details on date inclusivity/exclusivity.


            Default value: The current time.
          type: string
        sort_order:
          description: |-
            The order in which results are listed in the response (`ASC` for
            oldest first, `DESC` for newest first).

            Default value: `DESC`
          enum:
            - DESC
            - ASC
          type: string
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/ListTransactions/ListTransactionsRequest.csharp
        php: /sdk_samples/ListTransactions/ListTransactionsRequest.php
        python: /sdk_samples/ListTransactions/ListTransactionsRequest.python
        ruby: /sdk_samples/ListTransactions/ListTransactionsRequest.ruby
    ListTransactionsResponse:
      description: >-
        Defines the fields that are included in the response body of

        a request to the [ListTransactions](#endpoint-listtransactions) endpoint.


        One of `errors` or `transactions` is present in a given response (never both).
      example:
        transactions:
          - created_at: 2016-03-10T22:57:56Z
            id: KnL67ZIwXCPtzOrqj0HrkxMF
            location_id: 18YC4JDH91E1H
            product: EXTERNAL_API
            reference_id: some optional reference id
            refunds:
              - amount_money:
                  amount: 5000
                  currency: USD
                created_at: 2016-03-10T22:59:20Z
                id: 7a5RcVI0CxbOcJ2wMOkE
                location_id: 18YC4JDH91E1H
                processing_fee_money:
                  amount: 138
                  currency: USD
                reason: some reason why
                status: APPROVED
                tender_id: MtZRYYdDrYNQbOvV7nbuBvMF
                transaction_id: KnL67ZIwXCPtzOrqj0HrkxMF
            tenders:
              - amount_money:
                  amount: 5000
                  currency: USD
                card_details:
                  card:
                    card_brand: VISA
                    last_4: "1111"
                  entry_method: KEYED
                  status: CAPTURED
                created_at: 2016-03-10T22:57:56Z
                id: MtZRYYdDrYNQbOvV7nbuBvMF
                location_id: 18YC4JDH91E1H
                note: some optional note
                processing_fee_money:
                  amount: 138
                  currency: USD
                transaction_id: KnL67ZIwXCPtzOrqj0HrkxMF
                type: CARD
      properties:
        cursor:
          description: >-
            A pagination cursor for retrieving the next set of results,

            if any remain. Provide this value as the `cursor` parameter in a subsequent

            request to this endpoint.


            See [Paginating results](#paginatingresults) for more information.
          type: string
        errors:
          description: Any errors that occurred during the request.
          items:
            $ref: "#/components/schemas/Error"
          type: array
        transactions:
          description: An array of transactions that match your query.
          items:
            $ref: "#/components/schemas/Transaction"
          type: array
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/ListTransactions/ListTransactionsResponse.csharp
        php: /sdk_samples/ListTransactions/ListTransactionsResponse.php
        python: /sdk_samples/ListTransactions/ListTransactionsResponse.python
        ruby: /sdk_samples/ListTransactions/ListTransactionsResponse.ruby
    Location:
      description: Represents one of a business's locations.
      properties:
        address:
          $ref: "#/components/schemas/Address"
        capabilities:
          description: >-
            Indicates which Square features are enabled for the location.


            See [LocationCapability](#type-locationcapability) for possible values.
          items:
            enum:
              - CREDIT_CARD_PROCESSING
            type: string
          type: array
        id:
          description: The location's unique ID.
          type: string
        name:
          description: The location's name.
          type: string
        timezone:
          description: |-
            The [IANA Timezone Database](https://www.iana.org/time-zones)
            identifier for the location's timezone.
          type: string
      type: object
    LocationCapability:
      description: |-
        Indicates account capabilities that a business's location might or
        might not have enabled.
      enum:
        - CREDIT_CARD_PROCESSING
      type: string
    Money:
      description: >-
        Represents an amount of money.


        __Important:__ Unlike version 1 of the Connect API, __all monetary amounts

        returned by v2 endpoints are positive.__ (In v1, monetary amounts are negative

        if they represent money being paid _by_ a merchant, instead of money being

        paid _to_ a merchant.)
      properties:
        amount:
          description: >-
            The amount of money, in the smallest denomination of the

            currency indicated by `currency`. For example, when `currency` is `USD`,

            `amount` is in cents.
          format: int64
          type: integer
        currency:
          description: >-
            The type of currency, in __ISO 4217 format__. For example, the
            currency

            code for US dollars is `USD`.


            See [Currency](#type-currency) for possible values.
          enum:
            - AED
            - AFN
            - ALL
            - AMD
            - ANG
            - AOA
            - ARS
            - AUD
            - AWG
            - AZN
            - BAM
            - BBD
            - BDT
            - BGN
            - BHD
            - BIF
            - BMD
            - BND
            - BOB
            - BOV
            - BRL
            - BSD
            - BTN
            - BWP
            - BYR
            - BZD
            - CAD
            - CDF
            - CHE
            - CHF
            - CHW
            - CLF
            - CLP
            - CNY
            - COP
            - COU
            - CRC
            - CUC
            - CUP
            - CVE
            - CZK
            - DJF
            - DKK
            - DOP
            - DZD
            - EGP
            - ERN
            - ETB
            - EUR
            - FJD
            - FKP
            - GBP
            - GEL
            - GHS
            - GIP
            - GMD
            - GNF
            - GTQ
            - GYD
            - HKD
            - HNL
            - HRK
            - HTG
            - HUF
            - IDR
            - ILS
            - INR
            - IQD
            - IRR
            - ISK
            - JMD
            - JOD
            - JPY
            - KES
            - KGS
            - KHR
            - KMF
            - KPW
            - KRW
            - KWD
            - KYD
            - KZT
            - LAK
            - LBP
            - LKR
            - LRD
            - LSL
            - LTL
            - LVL
            - LYD
            - MAD
            - MDL
            - MGA
            - MKD
            - MMK
            - MNT
            - MOP
            - MRO
            - MUR
            - MVR
            - MWK
            - MXN
            - MXV
            - MYR
            - MZN
            - NAD
            - NGN
            - NIO
            - NOK
            - NPR
            - NZD
            - OMR
            - PAB
            - PEN
            - PGK
            - PHP
            - PKR
            - PLN
            - PYG
            - QAR
            - RON
            - RSD
            - RUB
            - RWF
            - SAR
            - SBD
            - SCR
            - SDG
            - SEK
            - SGD
            - SHP
            - SLL
            - SOS
            - SRD
            - SSP
            - STD
            - SVC
            - SYP
            - SZL
            - THB
            - TJS
            - TMT
            - TND
            - TOP
            - TRY
            - TTD
            - TWD
            - TZS
            - UAH
            - UGX
            - USD
            - USN
            - USS
            - UYI
            - UYU
            - UZS
            - VEF
            - VND
            - VUV
            - WST
            - XAF
            - XAG
            - XAU
            - XBA
            - XBB
            - XBC
            - XBD
            - XCD
            - XDR
            - XOF
            - XPD
            - XPF
            - XPT
            - XTS
            - XXX
            - YER
            - ZAR
            - ZMK
            - ZMW
            - BTC
          type: string
      type: object
    Order:
      description: >-
        Contains all information related to a single order to process with
        Square,

        including line items that specify the products to purchase
      properties:
        line_items:
          description: |-
            The line items included in the order. Every order has at least one
            line item.
          items:
            $ref: "#/components/schemas/OrderLineItem"
          type: array
        location_id:
          description: The ID of the merchant location this order is associated with.
          type: string
        reference_id:
          description: >-
            A client specified identifier to associate an entity in another
            system

            with this order.
          type: string
        total_discount_money:
          $ref: "#/components/schemas/Money"
        total_money:
          $ref: "#/components/schemas/Money"
        total_tax_money:
          $ref: "#/components/schemas/Money"
      type: object
    OrderLineItem:
      description: |-
        Represents a line item in an order. Each line item describes a different
        product to purchase, with its own quantity and price details.
      properties:
        base_price_money:
          $ref: "#/components/schemas/Money"
        discounts:
          description: The discounts applied to this line item.
          items:
            $ref: "#/components/schemas/OrderLineItemDiscount"
          type: array
        name:
          description: The name of the line item.
          type: string
        quantity:
          description: |-
            The quantity of the product to purchase. Currently, this string must
            have an integer value.
          type: string
        taxes:
          description: The taxes applied to this line item.
          items:
            $ref: "#/components/schemas/OrderLineItemTax"
          type: array
        total_discount_money:
          $ref: "#/components/schemas/Money"
        total_money:
          $ref: "#/components/schemas/Money"
        total_tax_money:
          $ref: "#/components/schemas/Money"
      type: object
    OrderLineItemDiscount:
      description: >-
        Represents a discount that applies to one or more line items in an

        order.


        Fixed-amount, order-level discounts are distributed across all non-zero line item totals.

        The amount distributed to each line item is relative to that item’s contribution to the order subtotal.
      properties:
        amount_money:
          $ref: "#/components/schemas/Money"
        applied_money:
          $ref: "#/components/schemas/Money"
        name:
          description: The discount's name.
          type: string
        percentage:
          description: >-
            The percentage of the tax, as a string representation of a decimal
            number.

            A value of `7.25` corresponds to a percentage of 7.25%.


            The percentage won't be set for an amount-based discount.
          type: string
        scope:
          description: >-
            Indicates the level at which the discount applies.

            See [OrderLineItemDiscountScope](#type-orderlineitemdiscountscope) for possible values.
          enum:
            - LINE_ITEM
            - ORDER
          type: string
        type:
          description: >-
            The type of the discount. If it is created by API, it would be
            either `FIXED_PERCENTAGE` or `FIXED_AMOUNT`.


            VARIABLE_* is not supported in API because the order is created at the time of sale and either

            percentage or amount has to be specified.


            See [OrderLineItemDiscountType](#type-orderlineitemdiscounttype) for possible values.
          enum:
            - UNKNOWN
            - FIXED_PERCENTAGE
            - FIXED_AMOUNT
            - VARIABLE_PERCENTAGE
            - VARIABLE_AMOUNT
          type: string
      type: object
    OrderLineItemDiscountScope:
      description: Indicates whether this is a line item or order-level discount.
      enum:
        - LINE_ITEM
        - ORDER
      type: string
    OrderLineItemDiscountType:
      description: Indicates how the discount is applied to the associated line item or
        order.
      enum:
        - UNKNOWN
        - FIXED_PERCENTAGE
        - FIXED_AMOUNT
        - VARIABLE_PERCENTAGE
        - VARIABLE_AMOUNT
      type: string
    OrderLineItemTax:
      description: Represents a tax that applies to one or more line items in an order.
      properties:
        applied_money:
          $ref: "#/components/schemas/Money"
        name:
          description: The tax's name.
          type: string
        percentage:
          description: >-
            The percentage of the tax, as a string representation of a decimal
            number.


            A value of `7.25` corresponds to a percentage of 7.25%.
          type: string
        type:
          description: >-
            Indicates the calculation method used to apply the tax.


            See [OrderLineItemTaxType](#type-orderlineitemtaxtype) for possible values.
          enum:
            - UNKNOWN
            - ADDITIVE
            - INCLUSIVE
          type: string
      type: object
    OrderLineItemTaxType:
      description: Indicates how the tax is applied to the associated line item or order.
      enum:
        - UNKNOWN
        - ADDITIVE
        - INCLUSIVE
      type: string
    Refund:
      description: Represents a refund processed for a Square transaction.
      properties:
        amount_money:
          $ref: "#/components/schemas/Money"
        created_at:
          description: The time when the refund was created, in RFC 3339 format.
          type: string
        id:
          description: The refund's unique ID.
          type: string
        location_id:
          description: The ID of the refund's associated location.
          type: string
        processing_fee_money:
          $ref: "#/components/schemas/Money"
        reason:
          description: The reason for the refund being issued.
          type: string
        status:
          description: |-
            The current status of the refund (`PENDING`, `APPROVED`, `REJECTED`,
            or `FAILED`).
          enum:
            - PENDING
            - APPROVED
            - REJECTED
            - FAILED
          type: string
        tender_id:
          description: The ID of the refunded tender.
          type: string
        transaction_id:
          description: The ID of the transaction that the refunded tender is part of.
          type: string
      required:
        - id
        - location_id
        - transaction_id
        - tender_id
        - reason
        - amount_money
        - status
      type: object
    RefundStatus:
      description: Indicates a refund's current status.
      enum:
        - PENDING
        - APPROVED
        - REJECTED
        - FAILED
      type: string
    RetrieveCatalogObjectRequest:
      description: ""
      example:
        request_url: https://connect.squareup.com/v2/catalog/object/W62UWFY35CWMYGVWK6TWJDNI?include_related_objects=true
      properties:
        include_related_objects:
          description: >-
            If `true`, the response will include additional objects that are
            related to the

            requested object, as follows:


            If the `object` field of the response contains a [CatalogItem](#type-catalogitem),

            its associated [CatalogCategory](#type-catalogcategory), [CatalogTax](#type-catalogtax)es, and

            [CatalogModifierList](#type-catalogmodifierlist)s will be returned in the `related_objects` field of the

            response. If the `object` field of the response contains a [CatalogItemVariation](#type-catalogitemvariation),

            its parent [CatalogItem](#type-catalogitem) will be returned in the `related_objects` field of

            the response.


            Default value: `false`
          type: boolean
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.csharp
        php: /sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.php
        python: /sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.python
        ruby: /sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectRequest.ruby
    RetrieveCatalogObjectResponse:
      description: ""
      example:
        object:
          id: W62UWFY35CWMYGVWK6TWJDNI
          is_deleted: false
          item_data:
            category_id: BJNQCF2FJ6S6UIDT65ABHLRX
            description: Hot Leaf Juice
            name: Tea
            tax_ids:
              - HURXQOOAIC4IZSI2BEXQRYFY
            variations:
              - id: 2TZFAOHWGG7PAK2QEXWYPZSP
                is_deleted: false
                item_variation_data:
                  item_id: W62UWFY35CWMYGVWK6TWJDNI
                  name: Mug
                  ordinal: 0
                  price_money:
                    amount: 150
                    currency: USD
                  pricing_type: FIXED_PRICING
                present_at_all_locations: true
                type: ITEM_VARIATION
                updated_at: 2016-11-16T22:25:24.878Z
                version: 1479335124878
          present_at_all_locations: true
          type: ITEM
          updated_at: 2016-11-16T22:25:24.878Z
          version: 1479335124878
        related_objects:
          - category_data:
              name: Beverages
            id: BJNQCF2FJ6S6UIDT65ABHLRX
            is_deleted: false
            present_at_all_locations: true
            type: CATEGORY
            updated_at: 2016-11-16T22:25:24.878Z
            version: 1479335124878
          - id: HURXQOOAIC4IZSI2BEXQRYFY
            is_deleted: false
            present_at_all_locations: true
            tax_data:
              calculation_phase: TAX_SUBTOTAL_PHASE
              enabled: true
              inclusion_type: ADDITIVE
              name: Sales Tax
              percentage: "5.0"
            type: TAX
            updated_at: 2016-11-16T22:25:24.878Z
            version: 1479335124878
      properties:
        errors:
          description: The set of [Error](#type-error)s encountered.
          items:
            $ref: "#/components/schemas/Error"
          type: array
        object:
          $ref: "#/components/schemas/CatalogObject"
        related_objects:
          description: A list of [CatalogObject](#type-catalogobject)s referenced by the
            object in the `object` field.
          items:
            $ref: "#/components/schemas/CatalogObject"
          type: array
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.csharp
        php: /sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.php
        python: /sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.python
        ruby: /sdk_samples/Catalog/RetrieveCatalogObject/RetrieveCatalogObjectResponse.ruby
    RetrieveCustomerRequest:
      description: ""
      example:
        request_url: https://connect.squareup.com/v2/customers/CUSTOMER_ID
      properties: {}
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.csharp
        php: /sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.php
        python: /sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.python
        ruby: /sdk_samples/RetrieveCustomer/RetrieveCustomerRequest.ruby
    RetrieveCustomerResponse:
      description: >-
        Defines the fields that are included in the response body of

        a request to the [RetrieveCustomer](#endpoint-retrievecustomer) endpoint.


        One of `errors` or `customer` is present in a given response (never both).
      example:
        customer:
          address:
            address_line_1: 500 Electric Ave
            address_line_2: Suite 600
            administrative_district_level_1: NY
            country: US
            locality: New York
            postal_code: "10003"
          created_at: 2016-03-23T20:21:54.859Z
          email_address: Amelia.Earhart@example.com
          family_name: Earhart
          given_name: Amelia
          groups:
            - id: 16894e93-96eb-4ced-b24b-f71d42bf084c
              name: Aviation Enthusiasts
          id: JDKYHBWT1D4F8MFH63DBMEN8Y4
          note: a customer
          phone_number: 1-212-555-4240
          reference_id: YOUR_REFERENCE_ID
          updated_at: 2016-03-23T20:21:54.859Z
      properties:
        customer:
          $ref: "#/components/schemas/Customer"
        errors:
          description: Any errors that occurred during the request.
          items:
            $ref: "#/components/schemas/Error"
          type: array
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.csharp
        php: /sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.php
        python: /sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.python
        ruby: /sdk_samples/RetrieveCustomer/RetrieveCustomerResponse.ruby
    RetrieveTransactionRequest:
      description: ""
      example:
        request_url: https://connect.squareup.com/v2/locations/LOCATION_ID/transactions/TRANSACTION_ID
      properties: {}
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.csharp
        php: /sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.php
        python: /sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.python
        ruby: /sdk_samples/RetrieveTransaction/RetrieveTransactionRequest.ruby
    RetrieveTransactionResponse:
      description: >-
        Defines the fields that are included in the response body of

        a request to the [RetrieveTransaction](#endpont-retrievetransaction) endpoint.


        One of `errors` or `transaction` is present in a given response (never both).
      example:
        transaction:
          created_at: 2016-03-10T22:57:56Z
          id: KnL67ZIwXCPtzOrqj0HrkxMF
          location_id: 18YC4JDH91E1H
          product: EXTERNAL_API
          reference_id: some optional reference id
          tenders:
            - amount_money:
                amount: 5000
                currency: USD
              card_details:
                card:
                  card_brand: VISA
                  last_4: "1111"
                entry_method: KEYED
                status: CAPTURED
              created_at: 2016-03-10T22:57:56Z
              id: MtZRYYdDrYNQbOvV7nbuBvMF
              location_id: 18YC4JDH91E1H
              note: some optional note
              processing_fee_money:
                amount: 138
                currency: USD
              transaction_id: KnL67ZIwXCPtzOrqj0HrkxMF
              type: CARD
      properties:
        errors:
          description: Any errors that occurred during the request.
          items:
            $ref: "#/components/schemas/Error"
          type: array
        transaction:
          $ref: "#/components/schemas/Transaction"
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.csharp
        php: /sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.php
        python: /sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.python
        ruby: /sdk_samples/RetrieveTransaction/RetrieveTransactionResponse.ruby
    SearchCatalogObjectsRequest:
      description: ""
      example:
        request_body:
          object_types:
            - ITEM
        request_url: https://connect.squareup.com/v2/catalog/search
      properties:
        begin_time:
          description: >-
            Return only objects that have been modified after this
            [timestamp](#workingwithdates)

            (in RFC 3339 format, e.g., "2016-09-04T23:59:33.123Z"). The timestamp is exclusive -

            objects whose timestamp is equal to `begin_time` will not be included in the response.
          type: string
        cursor:
          description: >-
            The pagination cursor returned in the previous response. Leave unset
            for an initial request.

            See [Paginating results](#paginatingresults) for more information.
          type: string
        include_deleted_objects:
          description: >-
            If `true`, deleted objects will be included in the results. Deleted
            objects will have their

            `is_deleted` field set to `true`.
          type: boolean
        include_related_objects:
          description: >-
            If `true`, the response will include additional objects that are
            related to the

            requested object, as follows:


            If a [CatalogItem](#type-catalogitem) is returned in the object field of the response,

            its associated [CatalogCategory](#type-catalogcategory), [CatalogTax](#type-catalogtax)es, and

            [CatalogModifierList](#type-catalogmodifierlist)s will be included in the `related_objects` field of the

            response.


            If a [CatalogItemVariation](#type-catalogitemvariation) is returned in the object field of the

            response, its parent [CatalogItem](#type-catalogitem) will be included in the `related_objects` field of

            the response.
          type: boolean
        limit:
          description: >-
            A limit on the number of results to be returned in a single page.
            The limit is advisory -

            the implementation may return more or fewer results. If the supplied limit is negative, zero, or

            is higher than the maximum limit of 1,000, it will be ignored.
          type: integer
        object_types:
          description: >-
            The desired set of object types to appear in the search results. The
            legal values are taken from the

            [CatalogObjectType](#type-catalogobjecttype) enumeration, namely `"ITEM"`, `"ITEM_VARIATION"`, `"CATEGORY"`,

            `"DISCOUNT"`, `"TAX"`, `"MODIFIER"`, or `"MODIFIER_LIST"`.
          items:
            enum:
              - ITEM
              - CATEGORY
              - ITEM_VARIATION
              - TAX
              - DISCOUNT
              - MODIFIER_LIST
              - MODIFIER
            type: string
          type: array
        query:
          $ref: "#/components/schemas/CatalogQuery"
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.csharp
        php: /sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.php
        python: /sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.python
        ruby: /sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsRequest.ruby
    SearchCatalogObjectsResponse:
      description: ""
      example:
        objects:
          - id: W62UWFY35CWMYGVWK6TWJDNI
            is_deleted: false
            item_data:
              category_id: BJNQCF2FJ6S6UIDT65ABHLRX
              description: Hot Leaf Juice
              name: Tea
              tax_ids:
                - HURXQOOAIC4IZSI2BEXQRYFY
              variations:
                - id: 2TZFAOHWGG7PAK2QEXWYPZSP
                  is_deleted: false
                  item_variation_data:
                    item_id: W62UWFY35CWMYGVWK6TWJDNI
                    name: Mug
                    ordinal: 0
                    price_money:
                      amount: 150
                      currency: USD
                    pricing_type: FIXED_PRICING
                  present_at_all_locations: true
                  type: ITEM_VARIATION
                  updated_at: 2016-11-16T22:25:24.878Z
                  version: 1479335124878
            present_at_all_locations: true
            type: ITEM
            updated_at: 2016-11-16T22:25:24.878Z
            version: 1479335124878
          - id: AA27W3M2GGTF3H6AVPNB77CK
            is_deleted: false
            item_data:
              category_id: BJNQCF2FJ6S6UIDT65ABHLRX
              description: Hot Bean Juice
              name: Coffee
              tax_ids:
                - HURXQOOAIC4IZSI2BEXQRYFY
              variations:
                - id: LBTYIHNHU52WOIHWT7SNRIYH
                  is_deleted: false
                  item_variation_data:
                    item_id: AA27W3M2GGTF3H6AVPNB77CK
                    name: Regular
                    ordinal: 0
                    price_money:
                      amount: 250
                      currency: USD
                    pricing_type: FIXED_PRICING
                  present_at_all_locations: true
                  type: ITEM_VARIATION
                  updated_at: 2016-11-16T22:25:24.878Z
                  version: 1479335124878
                - id: PKYIC7HGGKW5CYVSCVDEIMHY
                  is_deleted: false
                  item_variation_data:
                    item_id: AA27W3M2GGTF3H6AVPNB77CK
                    name: Large
                    ordinal: 1
                    price_money:
                      amount: 350
                      currency: USD
                    pricing_type: FIXED_PRICING
                  present_at_all_locations: true
                  type: ITEM_VARIATION
                  updated_at: 2016-11-16T22:25:24.878Z
                  version: 1479335124878
            present_at_all_locations: true
            type: ITEM
            updated_at: 2016-11-16T22:25:24.878Z
            version: 1479335124878
      properties:
        cursor:
          description: >-
            The pagination cursor to be used in a subsequent request. If unset,
            this is the final response.

            See [Paginating results](#paginatingresults) for more information.
          type: string
        errors:
          description: The set of [Error](#type-error)s encountered.
          items:
            $ref: "#/components/schemas/Error"
          type: array
        objects:
          description: The [CatalogObject](#type-catalogobject)s returned.
          items:
            $ref: "#/components/schemas/CatalogObject"
          type: array
        related_objects:
          description: A list of [CatalogObject](#type-catalogobject)s referenced by the
            objects in the `objects` field.
          items:
            $ref: "#/components/schemas/CatalogObject"
          type: array
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.csharp
        php: /sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.php
        python: /sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.python
        ruby: /sdk_samples/Catalog/SearchCatalogObjects/SearchCatalogObjectsResponse.ruby
    SortOrder:
      description: The order (e.g., chronological or alphabetical) in which results from a
        request are returned.
      enum:
        - DESC
        - ASC
      type: string
    TaxCalculationPhase:
      description: When to calculate the taxes due on a cart.
      enum:
        - TAX_SUBTOTAL_PHASE
        - TAX_TOTAL_PHASE
      type: string
    TaxInclusionType:
      description: Whether to the tax amount should be additional to or included in to the
        [CatalogItem](#type-catalogitem) price.
      enum:
        - ADDITIVE
        - INCLUSIVE
      type: string
    Tender:
      description: Represents a tender (i.e., a method of payment) used in a Square
        transaction.
      properties:
        amount_money:
          $ref: "#/components/schemas/Money"
        card_details:
          $ref: "#/components/schemas/TenderCardDetails"
        cash_details:
          $ref: "#/components/schemas/TenderCashDetails"
        created_at:
          description: The time when the tender was created, in RFC 3339 format.
          type: string
        customer_id:
          description: >-
            If the tender is associated with a customer or represents a
            customer's card on file,

            this is the ID of the associated customer.
          type: string
        id:
          description: The tender's unique ID.
          type: string
        location_id:
          description: The ID of the transaction's associated location.
          type: string
        note:
          description: An optional note associated with the tender at the time of payment.
          type: string
        processing_fee_money:
          $ref: "#/components/schemas/Money"
        transaction_id:
          description: The ID of the tender's associated transaction.
          type: string
        type:
          description: The type of tender, such as `CARD` or `CASH`.
          enum:
            - CARD
            - CASH
            - THIRD_PARTY_CARD
            - SQUARE_GIFT_CARD
            - NO_SALE
            - OTHER
          type: string
      required:
        - type
      type: object
    TenderCardDetails:
      description: Represents additional details of a tender with `type` `CARD` or
        `SQUARE_GIFT_CARD`
      properties:
        card:
          $ref: "#/components/schemas/Card"
        entry_method:
          description: The method used to enter the card's details for the transaction.
          enum:
            - SWIPED
            - KEYED
            - EMV
            - ON_FILE
            - CONTACTLESS
          type: string
        status:
          description: >-
            The credit card payment's current state (such as `AUTHORIZED` or

            `CAPTURED`). See [TenderCardDetailsStatus](#type-tendercarddetailsstatus)

            for possible values.
          enum:
            - AUTHORIZED
            - CAPTURED
            - VOIDED
            - FAILED
          type: string
      type: object
    TenderCardDetailsEntryMethod:
      description: Indicates the method used to enter the card's details.
      enum:
        - SWIPED
        - KEYED
        - EMV
        - ON_FILE
        - CONTACTLESS
      type: string
    TenderCardDetailsStatus:
      description: Indicates the card transaction's current status.
      enum:
        - AUTHORIZED
        - CAPTURED
        - VOIDED
        - FAILED
      type: string
    TenderCashDetails:
      description: Represents the details of a tender with `type` `CASH`.
      properties:
        buyer_tendered_money:
          $ref: "#/components/schemas/Money"
        change_back_money:
          $ref: "#/components/schemas/Money"
      type: object
    TenderType:
      description: Indicates a tender's type.
      enum:
        - CARD
        - CASH
        - THIRD_PARTY_CARD
        - SQUARE_GIFT_CARD
        - NO_SALE
        - OTHER
      type: string
    Transaction:
      description: >-
        Represents a transaction processed with Square, either with the

        Connect API or with Square Point of Sale.


        The `tenders` field of this object lists all methods of payment used to pay in

        the transaction.
      properties:
        client_id:
          description: >-
            If the transaction was created in the Square Point of Sale app, this
            value

            is the ID generated for the transaction by Square Point of Sale.


            This ID has no relationship to the transaction's canonical `id`, which is

            generated by Square's backend servers. This value is generated for bookkeeping

            purposes, in case the transaction cannot immediately be completed (for example,

            if the transaction is processed in offline mode).


            It is not currently possible with the Connect API to perform a transaction

            lookup by this value.
          type: string
        created_at:
          description: The time when the transaction was created, in RFC 3339 format.
          type: string
        id:
          description: The transaction's unique ID, issued by Square payments servers.
          type: string
        location_id:
          description: The ID of the transaction's associated location.
          type: string
        order:
          $ref: "#/components/schemas/Order"
        product:
          description: The Square product that processed the transaction.
          enum:
            - REGISTER
            - EXTERNAL_API
            - BILLING
            - APPOINTMENTS
            - INVOICES
            - ONLINE_STORE
            - PAYROLL
            - OTHER
          type: string
        reference_id:
          description: >-
            If the transaction was created with the [Charge](#endpoint-charge)

            endpoint, this value is the same as the value provided for the `reference_id`

            parameter in the request to that endpoint. Otherwise, it is not set.
          type: string
        refunds:
          description: Refunds that have been applied to any tender in the transaction.
          items:
            $ref: "#/components/schemas/Refund"
          type: array
        shipping_address:
          $ref: "#/components/schemas/Address"
        tenders:
          description: The tenders used to pay in the transaction.
          items:
            $ref: "#/components/schemas/Tender"
          type: array
      type: object
    TransactionProduct:
      description: Indicates the Square product used to process a transaction.
      enum:
        - REGISTER
        - EXTERNAL_API
        - BILLING
        - APPOINTMENTS
        - INVOICES
        - ONLINE_STORE
        - PAYROLL
        - OTHER
      type: string
    UpdateCustomerRequest:
      description: |-
        Defines the body parameters that can be provided in a request to the
        [UpdateCustomer](#endpoint-updatecustomer) endpoint.
      example:
        request_body:
          email_address: New.Amelia.Earhart@example.com
          note: updated customer note
          phone_number: ""
        request_url: /v2/customers/CUSTOMER_ID
      properties:
        address:
          $ref: "#/components/schemas/Address"
        company_name:
          description: The name of the customer's company.
          type: string
        email_address:
          description: The customer's email address.
          type: string
        family_name:
          description: The customer's family (i.e., last) name.
          type: string
        given_name:
          description: The customer's given (i.e., first) name.
          type: string
        nickname:
          description: A nickname for the customer.
          type: string
        note:
          description: An optional note to associate with the customer.
          type: string
        phone_number:
          description: The customer's phone number.
          type: string
        reference_id:
          description: |-
            An optional second ID you can set to associate the customer with an
            entity in another system.
          type: string
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/UpdateCustomer/UpdateCustomerRequest.csharp
        php: /sdk_samples/UpdateCustomer/UpdateCustomerRequest.php
        python: /sdk_samples/UpdateCustomer/UpdateCustomerRequest.python
        ruby: /sdk_samples/UpdateCustomer/UpdateCustomerRequest.ruby
    UpdateCustomerResponse:
      description: >-
        Defines the fields that are included in the response body of

        a request to the [UpdateCustomer](#endpoint-updatecustomer) endpoint.


        One of `errors` or `customer` is present in a given response (never both).
      example:
        customer:
          address:
            address_line_1: 500 Electric Ave
            address_line_2: Suite 600
            administrative_district_level_1: NY
            country: US
            locality: New York
            postal_code: "10003"
          created_at: 2016-03-23T20:21:54.859Z
          email_address: New.Amelia.Earhart@example.com
          family_name: Earhart
          given_name: Amelia
          groups:
            - id: 16894e93-96eb-4ced-b24b-f71d42bf084c
              name: Aviation Enthusiasts
          id: JDKYHBWT1D4F8MFH63DBMEN8Y4
          note: updated customer note
          reference_id: YOUR_REFERENCE_ID
          updated_at: 2016-03-25T20:21:55Z
      properties:
        customer:
          $ref: "#/components/schemas/Customer"
        errors:
          description: Any errors that occurred during the request.
          items:
            $ref: "#/components/schemas/Error"
          type: array
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/UpdateCustomer/UpdateCustomerResponse.csharp
        php: /sdk_samples/UpdateCustomer/UpdateCustomerResponse.php
        python: /sdk_samples/UpdateCustomer/UpdateCustomerResponse.python
        ruby: /sdk_samples/UpdateCustomer/UpdateCustomerResponse.ruby
    UpdateItemModifierListsRequest:
      description: ""
      example:
        request_body:
          item_ids:
            - H42BRLUJ5KTZTTMPVSLFAACQ
            - 2JXOBJIHCWBQ4NZ3RIXQGJA6
          modifier_lists_to_disable:
            - 7WRC16CJZDVLSNDQ35PP6YAD
          modifier_lists_to_enable:
            - H42BRLUJ5KTZTTMPVSLFAACQ
            - 2JXOBJIHCWBQ4NZ3RIXQGJA6
        request_url: https://connect.squareup.com/v2/update-item-taxes
      properties:
        item_ids:
          description: The [CatalogItem](#type-catalogitem)s whose
            [CatalogModifierList](#type-catalogmodifierlist)s are being updated.
          items:
            type: string
          type: array
        modifier_lists_to_disable:
          description: The set of [CatalogModifierList](#type-catalogmodifierlist)s
            (referenced by ID) to disable for the
            [CatalogItem](#type-catalogitem).
          items:
            type: string
          type: array
        modifier_lists_to_enable:
          description: The set of [CatalogModifierList](#type-catalogmodifierlist)s
            (referenced by ID) to enable for the
            [CatalogItem](#type-catalogitem).
          items:
            type: string
          type: array
      required:
        - item_ids
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.csharp
        php: /sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.php
        python: /sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.python
        ruby: /sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsRequest.ruby
    UpdateItemModifierListsResponse:
      description: ""
      example:
        updated_at: 2016-11-16T22:25:24.878Z
      properties:
        errors:
          description: The set of [Error](#type-error)s encountered.
          items:
            $ref: "#/components/schemas/Error"
          type: array
        updated_at:
          description: The database [timestamp](#workingwithdates) of this update in RFC
            3339 format, e.g., "2016-09-04T23:59:33.123Z".
          type: string
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.csharp
        php: /sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.php
        python: /sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.python
        ruby: /sdk_samples/Catalog/UpdateItemModifierLists/UpdateItemModifierListsResponse.ruby
    UpdateItemTaxesRequest:
      description: ""
      example:
        request_body:
          item_ids:
            - H42BRLUJ5KTZTTMPVSLFAACQ
            - 2JXOBJIHCWBQ4NZ3RIXQGJA6
          taxes_to_disable:
            - AQCEGCEBBQONINDOHRGZISEX
          taxes_to_enable:
            - 4WRCNHCJZDVLSNDQ35PP6YAD
        request_url: https://connect.squareup.com/v2/update-item-taxes
      properties:
        item_ids:
          description: The [CatalogItem](#type-catalogitem)s whose enabled/disabled
            [CatalogTax](#type-catalogtax)es are being updated.
          items:
            type: string
          type: array
        taxes_to_disable:
          description: The set of [CatalogTax](#type-catalogtax)es (referenced by ID) to
            disable for the [CatalogItem](#type-catalogitem).
          items:
            type: string
          type: array
        taxes_to_enable:
          description: The set of [CatalogTax](#type-catalogtax)es (referenced by ID) to
            enable for the [CatalogItem](#type-catalogitem).
          items:
            type: string
          type: array
      required:
        - item_ids
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.csharp
        php: /sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.php
        python: /sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.python
        ruby: /sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesRequest.ruby
    UpdateItemTaxesResponse:
      description: ""
      example:
        updated_at: 2016-11-16T22:25:24.878Z
      properties:
        errors:
          description: The set of [Error](#type-error)s encountered.
          items:
            $ref: "#/components/schemas/Error"
          type: array
        updated_at:
          description: The database [timestamp](#workingwithdates) of this update in RFC
            3339 format, e.g., "2016-09-04T23:59:33.123Z".
          type: string
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.csharp
        php: /sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.php
        python: /sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.python
        ruby: /sdk_samples/Catalog/UpdateItemTaxes/UpdateItemTaxesResponse.ruby
    UpsertCatalogObjectRequest:
      description: ""
      example:
        request_body:
          idempotency_key: af3d1afc-7212-4300-b463-0bfc5314a5ae
          object:
            id: "#Cocoa"
            item_data:
              abbreviation: Ch
              description: Hot chocolate
              name: Cocoa
            type: ITEM
        request_url: https://connect.squareup.com/v2/catalog
      properties:
        idempotency_key:
          description: |-
            A value you specify that uniquely identifies this
            request among all your requests. A common way to create
            a valid idempotency key is to use a Universally unique
            identifier (UUID).

            If you're unsure whether a particular request was successful,
            you can reattempt it with the same idempotency key without
            worrying about creating duplicate objects.

            See [Idempotency keys](#idempotencykeys) for more information.
          minLength: 1
          type: string
        object:
          $ref: "#/components/schemas/CatalogObject"
      required:
        - idempotency_key
        - object
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.csharp
        php: /sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.php
        python: /sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.python
        ruby: /sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectRequest.ruby
    UpsertCatalogObjectResponse:
      description: ""
      example:
        catalog_object:
          id: 7SB3ZQYJ5GDMVFL7JK46JCHT
          is_deleted: false
          item_data:
            abbreviation: Ch
            description: Hot chocolate
            name: Cocoa
          type: ITEM
          updated_at: 2016-11-16T22:32:42.996Z
          version: 1479335562996
        id_mappings:
          - client_object_id: "#Cocoa"
            object_id: 7SB3ZQYJ5GDMVFL7JK46JCHT
      properties:
        catalog_object:
          $ref: "#/components/schemas/CatalogObject"
        errors:
          description: The set of [Error](#type-error)s encountered.
          items:
            $ref: "#/components/schemas/Error"
          type: array
        id_mappings:
          description: The mapping between client and server IDs for this Upsert.
          items:
            $ref: "#/components/schemas/CatalogIdMapping"
          type: array
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.csharp
        php: /sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.php
        python: /sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.python
        ruby: /sdk_samples/Catalog/UpsertCatalogObject/UpsertCatalogObjectResponse.ruby
    VoidTransactionRequest:
      description: ""
      example:
        request_url: https://connect.squareup.com/v2/locations/LOCATION_ID/transactions/TRANSACTION_ID/void
      properties: {}
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/VoidTransaction/VoidTransactionRequest.csharp
        php: /sdk_samples/VoidTransaction/VoidTransactionRequest.php
        python: /sdk_samples/VoidTransaction/VoidTransactionRequest.python
        ruby: /sdk_samples/VoidTransaction/VoidTransactionRequest.ruby
    VoidTransactionResponse:
      description: >-
        Defines the fields that are included in the response body of

        a request to the [CaptureTransaction](#endpoint-capturetransaction) endpoint.
      example: {}
      properties:
        errors:
          description: Any errors that occurred during the request.
          items:
            $ref: "#/components/schemas/Error"
          type: array
      type: object
      x-sq-sdk-sample-code:
        csharp: /sdk_samples/VoidTransaction/VoidTransactionResponse.csharp
        php: /sdk_samples/VoidTransaction/VoidTransactionResponse.php
        python: /sdk_samples/VoidTransaction/VoidTransactionResponse.python
        ruby: /sdk_samples/VoidTransaction/VoidTransactionResponse.ruby
    v1AdjustInventoryRequest:
      properties:
        adjustment_type:
          description: The reason for the inventory adjustment.
          enum:
            - SALE
            - RECEIVE_STOCK
            - MANUAL_ADJUST
          type: number
        memo:
          description: A note about the inventory adjustment.
          type: string
        quantity_delta:
          description: The number to adjust the variation's quantity by.
          type: number
      type: object
    v1BankAccount:
      properties:
        account_number_suffix:
          description: The last few digits of the bank account number.
          type: string
        bank_name:
          description: The name of the bank that manages the account.
          type: string
        currency_code:
          description: The currency code of the currency associated with the bank account,
            in ISO 4217 format. For example, the currency code for US dollars is
            USD.
          type: string
        id:
          description: The bank account's Square-issued ID.
          type: string
        merchant_id:
          description: The Square-issued ID of the merchant associated with the bank
            account.
          type: string
        name:
          description: The name associated with the bank account.
          type: string
        routing_number:
          description: The bank account's routing number.
          type: string
        type:
          description: The bank account's type (for example, savings or checking).
          enum:
            - BUSINESS_CHECKING
            - CHECKING
            - INVESTMENT
            - LOAN
            - SAVINGS
            - OTHER
          type: string
      type: object
    v1CashDrawerEvent:
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#datatype-cashdrawerevent
      properties:
        created_at:
          description: The time when the event occurred, in ISO 8601 format.
          type: string
        description:
          description: An optional description of the event, entered by the employee that
            created it.
          type: string
        employee_id:
          description: The ID of the employee that created the event.
          type: string
        event_money:
          $ref: "#/components/schemas/v1Money"
        event_type:
          description: The type of event that occurred.
          enum:
            - NO_SALE
            - CASH_TENDER_PAYMENT
            - OTHER_TENDER_PAYMENT
            - CASH_TENDER_CANCELED_PAYMENT
            - OTHER_TENDER_CANCELED_PAYMENT
            - CASH_TENDER_REFUND
            - OTHER_TENDER_REFUND
            - PAID_IN
            - PAID_OUT
          type: string
        id:
          description: The event's unique ID.
          type: string
      type: object
    v1CashDrawerShift:
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#get-cashdrawershifts
      properties:
        cash_paid_in_money:
          $ref: "#/components/schemas/v1Money"
        cash_paid_out_money:
          $ref: "#/components/schemas/v1Money"
        cash_payment_money:
          $ref: "#/components/schemas/v1Money"
        cash_refunds_money:
          $ref: "#/components/schemas/v1Money"
        closed_at:
          description: The time when the shift was closed, in ISO 8601 format.
          type: string
        closed_cash_money:
          $ref: "#/components/schemas/v1Money"
        closing_employee_id:
          description: The ID of the employee that closed the cash drawer shift by auditing
            the cash drawer's contents.
          type: string
        description:
          description: The time when the timecard was created, in ISO 8601 format.
          type: string
        device:
          $ref: "#/components/schemas/Device"
        employee_ids:
          description: The IDs of all employees that were logged into Square Register at
            some point during the cash drawer shift.
          items:
            type: string
          type: array
        ended_at:
          description: The time when the shift ended, in ISO 8601 format.
          type: boolean
        ending_employee_id:
          description: The ID of the employee that ended the cash drawer shift.
          type: string
        event_type:
          description: The shift's current state.
          enum:
            - OPEN
            - ENDED
            - CLOSED
          type: string
        events:
          description: All of the events (payments, refunds, and so on) that involved the
            cash drawer during the shift.
          items:
            $ref: "#/components/schemas/v1CashDrawerEvent"
          type: array
        expected_cash_money:
          $ref: "#/components/schemas/v1Money"
        id:
          description: The shift's unique ID.
          type: string
        opened_at:
          description: The time when the shift began, in ISO 8601 format.
          type: string
        opening_employee_id:
          description: The ID of the employee that started the cash drawer shift.
          type: string
        starting_cash_money:
          $ref: "#/components/schemas/v1Money"
      type: object
    v1Category:
      properties:
        id:
          description: The category's unique ID.
          type: string
        name:
          description: The category's name.
          type: string
      type: object
    v1CreateRefundRequest:
      properties:
        payment_id:
          description: The ID of the payment to refund. If you're creating a PARTIAL refund
            for a split tender payment, instead provide the id of the particular
            tender you want to refund. See Split Tender Payments for details.
          type: string
        reason:
          description: The reason for the refund.
          type: string
        refunded_money:
          $ref: "#/components/schemas/v1Money"
        request_idempotence_key:
          description: An optional key to ensure idempotence if you issue the same PARTIAL
            refund request more than once.
          type: string
        type:
          description: TThe type of refund (FULL or PARTIAL).
          enum:
            - FULL
            - PARTIAL
          type: string
      required:
        - payment_id
        - type
        - reason
      type: object
    v1Discount:
      properties:
        amount_money:
          $ref: "#/components/schemas/v1Money"
        color:
          description: The color of the discount's display label in Square Register, if not
            the default color. The default color is 9da2a6.
          enum:
            - 9da2a6
            - 4ab200
            - 0b8000
            - 2952cc
            - a82ee5
            - e5457a
            - b21212
            - 593c00
            - e5BF00
          type: string
        discount_type:
          description: Indicates whether the discount is a FIXED value or entered at the
            time of sale.
          enum:
            - FIXED
            - VARIABLE_PERCENTAGE
            - VARIABLE_AMOUNT
          type: string
        id:
          description: The discount's unique ID.
          type: string
        name:
          description: The discount's name.
          type: string
        pin_required:
          description: Indicates whether a mobile staff member needs to enter their PIN to
            apply the discount to a payment.
          type: boolean
        rate:
          description: The rate of the discount, as a string representation of a decimal
            number. A value of 0.07 corresponds to a rate of 7%. This rate is 0
            if discount_type is VARIABLE_PERCENTAGE.
          type: string
      type: object
    v1Employee:
      description: Represents one of a business's employees.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#datatype-employee
      properties:
        authorized_location_ids:
          description: The IDs of the locations the employee is allowed to clock in at.
          items:
            type: string
          readOnly: true
          type: array
        created_at:
          description: The time when the employee entity was created, in ISO 8601 format.
          readOnly: true
          type: string
        email:
          description: The employee's email address.
          type: string
        external_id:
          description: An ID the merchant can set to associate the employee with an entity
            in another system.
          readOnly: true
          type: string
        first_name:
          description: The employee's first name.
          type: string
        id:
          description: The employee's unique ID.
          readOnly: true
          type: string
        last_name:
          description: The employee's last name.
          type: string
        role_ids:
          description: The ids of the employee's associated roles. Currently, you can
            specify only one or zero roles per employee.
          items:
            type: string
          type: array
        status:
          description: "CWhether the employee is ACTIVE or INACTIVE. Inactive employees
            cannot sign in to Square Register.Merchants update this field from
            the Square Dashboard. "
          enum:
            - ACTIVE
            - INACTIVE
          readOnly: true
          type: string
        updated_at:
          description: The time when the employee entity was most recently updated, in ISO
            8601 format.
          readOnly: true
          type: string
      required:
        - first_name
        - last_name
      type: object
    v1EmployeeRole:
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#datatype-employeerole
      properties:
        created_at:
          description: The time when the employee entity was created, in ISO 8601 format.
            Is set by Square when the Role is created.
          readOnly: true
          type: string
        id:
          description: The role's unique ID, Can only be set by Square.
          readOnly: true
          type: string
        is_owner:
          description: If true, employees with this role have all permissions, regardless
            of the values indicated in permissions.
          type: boolean
        name:
          description: The role's merchant-defined name.
          type: string
        permissions:
          description: The role's permissions.
          items:
            enum:
              - REGISTER_ACCESS_SALES_HISTORY
              - REGISTER_APPLY_RESTRICTED_DISCOUNTS
              - REGISTER_CHANGE_SETTINGS
              - REGISTER_EDIT_ITEM
              - REGISTER_ISSUE_REFUNDS
              - REGISTER_OPEN_CASH_DRAWER_OUTSIDE_SALE
              - REGISTER_VIEW_SUMMARY_REPORTS
            type: string
          type: array
        updated_at:
          description: The time when the employee entity was most recently updated, in ISO
            8601 format. Is set by Square when the Role updated.
          readOnly: true
          type: string
      required:
        - name
        - permissions
      type: object
    v1Fee:
      properties:
        adjustment_type:
          description: The type of adjustment the fee applies to a payment. Currently, this
            value is TAX for all fees.
          enum:
            - TAX
          type: string
        applies_to_custom_amounts:
          description: If true, the fee applies to custom amounts entered into Square
            Register that are not associated with a particular item.
          type: boolean
        calculation_phase:
          description: Forthcoming
          enum:
            - FEE_SUBTOTAL_PHASE
            - OTHER
            - FEE_TOTAL_PHASE
          type: string
        enabled:
          description: If true, the fee is applied to all appropriate items. If false, the
            fee is not applied at all.
          type: boolean
        id:
          description: The fee's unique ID.
          type: string
        inclusion_type:
          description: Whether the fee is ADDITIVE or INCLUSIVE.
          enum:
            - ADDITIVE
            - INCLUSIVE
          type: string
        name:
          description: The fee's name.
          type: string
        rate:
          description: The rate of the fee, as a string representation of a decimal number.
            A value of 0.07 corresponds to a rate of 7%.
          type: string
        type:
          description: In countries with multiple classifications for sales taxes,
            indicates which classification the fee falls under. Currently
            relevant only to Canadian merchants.
          enum:
            - CA_GST
            - CA_HST
            - CA_PST
            - CA_QST
            - JP_CONSUMPTION_TAX
            - CA_PEI_PST
            - US_SALES_TAX
            - OTHER
          type: string
      type: object
    v1InventoryEntry:
      properties:
        quantity_on_hand:
          description: The current available quantity of the item variation.
          type: number
        variation_id:
          description: The variation that the entry corresponds to.
          type: string
      type: object
    v1Item:
      properties:
        abbreviation:
          description: The text of the item's display label in Square Register. Only up to
            the first five characters of the string are used.
          type: string
        available_online:
          description: If true, the item can be added to shipping orders from the
            merchant's online store.
          type: boolean
        category:
          $ref: "#/components/schemas/v1Category"
        color:
          description: The color of the discount's display label in Square Register, if not
            the default color. The default color is 9da2a6.
          enum:
            - 9da2a6
            - 4ab200
            - 0b8000
            - 2952cc
            - a82ee5
            - e5457a
            - b21212
            - 593c00
            - e5BF00
          type: string
        description:
          description: The item's description.
          type: string
        fees:
          description: The fees that apply to the item, if any.
          items:
            $ref: "#/components/schemas/v1Fee"
          type: array
        id:
          description: The item's ID. Must be unique among all entity IDs ever provided on
            behalf of the merchant. You can never reuse an ID. This value can
            include alphanumeric characters, dashes (-), and underscores (_).
          type: string
        master_image:
          $ref: "#/components/schemas/v1ItemImage"
        modifier_lists:
          description: The modifier lists that apply to the item, if any.
          items:
            $ref: "#/components/schemas/v1Variation"
          type: array
        name:
          description: The item's name.
          type: string
        taxable:
          description: Deprecated. This field is not used.
          type: boolean
        type:
          description: The item's type. This value is NORMAL for almost all items.
          enum:
            - NORMAL
            - GIFT_CARD
            - OTHER
          type: string
        variations:
          description: The item's variations. You must specify at least one variation.
          items:
            $ref: "#/components/schemas/v1Variation"
          type: array
        visibility:
          description: Indicates whether the item is viewable from the merchant's online
            store (PUBLIC) or PRIVATE.
          enum:
            - PUBLIC
            - PRIVATE
          type: string
      type: object
    v1ItemImage:
      properties:
        id:
          description: The image's unique ID.
          type: string
        url:
          description: The image's publicly accessible URL.
          type: string
      type: object
    v1Merchant:
      description: |-
        Defines the fields that are included in the response body of
        a request to the **RetrieveBusiness** endpoint.
      properties:
        account_capabilities:
          description: Capabilities that are enabled for the merchant's Square account.
            Capabilities that are not listed in this array are not enabled for
            the account.
          items:
            type: string
          type: array
        account_type:
          description: Indicates whether the merchant account corresponds to a
            single-location account (LOCATION) or a business account (BUSINESS).
            This value is almost always LOCATION.
          enum:
            - LOCATION
            - BUSINESS
          type: string
        business_address:
          $ref: "#/components/schemas/Address"
        business_name:
          description: The name of the merchant's business.
          type: string
        business_phone:
          $ref: "#/components/schemas/v1PhoneNumber"
        business_type:
          description: The type of business operated by the merchant.
          enum:
            - ACCOUNTING
            - APPAREL_AND_ACCESSORY_SHOPS
            - ART_DEALERS_GALLERIES
            - ART_DESIGN_AND_PHOTOGRAPHY
            - BAR_CLUB_LOUNGE
            - BEAUTY_AND_BARBER_SHOPS
            - BOOK_STORES
            - BUSINESS_SERVICES
            - CATERING
            - CHARITABLE_SOCIAL_SERVICE_ORGANIZATIONS
            - CHARITIBLE_ORGS
            - CLEANING_SERVICES
            - COMPUTER_EQUIPMENT_SOFTWARE_MAINTENANCE_REPAIR_SERVICES
            - CONSULTANT
            - CONTRACTORS
            - DELIVERY_SERVICES
            - DENTISTRY
            - EDUCATION
            - FOOD_STORES_CONVENIENCE_STORES_AND_SPECIALTY_MARKETS
            - FOOD_TRUCK_CART
            - FURNITURE_HOME_AND_OFFICE_EQUIPMENT
            - FURNITURE_HOME_GOODS
            - HOTELS_AND_LODGING
            - INDIVIDUAL_USE
            - JEWELRY_AND_WATCHES
            - LANDSCAPING_AND_HORTICULTURAL_SERVICES
            - LANGUAGE_SCHOOLS
            - LEGAL_SERVICES
            - MEDICAL_PRACTITIONERS
            - MEDICAL_SERVICES_AND_HEALTH_PRACTITIONERS
            - MEMBERSHIP_ORGANIZATIONS
            - MUSIC_AND_ENTERTAINMENT
            - OTHER
            - OUTDOOR_MARKETS
            - PERSONAL_SERVICES
            - POLITICAL_ORGANIZATIONS
            - PROFESSIONAL_SERVICES
            - REAL_ESTATE
            - RECREATION_SERVICES
            - REPAIR_SHOPS_AND_RELATED_SERVICES
            - RESTAURANTS
            - RETAIL_SHOPS
            - SCHOOLS_AND_EDUCATIONAL_SERVICES
            - SPORTING_GOODS
            - TAXICABS_AND_LIMOUSINES
            - TICKET_SALES
            - TOURISM
            - TRAVEL_TOURISM
            - VETERINARY_SERVICES
            - WEB_DEV_DESIGN
          type: string
        country_code:
          description: The country associated with the merchant account, in ISO
            3166-1-alpha-2 format.
          type: string
        currency_code:
          description: The currency associated with the merchant account, in ISO 4217
            format. For example, the currency code for US dollars is USD.
          type: string
        email:
          description: The email address associated with the merchant account.
          type: string
        id:
          description: The merchant account's unique identifier.
          type: string
        language_code:
          description: The language associated with the merchant account, in BCP 47 format.
          type: string
        location_details:
          description: Additional information for a single-location account specified by
            its associated business account, if it has one.
          properties:
            nickname:
              description: The nickname assigned to the single-location account by the
                parent business. This value appears in the parent business's
                multi-location dashboard.
              type: string
          type: object
        market_url:
          description: The URL of the merchant's online store.
          type: string
        name:
          description: The name associated with the merchant account.
          type: string
        "shipping_address ":
          $ref: "#/components/schemas/Address"
      type: object
    v1ModifierList:
      properties:
        id:
          description: The modifier list's unique ID.
          type: string
        modifier_options:
          description: The options included in the modifier list.
          items:
            $ref: "#/components/schemas/v1ModifierOption"
          type: array
        name:
          description: The modifier list's name.
          type: string
        selection_type:
          description: Indicates whether MULTIPLE options or a SINGLE option from the
            modifier list can be applied to a single item.
          enum:
            - SINGLE
            - MULTIPLE
          type: string
      type: object
    v1ModifierOption:
      properties:
        id:
          description: The modifier option's unique ID.
          type: string
        modifier_list_id:
          description: The ID of the modifier list the option belongs to.
          type: string
        name:
          description: The modifier option's name.
          type: string
        on_by_default:
          description: If true, the modifier option is the default option in a modifier
            list for which selection_type is SINGLE.
          type: boolean
        ordinal:
          description: Indicates the modifier option's list position when displayed in
            Square Register and the merchant dashboard. If more than one
            modifier option in the same modifier list has the same ordinal
            value, those options are displayed in alphabetical order.
          type: integer
        price_money:
          $ref: "#/components/schemas/v1Money"
      type: object
    v1Money:
      description: ""
      properties:
        amount:
          description: >-
            Amount in the lowest denominated value of this Currency. E.g. in USD

            these are cents, in JPY they are Yen (which do not have a 'cent' concept).
          type: integer
        currency_code:
          description: ""
          enum:
            - AED
            - AFN
            - ALL
            - AMD
            - ANG
            - AOA
            - ARS
            - AUD
            - AWG
            - AZN
            - BAM
            - BBD
            - BDT
            - BGN
            - BHD
            - BIF
            - BMD
            - BND
            - BOB
            - BOV
            - BRL
            - BSD
            - BTN
            - BWP
            - BYR
            - BZD
            - CAD
            - CDF
            - CHE
            - CHF
            - CHW
            - CLF
            - CLP
            - CNY
            - COP
            - COU
            - CRC
            - CUC
            - CUP
            - CVE
            - CZK
            - DJF
            - DKK
            - DOP
            - DZD
            - EGP
            - ERN
            - ETB
            - EUR
            - FJD
            - FKP
            - GBP
            - GEL
            - GHS
            - GIP
            - GMD
            - GNF
            - GTQ
            - GYD
            - HKD
            - HNL
            - HRK
            - HTG
            - HUF
            - IDR
            - ILS
            - INR
            - IQD
            - IRR
            - ISK
            - JMD
            - JOD
            - JPY
            - KES
            - KGS
            - KHR
            - KMF
            - KPW
            - KRW
            - KWD
            - KYD
            - KZT
            - LAK
            - LBP
            - LKR
            - LRD
            - LSL
            - LTL
            - LVL
            - LYD
            - MAD
            - MDL
            - MGA
            - MKD
            - MMK
            - MNT
            - MOP
            - MRO
            - MUR
            - MVR
            - MWK
            - MXN
            - MXV
            - MYR
            - MZN
            - NAD
            - NGN
            - NIO
            - NOK
            - NPR
            - NZD
            - OMR
            - PAB
            - PEN
            - PGK
            - PHP
            - PKR
            - PLN
            - PYG
            - QAR
            - RON
            - RSD
            - RUB
            - RWF
            - SAR
            - SBD
            - SCR
            - SDG
            - SEK
            - SGD
            - SHP
            - SLL
            - SOS
            - SRD
            - SSP
            - STD
            - SVC
            - SYP
            - SZL
            - THB
            - TJS
            - TMT
            - TND
            - TOP
            - TRY
            - TTD
            - TWD
            - TZS
            - UAH
            - UGX
            - USD
            - USN
            - USS
            - UYI
            - UYU
            - UZS
            - VEF
            - VND
            - VUV
            - WST
            - XAF
            - XAG
            - XAU
            - XBA
            - XBB
            - XBC
            - XBD
            - XCD
            - XDR
            - XOF
            - XPD
            - XPF
            - XPT
            - XTS
            - XXX
            - YER
            - ZAR
            - ZMK
            - ZMW
            - BTC
          type: string
      type: object
    v1Order:
      properties:
        btc_price_satoshi:
          description: For Bitcoin transactions, the price of the buyer's order in satoshi
            (100 million satoshi equals 1 BTC).
          type: number
        btc_receive_address:
          description: For Bitcoin transactions, the address that the buyer sent Bitcoin to.
          type: string
        buyer_email:
          description: The email address of the order's buyer.
          type: string
        buyer_note:
          description: A note provided by the buyer when the order was created, if any.
          type: string
        canceled_note:
          description: A note provided by the merchant when the order's state was set to
            CANCELED, if any.
          type: string
        completed_note:
          description: A note provided by the merchant when the order's state was set to
            COMPLETED, if any
          type: string
        created_at:
          description: The time when the order was created, in ISO 8601 format.
          type: string
        errors:
          description: Any errors that occurred during the request.
          items:
            $ref: "#/components/schemas/Error"
          type: array
        expires_at:
          description: The time when the order expires if no action is taken, in ISO 8601
            format.
          type: string
        id:
          description: The order's unique identifier.
          type: string
        order_history:
          description: The history of actions associated with the order.
          items:
            $ref: "#/components/schemas/v1OrderHistoryEntry"
          type: array
        payment_id:
          description: The unique identifier of the payment associated with the order.
          type: string
        promo_code:
          description: The promo code provided by the buyer, if any.
          type: string
        recipient_name:
          description: The name of the order's buyer.
          type: string
        recipient_phone_number:
          description: The phone number to use for the order's delivery.
          type: string
        refunded_note:
          description: A note provided by the merchant when the order's state was set to
            REFUNDED, if any.
          type: string
        shipping_address:
          $ref: "#/components/schemas/Address"
        state:
          description: Whether the tax is an ADDITIVE tax or an INCLUSIVE tax.
          enum:
            - PENDING
            - OPEN
            - COMPLETED
            - CANCELED
            - REFUNDED
            - REJECTED
          type: string
        subtotal_money:
          $ref: "#/components/schemas/v1Money"
        tender:
          $ref: "#/components/schemas/v1Tender"
        total_discount_money:
          $ref: "#/components/schemas/v1Money"
        total_price_money:
          $ref: "#/components/schemas/v1Money"
        total_shipping_money:
          $ref: "#/components/schemas/v1Money"
        total_tax_money:
          $ref: "#/components/schemas/v1Money"
        updated_at:
          description: The time when the order was last modified, in ISO 8601 format.
          type: string
      type: object
    v1OrderHistoryEntry:
      properties:
        action:
          description: The type of action performed on the order.
          enum:
            - ORDER_PLACED
            - DECLINED
            - PAYMENT_RECEIVED
            - CANCELED
            - COMPLETED
            - REFUNDED
            - EXPIRED
          type: string
        created_at:
          description: The time when the action was performed, in ISO 8601 format.
          type: string
      type: object
    v1Page:
      properties:
        cells:
          description: The cells included on the page.
          items:
            $ref: "#/components/schemas/v1PageCell"
          type: array
        id:
          description: The page's unique identifier.
          type: string
        name:
          description: The page's name, if any.
          type: string
        page_index:
          description: The page's position in the merchant's list of pages. Always an
            integer between 0 and 4, inclusive.
          type: integer
      type: object
    v1PageCell:
      properties:
        column:
          description: The column of the cell. Always an integer between 0 and 4, inclusive.
          type: integer
        object_id:
          description: The unique identifier of the entity represented in the cell. Not
            present for cells with an object_type of PLACEHOLDER.
          type: string
        object_type:
          description: The type of entity represented in the cell (ITEM, DISCOUNT,
            CATEGORY, or PLACEHOLDER).
          items:
            enum:
              - ITEM
              - DISCOUNT
              - CATEGORY
              - PLACEHOLDER
            type: string
          type: array
        page_id:
          description: The unique identifier of the page the cell is included on.
          type: string
        placeholder_type:
          description: For a cell with an object_type of PLACEHOLDER, this value indicates
            the cell's special behavior.
          items:
            enum:
              - ALL_ITEMS
              - DISCOUNTS_CATEGORY
              - REWARDS_FINDER
            type: string
          type: array
        row:
          description: The row of the cell. Always an integer between 0 and 4, inclusive.
          type: integer
      type: object
    v1Payment:
      properties:
        additive_tax:
          description: All of the additive taxes associated with the payment.
          items:
            $ref: "#/components/schemas/v1PaymentTax"
          type: array
        additive_tax_money:
          $ref: "#/components/schemas/v1Money"
        created_at:
          description: The time when the payment was created, in ISO 8601 format.
          type: string
        creator_id:
          description: The unique identifier of the Square account that took the payment.
          type: string
        device:
          $ref: "#/components/schemas/Device"
        discount_money:
          $ref: "#/components/schemas/v1Money"
        gross_sales_money:
          $ref: "#/components/schemas/v1Money"
        id:
          description: The payment's unique identifier.
          type: string
        inclusive_tax:
          description: All of the inclusive taxes associated with the payment.
          items:
            $ref: "#/components/schemas/v1PaymentTax"
          type: array
        inclusive_tax_money:
          $ref: "#/components/schemas/v1Money"
        itemizations:
          description: The items purchased in the payment.
          items:
            $ref: "#/components/schemas/v1PaymentItemization"
          type: array
        merchant_id:
          description: The unique identifier of the merchant that took the payment.
          type: string
        net_sales_money:
          $ref: "#/components/schemas/v1Money"
        net_total_money:
          $ref: "#/components/schemas/v1Money"
        payment_url:
          description: The URL of the payment's detail page in the merchant dashboard. The
            merchant must be signed in to the merchant dashboard to view this
            page.
          type: string
        processing_fee_money:
          $ref: "#/components/schemas/v1Money"
        receipt_url:
          description: The URL of the receipt for the payment. Note that for split tender
            payments, this URL corresponds to the receipt for the first tender
            listed in the payment's tender field. Each Tender object has its own
            receipt_url field you can use to get the other receipts associated
            with a split tender payment.
          type: string
        refunded_money:
          $ref: "#/components/schemas/v1Money"
        refunds:
          description: All of the refunds applied to the payment.
          items:
            $ref: "#/components/schemas/v1Refund"
          type: array
        swedish_rounding_money:
          $ref: "#/components/schemas/v1Money"
        tax_money:
          $ref: "#/components/schemas/v1Money"
        tender:
          description: All of the additive taxes associated with the payment.
          items:
            $ref: "#/components/schemas/v1Tender"
          type: array
        tip_money:
          $ref: "#/components/schemas/v1Money"
        total_collected_money:
          $ref: "#/components/schemas/v1Money"
      type: object
    v1PaymentDiscount:
      properties:
        applied_money:
          $ref: "#/components/schemas/v1Money"
        discount_id:
          description: The ID of the applied discount, if available. Discounts applied in
            older versions of Square Register might not have an ID.
          type: string
        name:
          description: The discount's name.
          type: string
      type: object
    v1PaymentItemDetail:
      properties:
        category_name:
          description: The name of the item's merchant-defined category, if any.
          type: string
        item_id:
          description: The unique ID of the item purchased, if any.
          type: string
        item_variation_id:
          description: The unique ID of the item variation purchased, if any.
          type: string
        sku:
          description: " The item's merchant-defined SKU, if any."
          type: string
      type: object
    v1PaymentItemization:
      properties:
        discount_money:
          $ref: "#/components/schemas/v1Money"
        discounts:
          description: All discounts applied to this itemization.
          items:
            $ref: "#/components/schemas/v1PaymentDiscount"
          type: array
        gross_sales_money:
          $ref: "#/components/schemas/v1Money"
        item_detail:
          $ref: "#/components/schemas/v1PaymentItemDetail"
        item_variation_name:
          description: The name of the item variation purchased, if any.
          type: string
        itemization_type:
          description: The type of purchase that the itemization represents, such as an
            ITEM or CUSTOM_AMOUNT
          enum:
            - ITEM
            - CUSTOM_AMOUNT
            - GIFT_CARD_ACTIVATION
            - GIFT_CARD_RELOAD
            - GIFT_CARD_UNKNOWN
            - OTHER
          type: string
        modifiers:
          description: All modifier options applied to this itemization.
          items:
            $ref: "#/components/schemas/v1PaymentModifier"
          type: array
        name:
          description: The item's name.
          type: string
        net_sales_money:
          $ref: "#/components/schemas/v1Money"
        notes:
          description: Notes entered by the merchant about the item at the time of payment,
            if any.
          type: string
        quantity:
          description: The quantity of the item purchased. This can be a decimal value.
          type: number
        single_quantity_money:
          $ref: "#/components/schemas/v1Money"
        taxes:
          description: All taxes applied to this itemization.
          items:
            $ref: "#/components/schemas/v1PaymentTax"
          type: array
        total_money:
          $ref: "#/components/schemas/v1Money"
      type: object
    v1PaymentModifier:
      properties:
        applied_money:
          $ref: "#/components/schemas/v1Money"
        modifier_option_id:
          description: TThe ID of the applied modifier option, if available. Modifier
            options applied in older versions of Square Register might not have
            an ID.
          type: string
        name:
          description: The modifier option's name.
          type: string
      type: object
    v1PaymentTax:
      properties:
        applied_money:
          $ref: "#/components/schemas/v1Money"
        errors:
          description: Any errors that occurred during the request.
          items:
            $ref: "#/components/schemas/Error"
          type: array
        fee_id:
          description: The ID of the tax, if available. Taxes applied in older versions of
            Square Register might not have an ID.
          type: string
        inclusion_type:
          description: Whether the tax is an ADDITIVE tax or an INCLUSIVE tax.
          enum:
            - ADDITIVE
            - INCLUSIVE
          type: string
        name:
          description: The merchant-defined name of the tax.
          type: string
        rate:
          description: The rate of the tax, as a string representation of a decimal number.
            A value of 0.07 corresponds to a rate of 7%.
          type: string
      type: object
    v1PhoneNumber:
      description: Represents a phone number.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#datatype-phonenumber
      properties:
        calling_code:
          description: The phone number's international calling code. For US phone numbers,
            this value is +1.
          readOnly: false
          type: string
        number:
          description: The phone number.
          readOnly: false
          type: string
      required:
        - calling_code
        - number
      type: object
    v1Refund:
      properties:
        created_at:
          description: The time when the merchant initiated the refund for Square to
            process, in ISO 8601 format..
          type: string
        merchant_id:
          description: ""
          type: string
        payment_id:
          description: The Square-issued ID of the payment the refund is applied to.
          type: string
        processed_at:
          description: The time when Square processed the refund on behalf of the merchant,
            in ISO 8601 format.
          type: string
        reason:
          description: The merchant-specified reason for the refund.
          type: string
        refunded_additive_tax_money:
          $ref: "#/components/schemas/v1Money"
        refunded_discount_money:
          $ref: "#/components/schemas/v1Money"
        refunded_inclusive_tax_money:
          $ref: "#/components/schemas/v1Money"
        refunded_money:
          $ref: "#/components/schemas/v1Money"
        refunded_processing_fee_money:
          $ref: "#/components/schemas/v1Money"
        refunded_tip_money:
          $ref: "#/components/schemas/v1Money"
        type:
          description: "The type of refund "
          enum:
            - FULL
            - PARTIAL
          type: string
      type: object
    v1Settlement:
      properties:
        bank_account_id:
          description: The Square-issued unique identifier for the bank account associated
            with the settlement.
          type: string
        entries:
          description: The entries included in this settlement.
          items:
            $ref: "#/components/schemas/v1SettlementEntry"
          type: array
        id:
          description: The settlement's unique identifier.
          type: string
        initiated_at:
          description: The time when the settlement was submitted for deposit or
            withdrawal, in ISO 8601 format.
          type: string
        status:
          description: The settlement's current status.
          enum:
            - FAILED
            - SENT
          type: string
        total_money:
          $ref: "#/components/schemas/v1Money"
      type: object
    v1SettlementEntry:
      properties:
        amount_money:
          $ref: "#/components/schemas/v1Money"
        fee_money:
          $ref: "#/components/schemas/v1Money"
        payment_id:
          description: The settlement's unique identifier.
          type: string
        type:
          description: The settlement's current status.
          enum:
            - ADJUSTMENT
            - BALANCE_CHARGE
            - CHARGE
            - FREE_PROCESSING
            - HOLD_ADJUSTMENT
            - PAID_SERVICE_FEE
            - PAID_SERVICE_FEE_REFUND
            - REDEMPTION_CODE
            - REFUND
            - RETURNED_PAYOUT
            - SQUARE_CAPITAL_ADVANCE
            - SQUARE_CAPITAL_PAYMENT
            - SQUARE_CAPITAL_REVERSED_PAYMENT
            - SUBSCRIPTION_FEE
            - SUBSCRIPTION_FEE_REFUND
            - INCENTED_PAYMENT
            - RETURNED_ACH_ENTRY
            - RETURNED_SQUARE_275
            - SQUARE_275
          type: string
      type: object
    v1Tender:
      properties:
        card_brand:
          description: The brand of credit card provided.
          enum:
            - OTHER_BRAND
            - VISA
            - MASTER_CARD
            - AMERICAN_EXPRESS
            - DISCOVER
            - DISCOVER_DINERS
            - JCB
            - CHINA_UNIONPAY
            - SQUARE_GIFT_CARD
          type: string
        change_back_money:
          $ref: "#/components/schemas/v1Money"
        employee_id:
          description: The ID of the employee that processed the tender.
          type: string
        entry_method:
          description: The tender's unique ID.
          enum:
            - MANUAL
            - SCANNED
            - SQUARE_CASH
            - SQUARE_WALLET
            - SWIPED
            - WEB_FORM
            - OTHER
          type: string
        id:
          description: The tender's unique ID.
          type: string
        name:
          description: A human-readable description of the tender.
          type: string
        pan_suffix:
          description: The last four digits of the provided credit card's account number.
          type: string
        payment_note:
          description: "Notes entered by the merchant about the tender at the time of
            payment, if any. Typically only present for tender with the type:
            OTHER."
          type: string
        receipt_url:
          description: The URL of the receipt for the tender.
          type: string
        refunded_money:
          $ref: "#/components/schemas/v1Money"
        tendered_money:
          $ref: "#/components/schemas/v1Money"
        total_money:
          $ref: "#/components/schemas/v1Money"
        type:
          description: The type of tender.
          enum:
            - CREDIT_CARD
            - CASH
            - THIRD_PARTY_CARD
            - NO_SALE
            - SQUARE_WALLET
            - SQUARE_GIFT_CARD
            - UNKNOWN
            - OTHER
          type: string
      type: object
    v1Timecard:
      description: Represents a timecard for an employee.
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#datatype-timecard
      properties:
        clockin_location_id:
          description: The ID of the location the employee clocked in from, if any.
          type: string
        clockin_time:
          description: The clock-in time for the timecard, in ISO 8601 format.
          type: string
        clockout_location_id:
          description: The ID of the location the employee clocked out from. Provide this
            value only if importing timecard information from another system.
          type: string
        clockout_time:
          description: The clock-out time for the timecard, in ISO 8601 format. Provide
            this value only if importing timecard information from another
            system.
          type: string
        created_at:
          description: The time when the timecard was created, in ISO 8601 format.
          readOnly: true
          type: string
        deleted:
          description: If true, the timecard was deleted by the merchant, and it is no
            longer valid.
          readOnly: true
          type: boolean
        employee_id:
          description: The ID of the employee the timecard is associated with.
          type: string
        id:
          description: The timecard's unique ID.
          readOnly: true
          type: string
        updated_at:
          description: The time when the timecard was most recently updated, in ISO 8601
            format.
          readOnly: true
          type: string
      required:
        - employee_id
      type: object
    v1TimecardEvent:
      externalDocs:
        description: "Read the offical documentation here:"
        url: https://docs.connect.squareup.com/api/connect/v1/#datatype-timecardevent
      properties:
        clockin_time:
          description: The time the employee clocked in, in ISO 8601 format.
          type: string
        clockout_time:
          description: The time the employee clocked out, in ISO 8601 format.
          type: string
        created_at:
          description: The time when the event was created, in ISO 8601 format.
          type: string
        event_type:
          description: The ID of the timecard to list events for.
          enum:
            - API_CREATE
            - API_EDIT
            - API_DELETE
            - REGISTER_CLOCKIN
            - REGISTER_CLOCKOUT
            - DASHBOARD_SUPERVISOR_CLOSE
            - DASHBOARD_EDIT
            - DASHBOARD_DELETE
          type: string
        id:
          description: The event's unique ID.
          type: string
      type: object
    v1UpdateModifierListRequest:
      properties:
        name:
          description: The modifier list's name.
          type: string
        selection_type:
          description: Indicates whether multiple options from the modifier list can be
            applied to a single item.
          enum:
            - SINGLE
            - MULTIPLE
          type: string
      type: object
    v1UpdateOrderRequest:
      properties:
        action:
          description: The action to perform on the order (COMPLETE, CANCEL, or REFUND).
          enum:
            - COMPLETE
            - CANCEL
            - REFUND
          type: string
        canceled_note:
          description: A merchant-specified note about the canceling of the order. Only
            valid if action is CANCEL.
          type: string
        completed_note:
          description: A merchant-specified note about the completion of the order. Only
            valid if action is COMPLETE.
          type: string
        refunded_note:
          description: A merchant-specified note about the refunding of the order. Only
            valid if action is REFUND.
          type: string
        shipped_tracking_number:
          description: The tracking number of the shipment associated with the order. Only
            valid if action is COMPLETE.
          type: string
      required:
        - action
      type: object
    v1Variation:
      properties:
        id:
          description: The item variation's unique ID.
          type: string
        inventory_alert_threshold:
          description: If the inventory quantity for the variation is less than or equal to
            this value and inventory_alert_type is LOW_QUANTITY, the variation
            displays an alert in the merchant dashboard.
          type: integer
        inventory_alert_type:
          description: Indicates whether the item variation displays an alert when its
            inventory quantity is less than or equal to its
            inventory_alert_threshold.
          enum:
            - LOW_QUANTITY
            - NONE
            - INVESTMENT
            - LOAN
            - SAVINGS
            - OTHER
          type: string
        item_id:
          description: The ID of the variation's associated item.
          type: string
        name:
          description: The item variation's name.
          type: string
        ordinal:
          description: Indicates the variation's list position when displayed in Square
            Register and the merchant dashboard. If more than one variation for
            the same item has the same ordinal value, those variations are
            displayed in alphabetical order
          type: integer
        price_money:
          $ref: "#/components/schemas/v1Money"
        pricing_type:
          description: Indicates whether the item variation's price is fixed or determined
            at the time of sale.
          enum:
            - FIXED_PRICING
            - VARIABLE_PRICING
          type: string
        sku:
          description: The item variation's SKU, if any.
          type: string
        track_inventory:
          description: If true, inventory tracking is active for the variation.
          type: boolean
        user_data:
          description: Arbitrary metadata associated with the variation. Cannot exceed 255
            characters.
          type: string
      type: object
