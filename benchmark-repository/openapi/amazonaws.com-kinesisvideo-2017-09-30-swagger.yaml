openapi: 3.0.0
info:
  version: 2017-09-30
  x-release: v4
  title: Amazon Kinesis Video Streams
  description: <p/>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: kinesisvideo
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/kinesisvideo-2017-09-30.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/kinesisvideo/
security:
  - hmac: []
paths:
  /createStream:
    post:
      operationId: CreateStream
      description: <p>Creates a new Kinesis video stream. </p> <p>When you create a new
        stream, Kinesis Video Streams assigns it a version number. When you
        change the stream's metadata, Kinesis Video Streams updates the version.
        </p> <p> <code>CreateStream</code> is an asynchronous operation.</p>
        <p>For information about how the service works, see <a
        href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/how-it-works.html">How
        it Works</a>. </p> <p>You must have permissions for the
        <code>KinesisVideo:CreateStream</code> action.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateStreamOutput"
        "480":
          description: AccountStreamLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountStreamLimitExceededException"
        "481":
          description: DeviceStreamLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceStreamLimitExceededException"
        "482":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "483":
          description: InvalidDeviceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeviceException"
        "484":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "485":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "486":
          description: TagsPerResourceExceededLimitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagsPerResourceExceededLimitException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - StreamName
              properties:
                DeviceName:
                  description: <p>The name of the device that is writing to the stream.
                    </p> <note> <p>In the current implementation, Kinesis Video
                    Streams does not use this name.</p> </note>
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 128
                StreamName:
                  description: <p>A name for the stream that you are creating.</p> <p>The
                    stream name is an identifier for the stream, and must be
                    unique for each account and region.</p>
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 256
                MediaType:
                  description: <p>The media type of the stream. Consumers of the stream can
                    use this information when processing the stream. For more
                    information about media types, see <a
                    href="http://www.iana.org/assignments/media-types/media-types.xhtml">Media
                    Types</a>. If you choose to specify the
                    <code>MediaType</code>, see <a
                    href="https://tools.ietf.org/html/rfc6838#section-4.2">Naming
                    Requirements</a> for guidelines.</p> <p>This parameter is
                    optional; the default value is <code>null</code> (or empty
                    in JSON).</p>
                  type: string
                  pattern: "[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+(,[\\w\\-\\.\\+]+/[\\w\\-\\.\
                    \\+]+)*"
                  minLength: 1
                  maxLength: 128
                KmsKeyId:
                  description: <p>The ID of the AWS Key Management Service (AWS KMS) key
                    that you want Kinesis Video Streams to use to encrypt stream
                    data.</p> <p>If no key ID is specified, the default, Kinesis
                    Video-managed key (<code>aws/kinesisvideo</code>) is
                    used.</p> <p> For more information, see <a
                    href="https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters">DescribeKey</a>.
                    </p>
                  type: string
                  minLength: 1
                  maxLength: 2048
                DataRetentionInHours:
                  description: <p>The number of hours that you want to retain the data in
                    the stream. Kinesis Video Streams retains the data in a data
                    store that is associated with the stream.</p> <p>The default
                    value is 0, indicating that the stream does not persist
                    data.</p> <p>When the <code>DataRetentionInHours</code>
                    value is 0, consumers can still consume the fragments that
                    remain in the service host buffer, which has a retention
                    time limit of 5 minutes and a retention memory limit of 200
                    MB. Fragments are removed from the buffer when either limit
                    is reached.</p>
                  type: integer
                  minimum: 0
                Tags:
                  description: A list of tags to associate with the specified stream. Each
                    tag is a key-value pair (the value is optional).
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: "#/components/schemas/TagValue"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /deleteStream:
    post:
      operationId: DeleteStream
      description: <p>Deletes a Kinesis video stream and the data contained in the stream.
        </p> <p>This method marks the stream for deletion, and makes the data in
        the stream inaccessible immediately.</p> <p> </p> <p> To ensure that you
        have the latest version of the stream before deleting it, you can
        specify the stream version. Kinesis Video Streams assigns a version to
        each stream. When you update a stream, Kinesis Video Streams assigns a
        new version number. To get the latest stream version, use the
        <code>DescribeStream</code> API. </p> <p>This operation requires
        permission for the <code>KinesisVideo:DeleteStream</code> action.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteStreamOutput"
        "480":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "481":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: NotAuthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotAuthorizedException"
        "484":
          description: VersionMismatchException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VersionMismatchException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - StreamARN
              properties:
                StreamARN:
                  description: "The Amazon Resource Name (ARN) of the stream that you want
                    to delete. "
                  type: string
                  pattern: arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
                CurrentVersion:
                  description: "<p>Optional: The version of the stream that you want to
                    delete. </p> <p>Specify the version as a safeguard to ensure
                    that your are deleting the correct stream. To get the stream
                    version, use the <code>DescribeStream</code> API.</p> <p>If
                    not specified, only the <code>CreationTime</code> is checked
                    before deleting the stream.</p>"
                  type: string
                  pattern: "[a-zA-Z0-9]+"
                  minLength: 1
                  maxLength: 64
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /describeStream:
    post:
      operationId: DescribeStream
      description: "Returns the most current information about the specified stream. You
        must specify either the <code>StreamName</code> or the
        <code>StreamARN</code>. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeStreamOutput"
        "480":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "483":
          description: NotAuthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotAuthorizedException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                StreamName:
                  description: The name of the stream.
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 256
                StreamARN:
                  description: The Amazon Resource Name (ARN) of the stream.
                  type: string
                  pattern: arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /getDataEndpoint:
    post:
      operationId: GetDataEndpoint
      description: <p>Gets an endpoint for a specified stream for either reading or
        writing. Use this endpoint in your application to read from the
        specified stream (using the <code>GetMedia</code> or
        <code>GetMediaForFragmentList</code> operations) or write to it (using
        the <code>PutMedia</code> operation). </p> <note> <p>The returned
        endpoint does not have the API name appended. The client needs to add
        the API name to the returned endpoint.</p> </note> <p>In the request,
        specify the stream either by <code>StreamName</code> or
        <code>StreamARN</code>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDataEndpointOutput"
        "480":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "483":
          description: NotAuthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotAuthorizedException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - APIName
              properties:
                StreamName:
                  description: The name of the stream that you want to get the endpoint
                    for. You must specify either this parameter or a
                    <code>StreamARN</code> in the request.
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 256
                StreamARN:
                  description: "The Amazon Resource Name (ARN) of the stream that you want
                    to get the endpoint for. You must specify either this
                    parameter or a <code>StreamName</code> in the request. "
                  type: string
                  pattern: arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
                APIName:
                  description: The name of the API action for which to get an endpoint.
                  type: string
                  enum:
                    - PUT_MEDIA
                    - GET_MEDIA
                    - LIST_FRAGMENTS
                    - GET_MEDIA_FOR_FRAGMENT_LIST
                    - GET_HLS_STREAMING_SESSION_URL
                    - GET_DASH_STREAMING_SESSION_URL
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /listStreams:
    post:
      operationId: ListStreams
      description: "Returns an array of <code>StreamInfo</code> objects. Each object
        describes a stream. To retrieve only streams that satisfy a specific
        condition, you can specify a <code>StreamNameCondition</code>. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListStreamsOutput"
        "480":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "481":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  description: The maximum number of streams to return in the response. The
                    default is 10,000.
                  type: integer
                  minimum: 1
                  maximum: 10000
                NextToken:
                  description: If you specify this parameter, when the result of a
                    <code>ListStreams</code> operation is truncated, the call
                    returns the <code>NextToken</code> in the response. To get
                    another batch of streams, provide this token in your next
                    request.
                  type: string
                  minLength: 0
                  maxLength: 512
                StreamNameCondition:
                  description: "Specifies the condition that streams must satisfy to be
                    returned when you list streams (see the
                    <code>ListStreams</code> API). A condition has a comparison
                    operation and a value. Currently, you can specify only the
                    <code>BEGINS_WITH</code> operator, which finds streams whose
                    names start with a given prefix. "
                  type: object
                  properties:
                    ComparisonOperator:
                      $ref: "#/components/schemas/ComparisonOperator"
                    ComparisonValue:
                      $ref: "#/components/schemas/StreamName"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /listTagsForStream:
    post:
      operationId: ListTagsForStream
      description: <p>Returns a list of tags associated with the specified stream.</p>
        <p>In the request, you must specify either the <code>StreamName</code>
        or the <code>StreamARN</code>. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForStreamOutput"
        "480":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "481":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: NotAuthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotAuthorizedException"
        "484":
          description: InvalidResourceFormatException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceFormatException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  description: If you specify this parameter and the result of a
                    <code>ListTagsForStream</code> call is truncated, the
                    response includes a token that you can use in the next
                    request to fetch the next batch of tags.
                  type: string
                  minLength: 0
                  maxLength: 512
                StreamARN:
                  description: The Amazon Resource Name (ARN) of the stream that you want
                    to list tags for.
                  type: string
                  pattern: arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
                StreamName:
                  description: The name of the stream that you want to list tags for.
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 256
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /tagStream:
    post:
      operationId: TagStream
      description: <p>Adds one or more tags to a stream. A <i>tag</i> is a key-value pair
        (the value is optional) that you can define and assign to AWS resources.
        If you specify a tag that already exists, the tag value is replaced with
        the value that you specify in the request. For more information, see <a
        href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using
        Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User
        Guide</i>. </p> <p>You must provide either the <code>StreamName</code>
        or the <code>StreamARN</code>.</p> <p>This operation requires permission
        for the <code>KinesisVideo:TagStream</code> action.</p> <p>Kinesis video
        streams support up to 50 tags.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagStreamOutput"
        "480":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "481":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: NotAuthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotAuthorizedException"
        "484":
          description: InvalidResourceFormatException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceFormatException"
        "485":
          description: TagsPerResourceExceededLimitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagsPerResourceExceededLimitException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - Tags
              properties:
                StreamARN:
                  description: The Amazon Resource Name (ARN) of the resource that you want
                    to add the tag or tags to.
                  type: string
                  pattern: arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
                StreamName:
                  description: The name of the stream that you want to add the tag or tags
                    to.
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 256
                Tags:
                  description: A list of tags to associate with the specified stream. Each
                    tag is a key-value pair (the value is optional).
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: "#/components/schemas/TagValue"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /untagStream:
    post:
      operationId: UntagStream
      description: <p>Removes one or more tags from a stream. In the request, specify only
        a tag key or keys; don't specify the value. If you specify a tag key
        that does not exist, it's ignored.</p> <p>In the request, you must
        provide the <code>StreamName</code> or <code>StreamARN</code>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagStreamOutput"
        "480":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "481":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: NotAuthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotAuthorizedException"
        "484":
          description: InvalidResourceFormatException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceFormatException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - TagKeyList
              properties:
                StreamARN:
                  description: The Amazon Resource Name (ARN) of the stream that you want
                    to remove tags from.
                  type: string
                  pattern: arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
                StreamName:
                  description: The name of the stream that you want to remove tags from.
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 256
                TagKeyList:
                  description: A list of the keys of the tags that you want to remove.
                  type: array
                  items:
                    $ref: "#/components/schemas/TagKey"
                  minItems: 1
                  maxItems: 50
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /updateDataRetention:
    post:
      operationId: UpdateDataRetention
      description: <p> Increases or decreases the stream's data retention period by the
        value that you specify. To indicate whether you want to increase or
        decrease the data retention period, specify the <code>Operation</code>
        parameter in the request body. In the request, you must specify either
        the <code>StreamName</code> or the <code>StreamARN</code>. </p> <note>
        <p>The retention period that you specify replaces the current value.</p>
        </note> <p>This operation requires permission for the
        <code>KinesisVideo:UpdateDataRetention</code> action.</p> <p>Changing
        the data retention period affects the data in the stream as follows:</p>
        <ul> <li> <p>If the data retention period is increased, existing data is
        retained for the new retention period. For example, if the data
        retention period is increased from one hour to seven hours, all existing
        data is retained for seven hours.</p> </li> <li> <p>If the data
        retention period is decreased, existing data is retained for the new
        retention period. For example, if the data retention period is decreased
        from seven hours to one hour, all existing data is retained for one
        hour, and any data older than one hour is deleted immediately.</p> </li>
        </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateDataRetentionOutput"
        "480":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "481":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "484":
          description: NotAuthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotAuthorizedException"
        "485":
          description: VersionMismatchException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VersionMismatchException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - CurrentVersion
                - Operation
                - DataRetentionChangeInHours
              properties:
                StreamName:
                  description: The name of the stream whose retention period you want to
                    change.
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 256
                StreamARN:
                  description: The Amazon Resource Name (ARN) of the stream whose retention
                    period you want to change.
                  type: string
                  pattern: arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
                CurrentVersion:
                  description: The version of the stream whose retention period you want to
                    change. To get the version, call either the
                    <code>DescribeStream</code> or the <code>ListStreams</code>
                    API.
                  type: string
                  pattern: "[a-zA-Z0-9]+"
                  minLength: 1
                  maxLength: 64
                Operation:
                  description: Indicates whether you want to increase or decrease the
                    retention period.
                  type: string
                  enum:
                    - INCREASE_DATA_RETENTION
                    - DECREASE_DATA_RETENTION
                DataRetentionChangeInHours:
                  description: The retention period, in hours. The value you specify
                    replaces the current value. The maximum value for this
                    parameter is 87600 (ten years).
                  type: integer
                  minimum: 1
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /updateStream:
    post:
      operationId: UpdateStream
      description: <p>Updates stream metadata, such as the device name and media type.</p>
        <p>You must provide the stream name or the Amazon Resource Name (ARN) of
        the stream.</p> <p>To make sure that you have the latest version of the
        stream before updating it, you can specify the stream version. Kinesis
        Video Streams assigns a version to each stream. When you update a
        stream, Kinesis Video Streams assigns a new version number. To get the
        latest stream version, use the <code>DescribeStream</code> API. </p> <p>
        <code>UpdateStream</code> is an asynchronous operation, and takes time
        to complete.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateStreamOutput"
        "480":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "481":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "484":
          description: NotAuthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotAuthorizedException"
        "485":
          description: VersionMismatchException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VersionMismatchException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - CurrentVersion
              properties:
                StreamName:
                  description: <p>The name of the stream whose metadata you want to
                    update.</p> <p>The stream name is an identifier for the
                    stream, and must be unique for each account and region.</p>
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 256
                StreamARN:
                  description: The ARN of the stream whose metadata you want to update.
                  type: string
                  pattern: arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
                CurrentVersion:
                  description: The version of the stream whose metadata you want to update.
                  type: string
                  pattern: "[a-zA-Z0-9]+"
                  minLength: 1
                  maxLength: 64
                DeviceName:
                  description: <p>The name of the device that is writing to the stream.
                    </p> <note> <p> In the current implementation, Kinesis Video
                    Streams does not use this name. </p> </note>
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 128
                MediaType:
                  description: <p>The stream's media type. Use <code>MediaType</code> to
                    specify the type of content that the stream contains to the
                    consumers of the stream. For more information about media
                    types, see <a
                    href="http://www.iana.org/assignments/media-types/media-types.xhtml">Media
                    Types</a>. If you choose to specify the
                    <code>MediaType</code>, see <a
                    href="https://tools.ietf.org/html/rfc6838#section-4.2">Naming
                    Requirements</a>.</p> <p>To play video on the console, you
                    must specify the correct video type. For example, if the
                    video in the stream is H.264, specify
                    <code>video/h264</code> as the <code>MediaType</code>.</p>
                  type: string
                  pattern: "[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+(,[\\w\\-\\.\\+]+/[\\w\\-\\.\
                    \\+]+)*"
                  minLength: 1
                  maxLength: 128
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://kinesisvideo.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Kinesis Video multi-region endpoint
  - url: https://kinesisvideo.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Kinesis Video multi-region endpoint
  - url: http://kinesisvideo.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Kinesis Video endpoint for China (Beijing) and China (Ningxia)
  - url: https://kinesisvideo.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Kinesis Video endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateStreamOutput:
      type: object
      properties:
        StreamARN:
          $ref: "#/components/schemas/ResourceARN"
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    AccountStreamLimitExceededException: {}
    DeviceStreamLimitExceededException: {}
    ResourceInUseException: {}
    InvalidDeviceException: {}
    InvalidArgumentException: {}
    ClientLimitExceededException: {}
    TagsPerResourceExceededLimitException: {}
    DeleteStreamOutput:
      type: object
      properties: {}
    ResourceNotFoundException: {}
    NotAuthorizedException: {}
    VersionMismatchException: {}
    DescribeStreamOutput:
      type: object
      properties:
        StreamInfo:
          $ref: "#/components/schemas/StreamInfo"
    GetDataEndpointOutput:
      type: object
      properties:
        DataEndpoint:
          $ref: "#/components/schemas/DataEndpoint"
    ListStreamsOutput:
      type: object
      properties:
        StreamInfoList:
          $ref: "#/components/schemas/StreamInfoList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ComparisonOperator:
      type: string
      enum:
        - BEGINS_WITH
    StreamName:
      type: string
      pattern: "[a-zA-Z0-9_.-]+"
      minLength: 1
      maxLength: 256
    ListTagsForStreamOutput:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        Tags:
          $ref: "#/components/schemas/ResourceTags"
    InvalidResourceFormatException: {}
    TagStreamOutput:
      type: object
      properties: {}
    UntagStreamOutput:
      type: object
      properties: {}
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    UpdateDataRetentionOutput:
      type: object
      properties: {}
    UpdateStreamOutput:
      type: object
      properties: {}
    APIName:
      type: string
      enum:
        - PUT_MEDIA
        - GET_MEDIA
        - LIST_FRAGMENTS
        - GET_MEDIA_FOR_FRAGMENT_LIST
        - GET_HLS_STREAMING_SESSION_URL
        - GET_DASH_STREAMING_SESSION_URL
    DeviceName:
      type: string
      pattern: "[a-zA-Z0-9_.-]+"
      minLength: 1
      maxLength: 128
    MediaType:
      type: string
      pattern: "[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+(,[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+)*"
      minLength: 1
      maxLength: 128
    KmsKeyId:
      type: string
      minLength: 1
      maxLength: 2048
    DataRetentionInHours:
      type: integer
      minimum: 0
    ResourceTags:
      type: object
      minProperties: 1
      maxProperties: 50
      additionalProperties:
        $ref: "#/components/schemas/TagValue"
    CreateStreamInput:
      type: object
      required:
        - StreamName
      properties:
        DeviceName:
          $ref: "#/components/schemas/DeviceName"
        StreamName:
          $ref: "#/components/schemas/StreamName"
        MediaType:
          $ref: "#/components/schemas/MediaType"
        KmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
        DataRetentionInHours:
          $ref: "#/components/schemas/DataRetentionInHours"
        Tags:
          $ref: "#/components/schemas/ResourceTags"
    ResourceARN:
      type: string
      pattern: arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
      minLength: 1
      maxLength: 1024
    DataEndpoint:
      type: string
    DataRetentionChangeInHours:
      type: integer
      minimum: 1
    Version:
      type: string
      pattern: "[a-zA-Z0-9]+"
      minLength: 1
      maxLength: 64
    DeleteStreamInput:
      type: object
      required:
        - StreamARN
      properties:
        StreamARN:
          $ref: "#/components/schemas/ResourceARN"
        CurrentVersion:
          $ref: "#/components/schemas/Version"
    DescribeStreamInput:
      type: object
      properties:
        StreamName:
          $ref: "#/components/schemas/StreamName"
        StreamARN:
          $ref: "#/components/schemas/ResourceARN"
    StreamInfo:
      type: object
      properties:
        DeviceName:
          $ref: "#/components/schemas/DeviceName"
        StreamName:
          $ref: "#/components/schemas/StreamName"
        StreamARN:
          $ref: "#/components/schemas/ResourceARN"
        MediaType:
          $ref: "#/components/schemas/MediaType"
        KmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
        Version:
          $ref: "#/components/schemas/Version"
        Status:
          $ref: "#/components/schemas/Status"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        DataRetentionInHours:
          $ref: "#/components/schemas/DataRetentionInHours"
      description: An object describing a Kinesis video stream.
    GetDataEndpointInput:
      type: object
      required:
        - APIName
      properties:
        StreamName:
          $ref: "#/components/schemas/StreamName"
        StreamARN:
          $ref: "#/components/schemas/ResourceARN"
        APIName:
          $ref: "#/components/schemas/APIName"
    ListStreamsInputLimit:
      type: integer
      minimum: 1
      maximum: 10000
    NextToken:
      type: string
      minLength: 0
      maxLength: 512
    StreamNameCondition:
      type: object
      properties:
        ComparisonOperator:
          $ref: "#/components/schemas/ComparisonOperator"
        ComparisonValue:
          $ref: "#/components/schemas/StreamName"
      description: "Specifies the condition that streams must satisfy to be returned when
        you list streams (see the <code>ListStreams</code> API). A condition has
        a comparison operation and a value. Currently, you can specify only the
        <code>BEGINS_WITH</code> operator, which finds streams whose names start
        with a given prefix. "
    ListStreamsInput:
      type: object
      properties:
        MaxResults:
          $ref: "#/components/schemas/ListStreamsInputLimit"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        StreamNameCondition:
          $ref: "#/components/schemas/StreamNameCondition"
    StreamInfoList:
      type: array
      items:
        $ref: "#/components/schemas/StreamInfo"
    ListTagsForStreamInput:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        StreamARN:
          $ref: "#/components/schemas/ResourceARN"
        StreamName:
          $ref: "#/components/schemas/StreamName"
    Status:
      type: string
      enum:
        - CREATING
        - ACTIVE
        - UPDATING
        - DELETING
    Timestamp:
      type: string
      format: date-time
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
      minItems: 1
      maxItems: 50
    TagStreamInput:
      type: object
      required:
        - Tags
      properties:
        StreamARN:
          $ref: "#/components/schemas/ResourceARN"
        StreamName:
          $ref: "#/components/schemas/StreamName"
        Tags:
          $ref: "#/components/schemas/ResourceTags"
    UntagStreamInput:
      type: object
      required:
        - TagKeyList
      properties:
        StreamARN:
          $ref: "#/components/schemas/ResourceARN"
        StreamName:
          $ref: "#/components/schemas/StreamName"
        TagKeyList:
          $ref: "#/components/schemas/TagKeyList"
    UpdateDataRetentionOperation:
      type: string
      enum:
        - INCREASE_DATA_RETENTION
        - DECREASE_DATA_RETENTION
    UpdateDataRetentionInput:
      type: object
      required:
        - CurrentVersion
        - Operation
        - DataRetentionChangeInHours
      properties:
        StreamName:
          $ref: "#/components/schemas/StreamName"
        StreamARN:
          $ref: "#/components/schemas/ResourceARN"
        CurrentVersion:
          $ref: "#/components/schemas/Version"
        Operation:
          $ref: "#/components/schemas/UpdateDataRetentionOperation"
        DataRetentionChangeInHours:
          $ref: "#/components/schemas/DataRetentionChangeInHours"
    UpdateStreamInput:
      type: object
      required:
        - CurrentVersion
      properties:
        StreamName:
          $ref: "#/components/schemas/StreamName"
        StreamARN:
          $ref: "#/components/schemas/ResourceARN"
        CurrentVersion:
          $ref: "#/components/schemas/Version"
        DeviceName:
          $ref: "#/components/schemas/DeviceName"
        MediaType:
          $ref: "#/components/schemas/MediaType"
