openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: Administer your Cloud Bigtable tables and instances.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud Bigtable Admin
  version: v2
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: google
      url: https://bigtableadmin.googleapis.com/$discovery/rest?version=v2
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: bigtableadmin
externalDocs:
  url: https://cloud.google.com/bigtable/
tags:
  - name: operations
  - name: projects
paths:
  "/v2/{name}":
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is

        no longer interested in the operation result. It does not cancel the

        operation. If the server doesn't support this method, it returns

        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: bigtableadmin.operations.delete
      parameters:
        - description: If true, ignore safety checks when deleting the app profile.
          in: query
          name: ignoreWarnings
          schema:
            type: boolean
        - description: The name of the operation resource to be deleted.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - operations
    get:
      description: >-
        Gets the latest state of a long-running operation.  Clients can use this

        method to poll the operation result at intervals as recommended by the API

        service.
      operationId: bigtableadmin.operations.get
      parameters:
        - description: The name of the operation resource.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: |-
            The view to be applied to the returned table's fields.
            Defaults to `SCHEMA_VIEW` if unspecified.
          in: query
          name: view
          schema:
            type: string
            enum:
              - VIEW_UNSPECIFIED
              - NAME_ONLY
              - SCHEMA_VIEW
              - REPLICATION_VIEW
              - FULL
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - operations
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    patch:
      description: Updates an app profile within an instance.
      operationId: bigtableadmin.projects.instances.appProfiles.patch
      parameters:
        - description: If true, ignore safety checks when updating the app profile.
          in: query
          name: ignoreWarnings
          schema:
            type: boolean
        - description: |-
            (`OutputOnly`)
            The unique name of the app profile. Values are of the form
            `projects/<project>/instances/<instance>/appProfiles/_a-zA-Z0-9*`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: |-
            The subset of app profile fields which should be replaced.
            If unset, all fields will be replaced.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/AppProfile"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    put:
      description: Updates a cluster within an instance.
      operationId: bigtableadmin.projects.instances.clusters.update
      parameters:
        - description: |-
            (`OutputOnly`)
            The unique name of the cluster. Values are of the form
            `projects/<project>/instances/<instance>/clusters/a-z*`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Cluster"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2/{name}/locations":
    get:
      description: Lists information about the supported locations for this service.
      operationId: bigtableadmin.projects.locations.list
      parameters:
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The resource that owns the locations collection, if applicable.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListLocationsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v2/{name}/operations":
    get:
      description: |-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.

        NOTE: the `name` binding allows API services to override the binding
        to use different resource name schemes, such as `users/*/operations`. To
        override the binding, API services can add a binding such as
        `"/v1/{name=users/*}/operations"` to their service configuration.
        For backwards compatibility, the default name includes the operations
        collection id, however overriding users must ensure the name binding
        is the parent resource, without the operations collection id.
      operationId: bigtableadmin.operations.projects.operations.list
      parameters:
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListOperationsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - operations
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v2/{name}:cancel":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation.  The
        server

        makes a best effort to cancel the operation, but success is not

        guaranteed.  If the server doesn't support this method, it returns

        `google.rpc.Code.UNIMPLEMENTED`.  Clients can use

        Operations.GetOperation or

        other methods to check whether the cancellation succeeded or whether the

        operation completed despite cancellation. On successful cancellation,

        the operation is not deleted; instead, it becomes an operation with

        an Operation.error value with a google.rpc.Status.code of 1,

        corresponding to `Code.CANCELLED`.
      operationId: bigtableadmin.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - operations
  "/v2/{name}:checkConsistency":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Checks replication consistency based on a consistency token, that is, if
        replication has caught up based on the conditions specified in the token
        and the check request.
      operationId: bigtableadmin.projects.instances.tables.checkConsistency
      parameters:
        - description: >-
            The unique name of the Table for which to check replication
            consistency.

            Values are of the form

            `projects/<project>/instances/<instance>/tables/<table>`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckConsistencyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CheckConsistencyResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2/{name}:dropRowRange":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Permanently drop/delete a row range from a specified table. The request
        can

        specify whether to delete all rows in a table, or only those that match a

        particular prefix.
      operationId: bigtableadmin.projects.instances.tables.dropRowRange
      parameters:
        - description: |-
            The unique name of the table on which to drop a range of rows.
            Values are of the form
            `projects/<project>/instances/<instance>/tables/<table>`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DropRowRangeRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2/{name}:generateConsistencyToken":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Generates a consistency token for a Table, which can be used in

        CheckConsistency to check whether mutations to the table that finished

        before this call started have been replicated. The tokens will be available

        for 90 days.
      operationId: bigtableadmin.projects.instances.tables.generateConsistencyToken
      parameters:
        - description: >-
            The unique name of the Table for which to create a consistency
            token.

            Values are of the form

            `projects/<project>/instances/<instance>/tables/<table>`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateConsistencyTokenRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GenerateConsistencyTokenResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2/{name}:modifyColumnFamilies":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Performs a series of column family modifications on the specified table.
        Either all or none of the modifications will occur before this method
        returns, but data requests received prior to that point may see a table
        where only some modifications have taken effect.
      operationId: bigtableadmin.projects.instances.tables.modifyColumnFamilies
      parameters:
        - description: |-
            The unique name of the table whose families should be modified.
            Values are of the form
            `projects/<project>/instances/<instance>/tables/<table>`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModifyColumnFamiliesRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Table"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2/{parent}/appProfiles":
    get:
      description: Lists information about app profiles in an instance.
      operationId: bigtableadmin.projects.instances.appProfiles.list
      parameters:
        - description: >-
            Maximum number of results per page.


            A page_size of zero lets the server choose the number of items to return.

            A page_size which is strictly positive will return at most that many items.

            A negative page_size will cause an error.


            Following the first request, subsequent paginated calls are not required

            to pass a page_size. If a page_size is set in subsequent calls, it must

            match the page_size given in the first request.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The value of `next_page_token` returned by a previous call.
          in: query
          name: pageToken
          schema:
            type: string
        - description: >-
            The unique name of the instance for which a list of app profiles is

            requested. Values are of the form

            `projects/<project>/instances/<instance>`.

            Use `<instance> = '-'` to list AppProfiles for all Instances in a project,

            e.g., `projects/myproject/instances/-`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListAppProfilesResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Creates an app profile within an instance.
      operationId: bigtableadmin.projects.instances.appProfiles.create
      parameters:
        - description: |-
            The ID to be used when referring to the new app profile within its
            instance, e.g., just `myprofile` rather than
            `projects/myproject/instances/myinstance/appProfiles/myprofile`.
          in: query
          name: appProfileId
          schema:
            type: string
        - description: If true, ignore safety checks when creating the app profile.
          in: query
          name: ignoreWarnings
          schema:
            type: boolean
        - description: >-
            The unique name of the instance in which to create the new app
            profile.

            Values are of the form

            `projects/<project>/instances/<instance>`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/AppProfile"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AppProfile"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2/{parent}/clusters":
    get:
      description: Lists information about clusters in an instance.
      operationId: bigtableadmin.projects.instances.clusters.list
      parameters:
        - description: "DEPRECATED: This field is unused and ignored."
          in: query
          name: pageToken
          schema:
            type: string
        - description: >-
            The unique name of the instance for which a list of clusters is
            requested.

            Values are of the form `projects/<project>/instances/<instance>`.

            Use `<instance> = '-'` to list Clusters for all Instances in a project,

            e.g., `projects/myproject/instances/-`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListClustersResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Creates a cluster within an instance.
      operationId: bigtableadmin.projects.instances.clusters.create
      parameters:
        - description: >-
            The ID to be used when referring to the new cluster within its
            instance,

            e.g., just `mycluster` rather than

            `projects/myproject/instances/myinstance/clusters/mycluster`.
          in: query
          name: clusterId
          schema:
            type: string
        - description: |-
            The unique name of the instance in which to create the new cluster.
            Values are of the form
            `projects/<project>/instances/<instance>`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Cluster"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2/{parent}/instances":
    get:
      description: Lists information about instances in a project.
      operationId: bigtableadmin.projects.instances.list
      parameters:
        - description: "DEPRECATED: This field is unused and ignored."
          in: query
          name: pageToken
          schema:
            type: string
        - description: >-
            The unique name of the project for which a list of instances is
            requested.

            Values are of the form `projects/<project>`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListInstancesResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Create an instance within a project.
      operationId: bigtableadmin.projects.instances.create
      parameters:
        - description: |-
            The unique name of the project in which to create the new instance.
            Values are of the form `projects/<project>`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateInstanceRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2/{parent}/tables":
    get:
      description: Lists all tables served from a specified instance.
      operationId: bigtableadmin.projects.instances.tables.list
      parameters:
        - description: >-
            Maximum number of results per page.


            A page_size of zero lets the server choose the number of items to return.

            A page_size which is strictly positive will return at most that many items.

            A negative page_size will cause an error.


            Following the first request, subsequent paginated calls are not required

            to pass a page_size. If a page_size is set in subsequent calls, it must

            match the page_size given in the first request.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The value of `next_page_token` returned by a previous call.
          in: query
          name: pageToken
          schema:
            type: string
        - description: |-
            The unique name of the instance for which tables should be listed.
            Values are of the form `projects/<project>/instances/<instance>`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: >-
            The view to be applied to the returned tables' fields.

            Defaults to `NAME_ONLY` if unspecified; no others are currently supported.
          in: query
          name: view
          schema:
            type: string
            enum:
              - VIEW_UNSPECIFIED
              - NAME_ONLY
              - SCHEMA_VIEW
              - REPLICATION_VIEW
              - FULL
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListTablesResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Creates a new table in the specified instance.
        The table can be created with a full set of initial column families,
        specified in the request.
      operationId: bigtableadmin.projects.instances.tables.create
      parameters:
        - description: |-
            The unique name of the instance in which to create the table.
            Values are of the form `projects/<project>/instances/<instance>`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTableRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Table"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.table
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2/{resource}:getIamPolicy":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Gets the access control policy for an instance resource. Returns an
        empty

        policy if an instance exists but does not have a policy set.
      operationId: bigtableadmin.projects.instances.getIamPolicy
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy is being requested.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetIamPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2/{resource}:setIamPolicy":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Sets the access control policy on an instance resource. Replaces any
        existing policy.
      operationId: bigtableadmin.projects.instances.setIamPolicy
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy is being specified.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetIamPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2/{resource}:testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Returns permissions that the caller has on the specified instance
        resource.
      operationId: bigtableadmin.projects.instances.testIamPermissions
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy detail is being
            requested.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestIamPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestIamPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/bigtable.admin.instance
          Oauth2c:
            - https://www.googleapis.com/auth/bigtable.admin.instance
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-bigtable.admin.cluster
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
servers:
  - url: https://bigtableadmin.googleapis.com/
components:
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
        default: json
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - "1"
          - "2"
  requestBodies:
    Cluster:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Cluster"
    AppProfile:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AppProfile"
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/bigtable.admin: Administer your Cloud Bigtable tables and clusters
            https://www.googleapis.com/auth/bigtable.admin.cluster: Administer your Cloud Bigtable clusters
            https://www.googleapis.com/auth/bigtable.admin.instance: Administer your Cloud Bigtable clusters
            https://www.googleapis.com/auth/bigtable.admin.table: Administer your Cloud Bigtable tables
            https://www.googleapis.com/auth/cloud-bigtable.admin: Administer your Cloud Bigtable tables and clusters
            https://www.googleapis.com/auth/cloud-bigtable.admin.cluster: Administer your Cloud Bigtable clusters
            https://www.googleapis.com/auth/cloud-bigtable.admin.table: Administer your Cloud Bigtable tables
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data across Google Cloud Platform services
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/bigtable.admin: Administer your Cloud Bigtable tables and clusters
            https://www.googleapis.com/auth/bigtable.admin.cluster: Administer your Cloud Bigtable clusters
            https://www.googleapis.com/auth/bigtable.admin.instance: Administer your Cloud Bigtable clusters
            https://www.googleapis.com/auth/bigtable.admin.table: Administer your Cloud Bigtable tables
            https://www.googleapis.com/auth/cloud-bigtable.admin: Administer your Cloud Bigtable tables and clusters
            https://www.googleapis.com/auth/cloud-bigtable.admin.cluster: Administer your Cloud Bigtable clusters
            https://www.googleapis.com/auth/cloud-bigtable.admin.table: Administer your Cloud Bigtable tables
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data across Google Cloud Platform services
  schemas:
    AppProfile:
      description: >-
        A configuration object describing how Cloud Bigtable should treat
        traffic

        from a particular end user application.
      properties:
        description:
          description: Optional long form description of the use case for this AppProfile.
          type: string
        etag:
          description: >-
            Strongly validated etag for optimistic concurrency control. Preserve
            the

            value returned from `GetAppProfile` when calling `UpdateAppProfile` to

            fail the request if there has been a modification in the mean time. The

            `update_mask` of the request need not include `etag` for this protection

            to apply.

            See [Wikipedia](https://en.wikipedia.org/wiki/HTTP_ETag) and

            [RFC 7232](https://tools.ietf.org/html/rfc7232#section-2.3) for more

            details.
          type: string
        multiClusterRoutingUseAny:
          $ref: "#/components/schemas/MultiClusterRoutingUseAny"
        name:
          description: |-
            (`OutputOnly`)
            The unique name of the app profile. Values are of the form
            `projects/<project>/instances/<instance>/appProfiles/_a-zA-Z0-9*`.
          type: string
        singleClusterRouting:
          $ref: "#/components/schemas/SingleClusterRouting"
      type: object
    AuditConfig:
      description: >-
        Specifies the audit configuration for a service.

        The configuration determines which permission types are logged, and what

        identities, if any, are exempted from logging.

        An AuditConfig must have one or more AuditLogConfigs.


        If there are AuditConfigs for both `allServices` and a specific service,

        the union of the two AuditConfigs is used for that service: the log_types

        specified in each AuditConfig are enabled, and the exempted_members in each

        AuditLogConfig are exempted.


        Example Policy with multiple AuditConfigs:

            {
              "audit_configs": [
                {
                  "service": "allServices"
                  "audit_log_configs": [
                    {
                      "log_type": "DATA_READ",
                      "exempted_members": [
                        "user:foo@gmail.com"
                      ]
                    },
                    {
                      "log_type": "DATA_WRITE",
                    },
                    {
                      "log_type": "ADMIN_READ",
                    }
                  ]
                },
                {
                  "service": "fooservice.googleapis.com"
                  "audit_log_configs": [
                    {
                      "log_type": "DATA_READ",
                    },
                    {
                      "log_type": "DATA_WRITE",
                      "exempted_members": [
                        "user:bar@gmail.com"
                      ]
                    }
                  ]
                }
              ]
            }

        For fooservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ

        logging. It also exempts foo@gmail.com from DATA_READ logging, and

        bar@gmail.com from DATA_WRITE logging.
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: "#/components/schemas/AuditLogConfig"
          type: array
        service:
          description: |-
            Specifies a service that will be enabled for audit logging.
            For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
      type: object
    AuditLogConfig:
      description: |-
        Provides the configuration for logging a type of permissions.
        Example:

            {
              "audit_log_configs": [
                {
                  "log_type": "DATA_READ",
                  "exempted_members": [
                    "user:foo@gmail.com"
                  ]
                },
                {
                  "log_type": "DATA_WRITE",
                }
              ]
            }

        This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        foo@gmail.com from DATA_READ logging.
      properties:
        exemptedMembers:
          description: |-
            Specifies the identities that do not cause logging for this type of
            permission.
            Follows the same format of Binding.members.
          items:
            type: string
          type: array
        logType:
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          type: string
      type: object
    Binding:
      description: Associates `members` with a `role`.
      properties:
        condition:
          $ref: "#/components/schemas/Expr"
        members:
          description: >+
            Specifies the identities requesting access for a Cloud Platform
            resource.

            `members` can have the following values:


            * `allUsers`: A special identifier that represents anyone who is
               on the internet; with or without a Google account.

            * `allAuthenticatedUsers`: A special identifier that represents anyone
               who is authenticated with a Google account or a service account.

            * `user:{emailid}`: An email address that represents a specific Google
               account. For example, `alice@gmail.com` .


            * `serviceAccount:{emailid}`: An email address that represents a service
               account. For example, `my-other-app@appspot.gserviceaccount.com`.

            * `group:{emailid}`: An email address that represents a Google group.
               For example, `admins@example.com`.


            * `domain:{domain}`: The G Suite domain (primary) that represents all the
               users of that domain. For example, `google.com` or `example.com`.

          items:
            type: string
          type: array
        role:
          description: |-
            Role that is assigned to `members`.
            For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
          type: string
      type: object
    CheckConsistencyRequest:
      description: |-
        Request message for
        google.bigtable.admin.v2.BigtableTableAdmin.CheckConsistency
      properties:
        consistencyToken:
          description: The token created using GenerateConsistencyToken for the Table.
          type: string
      type: object
    CheckConsistencyResponse:
      description: |-
        Response message for
        google.bigtable.admin.v2.BigtableTableAdmin.CheckConsistency
      properties:
        consistent:
          description: >-
            True only if the token is consistent. A token is consistent if
            replication

            has caught up with the restrictions specified in the request.
          type: boolean
      type: object
    Cluster:
      description: |-
        A resizable group of nodes in a particular cloud location, capable
        of serving all Tables in the parent
        Instance.
      properties:
        defaultStorageType:
          description: |-
            (`CreationOnly`)
            The type of storage used by this cluster to serve its
            parent instance's tables, unless explicitly overridden.
          enum:
            - STORAGE_TYPE_UNSPECIFIED
            - SSD
            - HDD
          type: string
        location:
          description: >-
            (`CreationOnly`)

            The location where this cluster's nodes and storage reside. For best

            performance, clients should be located as close as possible to this

            cluster. Currently only zones are supported, so values should be of the

            form `projects/<project>/locations/<zone>`.
          type: string
        name:
          description: |-
            (`OutputOnly`)
            The unique name of the cluster. Values are of the form
            `projects/<project>/instances/<instance>/clusters/a-z*`.
          type: string
        serveNodes:
          description: >-
            The number of nodes allocated to this cluster. More nodes enable
            higher

            throughput and more consistent performance.
          format: int32
          type: integer
        state:
          description: |-
            (`OutputOnly`)
            The current state of the cluster.
          enum:
            - STATE_NOT_KNOWN
            - READY
            - CREATING
            - RESIZING
            - DISABLED
          type: string
      type: object
    ClusterState:
      description: The state of a table's data in a particular cluster.
      properties:
        replicationState:
          description: |-
            Output only.
            The state of replication for the table in this cluster.
          enum:
            - STATE_NOT_KNOWN
            - INITIALIZING
            - PLANNED_MAINTENANCE
            - UNPLANNED_MAINTENANCE
            - READY
          type: string
      type: object
    ColumnFamily:
      description: A set of columns within a table which share a common configuration.
      properties:
        gcRule:
          $ref: "#/components/schemas/GcRule"
      type: object
    CreateClusterMetadata:
      description: The metadata for the Operation returned by CreateCluster.
      properties:
        finishTime:
          description: The time at which the operation failed or was completed successfully.
          format: google-datetime
          type: string
        originalRequest:
          $ref: "#/components/schemas/CreateClusterRequest"
        requestTime:
          description: The time at which the original request was received.
          format: google-datetime
          type: string
        tables:
          additionalProperties:
            $ref: "#/components/schemas/TableProgress"
          description: >-
            Keys: the full `name` of each table that existed in the instance
            when

            CreateCluster was first called, i.e.

            `projects/<project>/instances/<instance>/tables/<table>`. Any table added

            to the instance by a later API call will be created in the new cluster by

            that API call, not this one.


            Values: information on how much of a table's data has been copied to the

            newly-created cluster so far.
          type: object
      type: object
    CreateClusterRequest:
      description: Request message for BigtableInstanceAdmin.CreateCluster.
      properties:
        cluster:
          $ref: "#/components/schemas/Cluster"
        clusterId:
          description: >-
            The ID to be used when referring to the new cluster within its
            instance,

            e.g., just `mycluster` rather than

            `projects/myproject/instances/myinstance/clusters/mycluster`.
          type: string
        parent:
          description: |-
            The unique name of the instance in which to create the new cluster.
            Values are of the form
            `projects/<project>/instances/<instance>`.
          type: string
      type: object
    CreateInstanceMetadata:
      description: The metadata for the Operation returned by CreateInstance.
      properties:
        finishTime:
          description: The time at which the operation failed or was completed successfully.
          format: google-datetime
          type: string
        originalRequest:
          $ref: "#/components/schemas/CreateInstanceRequest"
        requestTime:
          description: The time at which the original request was received.
          format: google-datetime
          type: string
      type: object
    CreateInstanceRequest:
      description: Request message for BigtableInstanceAdmin.CreateInstance.
      properties:
        clusters:
          additionalProperties:
            $ref: "#/components/schemas/Cluster"
          description: |-
            The clusters to be created within the instance, mapped by desired
            cluster ID, e.g., just `mycluster` rather than
            `projects/myproject/instances/myinstance/clusters/mycluster`.
            Fields marked `OutputOnly` must be left blank.
            Currently, at most two clusters can be specified.
          type: object
        instance:
          $ref: "#/components/schemas/Instance"
        instanceId:
          description: >-
            The ID to be used when referring to the new instance within its
            project,

            e.g., just `myinstance` rather than

            `projects/myproject/instances/myinstance`.
          type: string
        parent:
          description: |-
            The unique name of the project in which to create the new instance.
            Values are of the form `projects/<project>`.
          type: string
      type: object
    CreateTableRequest:
      description: |-
        Request message for
        google.bigtable.admin.v2.BigtableTableAdmin.CreateTable
      properties:
        initialSplits:
          description: >-
            The optional list of row keys that will be used to initially split
            the

            table into several tablets (tablets are similar to HBase regions).

            Given two split keys, `s1` and `s2`, three tablets will be created,

            spanning the key ranges: `[, s1), [s1, s2), [s2, )`.


            Example:


            * Row keys := `["a", "apple", "custom", "customer_1", "customer_2",`
                           `"other", "zz"]`
            * initial_split_keys := `["apple", "customer_1", "customer_2", "other"]`

            * Key assignment:
                - Tablet 1 `[, apple)                => {"a"}.`
                - Tablet 2 `[apple, customer_1)      => {"apple", "custom"}.`
                - Tablet 3 `[customer_1, customer_2) => {"customer_1"}.`
                - Tablet 4 `[customer_2, other)      => {"customer_2"}.`
                - Tablet 5 `[other, )                => {"other", "zz"}.`
          items:
            $ref: "#/components/schemas/Split"
          type: array
        table:
          $ref: "#/components/schemas/Table"
        tableId:
          description: >-
            The name by which the new table should be referred to within the
            parent

            instance, e.g., `foobar` rather than `<parent>/tables/foobar`.

            Maximum 50 characters.
          type: string
      type: object
    DropRowRangeRequest:
      description: |-
        Request message for
        google.bigtable.admin.v2.BigtableTableAdmin.DropRowRange
      properties:
        deleteAllDataFromTable:
          description: Delete all rows in the table. Setting this to false is a no-op.
          type: boolean
        rowKeyPrefix:
          description: >-
            Delete all rows that start with this row key prefix. Prefix cannot
            be

            zero length.
          format: byte
          type: string
      type: object
    Empty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated

        empty messages in your APIs. A typical example is to use it as the request

        or the response type of an API method. For instance:

            service Foo {
              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
            }

        The JSON representation for `Empty` is empty JSON object `{}`.
      properties: {}
      type: object
    Expr:
      description: |-
        Represents an expression text. Example:

            title: "User account presence"
            description: "Determines whether the request has a user account"
            expression: "size(request.user) > 0"
      properties:
        description:
          description: >-
            An optional description of the expression. This is a longer text
            which

            describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: |-
            Textual representation of an expression in
            Common Expression Language syntax.

            The application context of the containing message determines which
            well-known feature set of CEL is supported.
          type: string
        location:
          description: >-
            An optional string indicating the location of the expression for
            error

            reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: |-
            An optional title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
      type: object
    GcRule:
      description: Rule for determining which cells to delete during garbage collection.
      properties:
        intersection:
          $ref: "#/components/schemas/Intersection"
        maxAge:
          description: |-
            Delete cells in a column older than the given age.
            Values must be at least one millisecond, and will be truncated to
            microsecond granularity.
          format: google-duration
          type: string
        maxNumVersions:
          description: Delete all cells in a column except the most recent N.
          format: int32
          type: integer
        union:
          $ref: "#/components/schemas/Union"
      type: object
    GenerateConsistencyTokenRequest:
      description: |-
        Request message for
        google.bigtable.admin.v2.BigtableTableAdmin.GenerateConsistencyToken
      properties: {}
      type: object
    GenerateConsistencyTokenResponse:
      description: |-
        Response message for
        google.bigtable.admin.v2.BigtableTableAdmin.GenerateConsistencyToken
      properties:
        consistencyToken:
          description: The generated consistency token.
          type: string
      type: object
    GetIamPolicyRequest:
      description: Request message for `GetIamPolicy` method.
      properties: {}
      type: object
    Instance:
      description: |-
        A collection of Bigtable Tables and
        the resources that serve them.
        All tables in an instance are served from all
        Clusters in the instance.
      properties:
        displayName:
          description: |-
            The descriptive name for this instance as it appears in UIs.
            Can be changed at any time, but should be kept globally unique
            to avoid confusion.
          type: string
        labels:
          additionalProperties:
            type: string
          description: >-
            Labels are a flexible and lightweight mechanism for organizing cloud

            resources into groups that reflect a customer's organizational needs and

            deployment strategies. They can be used to filter resources and aggregate

            metrics.


            * Label keys must be between 1 and 63 characters long and must conform to
              the regular expression: `\p{Ll}\p{Lo}{0,62}`.
            * Label values must be between 0 and 63 characters long and must conform to
              the regular expression: `[\p{Ll}\p{Lo}\p{N}_-]{0,63}`.
            * No more than 64 labels can be associated with a given resource.

            * Keys and values must both be under 128 bytes.
          type: object
        name:
          description: |-
            (`OutputOnly`)
            The unique name of the instance. Values are of the form
            `projects/<project>/instances/a-z+[a-z0-9]`.
          type: string
        state:
          description: |-
            (`OutputOnly`)
            The current state of the instance.
          enum:
            - STATE_NOT_KNOWN
            - READY
            - CREATING
          type: string
        type:
          description: The type of the instance. Defaults to `PRODUCTION`.
          enum:
            - TYPE_UNSPECIFIED
            - PRODUCTION
            - DEVELOPMENT
          type: string
      type: object
    Intersection:
      description: A GcRule which deletes cells matching all of the given rules.
      properties:
        rules:
          description: Only delete cells which would be deleted by every element of `rules`.
          items:
            $ref: "#/components/schemas/GcRule"
          type: array
      type: object
    ListAppProfilesResponse:
      description: Response message for BigtableInstanceAdmin.ListAppProfiles.
      properties:
        appProfiles:
          description: The list of requested app profiles.
          items:
            $ref: "#/components/schemas/AppProfile"
          type: array
        failedLocations:
          description: |-
            Locations from which AppProfile information could not be retrieved,
            due to an outage or some other transient condition.
            AppProfiles from these locations may be missing from `app_profiles`.
            Values are of the form `projects/<project>/locations/<zone_id>`
          items:
            type: string
          type: array
        nextPageToken:
          description: |-
            Set if not all app profiles could be returned in a single response.
            Pass this value to `page_token` in another request to get the next
            page of results.
          type: string
      type: object
    ListClustersResponse:
      description: Response message for BigtableInstanceAdmin.ListClusters.
      properties:
        clusters:
          description: The list of requested clusters.
          items:
            $ref: "#/components/schemas/Cluster"
          type: array
        failedLocations:
          description: |-
            Locations from which Cluster information could not be retrieved,
            due to an outage or some other transient condition.
            Clusters from these locations may be missing from `clusters`,
            or may only have partial information returned.
            Values are of the form `projects/<project>/locations/<zone_id>`
          items:
            type: string
          type: array
        nextPageToken:
          description: "DEPRECATED: This field is unused and ignored."
          type: string
      type: object
    ListInstancesResponse:
      description: Response message for BigtableInstanceAdmin.ListInstances.
      properties:
        failedLocations:
          description: >-
            Locations from which Instance information could not be retrieved,

            due to an outage or some other transient condition.

            Instances whose Clusters are all in one of the failed locations

            may be missing from `instances`, and Instances with at least one

            Cluster in a failed location may only have partial information returned.

            Values are of the form `projects/<project>/locations/<zone_id>`
          items:
            type: string
          type: array
        instances:
          description: The list of requested instances.
          items:
            $ref: "#/components/schemas/Instance"
          type: array
        nextPageToken:
          description: "DEPRECATED: This field is unused and ignored."
          type: string
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Location"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the
            request.
          items:
            $ref: "#/components/schemas/Operation"
          type: array
      type: object
    ListTablesResponse:
      description: |-
        Response message for
        google.bigtable.admin.v2.BigtableTableAdmin.ListTables
      properties:
        nextPageToken:
          description: |-
            Set if not all tables could be returned in a single response.
            Pass this value to `page_token` in another request to get the next
            page of results.
          type: string
        tables:
          description: The tables present in the requested instance.
          items:
            $ref: "#/components/schemas/Table"
          type: array
      type: object
    Location:
      description: A resource that represents Google Cloud Platform location.
      properties:
        displayName:
          description: |-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: |-
            Cross-service attributes for the location. For example

                {"cloud.googleapis.com/region": "us-east1"}
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            Service-specific metadata. For example the available capacity at the
            given

            location.
          type: object
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations.

            For example: `"projects/example-project/locations/us-east1"`
          type: string
      type: object
    Modification:
      description: A create, update, or delete of a particular column family.
      properties:
        create:
          $ref: "#/components/schemas/ColumnFamily"
        drop:
          description: >-
            Drop (delete) the column family with the given ID, or fail if no
            such

            family exists.
          type: boolean
        id:
          description: The ID of the column family to be modified.
          type: string
        update:
          $ref: "#/components/schemas/ColumnFamily"
      type: object
    ModifyColumnFamiliesRequest:
      description: |-
        Request message for
        google.bigtable.admin.v2.BigtableTableAdmin.ModifyColumnFamilies
      properties:
        modifications:
          description: >-
            Modifications to be atomically applied to the specified table's
            families.

            Entries are applied in order, meaning that earlier modifications can be

            masked by later ones (in the case of repeated updates to the same family,

            for example).
          items:
            $ref: "#/components/schemas/Modification"
          type: array
      type: object
    MultiClusterRoutingUseAny:
      description: >-
        Read/write requests are routed to the nearest cluster in the instance,
        and

        will fail over to the nearest cluster that is available in the event of

        transient errors or delays. Clusters in a region are considered

        equidistant. Choosing this option sacrifices read-your-writes consistency

        to improve availability.
      properties: {}
      type: object
    Operation:
      description: >-
        This resource represents a long-running operation that is the result of
        a

        network API call.
      properties:
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress.

            If `true`, the operation is completed, and either `error` or `response` is

            available.
          type: boolean
        error:
          $ref: "#/components/schemas/Status"
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            Service-specific metadata associated with the operation.  It
            typically

            contains progress information and common metadata such as create time.

            Some services might not provide such metadata.  Any method that returns a

            long-running operation should document the metadata type, if any.
          type: object
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that

            originally returns it. If you use the default HTTP mapping, the

            `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            The normal response of the operation in case of success.  If the
            original

            method returns no data on success, such as `Delete`, the response is

            `google.protobuf.Empty`.  If the original method is standard

            `Get`/`Create`/`Update`, the response should be the resource.  For other

            methods, the response should have the type `XxxResponse`, where `Xxx`

            is the original method name.  For example, if the original method name

            is `TakeSnapshot()`, the inferred response type is

            `TakeSnapshotResponse`.
          type: object
      type: object
    PartialUpdateInstanceRequest:
      description: Request message for BigtableInstanceAdmin.PartialUpdateInstance.
      properties:
        instance:
          $ref: "#/components/schemas/Instance"
        updateMask:
          description: |-
            The subset of Instance fields which should be replaced.
            Must be explicitly set.
          format: google-fieldmask
          type: string
      type: object
    Policy:
      description: >-
        Defines an Identity and Access Management (IAM) policy. It is used to

        specify access control policies for Cloud Platform resources.



        A `Policy` consists of a list of `bindings`. A `binding` binds a list of

        `members` to a `role`, where the members can be user accounts, Google groups,

        Google domains, and service accounts. A `role` is a named list of permissions

        defined by IAM.


        **JSON Example**

            {
              "bindings": [
                {
                  "role": "roles/owner",
                  "members": [
                    "user:mike@example.com",
                    "group:admins@example.com",
                    "domain:google.com",
                    "serviceAccount:my-other-app@appspot.gserviceaccount.com"
                  ]
                },
                {
                  "role": "roles/viewer",
                  "members": ["user:sean@example.com"]
                }
              ]
            }

        **YAML Example**

            bindings:
            - members:
              - user:mike@example.com
              - group:admins@example.com
              - domain:google.com
              - serviceAccount:my-other-app@appspot.gserviceaccount.com
              role: roles/owner
            - members:
              - user:sean@example.com
              role: roles/viewer


        For a description of IAM and its features, see the

        [IAM developer's guide](https://cloud.google.com/iam/docs).
      properties:
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: "#/components/schemas/AuditConfig"
          type: array
        bindings:
          description: |-
            Associates a list of `members` to a `role`.
            `bindings` with no members will result in an error.
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help

            prevent simultaneous updates of a policy from overwriting each other.

            It is strongly suggested that systems make use of the `etag` in the

            read-modify-write cycle to perform policy updates in order to avoid race

            conditions: An `etag` is returned in the response to `getIamPolicy`, and

            systems are expected to put that etag in the request to `setIamPolicy` to

            ensure that their change will be applied to the same version of the policy.


            If no `etag` is provided in the call to `setIamPolicy`, then the existing

            policy is overwritten blindly.
          format: byte
          type: string
        version:
          description: Deprecated.
          format: int32
          type: integer
      type: object
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          $ref: "#/components/schemas/Policy"
        updateMask:
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only

            the fields in the mask will be modified. If no mask is provided, the

            following default mask is used:

            paths: "bindings, etag"

            This field is only used by Cloud IAM.
          format: google-fieldmask
          type: string
      type: object
    SingleClusterRouting:
      description: |-
        Unconditionally routes all read/write requests to a specific cluster.
        This option preserves read-your-writes consistency but does not improve
        availability.
      properties:
        allowTransactionalWrites:
          description: >-
            Whether or not `CheckAndMutateRow` and `ReadModifyWriteRow` requests
            are

            allowed by this app profile. It is unsafe to send these requests to

            the same table/row/column in multiple clusters.
          type: boolean
        clusterId:
          description: The cluster to which read/write requests should be routed.
          type: string
      type: object
    Split:
      description: An initial split point for a newly created table.
      properties:
        key:
          description: Row key to use as an initial tablet boundary.
          format: byte
          type: string
      type: object
    Status:
      description: >-
        The `Status` type defines a logical error model that is suitable for

        different programming environments, including REST APIs and RPC APIs. It is

        used by [gRPC](https://github.com/grpc). Each `Status` message contains

        three pieces of data: error code, error message, and error details.


        You can find out more about this error model and how to work with it in the

        [API Design Guide](https://cloud.google.com/apis/design/errors).
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: >-
            A list of messages that carry the error details.  There is a common
            set of

            message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: |-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    Table:
      description: |-
        A collection of user data indexed by row, column, and timestamp.
        Each table is served using the resources of its parent cluster.
      properties:
        clusterStates:
          additionalProperties:
            $ref: "#/components/schemas/ClusterState"
          description: >-
            Output only.

            Map from cluster ID to per-cluster table state.

            If it could not be determined whether or not the table has data in a

            particular cluster (for example, if its zone is unavailable), then

            there will be an entry for the cluster with UNKNOWN `replication_status`.

            Views: `REPLICATION_VIEW`, `FULL`
          type: object
        columnFamilies:
          additionalProperties:
            $ref: "#/components/schemas/ColumnFamily"
          description: >-
            (`CreationOnly`)

            The column families configured for this table, mapped by column family ID.

            Views: `SCHEMA_VIEW`, `FULL`
          type: object
        granularity:
          description: >-
            (`CreationOnly`)

            The granularity (i.e. `MILLIS`) at which timestamps are stored in

            this table. Timestamps not matching the granularity will be rejected.

            If unspecified at creation time, the value will be set to `MILLIS`.

            Views: `SCHEMA_VIEW`, `FULL`.
          enum:
            - TIMESTAMP_GRANULARITY_UNSPECIFIED
            - MILLIS
          type: string
        name:
          description: |-
            Output only.
            The unique name of the table. Values are of the form
            `projects/<project>/instances/<instance>/tables/_a-zA-Z0-9*`.
            Views: `NAME_ONLY`, `SCHEMA_VIEW`, `REPLICATION_VIEW`, `FULL`
          type: string
      type: object
    TableProgress:
      description: Progress info for copying a table's data to the new cluster.
      properties:
        estimatedCopiedBytes:
          description: >-
            Estimate of the number of bytes copied so far for this table.

            This will eventually reach 'estimated_size_bytes' unless the table copy

            is CANCELLED.
          format: int64
          type: string
        estimatedSizeBytes:
          description: Estimate of the size of the table to be copied.
          format: int64
          type: string
        state:
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - COPYING
            - COMPLETED
            - CANCELLED
          type: string
      type: object
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with

            wildcards (such as '*' or 'storage.*') are not allowed. For more

            information see

            [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          type: array
      type: object
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          description: |-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          items:
            type: string
          type: array
      type: object
    Union:
      description: A GcRule which deletes cells matching any of the given rules.
      properties:
        rules:
          description: Delete cells which would be deleted by any element of `rules`.
          items:
            $ref: "#/components/schemas/GcRule"
          type: array
      type: object
    UpdateAppProfileMetadata:
      description: The metadata for the Operation returned by UpdateAppProfile.
      properties: {}
      type: object
    UpdateClusterMetadata:
      description: The metadata for the Operation returned by UpdateCluster.
      properties:
        finishTime:
          description: The time at which the operation failed or was completed successfully.
          format: google-datetime
          type: string
        originalRequest:
          $ref: "#/components/schemas/Cluster"
        requestTime:
          description: The time at which the original request was received.
          format: google-datetime
          type: string
      type: object
    UpdateInstanceMetadata:
      description: The metadata for the Operation returned by UpdateInstance.
      properties:
        finishTime:
          description: The time at which the operation failed or was completed successfully.
          format: google-datetime
          type: string
        originalRequest:
          $ref: "#/components/schemas/PartialUpdateInstanceRequest"
        requestTime:
          description: The time at which the original request was received.
          format: google-datetime
          type: string
      type: object
