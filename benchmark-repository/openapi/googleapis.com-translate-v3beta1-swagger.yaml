openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: Integrates text translation into your website or application.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud Translation
  version: v3beta1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - text
  x-logo:
    url: https://cloud.google.com/_static/images/new-gcp-logo.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: google
      url: https://translation.googleapis.com/$discovery/rest?version=v3beta1
      version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: translate
externalDocs:
  url: https://cloud.google.com/translate/docs/quickstarts
tags:
  - name: projects
paths:
  "/v3beta1/{name}":
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is

        no longer interested in the operation result. It does not cancel the

        operation. If the server doesn't support this method, it returns

        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: translate.projects.locations.operations.delete
      parameters:
        - description: The name of the operation resource to be deleted.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-translation
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-translation
      tags:
        - projects
    get:
      description: >-
        Gets the latest state of a long-running operation.  Clients can use this

        method to poll the operation result at intervals as recommended by the API

        service.
      operationId: translate.projects.locations.operations.get
      parameters:
        - description: The name of the operation resource.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-translation
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-translation
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v3beta1/{name}/locations":
    get:
      description: Lists information about the supported locations for this service.
      operationId: translate.projects.locations.list
      parameters:
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The resource that owns the locations collection, if applicable.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListLocationsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-translation
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-translation
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v3beta1/{name}/operations":
    get:
      description: |-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.

        NOTE: the `name` binding allows API services to override the binding
        to use different resource name schemes, such as `users/*/operations`. To
        override the binding, API services can add a binding such as
        `"/v1/{name=users/*}/operations"` to their service configuration.
        For backwards compatibility, the default name includes the operations
        collection id, however overriding users must ensure the name binding
        is the parent resource, without the operations collection id.
      operationId: translate.projects.locations.operations.list
      parameters:
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListOperationsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-translation
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-translation
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v3beta1/{name}:cancel":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation.  The
        server

        makes a best effort to cancel the operation, but success is not

        guaranteed.  If the server doesn't support this method, it returns

        `google.rpc.Code.UNIMPLEMENTED`.  Clients can use

        Operations.GetOperation or

        other methods to check whether the cancellation succeeded or whether the

        operation completed despite cancellation. On successful cancellation,

        the operation is not deleted; instead, it becomes an operation with

        an Operation.error value with a google.rpc.Status.code of 1,

        corresponding to `Code.CANCELLED`.
      operationId: translate.projects.locations.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelOperationRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-translation
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-translation
      tags:
        - projects
  "/v3beta1/{name}:wait":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Waits for the specified long-running operation until it is done or
        reaches

        at most a specified timeout, returning the latest state.  If the operation

        is already done, the latest state is immediately returned.  If the timeout

        specified is greater than the default HTTP/RPC timeout, the HTTP/RPC

        timeout is used.  If the server does not support this method, it returns

        `google.rpc.Code.UNIMPLEMENTED`.

        Note that this method is on a best-effort basis.  It may return the latest

        state before the specified timeout (including immediately), meaning even an

        immediate response is no guarantee that the operation is done.
      operationId: translate.projects.locations.operations.wait
      parameters:
        - description: The name of the operation resource to wait on.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WaitOperationRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-translation
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-translation
      tags:
        - projects
  "/v3beta1/{parent}/glossaries":
    get:
      description: |-
        Lists glossaries in a project. Returns NOT_FOUND, if the project doesn't
        exist.
      operationId: translate.projects.locations.glossaries.list
      parameters:
        - description: >-
            Optional. Filter specifying constraints of a list operation.

            Filtering is not supported yet, and the parameter currently has no effect.

            If missing, no filtering is performed.
          in: query
          name: filter
          schema:
            type: string
        - description: >-
            Optional. Requested page size. The server may return fewer
            glossaries than

            requested. If unspecified, the server picks an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: >-
            Optional. A token identifying a page of results the server should
            return.

            Typically, this is the value of [ListGlossariesResponse.next_page_token]

            returned from the previous call to `ListGlossaries` method.

            The first page is returned if `page_token`is empty or missing.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Required. The name of the project from which to list all of the
            glossaries.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListGlossariesResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-translation
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-translation
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Creates a glossary and returns the long-running operation. Returns
        NOT_FOUND, if the project doesn't exist.
      operationId: translate.projects.locations.glossaries.create
      parameters:
        - description: Required. The project name.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Glossary"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v3beta1/{parent}/supportedLanguages":
    get:
      description: Returns a list of supported languages for translation.
      operationId: translate.projects.locations.getSupportedLanguages
      parameters:
        - description: >-
            Optional. The language to use to return localized, human readable
            names

            of supported languages. If missing, then display names are not returned

            in a response.
          in: query
          name: displayLanguageCode
          schema:
            type: string
        - description: >-
            Optional. Get supported languages of this model.


            The format depends on model type:


            - AutoML Translation models:
              `projects/{project-id}/locations/{location-id}/models/{model-id}`

            - General (built-in) models:
              `projects/{project-id}/locations/{location-id}/models/general/nmt`,
              `projects/{project-id}/locations/{location-id}/models/general/base`


            Returns languages supported by the specified model.

            If missing, we get supported languages of Google general base (PBMT) model.
          in: query
          name: model
          schema:
            type: string
        - description: >-
            Required. Project or location to make a call. Must refer to a
            caller's

            project.


            Format: `projects/{project-id}` or

            `projects/{project-id}/locations/{location-id}`.


            For global calls, use `projects/{project-id}/locations/global` or

            `projects/{project-id}`.


            Non-global location is required for AutoML models.


            Only models within the same region (have same location-id) can be used,

            otherwise an INVALID_ARGUMENT (400) error is returned.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SupportedLanguages"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-translation
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-translation
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v3beta1/{parent}:batchTranslateText":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Translates a large volume of text in asynchronous batch mode.

        This function provides real-time output as the inputs are being processed.

        If caller cancels a request, the partial results (for an input file, it's

        all or nothing) may still be available on the specified output location.


        This call returns immediately and you can

        use google.longrunning.Operation.name to poll the status of the call.
      operationId: translate.projects.locations.batchTranslateText
      parameters:
        - description: >-
            Required. Location to make a call. Must refer to a caller's project.


            Format: `projects/{project-id}/locations/{location-id}`.


            The `global` location is not supported for batch translation.


            Only AutoML Translation models or glossaries within the same region (have

            the same location-id) can be used, otherwise an INVALID_ARGUMENT (400)

            error is returned.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchTranslateTextRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v3beta1/{parent}:detectLanguage":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Detects the language of text within a request.
      operationId: translate.projects.locations.detectLanguage
      parameters:
        - description: >-
            Required. Project or location to make a call. Must refer to a
            caller's

            project.


            Format: `projects/{project-id}/locations/{location-id}` or

            `projects/{project-id}`.


            For global calls, use `projects/{project-id}/locations/global` or

            `projects/{project-id}`.


            Only models within the same region (has same location-id) can be used.

            Otherwise an INVALID_ARGUMENT (400) error is returned.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DetectLanguageRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/DetectLanguageResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-translation
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-translation
      tags:
        - projects
  "/v3beta1/{parent}:translateText":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Translates input text and returns translated text.
      operationId: translate.projects.locations.translateText
      parameters:
        - description: >-
            Required. Project or location to make a call. Must refer to a
            caller's

            project.


            Format: `projects/{project-id}` or

            `projects/{project-id}/locations/{location-id}`.


            For global calls, use `projects/{project-id}/locations/global` or

            `projects/{project-id}`.


            Non-global location is required for requests using AutoML models or

            custom glossaries.


            Models and glossaries must be within the same region (have same

            location-id), otherwise an INVALID_ARGUMENT (400) error is returned.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TranslateTextRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TranslateTextResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-translation
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-translation
      tags:
        - projects
servers:
  - url: https://translation.googleapis.com/
components:
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
        default: json
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - "1"
          - "2"
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/cloud-translation: Translate text from one language to another using Google Translate
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/cloud-translation: Translate text from one language to another using Google Translate
  schemas:
    BatchTranslateTextRequest:
      description: The batch translation request.
      properties:
        glossaries:
          additionalProperties:
            $ref: "#/components/schemas/TranslateTextGlossaryConfig"
          description: |-
            Optional. Glossaries to be applied for translation.
            It's keyed by target language code.
          type: object
        inputConfigs:
          description: |-
            Required. Input configurations.
            The total number of files matched should be <= 1000.
            The total content size should be <= 100M Unicode codepoints.
            The files must use UTF-8 encoding.
          items:
            $ref: "#/components/schemas/InputConfig"
          type: array
        labels:
          additionalProperties:
            type: string
          description: >-
            Optional. The labels with user-defined metadata for the request.


            Label keys and values can be no longer than 63 characters

            (Unicode codepoints), can only contain lowercase letters, numeric

            characters, underscores and dashes. International characters are allowed.

            Label values are optional. Label keys must start with a letter.


            See https://goo.gl/xmQnxf for more information on and examples of labels.
          type: object
        models:
          additionalProperties:
            type: string
          description: >-
            Optional. The models to use for translation. Map's key is target
            language

            code. Map's value is model name. Value can be a built-in general model,

            or an AutoML Translation model.


            The value format depends on model type:


            - AutoML Translation models:
              `projects/{project-id}/locations/{location-id}/models/{model-id}`

            - General (built-in) models:
              `projects/{project-id}/locations/{location-id}/models/general/nmt`,
              `projects/{project-id}/locations/{location-id}/models/general/base`


            If the map is empty or a specific model is

            not requested for a language pair, then default google model (nmt) is used.
          type: object
        outputConfig:
          $ref: "#/components/schemas/OutputConfig"
        sourceLanguageCode:
          description: Required. Source language code.
          type: string
        targetLanguageCodes:
          description: Required. Specify up to 10 language codes here.
          items:
            type: string
          type: array
      type: object
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    DetectLanguageRequest:
      description: The request message for language detection.
      properties:
        content:
          description: The content of the input stored as a string.
          type: string
        labels:
          additionalProperties:
            type: string
          description: >-
            Optional. The labels with user-defined metadata for the request.


            Label keys and values can be no longer than 63 characters

            (Unicode codepoints), can only contain lowercase letters, numeric

            characters, underscores and dashes. International characters are allowed.

            Label values are optional. Label keys must start with a letter.


            See https://goo.gl/xmQnxf for more information on and examples of labels.
          type: object
        mimeType:
          description: |-
            Optional. The format of the source text, for example, "text/html",
            "text/plain". If left blank, the MIME type defaults to "text/html".
          type: string
        model:
          description: >-
            Optional. The language detection model to be used.


            Format:

            `projects/{project-id}/locations/{location-id}/models/language-detection/{model-id}`


            Only one language detection model is currently supported:

            `projects/{project-id}/locations/{location-id}/models/language-detection/default`.


            If not specified, the default model is used.
          type: string
      type: object
    DetectLanguageResponse:
      description: The response message for language detection.
      properties:
        languages:
          description: >-
            A list of detected languages sorted by detection confidence in
            descending

            order. The most probable language first.
          items:
            $ref: "#/components/schemas/DetectedLanguage"
          type: array
      type: object
    DetectedLanguage:
      description: The response message for language detection.
      properties:
        confidence:
          description: The confidence of the detection result for this language.
          format: float
          type: number
        languageCode:
          description: |-
            The BCP-47 language code of source content in the request, detected
            automatically.
          type: string
      type: object
    Empty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated

        empty messages in your APIs. A typical example is to use it as the request

        or the response type of an API method. For instance:

            service Foo {
              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
            }

        The JSON representation for `Empty` is empty JSON object `{}`.
      properties: {}
      type: object
    GcsDestination:
      description: The Google Cloud Storage location for the output content.
      properties:
        outputUriPrefix:
          description: >-
            Required. There must be no files under 'output_uri_prefix'.

            'output_uri_prefix' must end with "/" and start with "gs://", otherwise an

            INVALID_ARGUMENT (400) error is returned.
          type: string
      type: object
    GcsSource:
      description: The Google Cloud Storage location for the input content.
      properties:
        inputUri:
          description: Required. Source data URI. For example, `gs://my_bucket/my_object`.
          type: string
      type: object
    Glossary:
      description: Represents a glossary built from user provided data.
      properties:
        endTime:
          description: Output only. When the glossary creation was finished.
          format: google-datetime
          type: string
        entryCount:
          description: Output only. The number of entries defined in the glossary.
          format: int32
          type: integer
        inputConfig:
          $ref: "#/components/schemas/GlossaryInputConfig"
        languageCodesSet:
          $ref: "#/components/schemas/LanguageCodesSet"
        languagePair:
          $ref: "#/components/schemas/LanguageCodePair"
        name:
          description: >-
            Required. The resource name of the glossary. Glossary names have the
            form

            `projects/{project-id}/locations/{location-id}/glossaries/{glossary-id}`.
          type: string
        submitTime:
          description: Output only. When CreateGlossary was called.
          format: google-datetime
          type: string
      type: object
    GlossaryInputConfig:
      description: Input configuration for glossaries.
      properties:
        gcsSource:
          $ref: "#/components/schemas/GcsSource"
      type: object
    InputConfig:
      description: Input configuration for BatchTranslateText request.
      properties:
        gcsSource:
          $ref: "#/components/schemas/GcsSource"
        mimeType:
          description: |-
            Optional. Can be "text/plain" or "text/html".
            For `.tsv`, "text/html" is used if mime_type is missing.
            For `.html`, this field must be "text/html" or empty.
            For `.txt`, this field must be "text/plain" or empty.
          type: string
      type: object
    LanguageCodePair:
      description: Used with unidirectional glossaries.
      properties:
        sourceLanguageCode:
          description: >-
            Required. The BCP-47 language code of the input text, for example,

            "en-US". Expected to be an exact match for GlossaryTerm.language_code.
          type: string
        targetLanguageCode:
          description: >-
            Required. The BCP-47 language code for translation output, for
            example,

            "zh-CN". Expected to be an exact match for GlossaryTerm.language_code.
          type: string
      type: object
    LanguageCodesSet:
      description: Used with equivalent term set glossaries.
      properties:
        languageCodes:
          description: |-
            The BCP-47 language code(s) for terms defined in the glossary.
            All entries are unique. The list contains at least two entries.
            Expected to be an exact match for GlossaryTerm.language_code.
          items:
            type: string
          type: array
      type: object
    ListGlossariesResponse:
      description: Response message for ListGlossaries.
      properties:
        glossaries:
          description: The list of glossaries for a project.
          items:
            $ref: "#/components/schemas/Glossary"
          type: array
        nextPageToken:
          description: |-
            A token to retrieve a page of results. Pass this value in the
            [ListGlossariesRequest.page_token] field in the subsequent call to
            `ListGlossaries` method to retrieve the next page of results.
          type: string
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Location"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the
            request.
          items:
            $ref: "#/components/schemas/Operation"
          type: array
      type: object
    Location:
      description: A resource that represents Google Cloud Platform location.
      properties:
        displayName:
          description: |-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: |-
            Cross-service attributes for the location. For example

                {"cloud.googleapis.com/region": "us-east1"}
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            Service-specific metadata. For example the available capacity at the
            given

            location.
          type: object
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations.

            For example: `"projects/example-project/locations/us-east1"`
          type: string
      type: object
    Operation:
      description: >-
        This resource represents a long-running operation that is the result of
        a

        network API call.
      properties:
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress.

            If `true`, the operation is completed, and either `error` or `response` is

            available.
          type: boolean
        error:
          $ref: "#/components/schemas/Status"
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            Service-specific metadata associated with the operation.  It
            typically

            contains progress information and common metadata such as create time.

            Some services might not provide such metadata.  Any method that returns a

            long-running operation should document the metadata type, if any.
          type: object
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that

            originally returns it. If you use the default HTTP mapping, the

            `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            The normal response of the operation in case of success.  If the
            original

            method returns no data on success, such as `Delete`, the response is

            `google.protobuf.Empty`.  If the original method is standard

            `Get`/`Create`/`Update`, the response should be the resource.  For other

            methods, the response should have the type `XxxResponse`, where `Xxx`

            is the original method name.  For example, if the original method name

            is `TakeSnapshot()`, the inferred response type is

            `TakeSnapshotResponse`.
          type: object
      type: object
    OutputConfig:
      description: Output configuration for BatchTranslateText request.
      properties:
        gcsDestination:
          $ref: "#/components/schemas/GcsDestination"
      type: object
    Status:
      description: >-
        The `Status` type defines a logical error model that is suitable for

        different programming environments, including REST APIs and RPC APIs. It is

        used by [gRPC](https://github.com/grpc). Each `Status` message contains

        three pieces of data: error code, error message, and error details.


        You can find out more about this error model and how to work with it in the

        [API Design Guide](https://cloud.google.com/apis/design/errors).
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: >-
            A list of messages that carry the error details.  There is a common
            set of

            message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: |-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    SupportedLanguage:
      description: |-
        A single supported language response corresponds to information related
        to one supported language.
      properties:
        displayName:
          description: >-
            Human readable name of the language localized in the display
            language

            specified in the request.
          type: string
        languageCode:
          description: |-
            Supported language code, generally consisting of its ISO 639-1
            identifier, for example, 'en', 'ja'. In certain cases, BCP-47 codes
            including language and region identifiers are returned (for example,
            'zh-TW' and 'zh-CN')
          type: string
        supportSource:
          description: Can be used as source language.
          type: boolean
        supportTarget:
          description: Can be used as target language.
          type: boolean
      type: object
    SupportedLanguages:
      description: The response message for discovering supported languages.
      properties:
        languages:
          description: |-
            A list of supported language responses. This list contains an entry
            for each language the Translation API supports.
          items:
            $ref: "#/components/schemas/SupportedLanguage"
          type: array
      type: object
    TranslateTextGlossaryConfig:
      description: |-
        Configures which glossary should be used for a specific target language,
        and defines options for applying that glossary.
      properties:
        glossary:
          description: |-
            Required. Specifies the glossary used for this translation. Use
            this format: projects/*/locations/*/glossaries/*
          type: string
        ignoreCase:
          description: |-
            Optional. Indicates match is case-insensitive.
            Default value is false if missing.
          type: boolean
      type: object
    TranslateTextRequest:
      description: The request message for synchronous translation.
      properties:
        contents:
          description: |-
            Required. The content of the input in string format.
            We recommend the total content be less than 30k codepoints.
            Use BatchTranslateText for larger text.
          items:
            type: string
          type: array
        glossaryConfig:
          $ref: "#/components/schemas/TranslateTextGlossaryConfig"
        labels:
          additionalProperties:
            type: string
          description: >-
            Optional. The labels with user-defined metadata for the request.


            Label keys and values can be no longer than 63 characters

            (Unicode codepoints), can only contain lowercase letters, numeric

            characters, underscores and dashes. International characters are allowed.

            Label values are optional. Label keys must start with a letter.


            See https://goo.gl/xmQnxf for more information on and examples of labels.
          type: object
        mimeType:
          description: |-
            Optional. The format of the source text, for example, "text/html",
             "text/plain". If left blank, the MIME type defaults to "text/html".
          type: string
        model:
          description: >-
            Optional. The `model` type requested for this translation.


            The format depends on model type:


            - AutoML Translation models:
              `projects/{project-id}/locations/{location-id}/models/{model-id}`

            - General (built-in) models:
              `projects/{project-id}/locations/{location-id}/models/general/nmt`,
              `projects/{project-id}/locations/{location-id}/models/general/base`


            For global (non-regionalized) requests, use `location-id` `global`.

            For example,

            `projects/{project-id}/locations/global/models/general/nmt`.


            If missing, the system decides which google base model to use.
          type: string
        sourceLanguageCode:
          description: >-
            Optional. The BCP-47 language code of the input text if

            known, for example, "en-US" or "sr-Latn". Supported language codes are

            listed in Language Support. If the source language isn't specified, the API

            attempts to identify the source language automatically and returns the

            source language within the response.
          type: string
        targetLanguageCode:
          description: >-
            Required. The BCP-47 language code to use for translation of the
            input

            text, set to one of the language codes listed in Language Support.
          type: string
      type: object
    TranslateTextResponse:
      properties:
        glossaryTranslations:
          description: |-
            Text translation responses if a glossary is provided in the request.
            This can be the same as
            `translations` if no terms apply.
            This field has the same length as
            `contents`.
          items:
            $ref: "#/components/schemas/Translation"
          type: array
        translations:
          description: |-
            Text translation responses with no glossary applied.
            This field has the same length as
            `contents`.
          items:
            $ref: "#/components/schemas/Translation"
          type: array
      type: object
    Translation:
      description: A single translation response.
      properties:
        detectedLanguageCode:
          description: >-
            The BCP-47 language code of source text in the initial request,
            detected

            automatically, if no source language was passed within the initial

            request. If the source language was passed, auto-detection of the language

            does not occur and this field is empty.
          type: string
        glossaryConfig:
          $ref: "#/components/schemas/TranslateTextGlossaryConfig"
        model:
          description: |-
            Only present when `model` is present in the request.
            This is same as `model` provided in the request.
          type: string
        translatedText:
          description: Text translated into the target language.
          type: string
      type: object
    WaitOperationRequest:
      description: The request message for Operations.WaitOperation.
      properties:
        timeout:
          description: >-
            The maximum duration to wait before timing out. If left blank, the
            wait

            will be at most the time permitted by the underlying HTTP/RPC protocol.

            If RPC context deadline is also specified, the shorter one will be used.
          format: google-duration
          type: string
      type: object
