<?xml version="1.0" encoding="UTF-8"?>
<application xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:apigee="http://api.apigee.com/wadl/2010/07/" xmlns="http://wadl.dev.java.net/2009/02" xsi:schemaLocation="http://wadl.dev.java.net/2009/02 http://apigee.com/schemas/wadl-schema.xsd http://api.apigee.com/wadl/2010/07/ http://apigee.com/schemas/apigee-wadl-extensions.xsd">
    <resources base="https://www.readability.com/api/rest/v1">
        <resource path="articles">
            <param name="author" style="query" required="false" type="xsd:string">
                <doc>Filter articles by author.</doc>
            </param>
            <param name="user" style="query" required="false" type="xsd:string">
                <doc>Filter articles by user (username).</doc>
            </param>
            <param name="domain" style="query" required="false" type="xsd:string">
                <doc>Filter articles by domain.</doc>
            </param>
            <param name="added_since" style="query" required="false" type="xsd:dateTime">
                <doc>Filter articles by date added (since this date).</doc>
            </param>
            <param name="added_until" style="query" required="false" type="xsd:dateTime">
                <doc>Filter articles by date added (until this date).</doc>
            </param>
            <param name="published_since" style="query" required="false" type="xsd:dateTime">
                <doc>Filter articles by date published (since this date).</doc>
            </param>
            <param name="published_until" style="query" required="false" type="xsd:dateTime">
                <doc>Filter articles by date published (until this date).</doc>
            </param>
            <method id="getArticles" name="GET">
                <apigee:tags>
                    <apigee:tag primary="true">Articles</apigee:tag>
                    <apigee:tag>ListResource</apigee:tag>
                </apigee:tags>
                <apigee:authentication required="true" />
                <apigee:example url="/articles"/>
                <doc apigee:url="https://www.readability.com/api/rest/v1/articles">
                        Retrieve the Articles collection. Only accessible by administrators.
                </doc>
            </method>
        </resource>
        <resource path="articles/{articleId}">
            <param name="articleId" type="xsd:string" style="template" required="true">
                <doc>The unique ID relating to an article. An 8-digit alphanumeric key.</doc>
            </param>
            <method id="getArticle" name="GET">
                <apigee:tags>
                    <apigee:tag primary="true">Articles</apigee:tag>
                    <apigee:tag>ObjectResource</apigee:tag>
                </apigee:tags>
                <apigee:authentication required="true" />
                <apigee:example url="/articles/1234abcd"/>
                <doc apigee:url="https://www.readability.com/api/rest/v1/articles/{article_id}">
                    Retrieve a single Article, including its content. Accessible by any authenticated user.
                </doc>
            </method>
        </resource>
        <resource path="bookmarks">
            <param name="user" style="query" required="false">
                <doc>
                    The username of the user to filter bookmarks to. Regular users may only use their own user. A user parameter of null means to explicitly not filter by user (for admins only).
                </doc>
            </param>
            <param name="archive" style="query" required="false" type="xsd:integer">
                <doc>Filter bookmarks by archived status.</doc>
                <option value="0"/>
                <option value="1"/>
            </param>
            <param name="favorite" style="query" required="false" type="xsd:integer">
                <doc>Filter bookmarks by favorited status.</doc>
                <option value="0"/>
                <option value="1"/>
            </param>
            <param name="user" style="query" required="false" type="xsd:string">
                <doc>Filter bookmarks by user - username. Only admins may set this. Defaults to current user.</doc>
            </param>
            <param name="domain" style="query" required="false" type="xsd:string">
                <doc>Filter bookmarks by domain.</doc>
            </param>
            <param name="added_since" style="query" required="false" type="xsd:dateTime">
                <doc>Filter bookmarks by date added (since this date).</doc>
            </param>
            <param name="added_until" style="query" required="false" type="xsd:dateTime">
                <doc>Filter bookmarks by date added (until this date).</doc>
            </param>
            <param name="opened_since" style="query" required="false" type="xsd:dateTime">
                <doc>Filter bookmarks by date opened (since this date).</doc>
            </param>
            <param name="opened_until" style="query" required="false" type="xsd:dateTime">
                <doc>Filter bookmarks by date opened (until this date).</doc>
            </param>
            <param name="archived_since" style="query" required="false" type="xsd:dateTime">
                <doc>Filter bookmarks by date archived (since this date).</doc>
            </param>
            <param name="archived_until" style="query" required="false" type="xsd:dateTime">
                <doc>Filter bookmarks by date archived (until this date).</doc>
            </param>
            <param name="favorited_since" style="query" required="false" type="xsd:dateTime">
                <doc>Filter bookmarks by date favorited (since this date).</doc>
            </param>
            <param name="favorited_until" style="query" required="false" type="xsd:dateTime">
                <doc>Filter bookmarks by date favorited (until this date).</doc>
            </param>
            <param name="page" style="query" type="xsd:integer">
                <doc>For pagination, what page of the results you are on. Default is 1.</doc>
            </param>
            <param name="per_page" style="query" type="xsd:integer">
                <doc>For pagination, how many results to return per page. Default is 20. Max is 50.</doc>
            </param>
            <method id="getBookmarks" name="GET">
                <apigee:tags>
                    <apigee:tag primary="true">Bookmarks</apigee:tag>
                    <apigee:tag>ListResource</apigee:tag>
                </apigee:tags>
                <apigee:authentication required="true" />
                <apigee:example url="/bookmarks"/>
                <doc apigee:url="https://www.readability.com/api/rest/v1/bookmarks">
                    Retrieve the bookmarks collection. Automatically filtered to the current user. Only administrators may change the user filter.
                </doc>
            </method>
        </resource>
        <resource path="bookmarks">
            <param name="url" style="query" required="true" type="xsd:string">
                <doc>The URL to add as a bookmark.</doc>
            </param>
            <param name="archive" style="query" required="false" default="0" type="xsd:integer">
                <doc>The status of this article - either archived (1) or not (0).</doc>
                <option value="0"/>
                <option value="1"/>
            </param>
            <param name="favorite" style="query" required="false" default="0" type="xsd:integer">
                <doc>The favorite status of this article - either favorited (1) or not (0).</doc>
                <option value="0"/>
                <option value="1"/>
            </param>
            <method id="addBookmark" name="POST">
                <apigee:tags>
                    <apigee:tag primary="true">Bookmarks</apigee:tag>
                    <apigee:tag>AddResource</apigee:tag>
                </apigee:tags>
                <apigee:authentication required="true" />
                <apigee:example url="/bookmarks"/>
                <doc apigee:url="https://www.readability.com/api/rest/v1/bookmarks">
                    Add a bookmark to a URL for this user.
                </doc>
            </method>
        </resource>
        <resource path="bookmarks/{bookmark_id}">
            <method id="getBookmark" name="GET">
                <apigee:tags>
                    <apigee:tag primary="true">Bookmarks</apigee:tag>
                    <apigee:tag>ObjectResource</apigee:tag>
                </apigee:tags>
                <apigee:authentication required="true" />
                <apigee:example url="/bookmarks/2332"/>
                <doc apigee:url="https://www.readability.com/api/rest/v1/bookmarks/{bookmark_id}">
                    Retrieve a single Article, including its content. Accessible by any authenticated user.
                </doc>
            </method>
        </resource>
        <resource path="bookmarks/{bookmark_id}">
            <param name="favorite" style="query" required="false" type="xsd:integer">
                <doc>Whether this article is favorited or not. 1 (true) or 0 (false).</doc>
            </param>
            <param name="archive" style="query" required="false" type="xsd:integer">
                <doc>Whether this article is archived or not. 1 (true) or 0 (false).</doc>
            </param>
            <param name="read_percent" style="query" required="false" type="xsd:float">
                <doc>The read progress made in this article, where 1.0 means the bottom and 0.0 means the very top. Expressed as a ratio of the document length, from the top of the browser window, unless the window is at the bottom.</doc>
            </param>
            <param name="date_opened" style="query" required="false" type="xsd:date">
                <doc>The date and time this article was last opened by the user.</doc>
            </param>
            <method id="updateBookmark" name="POST">
                <apigee:tags>
                    <apigee:tag primary="true">Bookmarks</apigee:tag>
                    <apigee:tag>UpdateResource</apigee:tag>
                </apigee:tags>
                <apigee:authentication required="true" />
                <apigee:example url="/bookmarks/2332"/>
                <doc apigee:url="https://www.readability.com/api/rest/v1/bookmarks/{bookmark_id}">
                    Update a single article.
                </doc>
            </method>
        </resource>
        <resource path="bookmarks/{bookmark_id}">
            <method id="deleteBookmark" name="DELETE">
                <apigee:tags>
                    <apigee:tag primary="true">Bookmarks</apigee:tag>
                    <apigee:tag>DeleteResource</apigee:tag>
                </apigee:tags>
                <apigee:authentication required="true" />
                <apigee:example url="/bookmarks/2332"/>
                <doc apigee:url="https://www.readability.com/api/rest/v1/bookmarks/{bookmark_id}"><![CDATA[
                    Remove a single bookmark from this user's history. NOTE: THIS IS PROBABLY NOT WHAT YOU WANT. This is particularly for the case where a user accidentally bookmarks something they have no intention of reading or supporting. In almost all cases, you'll probably want to use archive by POSTing archive=1 to this bookmark.
                    If you use DELETE and this months bookmarks have not yet been tallied, the site associated with this bookmark will not receive any contributions for this bookmark. Use archive! It's better.
					Returns a 204 on successful remove.                    
                    ]]></doc>
            </method>
        </resource>
        <resource path="contributions">
            <param name="user" style="query" required="false" type="xsd:string">
                <doc>Filter contributions by user - username. Only admins may set this. Defaults to current user.</doc>
            </param>
            <param name="since" style="query" required="false" type="xsd:dateTime">
                <doc>Filter contributions by date contributed (since this date).</doc>
            </param>
            <param name="until" style="query" required="false" type="xsd:dateTime">
                <doc>Filter contributions by date contributed (until this date).</doc>
            </param>
            <param name="domain" style="query" required="false" type="xsd:string">
                <doc>Filter contributions by domain.</doc>
            </param>
            <param name="page" style="query" type="xsd:integer">
                <doc>For pagination, what page of the results you are on. Default is 1.</doc>
            </param>
            <param name="per_page" style="query" type="xsd:integer">
                <doc>For pagination, how many results to return per page. Default is 20. Max is 50.</doc>
            </param>
            <method id="getContributions" name="GET">
                <apigee:tags>
                    <apigee:tag primary="true">Contributions</apigee:tag>
                    <apigee:tag>ListResource</apigee:tag>
                </apigee:tags>
                <apigee:authentication required="true" />
                <apigee:example url="/contributions"/>
                <doc apigee:url="https://www.readability.com/api/rest/v1/contributions">
                        Retrieve the contributions collection, which is a set of payments by a user to a specific domain. Automatically filtered to the current user. Only administrators may change the user filter.
                </doc>
            </method>
        </resource>
        <resource path="domains">
            <param name="domain" style="query" required="false" type="xsd:string">
                <doc>Filter domains by domain.</doc>
            </param>
            <param name="page" style="query" type="xsd:integer">
                <doc>For pagination, what page of the results you are on. Default is 1.</doc>
            </param>
            <param name="per_page" style="query" type="xsd:integer">
                <doc>For pagination, how many results to return per page. Default is 20. Max is 50.</doc>
            </param>
            <method id="getDomains" name="GET">
                <apigee:tags>
                    <apigee:tag primary="true">Domains</apigee:tag>
                    <apigee:tag>ListResource</apigee:tag>
                </apigee:tags>
                <apigee:authentication required="true" />
                <apigee:example url="/domains"/>
                <doc apigee:url="https://www.readability.com/api/rest/v1/domains">
                    Retrieve the domains collection. Only admins may access this collection.
                </doc>
            </method>
        </resource>
        <resource path="domains/{domain}">
            <param name="domain" style="template" required="false" type="xsd:string">
                <doc>The domain to view.</doc>
            </param>
            <method id="getDomain" name="GET">
                <apigee:tags>
                    <apigee:tag primary="true">Domains</apigee:tag>
                    <apigee:tag>ObjectResource</apigee:tag>
                </apigee:tags>
                <apigee:authentication required="true" />
                <apigee:example url="/domains/blog.arc90.com"/>
                <doc apigee:url="https://www.readability.com/api/rest/v1/domains/{domain}">
                    Retrieve a specific domain. Only admins may access this resource.
                </doc>
            </method>
        </resource>
        <resource path="users">
            <param name="joined_since" style="query" required="false" type="xsd:dateTime">
                <doc>Filter contributions by date joined (since this date).</doc>
            </param>
            <param name="joined_until" style="query" required="false" type="xsd:dateTime">
                <doc>Filter contributions by date joined (until this date).</doc>
            </param>
            <param name="page" style="query" type="xsd:integer">
                <doc>For pagination, what page of the results you are on. Default is 1.</doc>
            </param>
            <param name="per_page" style="query" type="xsd:integer">
                <doc>For pagination, how many results to return per page. Default is 20. Max is 50.</doc>
            </param>
            <method id="getUsers" name="GET">
                <apigee:tags>
                    <apigee:tag primary="true">Users</apigee:tag>
                    <apigee:tag>ListResource</apigee:tag>
                </apigee:tags>
                <apigee:authentication required="true" />
                <apigee:example url="/users"/>
                <doc apigee:url="https://www.readability.com/api/rest/v1/users">
                    Retrieve the users collection. Only admins may access this collection.
                </doc>
            </method>
        </resource>
        <resource path="users/_current">
            <method id="getCurrentUser" name="GET">
                <apigee:tags>
                    <apigee:tag primary="true">Users</apigee:tag>
                    <apigee:tag>ObjectResource</apigee:tag>
                </apigee:tags>
                <apigee:authentication required="true" />
                <apigee:example url="/users/_current"/>
                <doc apigee:url="https://www.readability.com/api/rest/v1/users/{user}">
                    Retrieve the currently logged in user.
                </doc>
            </method>
        </resource>
        <resource path="users/{username}">
            <param name="username" style="template" required="false" type="xsd:string">
                <doc>The username of the user to view.</doc>
            </param>
            <method id="getUser" name="GET">
                <apigee:tags>
                    <apigee:tag primary="true">Users</apigee:tag>
                    <apigee:tag>ObjectResource</apigee:tag>
                </apigee:tags>
                <apigee:authentication required="true" />
                <apigee:example url="/users/chrisdary"/>
                <doc apigee:url="https://www.readability.com/api/rest/v1/users/{user}">
                    Retrieve a user. Only admins or the current user may access this resource.
                </doc>
            </method>
        </resource>
    </resources>
</application>
